import React, { useRef } from 'react';
import T from 'prop-types';

import Link from 'components/generic/Link';
import FullScreenButton from 'components/SimpleCommonComponents/FullScreenButton';
import PictureInPicturePanel from 'components/SimpleCommonComponents/PictureInPicturePanel';

import StructureViewer from 'components/Structure/ViewerOnDemand';

import { foundationPartial } from 'styles/foundation';
import ipro from 'styles/interpro-new.css';
import fonts from 'EBI-Icon-fonts/fonts.css';
import style from './style.css';

const f = foundationPartial(style, ipro, fonts);

const NewStructuralModel = ({ urlForModel, accession }) => {
  const container = useRef();
  const elementId = 'new-structure-model-viewer';

  return (
    <div className={f('row', 'column')} ref={container}>
      <h3>Predicted Model</h3>
      <div>
        The structural model below was generated by{' '}
        {/* TODO link to be updated */}
        <Link href="https://www.bakerlab.org/" target="_blank">
          XXX
        </Link>{' '}
        using the yyy software . The model represents the entire sequence from
        UniProtKB: {accession} from Homo sapiens.
      </div>

      <PictureInPicturePanel
        className={f('structure-viewer')}
        testid="structure-3d-viewer"
        // OtherControls={{
        //   bottom: (
        //     <section className={f('lddt')}>
        //       <header>
        //         lDDT{' '}
        //         <Tooltip title="Quality score lDDT: Local Distance Difference Test">
        //           <sup>
        //             <span
        //               className={f('small', 'icon', 'icon-common')}
        //               data-icon="&#xf129;"
        //               aria-label={'Citation to trRosetta paper'}
        //             />
        //           </sup>
        //         </Tooltip>
        //         :{' '}
        //       </header>
        //       <code>
        //         {(
        //           data.payload.reduce((acc, cur) => acc + cur, 0) /
        //           data.payload.length
        //         )
        //           // eslint-disable-next-line no-magic-numbers
        //           .toFixed(6)}
        //       </code>
        //     </section>
        //   ),
        // }}
        OtherButtons={
          <>
            <Link
              className={f('control')}
              href={`${urlForModel}`}
              download={`${accession || 'download'}.model.cif`}
            >
              <span
                className={f('icon', 'icon-common', 'icon-download')}
                data-icon="&#xf019;"
              />{' '}
              Download
            </Link>
            <FullScreenButton
              className={f('icon', 'icon-common', 'control')}
              tooltip="View the structure in full screen mode"
              element={elementId}
            />{' '}
          </>
        }
      >
        <StructureViewer
          id={'fullSequence'}
          url={'http://localhost/example/Q9SSD2-F1-model_v1.cif'}
          elementId={elementId}
          ext="mmcif"
          theme={'residue'}
        />
      </PictureInPicturePanel>
    </div>
  );
};

NewStructuralModel.propTypes = {
  urlForModel: T.string,
  accession: T.string,
};

export default NewStructuralModel;
