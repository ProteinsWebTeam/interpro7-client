// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<SearchByIDA /> should render 1`] = `
<div
  className="row"
>
  <div
    className="large-12 columns margin-bottom-medium"
  >
    <div
      className="secondary callout border margin-bottom-none"
    >
      <div
        className="row"
      >
        <div
          className="large-12 columns search-input"
        >
          <h3
            className="light"
          >
            Search for proteins with a specific domain architecture
          </h3>
          <p>
            Domain architectures are derived from matches to Pfam Entries. The results will show all proteins matching the criteria selected below. You can select entries which must be included or excluded from your search results. Entries can be selected by either entering a Pfam accession, or an InterPro accession if a Pfam entry is integrated with it.
          </p>
          <div
            className="ida-workspace"
          >
            <PanelIDA
              changeEntryHandler={[Function]}
              changeIgnoreHandler={[Function]}
              entryList={Array []}
              handleMoveEntry={[Function]}
              handleMoveMarker={[Function]}
              ignoreList={Array []}
              isOrdered={false}
              markerAfterEntry={null}
              markerBeforeEntry={null}
              mergeResults={[Function]}
              options={Object {}}
              removeEntryHandler={[Function]}
              removeIgnoreHandler={[Function]}
            />
          </div>
          <div
            className="ida-controls"
          >
            <button
              className="button secondary"
              onClick={[Function]}
            >
              <DomainButton
                fill="#75bf40"
                label="➕"
                stroke="#75bf40"
              />
               
              <span>
                Add Domain to include
              </span>
            </button>
            <button
              className="button secondary"
              onClick={[Function]}
            >
              <DomainButton
                fill="#bf4540"
                label="✖️️"
                stroke="#bf4540"
              />
               
              <span>
                Add Domain to exclude
              </span>
            </button>
            <div
              className="switch tiny"
            >
              <label
                htmlFor="ordered"
              >
                <input
                  checked={false}
                  className="switch-input"
                  id="ordered"
                  onChange={[Function]}
                  type="checkbox"
                />
                 
                Order of domain matters:
                 
                <span
                  className="switch-paddle"
                >
                  <span
                    aria-hidden="true"
                    className="switch-active"
                  >
                    Yes
                  </span>
                  <span
                    aria-hidden="true"
                    className="switch-inactive"
                  >
                    No
                  </span>
                </span>
              </label>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>
</div>
`;
