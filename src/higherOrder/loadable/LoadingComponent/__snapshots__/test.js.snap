// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<ErrorMessage /> should render error message 1`] = `
<Callout
  type="alert"
>
  <div
    className="vf-stack vf-stack--400"
  >
    <p>
      <b>
        An error was encountered while trying to load an element on this page
      </b>
      <br />
      Please use the button below to clear your web browser's cache and reload the page. This may resolve the issue.
    </p>
    <button
      className="vf-button vf-button--secondary vf-button--sm"
      onClick={[Function]}
    >
      Clear the cache & reload
    </button>
    <p>
      If this does not solve the issue, clear the cache manually.
    </p>
    <details
      className="read-more"
    >
      <summary>
        Instructions
      </summary>
      <div>
        <h5>
          Chrome
        </h5>
        <ul>
          <li>
            <b>
              Windows/Linux: 
            </b>
            Hold down Ctrl and click the reload button. Or, hold down Ctrl and press F5
          </li>
          <li>
            <b>
              Mac: 
            </b>
            Hold ⇧ Shift and click the reload button. Or, hold down ⌘ Cmd and ⇧ Shift key and then press R.
          </li>
        </ul>
        <h5>
          Mozilla Firefox
        </h5>
        <ul>
          <li>
            <b>
              Windows/Linux: 
            </b>
            Hold the Ctrl key and press the F5 key. Or, hold down Ctrl and ⇧ Shift and then press R.
          </li>
          <li>
            <b>
              Mac: 
            </b>
            Hold down the ⇧ Shift and click the reload button. Or, hold down ⌘ Cmd and ⇧ Shift and then press R.
          </li>
        </ul>
      </div>
    </details>
    <p>
      If neither options solve the error, please
       
      <Memo(Connect(Link))
        href="https://www.ebi.ac.uk/support/interpro"
        target="_blank"
        withReferrer={true}
      >
        contact us
      </Memo(Connect(Link))>
      .
    </p>
  </div>
</Callout>
`;

exports[`<LoadingComponent /> should render in loading state after delay and time out 1`] = `<LoadingMessage />`;

exports[`<LoadingComponent /> should render in loading state after delay but before time out 1`] = `<LoadingMessage />`;

exports[`<LoadingComponent /> should render in with error 1`] = `<ErrorMessage />`;

exports[`<LoadingMessage /> should render loading message 1`] = `<Loading />`;
