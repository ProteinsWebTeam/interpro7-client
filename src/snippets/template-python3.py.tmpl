#!/usr/bin/env python3

# standard library modules
import sys, errno, re, json, ssl
from urllib import request
from time import sleep

BASE_URL = "https://www.ebi.ac.uk:443/interpro/beta/api/set/pfam/?page_size=200"
INDENT = "    "

# If used as a module, can be used as a generator
def main():
  context = ssl._create_unverified_context()

  next = BASE_URL
  last_page = False
  sys.stdout.write("{\n" + INDENT + "\"results\": [\n")
  while next:
    req = request.Request(next, headers={"Accept": "application/json"})
    res = request.urlopen(req, context=context)
    # If the API times out due a long running query
    if res.status == 408:
      # wait just over a minute
      sleep(61)
      # then continue this loop with the same URL
      continue

    payload = json.loads(res.read())
    next = payload["next"]
    if not next:
      last_page = True

    for i, item in enumerate(payload["results"]):
      sys.stdout.write(INDENT + INDENT + json.dumps(item))
      if last_page and i+1 == len(payload["results"]):
        sys.stdout.write("")
      else:
        sys.stdout.write(",\n")

    # Don't overload the server, give it time before asking for more
    if next:
      sleep(1)
  sys.stdout.write("\n" + INDENT + "]\n}\n")

if __name__ == "__main__":
  main()
