{"version":3,"file":"js/679.module.sunburst-view.506.js","mappings":"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","sources":["webpack://interpro7-client/./src/wrappers/ResizeObserverComponent/ResizeObserver.js","webpack://interpro7-client/./src/wrappers/ResizeObserverComponent/index.js","webpack://interpro7-client/./node_modules/d3-hierarchy/src/treemap/round.js","webpack://interpro7-client/./node_modules/@nightingale-elements/nightingale-sunburst/src/nightingale-sunburst.ts","webpack://interpro7-client/./node_modules/d3-hierarchy/src/partition.js","webpack://interpro7-client/./node_modules/d3-hierarchy/src/treemap/dice.js","webpack://interpro7-client/./node_modules/d3-interpolate/src/quantize.js","webpack://interpro7-client/./node_modules/@nightingale-elements/nightingale-sunburst/src/index.ts","webpack://interpro7-client/./src/components/Nightingale/Sunburst/index.tsx","webpack://interpro7-client/./src/components/Related/Taxonomy/Sunburst/index.tsx","webpack://interpro7-client/./src/components/Related/Taxonomy/Sunburst/style.css?19c0","webpack://interpro7-client/./node_modules/d3-hierarchy/src/hierarchy/count.js","webpack://interpro7-client/./node_modules/d3-hierarchy/src/hierarchy/index.js","webpack://interpro7-client/./node_modules/d3-hierarchy/src/hierarchy/each.js","webpack://interpro7-client/./node_modules/d3-hierarchy/src/hierarchy/eachAfter.js","webpack://interpro7-client/./node_modules/d3-hierarchy/src/hierarchy/eachBefore.js","webpack://interpro7-client/./node_modules/d3-hierarchy/src/hierarchy/find.js","webpack://interpro7-client/./node_modules/d3-hierarchy/src/hierarchy/sum.js","webpack://interpro7-client/./node_modules/d3-hierarchy/src/hierarchy/sort.js","webpack://interpro7-client/./node_modules/d3-hierarchy/src/hierarchy/path.js","webpack://interpro7-client/./node_modules/d3-hierarchy/src/hierarchy/ancestors.js","webpack://interpro7-client/./node_modules/d3-hierarchy/src/hierarchy/descendants.js","webpack://interpro7-client/./node_modules/d3-hierarchy/src/hierarchy/leaves.js","webpack://interpro7-client/./node_modules/d3-hierarchy/src/hierarchy/links.js","webpack://interpro7-client/./node_modules/d3-hierarchy/src/hierarchy/iterator.js","webpack://interpro7-client/./node_modules/d3-color/src/math.js","webpack://interpro7-client/./node_modules/d3-color/src/cubehelix.js","webpack://interpro7-client/./node_modules/d3-interpolate/src/cubehelix.js","webpack://interpro7-client/./node_modules/d3-scale-chromatic/src/sequential-multi/rainbow.js"],"sourcesContent":["// @flow\nimport { schedule, sleep } from 'timing-functions';\n\n/*:: type ResizeObserverEntry = {\n  target: HTMLElement,\n  contentRect: {[key: string]: number},\n}; */\n\nexport default (() => {\n  // Use native if possible\n  if ('ResizeObserver' in window) return window.ResizeObserver;\n  // or fallback, with incomplete polyfill, that should be enough for what we do\n  return class ResizeObserver {\n    /*:: _node: ?HTMLElement; */\n    /*:: _onResizeEvent: Array<ResizeObserverEntry> => any; */\n\n    constructor(onResizeEvent /*: Array<ResizeObserverEntry> => any */) {\n      if (typeof onResizeEvent !== 'function') {\n        throw new Error('missing resize handler');\n      }\n      this._onResizeEvent = onResizeEvent;\n    }\n\n    _handleResize = async () => {\n      await schedule();\n      if (!this._node) return;\n      this._onResizeEvent([\n        {\n          target: this._node,\n          // $FlowFixMe class-object-subtyping\n          contentRect: this._node.getBoundingClientRect(),\n        },\n      ]);\n    };\n\n    observe(node /*: HTMLElement */) {\n      if (!node instanceof HTMLElement) {\n        throw new Error('ResizeObserver only works on HTML elements');\n      }\n      if (this._node) {\n        throw new Error('ResizeObserver fallback only supports one node');\n      }\n      this._node = node;\n      window.addEventListener('resize', this._handleResize);\n      this._handleResize();\n      // just in case it happened too soon, just redo it after a bit\n      // eslint-disable-next-line no-magic-numbers\n      sleep(1000).then(this._handleResize);\n    }\n\n    unobserve(node /*: HTMLElement */) {\n      if (this._node && this._node !== node) {\n        throw new Error('Trying to unobserve the wrong node');\n      }\n      this._node = null;\n      window.removeEventListener('resize', this._handleResize);\n    }\n  };\n})();\n","// @flow\nimport React, { PureComponent } from 'react';\nimport T from 'prop-types';\n/*:: import type { Node } from 'react'; */\n\nimport ResizeObserver from './ResizeObserver';\n\n/*:: type Measurement =\n  'bottom' | 'height' | 'left' | 'right' | 'top' | 'width' | 'x' | 'y';\n*/\n\n/*:: type State = {\n  [Measurement]: number,\n}; */\n\n/*:: type Props = {\n  element: ?string,\n  children: State => Node,\n  measurements: Measurement | Array<Measurement>,\n  updateCallback?: ?function,\n}; */\n\nclass ResizeObserverComponent extends PureComponent /*:: <Props, State> */ {\n  /*::\n    _ref: { current: null | React$ElementRef<string | Class<React$Component<*, *>>> };\n    _resizeObserver: any;\n  */\n\n  static propTypes = {\n    element: T.string,\n    children: T.func.isRequired,\n    measurements: T.oneOfType([T.arrayOf(T.string).isRequired, T.string]),\n    updateCallback: T.func,\n  };\n\n  constructor(props /*: Props */) {\n    super(props);\n\n    this.state = {};\n    this._resizeObserver = new ResizeObserver(\n      // $FlowFixMe method-unbinding\n      this._handleResizeEvent.bind(this),\n    );\n\n    this._ref = React.createRef();\n  }\n\n  componentDidMount() {\n    this._resizeObserver.observe(this._ref.current);\n  }\n\n  componentDidUpdate() {\n    if (this.props.updateCallback) this.props.updateCallback();\n  }\n\n  componentWillUnmount() {\n    this._resizeObserver.unobserve(this._ref.current);\n  }\n\n  _handleResizeEvent(resizeObserverEntries) {\n    let finalContentRect;\n    for (const { target, contentRect } of resizeObserverEntries) {\n      if (target !== this._ref.current) continue; // shouldn't happen, but still\n      finalContentRect = contentRect;\n    }\n    if (finalContentRect) {\n      const state = {};\n      let { measurements } = this.props;\n      if (!Array.isArray(measurements)) {\n        measurements = [measurements];\n      }\n      for (const measurement of measurements) {\n        state[measurement] = finalContentRect[measurement];\n      }\n      this.setState(state);\n    }\n  }\n\n  render() {\n    const {\n      children,\n      element,\n      measurements: __,\n      updateCallback: _,\n      ...props\n    } = this.props;\n    const Element = element || 'span';\n    return (\n      // $FlowIgnore\n      <Element {...props} ref={this._ref}>\n        {children(this.state)}\n      </Element>\n    );\n  }\n}\n\nexport default ResizeObserverComponent;\n","export default function(node) {\n  node.x0 = Math.round(node.x0);\n  node.y0 = Math.round(node.y0);\n  node.x1 = Math.round(node.x1);\n  node.y1 = Math.round(node.y1);\n}\n","import { LitElement, html, PropertyValues } from \"lit\";\nimport { property, customElement } from \"lit/decorators.js\";\nimport {\n  select,\n  partition as d3partition,\n  hierarchy,\n  scaleOrdinal,\n  quantize,\n  interpolateRainbow,\n  HierarchyRectangularNode,\n} from \"d3\";\n\nconst superkingdoms = [\"bacteria\", \"viruses\", \"archaea\", \"eukaryota\", null];\n\ntype Node = {\n  id: string;\n  name: string;\n  numDomains: number;\n  numSequences: number;\n  numSpecies: number;\n  value: number;\n  node: string;\n  children: Node[] | null;\n  _children: Node[] | null;\n  rank?: number;\n  lineage?: Lineage;\n};\n\ntype NameAttributes = \"name\" | \"id\" | \"node\";\ntype WeightAttributes = \"numDomains\" | \"numSequences\" | \"numSpecies\" | \"value\";\ntype Radians = { angle: number; radius: number };\ntype Lineage = Array<{ name: string | number; id: string }>;\n\nconst partition = (data: Node, radius: number, attribute: WeightAttributes) => {\n  const h = hierarchy(data)\n    .each((d) => {\n      (d.value as number) = +d.data[attribute];\n    })\n    .sort((a, b) => (b.data as Node)[attribute] - (a.data as Node)[attribute]);\n  return d3partition<Node>().size([2 * Math.PI, radius])(h);\n};\n\nconst getValue = (d: Node, attributeName: WeightAttributes): number => {\n  if (d[attributeName]) return d[attributeName];\n  if (!d.children) return 0;\n  return d.children.reduce(\n    (agg: number, item: Node) => agg + getValue(item, attributeName),\n    0,\n  );\n};\n\nconst prepareTreeData = (node: Node, depth: number, maxDepth: number): Node => {\n  if (!node) return node;\n\n  const preparedNode = { ...node };\n\n  if (depth >= maxDepth && (preparedNode?.children?.length || 0)) {\n    preparedNode._children = preparedNode.children;\n    preparedNode.children = null;\n  } else if (preparedNode?._children?.length) {\n    preparedNode.children = preparedNode._children;\n    preparedNode._children = null;\n  }\n\n  if (preparedNode?.children?.length) {\n    const newChildren = [];\n    for (const child of preparedNode.children) {\n      newChildren.push(prepareTreeData(child, depth + 1, maxDepth));\n    }\n    preparedNode.children = newChildren;\n  }\n  return preparedNode;\n};\n\nconst getLineageFromNode = (\n  node: HierarchyRectangularNode<Node>,\n  attributeName: WeightAttributes | NameAttributes,\n  attributeID: NameAttributes,\n): Lineage => {\n  if (!node.parent) {\n    return [\n      {\n        name: node.data[attributeName],\n        id: node.data[attributeID],\n      },\n    ];\n  }\n  return [\n    ...getLineageFromNode(node.parent, attributeName, attributeID),\n    {\n      name: node.data[attributeName],\n      id: node.data[attributeID],\n    },\n  ];\n};\n\nconst getDistanceOfPointsInRadians = (\n  point1: Radians,\n  point2: Radians,\n): number => {\n  const angle = Math.abs(point1.angle - point2.angle) / 2;\n  return 2 * point1.radius * Math.sin(angle);\n};\n\n@customElement(\"nightingale-sunburst\")\nclass NightingaleSunburst extends LitElement {\n  @property({ type: Number })\n  side?: number = 500;\n  @property({ type: String })\n  \"weight-attribute\": WeightAttributes = \"value\";\n  @property({ type: String })\n  \"weight-attribute-label\"?: string = \"Value\";\n  @property({ type: String })\n  \"name-attribute\": NameAttributes = \"name\";\n  @property({ type: String })\n  \"id-attribute\": NameAttributes = \"id\";\n  @property({ type: Number })\n  \"max-depth\"?: number = Infinity;\n  @property({ type: Number })\n  \"font-size\"?: number = 10;\n  @property({ type: Boolean })\n  \"show-tooltip\"?: boolean = false;\n\n  #data: Node | null = null;\n\n  holdSegment = false;\n  topOptions = superkingdoms;\n  root: HierarchyRectangularNode<Node> | null = null;\n  activeSegment?: HierarchyRectangularNode<Node> | null;\n\n  handleMousemove = (event: MouseEvent) => {\n    if (!this.root || (this.activeSegment && this.holdSegment)) return;\n    this.selectNodeByPosition(\n      event.offsetX - (this.side as number) / 2,\n      event.offsetY - (this.side as number) / 2,\n    );\n  };\n\n  handleClick = (event: MouseEvent) => {\n    if (!this.root) return;\n    this.holdSegment = !this.holdSegment;\n    if (!this.holdSegment) {\n      this.selectNodeByPosition(\n        event.offsetX - (this.side as number) / 2,\n        event.offsetY - (this.side as number) / 2,\n      );\n    }\n  };\n\n  prepareTree() {\n    if (!this.#data) return;\n    const dataWithValues = prepareTreeData(\n      this.#data,\n      0,\n      this[\"max-depth\"] as number,\n    );\n    this.root = partition(\n      dataWithValues,\n      (this.side as number) / 2,\n      this[\"weight-attribute\"],\n    );\n  }\n\n  set data(value) {\n    if (value !== this.#data) {\n      this.#data = value;\n      this.prepareTree();\n      this.renderCanvas();\n    }\n  }\n\n  get data() {\n    return this.#data;\n  }\n\n  colorFn() {\n    return scaleOrdinal<number, string>(\n      quantize(interpolateRainbow, this.topOptions.length + 1),\n    ).domain(this.topOptions.map((_, i) => i));\n  }\n\n  getColor(node: HierarchyRectangularNode<Node>): string {\n    if (node.depth === 1) {\n      return this.getColorBySuperKingdom(node.data[this[\"name-attribute\"]]);\n    }\n    if (node.parent) return this.getColor(node.parent);\n    return this.colorFn()(superkingdoms.length - 1);\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  getColorBySuperKingdom(name: string): string {\n    return this.colorFn()(this.topOptions.indexOf(name?.toLowerCase() || null));\n  }\n\n  updated(changedProperties: PropertyValues<this>) {\n    if (\n      changedProperties.has(\"side\") ||\n      changedProperties.has(\"max-depth\") ||\n      changedProperties.has(\"weight-attribute\")\n    ) {\n      this.prepareTree();\n    }\n    this.renderCanvas();\n  }\n\n  renderCanvas() {\n    const canvas = select(this).select<HTMLCanvasElement>(\"canvas\");\n    const canvasNode = canvas.node();\n    if (!canvasNode || !this.#data) return;\n    const context = canvasNode.getContext(\"2d\");\n    const width = this.side as number;\n    const height = this.side as number;\n\n    if (!context) return;\n    context.clearRect(0, 0, width, height);\n    context.strokeStyle = \"white\";\n    if (!this.root) return;\n    this.renderArcs(context, width, height);\n    this.renderLabels(context, width, height);\n    if (this[\"show-tooltip\"]) {\n      this.renderActiveSegmentInfo(context);\n    }\n  }\n\n  renderArcs(context: CanvasRenderingContext2D, width: number, height: number) {\n    for (const segment of this.root\n      ?.descendants()\n      .filter((d) => d.depth && d.depth <= (this[\"max-depth\"] as number)) ||\n      []) {\n      // Initialize path\n      context.beginPath();\n\n      context.lineWidth = 1;\n      context.globalAlpha = 0.9 - (segment.depth - 1) * 0.05;\n      const tmpLineW = context.lineWidth;\n      const tmpAlpha = context.globalAlpha;\n\n      // Set the color:\n      context.fillStyle = this.getColor(segment);\n\n      // Build the arc segment\n      context.arc(width / 2, height / 2, segment.y1, segment.x0, segment.x1);\n      context.arc(\n        width / 2,\n        height / 2,\n        segment.y0,\n        segment.x1,\n        segment.x0,\n        true,\n      );\n      if (\n        segment.data[this[\"id-attribute\"]] ===\n        this.activeSegment?.data?.[this[\"id-attribute\"]]\n      ) {\n        context.lineWidth = 4;\n        context.globalAlpha = 1;\n      }\n      // Show the stroke\n      context.stroke();\n      context.fill();\n      context.lineWidth = tmpLineW;\n      context.globalAlpha = tmpAlpha;\n    }\n  }\n\n  renderLabels(\n    context: CanvasRenderingContext2D,\n    width: number,\n    height: number,\n  ) {\n    context.fillStyle = \"black\";\n    context.font = `${this[\"font-size\"]}px Arial`;\n    context.textBaseline = \"middle\";\n    context.textAlign = \"center\";\n    const labelsToDisplay = this.root\n      ?.descendants()\n      .filter(\n        (d) =>\n          d.depth &&\n          d.depth <= (this[\"max-depth\"] as number) &&\n          ((d.y0 + d.y1) / 2) * (d.x1 - d.x0) > 10,\n      );\n    for (const segment of labelsToDisplay || []) {\n      const angle = (segment.x0 + segment.x1) / 2;\n      const r = (segment.y0 + segment.y1) / 2;\n      context.save();\n      context.translate(width / 2, height / 2);\n      context.rotate(angle);\n      context.translate(r, 0);\n      let shouldRotate = false;\n      let spaceAvailableToDraw = segment.y1 - segment.y0;\n      // If it's more than a 1/4 of the circle so draw it horizontally\n      if (Math.abs(segment.x1 - segment.x0) > Math.PI / 2) {\n        shouldRotate = true;\n      } else {\n        const availableWidth = getDistanceOfPointsInRadians(\n          { angle: segment.x0, radius: segment.y0 },\n          { angle: segment.x1, radius: segment.y0 },\n        );\n        // If there is more space horizontally than verically then rotate\n        if (availableWidth > segment.y1 - segment.y0) {\n          shouldRotate = true;\n          spaceAvailableToDraw = availableWidth;\n        }\n      }\n      if (shouldRotate) {\n        context.rotate(Math.PI / 2);\n        if (angle > 0 && angle < Math.PI) {\n          context.rotate(Math.PI);\n        }\n      }\n      // rotate left side to make it readable\n      else if (angle > Math.PI / 2 && angle < 1.5 * Math.PI) {\n        context.rotate(Math.PI);\n      }\n\n      context.fillText(\n        segment.data[this[\"name-attribute\"]] ||\n          (segment.data.rank ? `[No ${segment.data.rank}]` : \"No name\"),\n        0,\n        0,\n        segment.data[this[\"id-attribute\"]] ===\n          this.activeSegment?.data?.[this[\"id-attribute\"]]\n          ? undefined\n          : spaceAvailableToDraw - 2,\n      );\n      context.restore();\n    }\n  }\n\n  renderActiveSegmentInfo(context: CanvasRenderingContext2D) {\n    if (this.activeSegment) {\n      context.textAlign = \"left\";\n      context.font = \"bold 12px Arial\";\n      context.fillText(\"Name:\", 10, 10);\n      context.fillText(`${this[\"weight-attribute-label\"]}:`, 10, 40);\n      context.font = \"12px Arial\";\n      context.fillText(this.activeSegment.data[this[\"name-attribute\"]], 15, 25);\n      context.fillText(\n        String(getValue(this.activeSegment.data, this[\"weight-attribute\"])),\n        15,\n        55,\n      );\n    }\n  }\n\n  selectNodeByPosition(x: number, y: number) {\n    const h = Math.sqrt(x * x + y * y);\n    const angle1 = x === 0 ? 0 : Math.atan(y / x);\n    const angle2 = y === 0 ? 0 : Math.atan(x / y);\n    const prev = this.activeSegment;\n    this.activeSegment = null;\n    for (const d of this.root?.descendants().filter((d) => d.depth) || []) {\n      // if is in the right ring\n      let angle = 0;\n      if (d.y1 > h && h > d.y0) {\n        if (x > 0 && y > 0) angle = angle1;\n        else if (x < 0 && y > 0) {\n          angle = Math.PI / 2 + Math.abs(angle2);\n        } else if (x < 0 && y < 0) {\n          angle = Math.PI + Math.abs(angle1);\n        } else if (x > 0 && y < 0) {\n          angle = 1.5 * Math.PI + Math.abs(angle2);\n        }\n        if (d.x1 > angle && angle > d.x0) this.activeSegment = d;\n      }\n    }\n    if (prev !== this.activeSegment) {\n      if (this.activeSegment?.data && !this.activeSegment.data.lineage) {\n        this.activeSegment.data.lineage = getLineageFromNode(\n          this.activeSegment,\n          this[\"name-attribute\"],\n          this[\"id-attribute\"],\n        );\n      }\n      this.dispatchEvent(\n        new CustomEvent(\"taxon-hover\", {\n          detail: this.activeSegment?.data,\n          bubbles: true,\n          cancelable: true,\n        }),\n      );\n      this.renderCanvas();\n    }\n  }\n\n  createRenderRoot() {\n    return this;\n  }\n\n  firstUpdated() {\n    this.getElementsByTagName(\"canvas\")?.[0].addEventListener(\n      \"click\",\n      this.handleClick,\n    );\n    this.getElementsByTagName(\"canvas\")?.[0].addEventListener(\n      \"mousemove\",\n      this.handleMousemove,\n    );\n  }\n\n  disconnectedCallback() {\n    super.disconnectedCallback();\n    this.getElementsByTagName(\"canvas\")?.[0].removeEventListener(\n      \"click\",\n      this.handleClick,\n    );\n    this.getElementsByTagName(\"canvas\")?.[0].removeEventListener(\n      \"mousemove\",\n      this.handleMousemove,\n    );\n  }\n\n  render() {\n    return html` <canvas\n      width=\"${this.side as number}px\"\n      height=\"${this.side as number}px\"\n    >\n      Nightingale Sunburst\n    </canvas>`;\n  }\n}\n\nexport default NightingaleSunburst;\n","import roundNode from \"./treemap/round.js\";\nimport treemapDice from \"./treemap/dice.js\";\n\nexport default function() {\n  var dx = 1,\n      dy = 1,\n      padding = 0,\n      round = false;\n\n  function partition(root) {\n    var n = root.height + 1;\n    root.x0 =\n    root.y0 = padding;\n    root.x1 = dx;\n    root.y1 = dy / n;\n    root.eachBefore(positionNode(dy, n));\n    if (round) root.eachBefore(roundNode);\n    return root;\n  }\n\n  function positionNode(dy, n) {\n    return function(node) {\n      if (node.children) {\n        treemapDice(node, node.x0, dy * (node.depth + 1) / n, node.x1, dy * (node.depth + 2) / n);\n      }\n      var x0 = node.x0,\n          y0 = node.y0,\n          x1 = node.x1 - padding,\n          y1 = node.y1 - padding;\n      if (x1 < x0) x0 = x1 = (x0 + x1) / 2;\n      if (y1 < y0) y0 = y1 = (y0 + y1) / 2;\n      node.x0 = x0;\n      node.y0 = y0;\n      node.x1 = x1;\n      node.y1 = y1;\n    };\n  }\n\n  partition.round = function(x) {\n    return arguments.length ? (round = !!x, partition) : round;\n  };\n\n  partition.size = function(x) {\n    return arguments.length ? (dx = +x[0], dy = +x[1], partition) : [dx, dy];\n  };\n\n  partition.padding = function(x) {\n    return arguments.length ? (padding = +x, partition) : padding;\n  };\n\n  return partition;\n}\n","export default function(parent, x0, y0, x1, y1) {\n  var nodes = parent.children,\n      node,\n      i = -1,\n      n = nodes.length,\n      k = parent.value && (x1 - x0) / parent.value;\n\n  while (++i < n) {\n    node = nodes[i], node.y0 = y0, node.y1 = y1;\n    node.x0 = x0, node.x1 = x0 += node.value * k;\n  }\n}\n","export default function(interpolator, n) {\n  var samples = new Array(n);\n  for (var i = 0; i < n; ++i) samples[i] = interpolator(i / (n - 1));\n  return samples;\n}\n","import NightingaleSunburst from \"./nightingale-sunburst\";\nexport type * from \"./nightingale-sunburst\";\nexport default NightingaleSunburst;\n","import React from 'react';\nimport { createComponent } from '@lit/react';\nimport NightingaleSunburstCE from '@nightingale-elements/nightingale-sunburst';\n\nexport const NightingaleSunburst = createComponent({\n  tagName: 'nightingale-sunburst',\n  elementClass: NightingaleSunburstCE,\n  react: React,\n});\n\nexport default NightingaleSunburst;\n","import React, { useEffect, useRef, useState } from 'react';\n\nimport { format } from 'url';\nimport { createSelector } from 'reselect';\nimport NightingaleSunburstCE from '@nightingale-elements/nightingale-sunburst';\n\nimport loadData from 'higherOrder/loadData/ts';\nimport NightingaleSunburst from 'components/Nightingale/Sunburst';\nimport Loading from 'components/SimpleCommonComponents/Loading';\nimport Callout from 'components/SimpleCommonComponents/Callout';\nimport Link from 'components/generic/Link';\nimport ResizeObserverComponent from 'wrappers/ResizeObserverComponent';\n\nimport descriptionToPath from 'utils/processDescription/descriptionToPath';\n\nimport cssBinder from 'styles/cssBinder';\nimport fonts from 'EBI-Icon-fonts/fonts.css';\nimport style from './style.css';\n\nconst css = cssBinder(style, fonts);\n\n// TODO: Use  and Fix the type from Nightingale Sequence\ntype TaxonNode = {\n  id: string;\n  name: string;\n  numDomains: number;\n  numSequences: number;\n  numSpecies: number;\n  value: number;\n  node: string;\n  children: TaxonNode[] | null;\n  _children: TaxonNode[] | null;\n  rank?: number;\n};\n\nconst MAX_NUM_SPECIES_FOR_FULL_DEPTH = 2000;\n\n/* eslint-disable no-magic-numbers */\nconst getDefaultMaxDepth = (numSpecies: number) => {\n  if (numSpecies < MAX_NUM_SPECIES_FOR_FULL_DEPTH) return 8;\n  if (numSpecies < 10000) return 7;\n  if (numSpecies < 25000) return 6;\n  if (numSpecies < 40000) return 5;\n  return 4;\n};\n\nconst FONT_SIZES = [10, 12, 14, 16, 18];\nconst DEFAULT_FONT_SIZE = 14;\nconst DEFAULT_DEPTH = 4;\n/* eslint-enable no-magic-numbers */\n\nconst LinkOrText = ({ id, name }: { id: string; name: string }) => (\n  <i>\n    {isNaN(Number(id)) ? (\n      <span>{name}</span>\n    ) : (\n      <Link\n        to={{\n          description: {\n            main: { key: 'taxonomy' },\n            taxonomy: {\n              db: 'uniprot',\n              accession: id,\n            } as InterProPartialDescription,\n          },\n        }}\n      >\n        {name}\n      </Link>\n    )}\n  </i>\n);\n\nconst weigthOptions = {\n  proteins: 'Number of sequences',\n  species: 'Number of species',\n};\ntype WeightOptions = keyof typeof weigthOptions;\n\ntype Props = {\n  description: InterProDescription;\n};\ninterface LoadedProps extends Props, LoadDataProps<TaxaPayload> {}\n\nconst Sunburst = ({ data, description }: LoadedProps) => {\n  const { loading, payload } = data || {};\n  const sunburst = useRef<NightingaleSunburstCE | null>(null);\n  const [legends, setLegends] = useState<Array<[string, string]>>([]);\n  const [weightOption, setWeightOption] = useState<WeightOptions>('proteins');\n  const [fontSize, setFontSize] = useState(DEFAULT_FONT_SIZE);\n  const [currentNode, setCurrentNode] = useState<Taxon | null>(null);\n  const [maxDepth, setMaxDepth] = useState(DEFAULT_DEPTH);\n\n  useEffect(() => {\n    const waitForWC = async () => {\n      const promises = ['nightingale-sunburst'].map((localName) =>\n        customElements.whenDefined(localName),\n      );\n      await Promise.all(promises);\n    };\n    waitForWC();\n  }, []);\n  useEffect(() => {\n    if (loading || !payload || !sunburst.current) return;\n    // TODO: Use  and Fix the type from Nightingale Sequence\n    sunburst.current.data = payload.taxa as unknown as TaxonNode;\n    setMaxDepth(getDefaultMaxDepth(payload.taxa.species));\n    setLegends(\n      sunburst.current?.topOptions?.map((name) => [\n        name || '',\n        sunburst.current?.getColorBySuperKingdom(name || '') || '',\n      ]) || [],\n    );\n    sunburst.current.addEventListener('taxon-hover', (evt: Event) => {\n      setCurrentNode((evt as CustomEvent).detail as Taxon);\n    });\n  }, [loading, payload]);\n  if (loading || !payload) {\n    return <Loading />;\n  }\n  const currentName =\n    currentNode?.name || (currentNode?.rank ? `[No ${currentNode.rank}]` : '-');\n\n  return (\n    <div>\n      {(payload?.taxa?.species || 0) > MAX_NUM_SPECIES_FOR_FULL_DEPTH && (\n        <Callout type=\"info\">\n          There are {payload?.taxa?.species} species represented in this\n          sunburst chart. The depth of the visualisation has been limited. You\n          can modify this with the controller in the right side. however, please\n          note this might affect the performance in your browser.\n        </Callout>\n      )}\n      <div className={css('sunburst')}>\n        <div className={css('panel-component')}>\n          <ResizeObserverComponent measurements={['width']} element=\"div\">\n            {({ width }: { width: number }) => {\n              return (\n                <NightingaleSunburst\n                  side={width}\n                  // TODO: Fix type in nightingale-sunburst\n                  weight-attribute={weightOption as unknown as 'value'}\n                  weight-attribute-label=\"Number of proteins\"\n                  name-attribute=\"name\"\n                  id-attribute=\"id\"\n                  ref={sunburst}\n                  max-depth={maxDepth}\n                  font-size={fontSize}\n                />\n              );\n            }}\n          </ResizeObserverComponent>\n        </div>\n        <div className={css('panel-legends')}>\n          {legends && (\n            <div>\n              <h5>Legends</h5>\n              <ul className={css('legends')}>\n                {legends.map(([name, color]) => (\n                  <li key={name || 'other'}>\n                    <div\n                      style={{\n                        backgroundColor: color,\n                        width: '1rem',\n                        height: '1rem',\n                        display: 'inline-block',\n                        marginRight: '0.5rem',\n                      }}\n                    />\n                    <span className={css('header')}>{name || 'Other'}</span>\n                  </li>\n                ))}\n              </ul>\n            </div>\n          )}\n          <div>\n            <h5>Weight Segments by</h5>\n            <select\n              onChange={(evt) =>\n                setWeightOption(evt.target.value as WeightOptions)\n              }\n              onBlur={(evt) =>\n                setWeightOption(evt.target.value as WeightOptions)\n              }\n              value={weightOption}\n            >\n              {Object.keys(weigthOptions).map((option) => (\n                <option key={option} value={option}>\n                  {weigthOptions[option as keyof typeof weigthOptions]}\n                </option>\n              ))}\n            </select>\n          </div>\n          <div>\n            <h5>Font Size</h5>\n            <select\n              onChange={(evt) => setFontSize(Number(evt.target.value))}\n              onBlur={(evt) => setFontSize(Number(evt.target.value))}\n              value={fontSize}\n            >\n              {FONT_SIZES.map((size) => (\n                <option key={size} value={size}>\n                  {size}\n                </option>\n              ))}\n            </select>\n          </div>\n          <div>\n            <h5>\n              Sunburst Depth\n              <br />\n              <span className={css('small')}>{maxDepth} rings</span>\n            </h5>\n            <div className={css('sunburst-depth')}>\n              2\n              <input\n                type=\"range\"\n                value={maxDepth}\n                min=\"2\"\n                max=\"8\"\n                onChange={(event) => setMaxDepth(Number(event.target.value))}\n              />\n              8\n            </div>\n          </div>\n          <hr />\n          <div>\n            <h5>Selected Taxon</h5>\n            {currentNode && (\n              <dl>\n                <dt>Name</dt>\n                <dd>\n                  {isNaN(Number(currentNode.id)) ? (\n                    currentName\n                  ) : (\n                    <i>\n                      <Link\n                        to={{\n                          description: {\n                            main: { key: 'taxonomy' },\n                            taxonomy: {\n                              db: 'uniprot',\n                            },\n                            entry: {\n                              ...description.entry,\n                              isFilter: true,\n                              order: 1,\n                            },\n                          } as InterProPartialDescription,\n                          search: { search: currentNode.id },\n                          hash: 'tree',\n                        }}\n                      >\n                        {currentName}\n                      </Link>\n                    </i>\n                  )}\n                </dd>\n                <dt>Number of sequences</dt>\n                <dd>\n                  {isNaN(Number(currentNode.id)) ? (\n                    currentNode.proteins\n                  ) : (\n                    <Link\n                      to={{\n                        description: {\n                          main: { key: 'entry' },\n                          entry: description.entry,\n                          protein: {\n                            db: 'uniprot',\n                            isFilter: true,\n                            order: 1,\n                          },\n                          taxonomy: {\n                            db: 'uniprot',\n                            accession: currentNode.id,\n                            isFilter: true,\n                            order: 2,\n                          },\n                        } as InterProPartialDescription,\n                      }}\n                    >\n                      {currentNode.proteins}\n                    </Link>\n                  )}\n                </dd>\n                <dt>Number of species</dt>\n                <dd>{currentNode.species}</dd>\n                <dt>Lineage</dt>\n                <dd>\n                  {currentNode.lineage\n                    ?.filter(({ name }) => !!name)\n                    .map(({ name, id }) => (\n                      <span key={id}>\n                        <LinkOrText name={name} id={id} />;{' '}\n                      </span>\n                    ))}\n                </dd>\n              </dl>\n            )}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nconst getUrl = createSelector(\n  (state) => state.settings.api,\n  (state) => state.customLocation.description.entry,\n  ({ protocol, hostname, port, root }, { db, accession }) => {\n    const desc: InterProPartialDescription = {\n      main: { key: 'entry' },\n      entry: { db, accession },\n    };\n    return format({\n      protocol,\n      hostname,\n      port,\n      pathname: root + descriptionToPath(desc),\n      query: {\n        taxa: '',\n      },\n    });\n  },\n);\n\nconst mapStateToProps = createSelector(\n  (state: GlobalState) => state.customLocation.description,\n  (description) => ({ description }),\n);\n\nexport default loadData<TaxaPayload>({\n  getUrl,\n  mapStateToProps,\n} as LoadDataParameters)(Sunburst);\n","// extracted by mini-css-extract-plugin\nexport default {\"sunburst\":\"Sunburst_style__sunburst___d2\",\"panel-component\":\"Sunburst_style__panel-component___da\",\"panel-legends\":\"Sunburst_style__panel-legends___f2\",\"legends\":\"Sunburst_style__legends___d9\",\"sunburst-depth\":\"Sunburst_style__sunburst-depth___eb\"};","function count(node) {\n  var sum = 0,\n      children = node.children,\n      i = children && children.length;\n  if (!i) sum = 1;\n  else while (--i >= 0) sum += children[i].value;\n  node.value = sum;\n}\n\nexport default function() {\n  return this.eachAfter(count);\n}\n","import node_count from \"./count.js\";\nimport node_each from \"./each.js\";\nimport node_eachBefore from \"./eachBefore.js\";\nimport node_eachAfter from \"./eachAfter.js\";\nimport node_find from \"./find.js\";\nimport node_sum from \"./sum.js\";\nimport node_sort from \"./sort.js\";\nimport node_path from \"./path.js\";\nimport node_ancestors from \"./ancestors.js\";\nimport node_descendants from \"./descendants.js\";\nimport node_leaves from \"./leaves.js\";\nimport node_links from \"./links.js\";\nimport node_iterator from \"./iterator.js\";\n\nexport default function hierarchy(data, children) {\n  if (data instanceof Map) {\n    data = [undefined, data];\n    if (children === undefined) children = mapChildren;\n  } else if (children === undefined) {\n    children = objectChildren;\n  }\n\n  var root = new Node(data),\n      node,\n      nodes = [root],\n      child,\n      childs,\n      i,\n      n;\n\n  while (node = nodes.pop()) {\n    if ((childs = children(node.data)) && (n = (childs = Array.from(childs)).length)) {\n      node.children = childs;\n      for (i = n - 1; i >= 0; --i) {\n        nodes.push(child = childs[i] = new Node(childs[i]));\n        child.parent = node;\n        child.depth = node.depth + 1;\n      }\n    }\n  }\n\n  return root.eachBefore(computeHeight);\n}\n\nfunction node_copy() {\n  return hierarchy(this).eachBefore(copyData);\n}\n\nfunction objectChildren(d) {\n  return d.children;\n}\n\nfunction mapChildren(d) {\n  return Array.isArray(d) ? d[1] : null;\n}\n\nfunction copyData(node) {\n  if (node.data.value !== undefined) node.value = node.data.value;\n  node.data = node.data.data;\n}\n\nexport function computeHeight(node) {\n  var height = 0;\n  do node.height = height;\n  while ((node = node.parent) && (node.height < ++height));\n}\n\nexport function Node(data) {\n  this.data = data;\n  this.depth =\n  this.height = 0;\n  this.parent = null;\n}\n\nNode.prototype = hierarchy.prototype = {\n  constructor: Node,\n  count: node_count,\n  each: node_each,\n  eachAfter: node_eachAfter,\n  eachBefore: node_eachBefore,\n  find: node_find,\n  sum: node_sum,\n  sort: node_sort,\n  path: node_path,\n  ancestors: node_ancestors,\n  descendants: node_descendants,\n  leaves: node_leaves,\n  links: node_links,\n  copy: node_copy,\n  [Symbol.iterator]: node_iterator\n};\n","export default function(callback, that) {\n  let index = -1;\n  for (const node of this) {\n    callback.call(that, node, ++index, this);\n  }\n  return this;\n}\n","export default function(callback, that) {\n  var node = this, nodes = [node], next = [], children, i, n, index = -1;\n  while (node = nodes.pop()) {\n    next.push(node);\n    if (children = node.children) {\n      for (i = 0, n = children.length; i < n; ++i) {\n        nodes.push(children[i]);\n      }\n    }\n  }\n  while (node = next.pop()) {\n    callback.call(that, node, ++index, this);\n  }\n  return this;\n}\n","export default function(callback, that) {\n  var node = this, nodes = [node], children, i, index = -1;\n  while (node = nodes.pop()) {\n    callback.call(that, node, ++index, this);\n    if (children = node.children) {\n      for (i = children.length - 1; i >= 0; --i) {\n        nodes.push(children[i]);\n      }\n    }\n  }\n  return this;\n}\n","export default function(callback, that) {\n  let index = -1;\n  for (const node of this) {\n    if (callback.call(that, node, ++index, this)) {\n      return node;\n    }\n  }\n}\n","export default function(value) {\n  return this.eachAfter(function(node) {\n    var sum = +value(node.data) || 0,\n        children = node.children,\n        i = children && children.length;\n    while (--i >= 0) sum += children[i].value;\n    node.value = sum;\n  });\n}\n","export default function(compare) {\n  return this.eachBefore(function(node) {\n    if (node.children) {\n      node.children.sort(compare);\n    }\n  });\n}\n","export default function(end) {\n  var start = this,\n      ancestor = leastCommonAncestor(start, end),\n      nodes = [start];\n  while (start !== ancestor) {\n    start = start.parent;\n    nodes.push(start);\n  }\n  var k = nodes.length;\n  while (end !== ancestor) {\n    nodes.splice(k, 0, end);\n    end = end.parent;\n  }\n  return nodes;\n}\n\nfunction leastCommonAncestor(a, b) {\n  if (a === b) return a;\n  var aNodes = a.ancestors(),\n      bNodes = b.ancestors(),\n      c = null;\n  a = aNodes.pop();\n  b = bNodes.pop();\n  while (a === b) {\n    c = a;\n    a = aNodes.pop();\n    b = bNodes.pop();\n  }\n  return c;\n}\n","export default function() {\n  var node = this, nodes = [node];\n  while (node = node.parent) {\n    nodes.push(node);\n  }\n  return nodes;\n}\n","export default function() {\n  return Array.from(this);\n}\n","export default function() {\n  var leaves = [];\n  this.eachBefore(function(node) {\n    if (!node.children) {\n      leaves.push(node);\n    }\n  });\n  return leaves;\n}\n","export default function() {\n  var root = this, links = [];\n  root.each(function(node) {\n    if (node !== root) { // Don’t include the root’s parent, if any.\n      links.push({source: node.parent, target: node});\n    }\n  });\n  return links;\n}\n","export default function*() {\n  var node = this, current, next = [node], children, i, n;\n  do {\n    current = next.reverse(), next = [];\n    while (node = current.pop()) {\n      yield node;\n      if (children = node.children) {\n        for (i = 0, n = children.length; i < n; ++i) {\n          next.push(children[i]);\n        }\n      }\n    }\n  } while (next.length);\n}\n","export const radians = Math.PI / 180;\nexport const degrees = 180 / Math.PI;\n","import define, {extend} from \"./define.js\";\nimport {Color, rgbConvert, Rgb, darker, brighter} from \"./color.js\";\nimport {degrees, radians} from \"./math.js\";\n\nvar A = -0.14861,\n    B = +1.78277,\n    C = -0.29227,\n    D = -0.90649,\n    E = +1.97294,\n    ED = E * D,\n    EB = E * B,\n    BC_DA = B * C - D * A;\n\nfunction cubehelixConvert(o) {\n  if (o instanceof Cubehelix) return new Cubehelix(o.h, o.s, o.l, o.opacity);\n  if (!(o instanceof Rgb)) o = rgbConvert(o);\n  var r = o.r / 255,\n      g = o.g / 255,\n      b = o.b / 255,\n      l = (BC_DA * b + ED * r - EB * g) / (BC_DA + ED - EB),\n      bl = b - l,\n      k = (E * (g - l) - C * bl) / D,\n      s = Math.sqrt(k * k + bl * bl) / (E * l * (1 - l)), // NaN if l=0 or l=1\n      h = s ? Math.atan2(k, bl) * degrees - 120 : NaN;\n  return new Cubehelix(h < 0 ? h + 360 : h, s, l, o.opacity);\n}\n\nexport default function cubehelix(h, s, l, opacity) {\n  return arguments.length === 1 ? cubehelixConvert(h) : new Cubehelix(h, s, l, opacity == null ? 1 : opacity);\n}\n\nexport function Cubehelix(h, s, l, opacity) {\n  this.h = +h;\n  this.s = +s;\n  this.l = +l;\n  this.opacity = +opacity;\n}\n\ndefine(Cubehelix, cubehelix, extend(Color, {\n  brighter(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Cubehelix(this.h, this.s, this.l * k, this.opacity);\n  },\n  darker(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Cubehelix(this.h, this.s, this.l * k, this.opacity);\n  },\n  rgb() {\n    var h = isNaN(this.h) ? 0 : (this.h + 120) * radians,\n        l = +this.l,\n        a = isNaN(this.s) ? 0 : this.s * l * (1 - l),\n        cosh = Math.cos(h),\n        sinh = Math.sin(h);\n    return new Rgb(\n      255 * (l + a * (A * cosh + B * sinh)),\n      255 * (l + a * (C * cosh + D * sinh)),\n      255 * (l + a * (E * cosh)),\n      this.opacity\n    );\n  }\n}));\n","import {cubehelix as colorCubehelix} from \"d3-color\";\nimport color, {hue} from \"./color.js\";\n\nfunction cubehelix(hue) {\n  return (function cubehelixGamma(y) {\n    y = +y;\n\n    function cubehelix(start, end) {\n      var h = hue((start = colorCubehelix(start)).h, (end = colorCubehelix(end)).h),\n          s = color(start.s, end.s),\n          l = color(start.l, end.l),\n          opacity = color(start.opacity, end.opacity);\n      return function(t) {\n        start.h = h(t);\n        start.s = s(t);\n        start.l = l(Math.pow(t, y));\n        start.opacity = opacity(t);\n        return start + \"\";\n      };\n    }\n\n    cubehelix.gamma = cubehelixGamma;\n\n    return cubehelix;\n  })(1);\n}\n\nexport default cubehelix(hue);\nexport var cubehelixLong = cubehelix(color);\n","import {cubehelix} from \"d3-color\";\nimport {interpolateCubehelixLong} from \"d3-interpolate\";\n\nexport var warm = interpolateCubehelixLong(cubehelix(-100, 0.75, 0.35), cubehelix(80, 1.50, 0.8));\n\nexport var cool = interpolateCubehelixLong(cubehelix(260, 0.75, 0.35), cubehelix(80, 1.50, 0.8));\n\nvar c = cubehelix();\n\nexport default function(t) {\n  if (t < 0 || t > 1) t -= Math.floor(t);\n  var ts = Math.abs(t - 0.5);\n  c.h = 360 * t - 100;\n  c.s = 1.5 - 1.5 * ts;\n  c.l = 0.8 - 0.9 * ts;\n  return c + \"\";\n}\n"],"names":["window","ResizeObserver","constructor","onResizeEvent","_this","_handleResize","_asyncToGenerator","schedule","_node","_onResizeEvent","target","contentRect","getBoundingClientRect","Error","this","observe","node","HTMLElement","addEventListener","sleep","then","unobserve","removeEventListener","ResizeObserverComponent","PureComponent","props","super","state","_resizeObserver","_handleResizeEvent","bind","_ref","React","componentDidMount","current","componentDidUpdate","updateCallback","componentWillUnmount","resizeObserverEntries","finalContentRect","measurements","measurement","Array","isArray","setState","render","_this$props","children","element","_objectWithoutPropertiesLoose","_excluded","Element","_extends","ref","propTypes","T","isRequired","x0","Math","round","y0","x1","y1","superkingdoms","getValue","d","attributeName","reduce","agg","item","prepareTreeData","depth","maxDepth","preparedNode","Object","assign","_a","length","_children","_b","_c","newChildren","child","push","getLineageFromNode","attributeID","parent","name","data","id","getDistanceOfPointsInRadians","point1","point2","angle","abs","radius","sin","NightingaleSunburst","LitElement","side","Infinity","_NightingaleSunburst_data","set","holdSegment","topOptions","root","handleMousemove","event","activeSegment","selectNodeByPosition","offsetX","offsetY","handleClick","prepareTree","__classPrivateFieldGet","attribute","h","dataWithValues","hierarchy","each","value","sort","a","b","dx","dy","padding","partition","n","height","eachBefore","nodes","i","k","positionNode","x","arguments","size","d3partition","PI","__classPrivateFieldSet","renderCanvas","colorFn","scaleOrdinal","interpolator","samples","quantize","interpolateRainbow","domain","map","_","getColor","getColorBySuperKingdom","indexOf","toLowerCase","updated","changedProperties","has","canvasNode","select","context","getContext","width","clearRect","strokeStyle","renderArcs","renderLabels","renderActiveSegmentInfo","segment","descendants","filter","beginPath","lineWidth","globalAlpha","tmpLineW","tmpAlpha","fillStyle","arc","stroke","fill","font","textBaseline","textAlign","labelsToDisplay","r","save","translate","rotate","shouldRotate","spaceAvailableToDraw","availableWidth","fillText","rank","undefined","restore","String","y","sqrt","angle1","atan","angle2","prev","lineage","dispatchEvent","CustomEvent","detail","bubbles","cancelable","createRenderRoot","firstUpdated","getElementsByTagName","disconnectedCallback","html","_templateObject","__decorate","property","type","Number","Boolean","customElement","createComponent","tagName","elementClass","NightingaleSunburstCE","react","css","cssBinder","fonts","FONT_SIZES","LinkOrText","isNaN","Link","to","description","main","key","taxonomy","db","accession","weigthOptions","proteins","species","getUrl","createSelector","settings","api","customLocation","entry","_ref7","_ref8","protocol","hostname","port","desc","format","pathname","descriptionToPath","query","taxa","mapStateToProps","loadData","_ref2","loading","payload","sunburst","useRef","legends","setLegends","useState","weightOption","setWeightOption","fontSize","setFontSize","currentNode","setCurrentNode","setMaxDepth","useEffect","promises","localName","customElements","whenDefined","Promise","all","numSpecies","evt","Loading","currentName","Callout","className","_ref3","_ref4","color","style","backgroundColor","display","marginRight","onChange","onBlur","keys","option","min","max","isFilter","order","search","hash","protein","_ref5","_ref6","count","sum","Map","mapChildren","objectChildren","childs","Node","pop","from","computeHeight","copyData","prototype","eachAfter","callback","that","index","call","next","find","compare","path","end","start","ancestor","aNodes","ancestors","bNodes","c","leastCommonAncestor","splice","leaves","links","source","copy","Symbol","iterator","reverse","radians","degrees","A","B","C","D","E","ED","EB","BC_DA","s","l","opacity","o","Cubehelix","g","bl","atan2","NaN","cubehelixConvert","brighter","pow","darker","rgb","cosh","cos","sinh","cubehelix","hue","cubehelixGamma","t","gamma","cubehelixLong","floor","ts"],"sourceRoot":""}