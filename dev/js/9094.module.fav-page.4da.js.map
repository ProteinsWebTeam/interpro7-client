{"version":3,"file":"js/9094.module.fav-page.4da.js","mappings":";0RAaMA,GAAIC,EAAAA,EAAAA,GAAkBC,EAAAA,EAAiBC,EAAAA,EAAMC,EAAAA,GA0EnD,QA9DyBC,KACvB,IAAOC,EAAYC,IAAiBC,EAAAA,EAAAA,UAAS,KACtCC,EAASC,IAAcF,EAAAA,EAAAA,WAAS,GAQvC,OAPAG,EAAAA,EAAAA,YAAU,MACRC,EAAAA,EAAAA,GAAwB,CACtBL,cAAeA,EACfG,WAAYA,GACZ,GACD,IAGDG,EAAAA,cAAA,OAAKC,UAAWd,EAAE,QAChBa,EAAAA,cAAA,OAAKC,UAAWd,EAAE,YAChBa,EAAAA,cAAA,eACGJ,GAAWI,EAAAA,cAAA,UAAI,kDACdJ,GAAiC,IAAtBH,EAAWS,QACtBF,EAAAA,cAAA,UAAI,sCAELP,EAAWS,OAAS,GACnBF,EAAAA,cAAAA,EAAAA,SAAA,KACGP,EAAWU,KAAKC,GACfJ,EAAAA,cAAA,OAAKK,IAAKD,EAAIE,WACZN,EAAAA,cAAA,OAAKC,UAAWd,EAAE,QAChBa,EAAAA,cAAA,OAAKC,UAAWd,EAAE,WAAY,WAC5Ba,EAAAA,cAAA,UAAI,UAAQI,EAAIE,YAElBN,EAAAA,cAAA,OAAKC,UAAWd,EAAE,WAAY,WAC5Ba,EAAAA,cAACO,EAAAA,EAAM,CACLC,KAAK,YACLC,QAASA,IAvCfC,EAACC,EAAIC,EAASnB,EAAYC,MAC1CmB,EAAAA,EAAAA,IAAeC,EAAAA,IAAYC,MAAMC,IAE/BA,EAAKC,OAAON,GAAKO,GAAIC,OAAAC,OAAA,GAAWF,EAASN,KAEzC,IAAMS,EAAO5B,EAAW6B,QAAQlB,GAAQA,EAAIE,YAAcK,IAC1DjB,EAAc2B,EAAK,GACnB,EAiCsBX,CACEN,EAAIE,UACJF,EAAImB,OACJ9B,EACAC,IAGL,YAKLM,EAAAA,cAACwB,IACC,CACAC,SAAUrB,EAAIsB,YAAYC,IAAIC,KAAK,MAEnCC,SAAUzB,EAAIsB,YAAYI,QAAQF,KAAK,MACvCG,WAAW,EACXC,UAAW,QACXC,WAAY,SACZC,iBAAiB,UAQ3B,iBCnFV,OAOC,WACA,aAEA,IAAIC,EAAS,CAAC,EAAEC,eAEhB,SAASC,IAGR,IAFA,IAAIC,EAAU,GAELC,EAAI,EAAGA,EAAIC,UAAUtC,OAAQqC,IAAK,CAC1C,IAAIE,EAAMD,UAAUD,GAChBE,IACHH,EAAUI,EAAYJ,EAASK,EAAWF,IAE5C,CAEA,OAAOH,CACR,CAEA,SAASK,EAAYF,GACpB,GAAmB,iBAARA,GAAmC,iBAARA,EACrC,OAAOA,EAGR,GAAmB,iBAARA,EACV,MAAO,GAGR,GAAIG,MAAMC,QAAQJ,GACjB,OAAOJ,EAAWS,MAAM,KAAML,GAG/B,GAAIA,EAAIM,WAAa5B,OAAO6B,UAAUD,WAAaN,EAAIM,SAASA,WAAWE,SAAS,iBACnF,OAAOR,EAAIM,WAGZ,IAAIT,EAAU,GAEd,IAAK,IAAIjC,KAAOoC,EACXN,EAAOe,KAAKT,EAAKpC,IAAQoC,EAAIpC,KAChCiC,EAAUI,EAAYJ,EAASjC,IAIjC,OAAOiC,CACR,CAEA,SAASI,EAAaS,EAAOC,GAC5B,OAAKA,EAIDD,EACIA,EAAQ,IAAMC,EAGfD,EAAQC,EAPPD,CAQT,CAEqCE,EAAOC,SAC3CjB,EAAWkB,QAAUlB,EACrBgB,EAAOC,QAAUjB,QAKhB,KAFwB,EAAF,WACtB,OAAOA,CACP,UAFoB,OAEpB,YAIH,CArEA","sources":["webpack://interpro7-client/./src/pages/FavouriteUpdates/index.js","webpack://interpro7-client/./node_modules/classnames/index.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { getMismatchedFavourites } from 'utils/compare-favourites';\nimport getTableAccess, { FavEntries } from 'storage/idb';\n\nimport ReactDiffViewer from 'react-diff-viewer-continued';\n// $FlowFixMe\nimport Button from 'components/SimpleCommonComponents/Button';\n\nimport { foundationPartial } from 'styles/foundation';\nimport ipro from 'styles/interpro-new.css';\nimport ebiGlobalStyles from 'ebi-framework/css/ebi-global.css';\nimport fonts from 'EBI-Icon-fonts/fonts.css';\n\nconst f = foundationPartial(ebiGlobalStyles, ipro, fonts);\n\nconst updateIDB = (id, content, changedFav, setChangedFav) => {\n  getTableAccess(FavEntries).then((favT) => {\n    // Updating in IDB\n    favT.update(id, (prev) => ({ ...prev, ...content }));\n\n    const list = changedFav.filter((fav) => fav.accession !== id);\n    setChangedFav(list);\n  });\n};\n\nconst FavouriteUpdates = () => {\n  const [changedFav, setChangedFav] = useState([]);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    getMismatchedFavourites({\n      setChangedFav: setChangedFav,\n      setLoading: setLoading,\n    });\n  }, []);\n\n  return (\n    <div className={f('row')}>\n      <div className={f('columns')}>\n        <section>\n          {loading && <h2>Looking for changes in your favourite entries</h2>}\n          {!loading && changedFav.length === 0 && (\n            <h2>All your favourites are up to date</h2>\n          )}\n          {changedFav.length > 0 && (\n            <>\n              {changedFav.map((fav) => (\n                <div key={fav.accession}>\n                  <div className={f('row')}>\n                    <div className={f('medium-3', 'column')}>\n                      <h3>Entry: {fav.accession}</h3>\n                    </div>\n                    <div className={f('medium-2', 'column')}>\n                      <Button\n                        icon=\"icon-redo\"\n                        onClick={() =>\n                          updateIDB(\n                            fav.accession,\n                            fav.latest,\n                            changedFav,\n                            setChangedFav,\n                          )\n                        }\n                      >\n                        Update\n                      </Button>\n                    </div>\n                  </div>\n                  <ReactDiffViewer\n                    // oldValue={JSON.stringify(fav.differences.old)}\n                    oldValue={fav.differences.old.join('\\n')}\n                    // newValue={JSON.stringify(fav.differences.newData)}\n                    newValue={fav.differences.newData.join('\\n')}\n                    splitView={true}\n                    leftTitle={'Saved'}\n                    rightTitle={'Latest'}\n                    hideLineNumbers={true}\n                  />\n                </div>\n              ))}\n            </>\n          )}\n        </section>\n      </div>\n    </div>\n  );\n};\n\nexport default FavouriteUpdates;\n","/*!\n\tCopyright (c) 2018 Jed Watson.\n\tLicensed under the MIT License (MIT), see\n\thttp://jedwatson.github.io/classnames\n*/\n/* global define */\n\n(function () {\n\t'use strict';\n\n\tvar hasOwn = {}.hasOwnProperty;\n\n\tfunction classNames () {\n\t\tvar classes = '';\n\n\t\tfor (var i = 0; i < arguments.length; i++) {\n\t\t\tvar arg = arguments[i];\n\t\t\tif (arg) {\n\t\t\t\tclasses = appendClass(classes, parseValue(arg));\n\t\t\t}\n\t\t}\n\n\t\treturn classes;\n\t}\n\n\tfunction parseValue (arg) {\n\t\tif (typeof arg === 'string' || typeof arg === 'number') {\n\t\t\treturn arg;\n\t\t}\n\n\t\tif (typeof arg !== 'object') {\n\t\t\treturn '';\n\t\t}\n\n\t\tif (Array.isArray(arg)) {\n\t\t\treturn classNames.apply(null, arg);\n\t\t}\n\n\t\tif (arg.toString !== Object.prototype.toString && !arg.toString.toString().includes('[native code]')) {\n\t\t\treturn arg.toString();\n\t\t}\n\n\t\tvar classes = '';\n\n\t\tfor (var key in arg) {\n\t\t\tif (hasOwn.call(arg, key) && arg[key]) {\n\t\t\t\tclasses = appendClass(classes, key);\n\t\t\t}\n\t\t}\n\n\t\treturn classes;\n\t}\n\n\tfunction appendClass (value, newClass) {\n\t\tif (!newClass) {\n\t\t\treturn value;\n\t\t}\n\t\n\t\tif (value) {\n\t\t\treturn value + ' ' + newClass;\n\t\t}\n\t\n\t\treturn value + newClass;\n\t}\n\n\tif (typeof module !== 'undefined' && module.exports) {\n\t\tclassNames.default = classNames;\n\t\tmodule.exports = classNames;\n\t} else if (typeof define === 'function' && typeof define.amd === 'object' && define.amd) {\n\t\t// register as 'classnames', consistent with npm package name\n\t\tdefine('classnames', [], function () {\n\t\t\treturn classNames;\n\t\t});\n\t} else {\n\t\twindow.classNames = classNames;\n\t}\n}());\n"],"names":["f","foundationPartial","ebiGlobalStyles","ipro","fonts","FavouriteUpdates","changedFav","setChangedFav","useState","loading","setLoading","useEffect","getMismatchedFavourites","React","className","length","map","fav","key","accession","Button","icon","onClick","updateIDB","id","content","getTableAccess","FavEntries","then","favT","update","prev","Object","assign","list","filter","latest","ReactDiffViewer","oldValue","differences","old","join","newValue","newData","splitView","leftTitle","rightTitle","hideLineNumbers","hasOwn","hasOwnProperty","classNames","classes","i","arguments","arg","appendClass","parseValue","Array","isArray","apply","toString","prototype","includes","call","value","newClass","module","exports","default"],"sourceRoot":""}