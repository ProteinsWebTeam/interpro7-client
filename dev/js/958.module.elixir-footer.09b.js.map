{"version":3,"file":"js/958.module.elixir-footer.09b.js","mappings":"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","sources":["webpack://interpro7-client/./src/components/LazyImage/index.js","webpack://interpro7-client/./src/wrappers/Lazy/index.js","webpack://interpro7-client/./src/utils/gets-in-view/index.js","webpack://interpro7-client/./src/components/ElixirFooter/index.tsx","webpack://interpro7-client/./src/components/ElixirFooter/style.css?0b49","webpack://interpro7-client/./src/utils/cancelable/index.ts"],"sourcesContent":["// @flow\nimport React, { PureComponent } from 'react';\nimport T from 'prop-types';\n\nimport Lazy from 'wrappers/Lazy';\n\nclass LazyImage extends PureComponent /*:: <{ alt: string }> */ {\n  static propTypes = {\n    alt: T.string,\n  };\n\n  render() {\n    const { alt, ...props } = this.props;\n    return (\n      <Lazy>\n        {hasBeenVisible =>\n          hasBeenVisible ? <img {...props} alt={alt} /> : null\n        }\n      </Lazy>\n    );\n  }\n}\n\nexport default LazyImage;\n","// @flow\nimport React, { PureComponent } from 'react';\nimport T from 'prop-types';\n\n// $FlowFixMe\nimport cancelable from 'utils/cancelable/index';\nimport getsInView from 'utils/gets-in-view/index';\nimport { schedule } from 'timing-functions';\n\n/* :: type State = {| hasBeenVisible: boolean |}; */\n\n/* :: type Props = {|\n  visible?: boolean,\n  rootMargin?: string,\n  children: boolean => ?React$Element<any>,\n|}; */\n\nclass Lazy extends PureComponent /*:: <Props, State> */ {\n  /* ::\n    _ref: { current: null | React$ElementRef<'span'> };\n    _inView: ?{\n      cancel: function,\n      promise: Promise<any>,\n    };\n  */\n  static propTypes = {\n    visible: T.bool,\n    rootMargin: T.string,\n    children: T.func.isRequired,\n  };\n\n  static defaultProps = {\n    visible: false,\n    rootMargin: '10px',\n  };\n\n  constructor(props /*: Props */) {\n    super(props);\n\n    this.state = { hasBeenVisible: !!props.visible };\n\n    this._ref = React.createRef();\n  }\n\n  async componentDidMount() {\n    if (this.state.hasBeenVisible) return;\n    try {\n      this._inView = cancelable(\n        schedule().then(() => {\n          if (!this._ref.current) return Promise.reject();\n          return getsInView(this._ref.current, {\n            rootMargin: this.props.rootMargin,\n          });\n        }),\n      );\n      await this._inView.promise;\n      this.setState({ hasBeenVisible: true });\n    } catch {\n      /**/\n    }\n  }\n\n  componentWillUnmount() {\n    if (this._inView) this._inView.cancel();\n  }\n\n  render() {\n    return (\n      <span ref={this._ref}>\n        {this.props.children(this.state.hasBeenVisible)}\n      </span>\n    );\n  }\n}\n\nexport default Lazy;\n","// @flow\n\n/*:: type IOOptions = {|\n  threshold?: Array<number>,\n  root?: Element,\n  rootMargin?: string,\n|}; */\n\nexport default (\n  element /*: Element */,\n  { threshold = [1], root, rootMargin } /*: IOOptions */ = {},\n) /*: Promise<void> */ =>\n  new Promise((resolve, reject) => {\n    if (!element) reject();\n    if (!('IntersectionObserver' in window)) return resolve();\n    const io = new window.IntersectionObserver(\n      entries => {\n        for (const { isIntersecting, target } of entries) {\n          if (target !== element) continue;\n          if (isIntersecting) {\n            io.unobserve(element);\n            return resolve();\n          }\n        }\n      },\n      { threshold, root, rootMargin },\n    );\n    io.observe(element);\n  });\n","import React from 'react';\n\nimport Link from 'components/generic/Link';\nimport LazyImage from 'components/LazyImage';\nimport gbc from 'images/thirdparty/gbc-main.png';\nimport cssBinder from 'styles/cssBinder';\nimport local from './style.css';\nconst css = cssBinder(local);\n\nconst ElixirFooter = () => {\n  return (\n    <div className={css('vf-u-fullbleed', 'elixir-footer')}>\n      <div className=\"vf-footer__inner\">\n        <div className=\"vf-grid vf-grid__col-2\">\n          <div className=\"vf-banner\">\n            <div className=\"vf-flag vf-flag--middle vf-flag--400\">\n              <div className=\"vf-flag__media\">\n                <LazyImage\n                  src=\"//ebi.emblstatic.net/web_guidelines/EBI-Framework/v1.4/images/logos/ELIXIR/elixir-cdr.gif\"\n                  className={css('logo')}\n                  alt=\"Elixir logo\"\n                />\n              </div>\n              <div className=\"vf-flag__body\">\n                <h4 className=\"vf-banner__text--lg\">\n                  <Link href=\"//www.elixir-europe.org/\" className=\"vf-link\">\n                    InterPro is part of the ELIXIR infrastructure\n                  </Link>\n                </h4>\n                <p className=\"vf-banner__text\">\n                  InterPro is an ELIXIR Core Data Resource.{' '}\n                  <Link\n                    href={\n                      '//www.elixir-europe.org/platforms/data/core-data-resources'\n                    }\n                    className={css('readmore', 'vf-link')}\n                  >\n                    Learn more ›\n                  </Link>\n                </p>\n              </div>\n            </div>\n          </div>\n          <div className=\"vf-banner\">\n            <div className=\"vf-flag vf-flag--middle vf-flag--400\">\n              <div className=\"vf-flag__body\">\n                <h4 className=\"vf-banner__text--lg\">\n                  <Link href=\"//globalbiodata.org/\" className=\"vf-link\">\n                    InterPro is part of the Global Biodata Coalition\n                  </Link>\n                </h4>\n                <p className=\"vf-banner__text\">\n                  InterPro is a Global Core Biodata Resource.{' '}\n                  <Link\n                    href={\n                      '//globalbiodata.org/what-we-do/global-core-biodata-resources/'\n                    }\n                    className={css('readmore', 'vf-link')}\n                  >\n                    Learn more ›\n                  </Link>\n                </p>\n              </div>\n              <div className=\"vf-flag__media\">\n                <img\n                  src={gbc}\n                  className={css('logo')}\n                  alt=\"Glogal biodata coalition logo\"\n                />\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ElixirFooter;\n","// extracted by mini-css-extract-plugin\nexport default {\"elixir-footer\":\"ElixirFooter_style__elixir-footer___a0\",\"logo\":\"ElixirFooter_style__logo___f2\",\"readmore\":\"ElixirFooter_style__readmore___a1\"};","type CancelableParameter<T> =\n  | Promise<unknown>\n  | ((signal: AbortSignal) => Promise<T>);\n\nexport default <T = unknown>(\n  promiseOrFunction: CancelableParameter<T> = Promise.resolve()\n) => {\n  let promise = promiseOrFunction;\n  const controller = new AbortController();\n  if (!('then' in promiseOrFunction)) {\n    // not actually a Promise\n    promise = promiseOrFunction(controller.signal);\n  }\n  const output = {\n    promise: (promise as Promise<T>).then((value) => {\n      // eslint-disable-next-line no-throw-literal\n      if (output.canceled) throw { canceled: output.canceled };\n      return value;\n    }),\n    canceled: false,\n    cancel() {\n      output.canceled = true;\n      controller.abort();\n    },\n  };\n  return output;\n};\n"],"names":["LazyImage","PureComponent","render","_this$props","this","props","alt","_objectWithoutPropertiesLoose","_excluded","React","Lazy","hasBeenVisible","_extends","propTypes","T","constructor","super","state","visible","_ref","componentDidMount","_this","_inView","cancelable","schedule","then","current","element","_temp","threshold","root","rootMargin","Promise","resolve","reject","window","io","IntersectionObserver","entries","isIntersecting","target","unobserve","observe","getsInView","promise","setState","_unused","componentWillUnmount","cancel","ref","children","isRequired","defaultProps","css","cssBinder","ElixirFooter","className","src","Link","href","gbc","promiseOrFunction","controller","AbortController","signal","output","value","canceled","abort"],"sourceRoot":""}