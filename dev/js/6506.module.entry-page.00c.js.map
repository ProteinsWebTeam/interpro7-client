{"version":3,"file":"js/6506.module.entry-page.00c.js","mappings":"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","sources":["webpack://interpro7-client/./src/staticData/home.js","webpack://interpro7-client/./src/components/Entry/SummaryCounterEntries/index.tsx","webpack://interpro7-client/./src/components/SimpleCommonComponents/Card/CounterIcon/index.tsx","webpack://interpro7-client/./src/components/SimpleCommonComponents/Card/index.tsx","webpack://interpro7-client/./src/components/Entry/EntryListFilters/EntryTypeFilter/index.tsx","webpack://interpro7-client/./src/components/Entry/EntryListFilters/IntegratedFilter/index.tsx","webpack://interpro7-client/./src/components/Entry/EntryListFilters/LatestFilter/index.tsx","webpack://interpro7-client/./src/components/Entry/EntryListFilters/GOTermsFilter/index.tsx","webpack://interpro7-client/./src/components/Entry/EntryListFilters/AIGeneratedFilter/index.tsx","webpack://interpro7-client/./src/components/Entry/EntryListFilters/index.tsx","webpack://interpro7-client/./src/components/Entry/Card/index.tsx","webpack://interpro7-client/./src/pages/Entry/index.tsx","webpack://interpro7-client/./src/components/SimpleCommonComponents/Card/CounterIcon/styles.css?9f8e","webpack://interpro7-client/./src/components/SimpleCommonComponents/Card/styles.css?fb5f"],"sourcesContent":["// @flow\n\nexport const memberDBAccessions = [\n  'G3DSA:[0-9]{1}\\\\.[0-9]{2,3}\\\\.[0-9]{1,4}\\\\.[0-9]{2,4}',\n  '(?:c|s)d[0-9]{5}',\n  'MF_[0-9]{5}(_(A|B){1})?',\n  'PTHR[0-9]{5}(:SF[0-9]{1,3})?',\n  'PF[0-9]{5}',\n  'PIRSF[0-9]{6}',\n  'PR[0-9]{5}',\n  'PD[A-Z0-9]{6}',\n  'PS[0-9]{5}',\n  'PS[0-9]{5}',\n  'sfld[gfs]\\\\d{5}',\n  'SM[0-9]{5}',\n  'SSF[0-9]{5,6}',\n  'TIGR[0-9]{5}',\n  'NF[0-9]{6}',\n  'ANF[0-9]{5}',\n];\n\nexport const speciesFeat = [\n  {\n    title: 'Rice',\n    kingdom: 'Eukaryota',\n    description: 'Oryza sativa subsp. japonica',\n    icon: '6',\n    color: '#5cb85c',\n    tax_id: '39947',\n    proteome_id: 'UP000059680',\n  },\n  {\n    title: 'Mouse-ear cress',\n    kingdom: 'Eukaryota',\n    description: 'Arabidopsis thaliana',\n    icon: 'B',\n    color: '#5cb85c',\n    tax_id: '3702',\n    proteome_id: 'UP000006548',\n  },\n  {\n    title: 'Human',\n    kingdom: 'Eukaryota',\n    description: 'Homo sapiens',\n    icon: 'H',\n    color: '#d9534f',\n    tax_id: '9606',\n    proteome_id: 'UP000005640',\n  },\n  {\n    title: 'Zebrafish',\n    kingdom: 'Eukaryota',\n    description: 'Danio rerio',\n    icon: 'Z',\n    color: '#d9534f',\n    tax_id: '7955',\n    proteome_id: 'UP000000437',\n  },\n  {\n    title: 'Mouse',\n    kingdom: 'Eukaryota',\n    description: 'Mus musculus',\n    icon: 'M',\n    color: '#d9534f',\n    tax_id: '10090',\n    proteome_id: 'UP000000589',\n  },\n  {\n    title: 'Fruit fly',\n    kingdom: 'Eukaryota',\n    description: 'Drosophila melanogaster',\n    icon: 'F',\n    color: '#d9534f',\n    tax_id: '7227',\n    proteome_id: 'UP000000803',\n  },\n  {\n    title: 'Caenorhabditis elegans',\n    kingdom: 'Eukaryota',\n    description: 'Caenorhabditis elegans',\n    icon: 'W',\n    color: '#d9534f',\n    tax_id: '6239',\n    proteome_id: 'UP000001940',\n  },\n  {\n    title: 'Baker’s yeast',\n    kingdom: 'Eukaryota',\n    description: 'Saccharomyces cerevisiae (strain ATCC 204508 / S288c)',\n    icon: 'Y',\n    color: '#5bc0de',\n    tax_id: '559292',\n    proteome_id: 'UP000002311',\n  },\n  {\n    title: 'Fission yeast',\n    kingdom: 'Eukaryota',\n    description: 'Schizosaccharomyces pombe (strain 972 / ATCC 24843)',\n    icon: 'Y',\n    color: '#5bc0de',\n    tax_id: '284812',\n    proteome_id: 'UP000002485',\n  },\n  {\n    title: 'Escherichia coli',\n    kingdom: 'Bacteria',\n    description: 'Escherichia coli O127:H6 (strain E2348/69 / EPEC)',\n    icon: 'L',\n    color: '#5bc0de',\n    tax_id: '83333',\n    proteome_id: 'UP000000625',\n  },\n  {\n    title: 'Halobacterium salinarum',\n    kingdom: 'Archaea',\n    description: 'Halobacterium salinarum',\n    icon: 'v',\n    color: '#5bc0de',\n    tax_id: '2242',\n    proteome_id: 'UP000000554',\n  },\n  {\n    title: 'Enterobacteria phage T4',\n    kingdom: 'Virus',\n    description: 'Escherichia virus T4',\n    icon: 'v',\n    color: '#5bc0de',\n    tax_id: '10665',\n    proteome_id: 'UP000009087',\n  },\n];\n\nexport const GoList = [\n  {\n    title: 'Catalytic activity',\n    accession: 'GO:0003824',\n    category: 'Molecular function',\n    description: 'Description from GO website',\n    counterD: '-',\n    counterS: 386,\n    color: '#5cb85c',\n  },\n  {\n    title: 'DNA binding',\n    accession: 'GO:0003677',\n    category: 'Molecular function',\n    description: 'Description from GO website',\n    counterD: '-',\n    counterS: 450,\n    color: '#5cb85c',\n  },\n  {\n    title: 'Metabolic process',\n    accession: 'GO:0008152',\n    category: 'Biological process',\n    description: 'Description from GO website',\n    counterD: '-',\n    counterS: 386,\n    color: '#5bc0de',\n  },\n  {\n    title: 'Oxidation-reduction process',\n    accession: 'GO:0055114',\n    category: 'Molecular function',\n    description: 'Description from GO website',\n    counterD: '-',\n    counterS: 386,\n    color: '#5cb85c',\n  },\n  {\n    title: 'Outer membrane',\n    accession: 'GO:0019867',\n    description: 'Description from GO website',\n    counterD: '-',\n    counterS: 386,\n    category: 'Cellular components',\n    color: '#d9534f',\n  },\n  {\n    title: 'ATP binding',\n    accession: 'GO:0005524',\n    description: 'Description from GO website',\n    counterD: '-',\n    counterS: 42,\n    category: 'Molecular function',\n    color: '#5cb85c',\n  },\n  {\n    title: 'Oxidoreductase activity',\n    accession: 'GO:0016491',\n    description: 'Description from GO website',\n    counterD: '-',\n    counterS: 93,\n    category: 'Molecular function',\n    color: '#5cb85c',\n  },\n  {\n    title: 'Transport',\n    accession: 'GO:0006810',\n    description: 'Description from GO website',\n    counterD: '-',\n    counterS: 10,\n    category: 'Biological process',\n    color: '#5bc0de',\n  },\n  {\n    title: 'DNA replication',\n    accession: 'GO:0006260',\n    description: 'Description from GO website',\n    counterD: '-',\n    counterS: 564,\n    category: 'Molecular function',\n    color: '#5cb85c',\n  },\n  {\n    title: 'Integral component of membrane',\n    accession: 'GO:0016021',\n    description: 'Description from GO website',\n    counterD: '-',\n    counterS: 36,\n    category: 'Molecular function',\n    color: '#5cb85c',\n  },\n  {\n    title: 'Cofactor bindind',\n    accession: 'GO:0048037',\n    description: 'Description from GO website',\n    counterD: '-',\n    counterS: 36,\n    category: 'Molecular function',\n    color: '#5cb85c',\n  },\n  {\n    title: 'DNA polymerase complex',\n    accession: 'GO:0042575',\n    description: 'Description from GO website',\n    counterD: '-',\n    counterS: 36,\n    category: 'Cellular components',\n    color: '#d9534f',\n  },\n  {\n    title: 'Cell projection assembly',\n    accession: 'GO:0030031',\n    description: 'Description from GO website',\n    counterD: '-',\n    counterS: 36,\n    category: 'Biological process',\n    color: '#5bc0de',\n  },\n  {\n    title: 'Cellular component organization',\n    accession: 'GO:0016043',\n    description: 'Description from GO website',\n    counterD: '-',\n    counterS: 36,\n    category: 'Biological process',\n    color: '#5bc0de',\n  },\n  {\n    title: 'Cell growth',\n    accession: 'GO:0016049',\n    description: 'Description from GO website',\n    counterD: '-',\n    counterS: 36,\n    category: 'Biological process',\n    color: '#5bc0de',\n  },\n];\n\nexport const entryType = [\n  {\n    type: 'Domain',\n    description: `\n      Domains are distinct functional, structural or sequence units that may\n      exist in a variety of biological contexts. A match to an InterPro entry of\n      this type indicates the presence of a domain.\n    `,\n  },\n  {\n    type: 'Family',\n    description: `\n      A protein family is a group of proteins that share a common evolutionary\n      origin reflected by their related functions, similarities in sequence, or\n      similar primary, secondary or tertiary structure. A match to an InterPro\n      entry of this type indicates membership of a protein family.\n    `,\n  },\n  {\n    type: 'Homologous Superfamily',\n    description:\n      'A homologous superfamily is a group of proteins that share a common evolutionary origin, reflected by similarity in their structure. Since superfamily members often display very low similarity at the sequence level, this type of InterPro entry is usually based on a collection of underlying hidden Markov models, rather than a single signature.',\n  },\n  {\n    type: 'Repeat',\n    description: `\n      A short sequence that is typically repeated within a\n      protein.\n    `,\n  },\n  {\n    type: 'Conserved Site',\n    description: `\n      A short sequence that contains one or more conserved residues\n    `,\n  },\n  {\n    type: 'Active Site',\n    description: `\n      A short sequence that contains one or more conserved residues, which allow the protein to bind to a ligand.\n    `,\n  },\n  {\n    type: 'Binding Site',\n    description: `\n      A short sequence that contains one or more conserved residues, which form a protein interaction site.\n    `,\n  },\n  {\n    type: 'PTM',\n    description: `\n      A short sequence that contains one or more conserved residues.\n      Post-translational modification site.\n    `,\n  },\n];\n","import React from 'react';\nimport CounterIcon from 'components/SimpleCommonComponents/Card/CounterIcon';\n\ntype Props = {\n  entryDB: MemberDB | 'interpro' | 'InterPro';\n  entryName: string;\n  entryAccession: string;\n  counters: MetadataCounters;\n  memberDBs?: ContributingEntries;\n};\n\nimport cssBinder from 'styles/cssBinder';\n\nimport cardStyle from 'components/SimpleCommonComponents/Card/CounterIcon/styles.css';\n\nconst css = cssBinder(cardStyle);\n\nconst SummaryCounterEntries = ({\n  entryDB,\n  entryName,\n  entryAccession,\n  counters,\n  memberDBs,\n}: Props) => {\n  const {\n    proteins,\n    domain_architectures: domainArchitectures,\n    taxa,\n    structures,\n    sets,\n  } = counters || {};\n\n  return (\n    <div className={css('card-counter-block')}>\n      <CounterIcon\n        endpoint=\"protein\"\n        count={proteins as number}\n        name={entryName}\n        to={{\n          description: {\n            main: { key: 'entry' },\n            entry: {\n              db: entryDB,\n              accession: entryAccession,\n            },\n            protein: { isFilter: true, db: 'UniProt' },\n          },\n        }}\n      />\n\n      <CounterIcon\n        endpoint=\"domain architecture\"\n        count={domainArchitectures as number}\n        name={entryName}\n        to={{\n          description: {\n            main: { key: 'entry' },\n            entry: {\n              db: entryDB,\n              accession: entryAccession,\n              detail: 'domain_architecture',\n            },\n          },\n        }}\n      />\n\n      <CounterIcon\n        endpoint=\"taxonomy\"\n        count={taxa as number}\n        name={entryName}\n        to={{\n          description: {\n            main: { key: 'entry' },\n            entry: {\n              db: entryDB,\n              accession: entryAccession,\n            },\n            taxonomy: { isFilter: true, db: 'uniprot' },\n          },\n        }}\n      />\n\n      <CounterIcon\n        endpoint=\"structure\"\n        count={structures as number}\n        name={entryName}\n        to={{\n          description: {\n            main: { key: 'entry' },\n            entry: {\n              db: entryDB,\n              accession: entryAccession,\n            },\n            structure: { isFilter: true, db: 'PDB' },\n          },\n        }}\n      />\n\n      {\n        // show sets counter + icon only when available\n        entryDB.toLowerCase() === 'cdd' ||\n        entryDB.toLowerCase() === 'pfam' ||\n        entryDB.toLowerCase() === 'pirsf' ? (\n          <CounterIcon\n            endpoint=\"set\"\n            count={sets as number}\n            name={entryName}\n            to={{\n              description: {\n                main: { key: 'entry' },\n                entry: {\n                  db: entryDB,\n                  accession: entryAccession,\n                },\n                set: { isFilter: true, db: entryDB },\n              },\n            }}\n          />\n        ) : null\n      }\n      {memberDBs &&\n        Object.keys(memberDBs).map((db) =>\n          Object.keys(memberDBs[db]).map((acc) => (\n            <CounterIcon\n              key={`${db}-${acc}`}\n              endpoint=\"entry\"\n              count={1}\n              name={entryName}\n              db={db as MemberDB}\n              signature={acc}\n              to={{\n                description: {\n                  main: { key: 'entry' },\n                  entry: {\n                    db,\n                    accession: acc,\n                  },\n                },\n              }}\n            />\n          )),\n        )}\n    </div>\n  );\n};\n\nexport default SummaryCounterEntries;\n","import React from 'react';\n\nimport Tooltip from 'components/SimpleCommonComponents/Tooltip';\nimport Link from 'components/generic/Link';\nimport NumberComponent from 'components/NumberComponent';\nimport MemberSymbol from 'components/Entry/MemberSymbol';\n\nimport { toPlural } from 'utils/pages/toPlural';\n\nimport cssBinder from 'styles/cssBinder';\n\nimport local from './styles.css';\nimport fonts from 'EBI-Icon-fonts/fonts.css';\n\nconst css = cssBinder(local, fonts);\n\ntype Props = {\n  /** How many of this entity */\n  count: number;\n  /** One of the InterPro endpoints */\n  endpoint: Endpoint | 'domain architecture';\n  /** name of the entity */\n  name: string;\n  /** New location to add as link. If not added the ocon will appear disabled */\n  to?: InterProPartialLocation;\n  /** The database of the entity */\n  db?: MemberDB | 'interpro';\n  /**\n   * In case it is used to represent a signature of an entry.\n   * In this case the counter won't be showed as it will represent a single signature\n   * Currently iused in the EntryCard that are in the New entreies of the home page\n   * */\n  signature?: string;\n};\n\nconst icon: Record<Endpoint | 'domain architecture', string> = {\n  entry: 'icon-entries',\n  protein: 'icon-proteins',\n  proteome: 'icon-count-proteome',\n  taxonomy: 'icon-count-species',\n  structure: 'icon-structures',\n  set: 'icon-count-set',\n  'domain architecture': 'icon-count-ida',\n};\n\nconst CounterIcon = ({ count, endpoint, name, to, db, signature }: Props) => {\n  return (\n    <Tooltip\n      title={\n        signature\n          ? `${db} signature: ${signature}`\n          : `${count} ${toPlural(endpoint, count, true)} matching ${name}`\n      }\n      className={css('icon-link')}\n      style={{ display: 'flex' }}\n    >\n      <Link\n        to={to}\n        className={css(count ? null : 'ico-disabled')}\n        disabled={!count || !to}\n      >\n        <div\n          className={css(\n            'icon',\n            'icon-conceptual',\n            'icon-wrapper',\n            icon[endpoint],\n          )}\n        >\n          {endpoint === 'entry' && (\n            <div\n              style={{\n                // UGLY hack be better Gustavo\n                position: 'relative',\n                top: '7px',\n                left: '-2px',\n              }}\n            >\n              <MemberSymbol type={db || 'all'} className={css('md-small')} />\n            </div>\n          )}\n          {count !== 0 && <div className={css('icon-over-animation')} />}\n        </div>\n        {!signature && <NumberComponent abbr>{count}</NumberComponent>}\n      </Link>\n    </Tooltip>\n  );\n};\n\nexport default CounterIcon;\n","import React, { PropsWithChildren, ReactElement } from 'react';\n\nimport Link from 'components/generic/Link';\n\nimport cssBinder from 'styles/cssBinder';\n\nimport local from './styles.css';\nimport fonts from 'EBI-Icon-fonts/fonts.css';\n\nconst css = cssBinder(local, fonts);\n\ntype Props = PropsWithChildren<{\n  title?: ReactElement | string;\n  imageIconClass?: string;\n  imageComponent?: ReactElement;\n  subHeader?: ReactElement | string;\n  footer?: ReactElement | string;\n  linkForMore?: string;\n  labelForMore?: string;\n  className?: string;\n  compact?: boolean;\n}>;\n\nexport const Card = ({\n  title,\n  imageComponent,\n  imageIconClass,\n  subHeader,\n  footer,\n  linkForMore,\n  labelForMore,\n  compact = false,\n  className = '',\n  children,\n}: Props) => {\n  return (\n    <div className={css('new-card', className, { compact })}>\n      {(imageComponent || imageIconClass || title || subHeader) && (\n        <header>\n          {(imageComponent || imageIconClass) && (\n            <div\n              className={css('image', imageIconClass, {\n                icon: !!imageIconClass,\n              })}\n            >\n              {imageComponent}\n            </div>\n          )}\n          {title && <div className={css('title')}>{title}</div>}\n          {subHeader && <div className={css('subheader')}>{subHeader}</div>}\n        </header>\n      )}\n      <section className={css('content')}>{children}</section>\n      {(footer || linkForMore) && (\n        <>\n          <div className={css('footer')}>\n            {footer}\n            {linkForMore && (\n              <div className={css('card-more')}>\n                <Link href={linkForMore} target=\"_blank\" buttonType=\"tertiary\">\n                  <span\n                    className={css('icon', 'icon-common', 'icon-right')}\n                    data-icon=\"&#xf061;\"\n                  ></span>{' '}\n                  {labelForMore || 'See more'}\n                </Link>\n              </div>\n            )}{' '}\n          </div>\n        </>\n      )}\n    </div>\n  );\n};\nexport default Card;\n","import React, { FormEvent, PureComponent } from 'react';\n\nimport { createSelector } from 'reselect';\nimport { format } from 'url';\n\nimport NumberComponent from 'components/NumberComponent';\nimport { getPayloadOrEmpty } from 'components/FiltersPanel';\n\nimport loadData from 'higherOrder/loadData/ts';\nimport descriptionToPath from 'utils/processDescription/descriptionToPath';\n\nimport { goToCustomLocation } from 'actions/creators';\n\nimport loadWebComponent from 'utils/load-web-component';\n\nimport cssBinder from 'styles/cssBinder';\n\nimport style from 'components/FiltersPanel/style.css';\n\nconst css = cssBinder(style);\n\nconst allRE = /^all$/i;\nconst isAll = (string: string) => allRE.test(string);\n\ntype Props = {\n  label?: string;\n  goToCustomLocation?: typeof goToCustomLocation;\n  customLocation?: InterProLocation;\n};\n\ninterface LoadedProps extends Props, LoadDataProps<GroupByPayload> {}\n\nclass EntryTypeFilter extends PureComponent<LoadedProps> {\n  componentDidMount() {\n    loadWebComponent(() =>\n      import(\n        /* webpackChunkName: \"interpro-components\" */ 'interpro-components'\n      ).then((m) => m.InterproType),\n    ).as('interpro-type');\n  }\n\n  _handleSelection = ({ target }: FormEvent) => {\n    if (!this.props.customLocation) return null;\n    const value = (target as HTMLInputElement).value;\n    const { page, type, ...search } = this.props.customLocation.search;\n    if (!isAll(value)) search.type = value;\n    delete search.cursor;\n    this.props.goToCustomLocation?.({ ...this.props.customLocation, search });\n  };\n\n  _formatType = (type: string) => {\n    if (type === 'ptm') return 'PTM';\n    else if (type === 'unknown') return 'Other';\n    return type.replace('_', ' ');\n  };\n\n  render() {\n    if (!this.props.data || !this.props.customLocation) return null;\n    const {\n      data: { loading, payload },\n      isStale,\n      customLocation: {\n        description: { entry },\n        search,\n      },\n    } = this.props;\n    const db = (entry as EndpointLocation)?.db;\n\n    const types = Object.entries<number>(\n      getPayloadOrEmpty(payload, loading, isStale),\n    ).sort(([aType], [bType]) => {\n      const typeOrder = [\n        'family',\n        'domain',\n        'homologous_superfamily',\n        'repeat',\n        'conserved_site',\n        'active_site',\n        'binding_site',\n        'ptm',\n      ];\n      const i = typeOrder.indexOf(aType.toLowerCase());\n      const j = typeOrder.indexOf(bType.toLowerCase());\n      if (i === -1 && j === -1)\n        return aType.localeCompare(bType); // both types unknown\n      else if (i === -1) return 1; // aType unknown: place after bType\n      return i - j; // both types known: use predefined order\n    });\n    if (!loading) {\n      types.unshift(['All', types.reduce((acc, [, count]) => acc + count, 0)]);\n    }\n    return (\n      <div className={css('list-entries', 'filter', { stale: isStale })}>\n        {types.map(([type, count]) => {\n          const checked =\n            (!search.type && isAll(type)) || search.type === type.toLowerCase();\n          return (\n            <label key={type} className={css('radio-btn-label', { checked })}>\n              <input\n                type=\"radio\"\n                name=\"entry_type\"\n                className={css('radio-btn')}\n                value={type.toLowerCase()}\n                onChange={this._handleSelection}\n                disabled={isStale}\n                checked={checked}\n                style={{ margin: '0.25em' }}\n              />\n              <span>\n                {isAll(type) || db !== 'InterPro' ? (\n                  this._formatType(type)\n                ) : (\n                  <interpro-type\n                    type={type.replace('_', ' ')}\n                    expanded\n                    dimension=\"17px\"\n                  >\n                    {type}\n                  </interpro-type>\n                )}\n              </span>\n              <NumberComponent\n                label\n                loading={loading}\n                className={css('filter-label')}\n                abbr\n              >\n                {count}\n              </NumberComponent>\n            </label>\n          );\n        })}\n      </div>\n    );\n  }\n}\n\nconst getUrlFor = createSelector(\n  (state: GlobalState) => state.settings.api,\n  (state: GlobalState) => state.customLocation.description,\n  (state: GlobalState) => state.customLocation.search,\n  ({ protocol, hostname, port, root }, description, search) => {\n    // omit from search\n    const { type, search: _, cursor: __, ..._search } = search;\n    // add to search\n    _search.group_by = 'type';\n    // build URL\n    return format({\n      protocol,\n      hostname,\n      port,\n      pathname: root + descriptionToPath(description),\n      query: _search,\n    });\n  },\n);\n\nconst mapStateToProps = createSelector(\n  (state: GlobalState) => state.customLocation,\n  (customLocation) => ({ customLocation }),\n);\n\nexport default loadData<GroupByPayload>({\n  getUrl: getUrlFor,\n  mapStateToProps,\n  mapDispatchToProps: { goToCustomLocation },\n} as LoadDataParameters)(EntryTypeFilter);\n","import React, { FormEvent } from 'react';\n\nimport { createSelector } from 'reselect';\nimport { format } from 'url';\n\nimport NumberComponent from 'components/NumberComponent';\nimport { getPayloadOrEmpty } from 'components/FiltersPanel';\n\nimport loadData from 'higherOrder/loadData/ts';\nimport descriptionToPath from 'utils/processDescription/descriptionToPath';\n\nimport { goToCustomLocation } from 'actions/creators';\n\nimport cssBinder from 'styles/cssBinder';\nimport style from 'components/FiltersPanel/style.css';\n\nconst css = cssBinder(style);\n\ntype Props = {\n  label?: string;\n  goToCustomLocation?: typeof goToCustomLocation;\n  customLocation?: InterProLocation;\n};\ninterface LoadedProps extends Props, LoadDataProps<GroupByPayload> {}\n\nconst IntegratedFilter = ({\n  data,\n  isStale,\n  goToCustomLocation,\n  customLocation,\n}: LoadedProps) => {\n  if (!data || !customLocation) return null;\n  const { loading, payload } = data;\n  let value = customLocation.description.entry.integration || '';\n  if (!['unintegrated', 'integrated'].includes(value)) {\n    value = 'both';\n  }\n\n  const types = getPayloadOrEmpty<GroupByPayload>(payload, loading, isStale);\n  if (!loading)\n    types.both = (types.integrated || 0) + (types.unintegrated || 0);\n\n  const _handleSelection = ({ target }: FormEvent) => {\n    const value = (target as HTMLInputElement).value;\n    const { description, search: s, ...rest } = customLocation;\n    const { cursor: _, ...search } = s;\n    goToCustomLocation?.({\n      ...rest,\n      search,\n      description: {\n        ...description,\n        entry: {\n          ...description.entry,\n          integration: value === 'both' ? null : value,\n        },\n      },\n    });\n  };\n  return (\n    <div className={css('list-integrated', 'filter', { stale: isStale })}>\n      {Object.keys(types)\n        .sort()\n        .map((type) => (\n          <label\n            key={type}\n            className={css('radio-btn-label', {\n              checked: value === type,\n            })}\n          >\n            <input\n              type=\"radio\"\n              name=\"interpro_state\"\n              value={type}\n              className={css('radio-btn')}\n              disabled={isStale}\n              onChange={_handleSelection}\n              checked={value === type}\n              style={{ margin: '0.25em' }}\n            />\n            <span style={{ textTransform: 'capitalize' }}>{type}</span>\n            <NumberComponent label loading={loading} abbr>\n              {types[type]}\n            </NumberComponent>\n          </label>\n        ))}\n    </div>\n  );\n};\n\nconst getUrlFor = createSelector(\n  (state: GlobalState) => state.settings.api,\n  (state: GlobalState) => state.customLocation.description,\n  (state: GlobalState) => state.customLocation.search,\n  ({ protocol, hostname, port, root }, description, search) => {\n    // omit integration from description\n    const _description = {\n      ...description,\n      entry: {\n        ...description.entry,\n        integration: null,\n      },\n    };\n    // omit from search\n    const { search: _, cursor: __, ..._search } = search;\n    // add to search\n    _search.interpro_status = '';\n    // build URL\n    return format({\n      protocol,\n      hostname,\n      port,\n      pathname: root + descriptionToPath(_description),\n      query: _search,\n    });\n  },\n);\n\nconst mapStateToProps = createSelector(\n  (state: GlobalState) => state.customLocation,\n  (customLocation) => ({ customLocation }),\n);\n\nexport default loadData({\n  getUrl: getUrlFor,\n  mapStateToProps,\n  mapDispatchToProps: { goToCustomLocation },\n} as LoadDataParameters)(IntegratedFilter);\n","import React from 'react';\n\nimport { createSelector } from 'reselect';\nimport { format } from 'url';\n\nimport { goToCustomLocation } from 'actions/creators';\n\nimport loadData from 'higherOrder/loadData/ts';\nimport descriptionToPath from 'utils/processDescription/descriptionToPath';\n\nimport NumberComponent from 'components/NumberComponent';\n\nimport cssBinder from 'styles/cssBinder';\n\nimport style from 'components/FiltersPanel/style.css';\n\nconst css = cssBinder(style);\n\ntype Props = {\n  label?: string;\n  latest?: boolean;\n  customLocation?: InterProLocation;\n  goToCustomLocation?: typeof goToCustomLocation;\n};\ninterface LoadedProps extends Props, LoadDataProps<PayloadList<unknown>> {}\n\nconst LatestFilter = ({\n  data,\n  isStale,\n  latest,\n  customLocation,\n  goToCustomLocation,\n}: LoadedProps) => {\n  if (!data) return null;\n  if (!data.payload || !customLocation) return null;\n  const handleChange = () => {\n    const { page, ...search } = customLocation.search;\n    const { latest_entries, ...rest } = search;\n    if (!latest) rest.latest_entries = '';\n    goToCustomLocation?.({\n      ...customLocation,\n      search: rest,\n    });\n  };\n  return (\n    <div className={css('vf-stack', 'vf-stack--200', 'filter')}>\n      <label className={css('radio-btn-label', { checked: !latest })}>\n        <input\n          type=\"radio\"\n          name=\"latest_all\"\n          className={css('radio-btn')}\n          value={'All'}\n          disabled={isStale}\n          onChange={handleChange}\n          checked={!latest}\n          style={{ margin: '0.25em' }}\n        />\n        <span>All</span>\n      </label>\n      <label className={css('radio-btn-label', { checked: latest })}>\n        <input\n          type=\"radio\"\n          name=\"latest_on\"\n          className={css('radio-btn')}\n          value={'latest'}\n          disabled={isStale}\n          onChange={handleChange}\n          checked={latest}\n          style={{ margin: '0.25em' }}\n        />\n        <span>New Entries</span>\n        <NumberComponent\n          label\n          loading={data.loading}\n          className={css('filter-label')}\n          abbr\n        >\n          {data.payload.count}\n        </NumberComponent>\n      </label>\n    </div>\n  );\n};\n\nconst getUrlFor = createSelector(\n  (state: GlobalState) => state.settings.api,\n  (state: GlobalState) => state.customLocation.description,\n  (state: GlobalState) => state.customLocation.search,\n  ({ protocol, hostname, port, root }, description, search) => {\n    // omit from search\n    const { search: _, cursor: __, ..._search } = search;\n    // add to search\n    _search.latest_entries = '';\n    // build URL\n    return format({\n      protocol,\n      hostname,\n      port,\n      pathname: root + descriptionToPath(description),\n      query: _search,\n    });\n  },\n);\n\nconst mapStateToProps = createSelector(\n  (state: GlobalState) => state.customLocation,\n  (customLocation) => ({\n    customLocation,\n    latest: 'latest_entries' in customLocation.search,\n  }),\n);\n\nexport default loadData<PayloadList<unknown>>({\n  getUrl: getUrlFor,\n  mapStateToProps,\n  mapDispatchToProps: { goToCustomLocation },\n} as LoadDataParameters)(LatestFilter);\n","import React, { FormEvent } from 'react';\n\nimport { createSelector } from 'reselect';\nimport { format } from 'url';\n\nimport NumberComponent from 'components/NumberComponent';\nimport Tooltip from 'components/SimpleCommonComponents/Tooltip';\nimport { getPayloadOrEmpty } from 'components/FiltersPanel';\n\nimport loadData from 'higherOrder/loadData/ts';\nimport descriptionToPath from 'utils/processDescription/descriptionToPath';\n\nimport { goToCustomLocation } from 'actions/creators';\n\nimport cssBinder from 'styles/cssBinder';\n\nimport style from 'components/FiltersPanel/style.css';\nimport stylego from 'pages/style.css';\n\nconst css = cssBinder(stylego, style);\n\nconst categories = {\n  'Biological Process': 'P',\n  'Cellular Component': 'C',\n  'Molecular Function': 'F',\n};\ntype Categories = keyof typeof categories;\n\nconst short = {\n  'Biological Process': 'BP',\n  'Cellular Component': 'CC',\n  'Molecular Function': 'MF',\n};\n\ntype Props = {\n  label?: string;\n  goToCustomLocation?: typeof goToCustomLocation;\n  customLocation?: InterProLocation;\n};\n\ninterface LoadedProps extends Props, LoadDataProps<GroupByPayload> {}\n\nconst GOTermsFilter = ({\n  data,\n  isStale,\n  customLocation,\n  goToCustomLocation,\n}: LoadedProps) => {\n  if (!data || !customLocation) return null;\n  const { loading, payload } = data;\n  const { search } = customLocation;\n\n  const _handleSelection = ({ target }: FormEvent) => {\n    const value = (target as HTMLInputElement).value;\n    const { page, go_category: _, cursor: __, ...restOfsearch } = search;\n    if (value !== 'All') restOfsearch.go_category = value;\n    goToCustomLocation?.({ ...customLocation, search: restOfsearch });\n  };\n\n  const terms = Object.entries<number>(\n    getPayloadOrEmpty(payload, loading, isStale),\n  ).sort(([, a], [, b]) => b - a);\n\n  if (!loading) {\n    terms.unshift(['All', NaN]);\n  }\n  return (\n    <div className={css({ stale: isStale })}>\n      <div className={css('filter')}>\n        {terms.map(([t, count]) => {\n          const term = t as Categories | 'All';\n          const checked =\n            (term === 'All' && !search.go_category) ||\n            search.go_category === categories[term as Categories];\n          return (\n            <label key={term} className={css('radio-btn-label', { checked })}>\n              <input\n                type=\"radio\"\n                name=\"go_category\"\n                className={css('radio-btn')}\n                value={categories[term as Categories] || 'All'}\n                disabled={isStale}\n                onChange={_handleSelection}\n                checked={checked}\n                style={{ margin: '0.25em' }}\n              />\n              <span>{term}</span>\n\n              {term in short && (\n                <Tooltip title={`${term} category`}>\n                  <small\n                    className={css(\n                      'go-short-label',\n                      'sign-label-head',\n                      short[term as Categories].toLowerCase(),\n                    )}\n                  >\n                    {short[term as Categories]}\n                  </small>\n                </Tooltip>\n              )}\n\n              {typeof count === 'undefined' || isNaN(count) ? null : (\n                <NumberComponent\n                  label\n                  loading={loading}\n                  className={css('filter-label')}\n                  abbr\n                >\n                  {count}\n                </NumberComponent>\n              )}\n            </label>\n          );\n        })}\n      </div>\n    </div>\n  );\n};\n\nconst getUrlFor = createSelector(\n  (state: GlobalState) => state.settings.api,\n  (state: GlobalState) => state.customLocation.description,\n  (state: GlobalState) => state.customLocation.search,\n  ({ protocol, hostname, port, root }, description, search) => {\n    // omit from search\n    const {\n      // eslint-disable-next-line camelcase\n      page_size,\n      search: _,\n      cursor: __,\n      // eslint-disable-next-line camelcase\n      go_category,\n      ..._search\n    } = search;\n    // add to search\n    _search.group_by = 'go_categories';\n    // build URL\n    return format({\n      protocol,\n      hostname,\n      port,\n      pathname: root + descriptionToPath(description),\n      query: _search,\n    });\n  },\n);\n\nconst mapStateToProps = createSelector(\n  (state: GlobalState) => state.customLocation,\n  (customLocation) => ({ customLocation }),\n);\n\nexport default loadData({\n  getUrl: getUrlFor,\n  mapStateToProps,\n  mapDispatchToProps: { goToCustomLocation },\n} as LoadDataParameters)(GOTermsFilter);\n","import React, { FormEvent } from 'react';\n\nimport { createSelector } from 'reselect';\nimport { format } from 'url';\n\nimport NumberComponent from 'components/NumberComponent';\nimport { getPayloadOrEmpty } from 'components/FiltersPanel';\n\nimport loadData from 'higherOrder/loadData/ts';\nimport descriptionToPath from 'utils/processDescription/descriptionToPath';\n\nimport { goToCustomLocation } from 'actions/creators';\n\nimport cssBinder from 'styles/cssBinder';\n\nimport style from 'components/FiltersPanel/style.css';\nimport stylego from 'pages/style.css';\n\nconst css = cssBinder(stylego, style);\n\nconst categories = {\n  Curated: 'curated',\n  'AI-Generated (reviewed)': 'ai-reviewed',\n  'AI-Generated (unreviewed)': 'ai-unreviewed',\n};\ntype Categories = keyof typeof categories;\n\ntype Props = {\n  label?: string;\n  goToCustomLocation?: typeof goToCustomLocation;\n  customLocation?: InterProLocation;\n};\n\ninterface LoadedProps extends Props, LoadDataProps<GroupByPayload> {}\n\nconst AIGeneratedFilter = ({\n  data,\n  isStale,\n  customLocation,\n  goToCustomLocation,\n}: LoadedProps) => {\n  if (!data || !customLocation) return null;\n  const { loading, payload } = data;\n  const { search } = customLocation;\n\n  const _handleSelection = ({ target }: FormEvent) => {\n    const value = (target as HTMLInputElement).value;\n    const { page, curation_status: _, cursor: __, ...restOfsearch } = search;\n    if (value !== 'All') restOfsearch.curation_status = value;\n    goToCustomLocation?.({ ...customLocation, search: restOfsearch });\n  };\n\n  const terms = Object.entries<number>(\n    getPayloadOrEmpty(payload, loading, isStale),\n  ).sort(([, a], [, b]) => b - a);\n\n  if (!loading) {\n    terms.unshift(['All', terms.reduce((acc, [, count]) => acc + count, 0)]);\n  }\n\n  return (\n    <div className={css({ stale: isStale })}>\n      <div className={css('filter')}>\n        {terms.map(([t, count]) => {\n          const term = t as Categories | 'All';\n          const checked =\n            (term === 'All' && !search.curation_status) ||\n            search.curation_status === categories[term as Categories];\n          return term == 'All' || count > 0 ? (\n            <label key={term} className={css('radio-btn-label', { checked })}>\n              <input\n                type=\"radio\"\n                name=\"curation_status\"\n                className={css('radio-btn')}\n                value={categories[term as Categories] || 'All'}\n                disabled={isStale}\n                onChange={_handleSelection}\n                checked={checked}\n                style={{ margin: '0.25em' }}\n              />\n              <span>{term}</span>\n\n              <NumberComponent\n                label\n                loading={loading}\n                className={css('filter-label')}\n                abbr\n              >\n                {count}\n              </NumberComponent>\n            </label>\n          ) : (\n            ''\n          );\n        })}\n      </div>\n    </div>\n  );\n};\n\nconst getUrlFor = createSelector(\n  (state: GlobalState) => state.settings.api,\n  (state: GlobalState) => state.customLocation.description,\n  (state: GlobalState) => state.customLocation.search,\n  ({ protocol, hostname, port, root }, description, search) => {\n    // omit from search\n    const {\n      // eslint-disable-next-line camelcase\n      page_size,\n      search: _,\n      cursor: __,\n      // eslint-disable-next-line camelcase\n      curation_status,\n      ..._search\n    } = search;\n    // add to search\n    _search.group_by = 'curation_statuses';\n    // build URL\n    return format({\n      protocol,\n      hostname,\n      port,\n      pathname: root + descriptionToPath(description),\n      query: _search,\n    });\n  },\n);\n\nconst mapStateToProps = createSelector(\n  (state: GlobalState) => state.customLocation,\n  (customLocation) => ({ customLocation }),\n);\n\nexport default loadData({\n  getUrl: getUrlFor,\n  mapStateToProps,\n  mapDispatchToProps: { goToCustomLocation },\n} as LoadDataParameters)(AIGeneratedFilter);\n","import React from 'react';\nimport { connect } from 'react-redux';\n\nimport { createSelector } from 'reselect';\n\nimport FiltersPanel from 'components/FiltersPanel';\nimport EntryTypeFilter from './EntryTypeFilter';\nimport IntegratedFilter from './IntegratedFilter';\nimport LatestFilter from './LatestFilter';\nimport GOTermsFilter from './GOTermsFilter';\nimport AIGeneratedFilter from './AIGeneratedFilter';\n\ntype Props = { mainDB?: string };\nexport const EntryListFilter = ({ mainDB }: Props) => {\n  return (\n    <FiltersPanel>\n      <EntryTypeFilter\n        label={`${\n          mainDB === 'InterPro' ? 'InterPro' : 'Member Database Entry'\n        } Type`}\n      />\n      {mainDB !== 'InterPro' && <IntegratedFilter label=\"InterPro State\" />}\n      {mainDB === 'InterPro' && <GOTermsFilter label=\"GO Terms\" />}\n      {mainDB === 'InterPro' && <LatestFilter label=\"New entries\" />}\n      <AIGeneratedFilter label=\"Curation status\" />\n    </FiltersPanel>\n  );\n};\n\nconst mapStateToProps = createSelector(\n  (state: GlobalState) =>\n    state.customLocation.description.main.key &&\n    state.customLocation.description[\n      state.customLocation.description.main.key as Endpoint\n    ],\n  (mainEndpoint) => ({ mainDB: mainEndpoint!.db || '' }),\n);\n\nexport default connect(mapStateToProps)(EntryListFilter);\n","import React from 'react';\n\nimport Link from 'components/generic/Link';\nimport Card from 'components/SimpleCommonComponents/Card';\nimport HighlightedText from 'components/SimpleCommonComponents/HighlightedText';\nimport Tooltip from 'components/SimpleCommonComponents/Tooltip';\nimport Loading from 'components/SimpleCommonComponents/Loading';\nimport SummaryCounterEntries from '../SummaryCounterEntries';\n\ntype Props = {\n  data: {\n    metadata: EntryMetadata;\n    extra_fields?: {\n      counters: MetadataCounters;\n      literature?: Record<string, Reference>;\n      short_name: string;\n    };\n  };\n  search: string;\n  entryDB: MemberDB | 'interpro' | 'InterPro';\n};\nconst EntryCard = ({ data, search, entryDB }: Props) => {\n  const name =\n    typeof data.extra_fields?.short_name === 'string'\n      ? data.extra_fields?.short_name\n      : data.metadata.accession;\n\n  const subtitleFullName =\n    typeof data.metadata.name === 'string'\n      ? data.metadata.name\n      : data.metadata.name.name;\n\n  return (\n    <Card\n      imageComponent={\n        <Tooltip title={`${data.metadata.type.replace('_', ' ')} type`}>\n          <interpro-type\n            dimension=\"2em\"\n            type={data.metadata.type.replace('_', ' ')}\n            aria-label=\"Entry type\"\n          />\n        </Tooltip>\n      }\n      title={\n        <Link\n          to={{\n            description: {\n              main: { key: 'entry' },\n              entry: {\n                db: data.metadata.source_database,\n                accession: data.metadata.accession,\n              },\n            },\n          }}\n        >\n          <HighlightedText text={name || ''} textToHighlight={search} />\n        </Link>\n      }\n      subHeader={<>{subtitleFullName}</>}\n      footer={\n        <>\n          <div>\n            <HighlightedText\n              text={data.metadata.accession || ''}\n              textToHighlight={search}\n            />\n          </div>\n          {entryDB.toLowerCase() === 'interpro' ? (\n            <div></div>\n          ) : (\n            <div>\n              {data.metadata.integrated ? (\n                <div>\n                  Integrated into{' '}\n                  <div>\n                    <Link\n                      to={{\n                        description: {\n                          main: { key: 'entry' },\n                          entry: {\n                            db: 'InterPro',\n                            accession: data.metadata.integrated,\n                          },\n                        },\n                      }}\n                    >\n                      {data.metadata.integrated}\n                    </Link>\n                  </div>\n                </div>\n              ) : (\n                'Not integrated'\n              )}\n            </div>\n          )}\n        </>\n      }\n    >\n      <div>\n        {data.extra_fields ? (\n          <SummaryCounterEntries\n            entryDB={entryDB}\n            entryAccession={data.metadata.accession}\n            entryName={name}\n            counters={data.extra_fields.counters}\n          />\n        ) : (\n          <Loading />\n        )}\n      </div>\n    </Card>\n  );\n};\nexport default EntryCard;\n","import React, { useEffect } from 'react';\n\nimport Tooltip from 'components/SimpleCommonComponents/Tooltip';\n\nimport Callout from 'components/SimpleCommonComponents/Callout';\n\nimport Link from 'components/generic/Link';\n\nimport GoLink from 'components/ExtLink/GoLink';\nimport MemberDBSelector from 'components/MemberDBSelector';\nimport EntryListFilter from 'components/Entry/EntryListFilters';\nimport MemberSymbol from 'components/Entry/MemberSymbol';\nimport File from 'components/File';\n\nimport ExternalExportButton from 'components/Table/Exporter/ExternalExportButton';\n\nimport Table, {\n  Column,\n  Card,\n  SearchBox,\n  PageSizeSelector,\n  Exporter,\n  HighlightToggler,\n} from 'components/Table';\n\nimport HighlightedText from 'components/SimpleCommonComponents/HighlightedText';\n\nimport getExtUrlFor from 'utils/url-patterns';\nimport loadWebComponent from 'utils/load-web-component';\nimport loadable from 'higherOrder/loadable';\n\nimport EndPointPage from '../endpoint-page';\nimport subPages from 'subPages';\nimport config from 'config';\n\nimport { memberDBAccessions } from 'staticData/home';\n\nimport ebiStyles from 'ebi-framework/css/ebi-global.css';\nimport pageStyle from '../style.css';\nimport fonts from 'EBI-Icon-fonts/fonts.css';\nimport exporterStyle from 'components/Table/Exporter/style.css';\nimport filtersAndTable from 'components/FiltersPanel/filters-and-table.css';\nimport EntryCard from 'components/Entry/Card';\n\nimport descriptionToPath from 'utils/processDescription/descriptionToPath';\nimport cssBinder from 'styles/cssBinder';\n\nimport { toPublicAPI } from 'utils/url';\n\nconst css = cssBinder(\n  pageStyle,\n  ebiStyles,\n  fonts,\n  exporterStyle,\n  filtersAndTable,\n);\n\nimport {\n  schemaProcessDataTable,\n  schemaProcessDataTableRow,\n} from 'schema_org/processors';\n\nconst GO_COLORS = new Map([\n  ['P', '#d1eaef'],\n  ['F', '#e0f2d1'],\n  ['C', '#f5ddd3'],\n]);\n\ntype ArchiveProps = { name: string; page: string };\n\nconst ArchiveCallout = ({ name, page }: ArchiveProps) => (\n  <div className={css('row')}>\n    <div className={css('columns', 'large-12')}>\n      <Callout type=\"info\">\n        <p>\n          <strong>{name} has retired</strong>\n          <br />\n          While {name} is no longer receiving updates, InterPro now serves as an\n          archival source, granting continued access to its data.\n          <br />\n          Further information about {name} can be found{' '}\n          <Link\n            href={`${config.root.readthedocs.href + page}.html`}\n            className={css('ext')}\n            target=\"_blank\"\n          >\n            in our documentation\n          </Link>\n          .\n        </p>\n      </Callout>\n    </div>\n  </div>\n);\n\ntype AllEntriesDownloadProps = {\n  description: object;\n  search: InterProLocationSearch;\n  count: number;\n  fileType: DownloadFileTypes;\n  name: string;\n};\n\nconst AllEntriesDownload = ({\n  description,\n  search,\n  count,\n  fileType,\n  name,\n}: AllEntriesDownloadProps) => (\n  <File\n    fileType={fileType}\n    name={name || `entries.${fileType}`}\n    count={count}\n    customLocationDescription={description}\n    search={search}\n    endpoint={'entry'}\n  />\n);\n\ntype EntryExtra = {\n  short_name: string;\n  counters: MetadataCounters;\n  literature?: Record<string, Reference>;\n};\ntype EntryItem = {\n  metadata: EntryMetadata;\n  extra_fields?: EntryExtra;\n  search: string;\n  entryDB: MemberDB | 'interpro';\n};\n\ntype Props = {\n  customLocation?: InterProLocation;\n};\n\ninterface LoadedProps\n  extends Props,\n    LoadDataProps<PayloadList<ProteinEntryPayload>>,\n    LoadDataProps<RootAPIPayload, 'Base'> {}\n\nconst List = ({ data, customLocation, isStale, dataBase }: LoadedProps) => {\n  useEffect(() => {\n    loadWebComponent(() =>\n      import(\n        /* webpackChunkName: \"interpro-components\" */ 'interpro-components'\n      ).then((m) => m.InterproType),\n    ).as('interpro-type');\n  }, []);\n\n  if (!data || !customLocation) return null;\n\n  const { payload } = data;\n  const { description, search } = customLocation;\n  let _payload = payload;\n  const db = description.entry.db as MemberDB | 'interpro' | 'InterPro';\n\n  const HTTP_OK = 200;\n  const notFound = !data.loading && data.status !== HTTP_OK;\n  const databases = dataBase?.payload?.databases;\n  const isStaleButShouldntDisplayStale =\n    isStale &&\n    // eslint-disable-next-line camelcase\n    _payload?.results?.[0]?.metadata?.source_database?.toLowerCase() !==\n      db.toLowerCase();\n\n  if (data.loading || notFound || isStaleButShouldntDisplayStale) {\n    _payload = { results: [], count: 0 };\n  }\n\n  const includeGrid = data.url;\n  const shouldShowMemberDBSelector = db?.toLowerCase() !== 'interpro';\n\n  const size = _payload?.count || 0;\n\n  return (\n    <div className={css('row', 'filters-and-table')}>\n      <nav>\n        <div className={css('browse-side-panel')}>\n          {shouldShowMemberDBSelector && (\n            <>\n              <div className={css('selector-container')}>\n                <MemberDBSelector\n                  contentType=\"entry\"\n                  className=\"pp-left-side-db-selector\"\n                />\n              </div>\n              <hr style={{ paddingTop: '0.5rem' }} />\n            </>\n          )}\n          <EntryListFilter />\n        </div>\n      </nav>\n\n      <section>\n        {databases && db && databases[db.toLowerCase()] && (\n          <SchemaOrgData\n            data={{\n              data: { db: databases[db.toLowerCase()] },\n              location: window.location,\n            }}\n            processData={schemaProcessDataTable}\n          />\n        )}\n        {db && ['prints', 'sfld'].includes(db) ? (\n          <ArchiveCallout name={db.toUpperCase()} page={db.toLowerCase()} />\n        ) : null}\n        <Table\n          dataTable={_payload?.results}\n          contentType=\"entry\"\n          loading={data.loading}\n          ok={data.ok}\n          status={data.status}\n          isStale={isStale}\n          actualSize={size}\n          query={search}\n          notFound={notFound}\n          withGrid={!!includeGrid}\n          databases={databases}\n          nextAPICall={_payload?.next}\n          previousAPICall={_payload?.previous}\n          currentAPICall={data.url}\n        >\n          <Exporter>\n            <div className={css('menu-grid')}>\n              <AllEntriesDownload\n                description={description}\n                search={search}\n                count={size}\n                fileType=\"json\"\n                name=\"json\"\n              />\n              <AllEntriesDownload\n                description={description}\n                search={search}\n                count={size}\n                fileType=\"tsv\"\n                name=\"tsv\"\n              />\n              <ExternalExportButton type={'api'} url={toPublicAPI(data.url)} />\n              <ExternalExportButton\n                search={search}\n                type={'scriptgen'}\n                subpath={descriptionToPath(description)}\n              />\n            </div>\n          </Exporter>\n          <PageSizeSelector />\n          <Card>\n            {(data: EntryItem) => (\n              <EntryCard\n                data={data}\n                search={search.search as string}\n                entryDB={db}\n              />\n            )}\n          </Card>\n          <SearchBox loading={isStale}>Search entries</SearchBox>\n          <HighlightToggler />\n          {db === 'InterPro' && (\n            <Column\n              dataKey=\"type\"\n              headerClassName={css('col-type', 'table-center')}\n              cellClassName={css('table-center')}\n              renderer={(type: string) => {\n                const _type = type.replace('_', ' ');\n                return (\n                  <Tooltip title={`${_type} type`}>\n                    <interpro-type type={_type} dimension=\"26px\" />\n                  </Tooltip>\n                );\n              }}\n            />\n          )}\n          <Column\n            dataKey=\"accession\"\n            isSortable={true}\n            renderer={(accession: string, row: unknown) => (\n              <Link\n                to={(customLocation) => ({\n                  description: {\n                    ...customLocation.description,\n                    entry: {\n                      ...customLocation.description.entry,\n                      accession,\n                    },\n                  },\n                })}\n              >\n                <SchemaOrgData\n                  data={{\n                    data: { row, endpoint: 'entry' },\n                    location: window.location,\n                  }}\n                  processData={schemaProcessDataTableRow}\n                />\n                <span className={css('acc-row')}>\n                  <HighlightedText\n                    text={accession || ''}\n                    textToHighlight={search.search as string}\n                  />\n                </span>\n              </Link>\n            )}\n          >\n            Accession\n          </Column>\n\n          <Column\n            dataKey=\"counters.extra_fields.short_name\"\n            renderer={(_, meta, extra?: EntryExtra) =>\n              extra?.short_name ? (\n                <Link\n                  to={(customLocation) => ({\n                    description: {\n                      ...customLocation.description,\n                      entry: {\n                        ...customLocation.description.entry,\n                        accession: meta.accession,\n                      },\n                    },\n                    search: {},\n                  })}\n                >\n                  <HighlightedText\n                    text={extra.short_name}\n                    textToHighlight={search.search as string}\n                  />\n                </Link>\n              ) : null\n            }\n          >\n            Short name\n          </Column>\n\n          <Column\n            dataKey=\"name\"\n            renderer={(name: string, { accession }: EntryMetadata) => (\n              <Link\n                to={(customLocation) => ({\n                  description: {\n                    ...customLocation.description,\n                    entry: {\n                      ...customLocation.description.entry,\n                      accession: accession,\n                    },\n                  },\n                  search: {},\n                })}\n              >\n                <HighlightedText\n                  text={name}\n                  textToHighlight={search.search as string}\n                />\n              </Link>\n            )}\n          >\n            Name\n          </Column>\n\n          {db !== 'InterPro' && (\n            <Column\n              dataKey=\"type\"\n              headerClassName={css('col-type', 'table-center')}\n              cellClassName={css('table-center')}\n              renderer={(type: string) => (\n                <Tooltip\n                  title={`${type.replace('_', ' ')} type (as defined by ${\n                    (databases && databases[db] && databases[db].name) || db\n                  })`}\n                >\n                  {type.replace('_', ' ')}\n                </Tooltip>\n              )}\n            >\n              {`${db} Type`}\n            </Column>\n          )}\n\n          {db !== 'InterPro' && (\n            <Column\n              dataKey=\"source_database\"\n              headerClassName={css('table-center')}\n              cellClassName={css('table-center')}\n              renderer={(\n                db: MemberDB | 'interpro' | 'all',\n                { accession }: EntryMetadata,\n              ) => {\n                const externalLinkRenderer = getExtUrlFor(db);\n                const symbol = (\n                  <MemberSymbol type={db} className={css('md-small')} />\n                );\n                if (db.toLowerCase() === 'pfam' || !externalLinkRenderer)\n                  return symbol;\n                return (\n                  <Tooltip\n                    title={`link to ${accession} on the ${\n                      (databases && databases[db] && databases[db].name) || db\n                    } website`}\n                    distance={-5}\n                    useContext={true}\n                  >\n                    <Link\n                      target=\"_blank\"\n                      href={externalLinkRenderer(accession)}\n                      style={{ borderBottomWidth: 0 }}\n                    >\n                      {symbol}\n                    </Link>\n                  </Tooltip>\n                );\n              }}\n            >\n              DB\n            </Column>\n          )}\n          {db === 'InterPro' ? (\n            <Column\n              dataKey=\"member_databases\"\n              cellClassName={css('col-md')}\n              renderer={(memberDataBases: ProteinEntryPayload) => (\n                <div className={css('signature-container')}>\n                  {memberDataBases &&\n                    Object.entries(memberDataBases).map(([db, entries]) =>\n                      Object.entries(entries).map(([accession, id]) => (\n                        <Tooltip\n                          key={accession}\n                          title={`${id} (${\n                            (databases &&\n                              databases[db] &&\n                              databases[db].name) ||\n                            db\n                          })`}\n                          className={css('signature', {\n                            'corresponds-to-filter':\n                              search.signature_in &&\n                              (search.signature_in as string).toLowerCase() ===\n                                db.toLowerCase(),\n                          })}\n                        >\n                          <Link\n                            to={{\n                              description: {\n                                main: { key: 'entry' },\n                                entry: { db, accession },\n                              },\n                            }}\n                          >\n                            {accession}\n                          </Link>\n                        </Tooltip>\n                      )),\n                    )}\n                </div>\n              )}\n            >\n              Integrated Signature(s)\n            </Column>\n          ) : (\n            <Column\n              dataKey=\"integrated\"\n              headerClassName={css('table-center')}\n              renderer={(accession: string) =>\n                accession ? (\n                  <Link\n                    to={{\n                      description: {\n                        main: { key: 'entry' },\n                        entry: { db: 'InterPro', accession },\n                      },\n                      search: {},\n                    }}\n                  >\n                    <Tooltip title={`${accession}`}>{accession}</Tooltip>\n                  </Link>\n                ) : (\n                  ''\n                )\n              }\n            >\n              Integrated Into\n            </Column>\n          )}\n\n          {\n            // TODO re-insert GO terms as column in table for Member databases when data available\n          }\n\n          {db === 'InterPro' ? (\n            <Column\n              dataKey=\"go_terms\"\n              headerClassName={css('col-go-head')}\n              cellClassName={css('col-go')}\n              renderer={(goTerms: GOTerm[]) => (\n                <div className={css('go-container')}>\n                  {goTerms &&\n                    Array.from(goTerms)\n                      .sort((a, b) => {\n                        if (a.category.code > b.category.code) return 0;\n                        if (a.category.code < b.category.code) return 1;\n                        if (a.name > b.name) return 1;\n                        return 0;\n                      })\n                      .map((go) => (\n                        <span key={go.identifier} className={css('go-list')}>\n                          <Tooltip\n                            title={`${go.category.name.replace('_', ' ')} term`}\n                          >\n                            <span\n                              className={css('go-circle')}\n                              style={{\n                                background:\n                                  GO_COLORS.get(go.category.code) || '#ddd',\n                              }}\n                            />\n                          </Tooltip>\n                          <Tooltip title={`${go.name} (${go.identifier})`}>\n                            <GoLink id={go.identifier} className={css('ext')}>\n                              {go.name ? go.name : 'None'}\n                            </GoLink>\n                          </Tooltip>\n                        </span>\n                      ))}\n                </div>\n              )}\n            >\n              GO Terms{' '}\n              <Tooltip title=\"Biological process category\">\n                <span className={css('sign-label-head', 'bp')}>BP</span>\n              </Tooltip>{' '}\n              <Tooltip title=\"Molecular function category\">\n                <span className={css('sign-label-head', 'mf')}>MF</span>\n              </Tooltip>{' '}\n              <Tooltip title=\"Cellular component category\">\n                <span className={css('sign-label-head', 'cc')}>CC</span>\n              </Tooltip>\n            </Column>\n          ) : null}\n        </Table>\n      </section>\n    </div>\n  );\n};\n\nconst SummaryAsync = loadable({\n  loader: () =>\n    import(/* webpackChunkName: \"entry-summary\" */ 'components/Entry/Summary'),\n  loading: () => null,\n});\n\nconst SchemaOrgData = loadable({\n  loader: () => import(/* webpackChunkName: \"schemaOrg\" */ 'schema_org'),\n  loading: () => null,\n});\n\nconst subPagesForEntry = new Map();\nfor (const subPage of config.pages.entry.subPages) {\n  subPagesForEntry.set(subPage, subPages.get(subPage));\n}\n\nconst childRoutesReg = new RegExp(\n  `(${memberDBAccessions.join('|')}|IPR[0-9]{6})`,\n  'i',\n);\n\nconst Entry = () => (\n  <EndPointPage\n    subpagesRoutes={childRoutesReg}\n    listOfEndpointEntities={List}\n    SummaryAsync={SummaryAsync}\n    subPagesForEndpoint={subPagesForEntry}\n  />\n);\n\nexport default Entry;\n","// extracted by mini-css-extract-plugin\nexport default {\"icon-link\":\"CounterIcon_styles__icon-link___c3\",\"icon-over-animation\":\"CounterIcon_styles__icon-over-animation___ef\",\"icon-wrapper\":\"CounterIcon_styles__icon-wrapper___b8\",\"md-small\":\"CounterIcon_styles__md-small___a8\",\"mod-img-pos\":\"CounterIcon_styles__mod-img-pos___c0\",\"icon\":\"CounterIcon_styles__icon___e4\",\"icon-count-species\":\"CounterIcon_styles__icon-count-species___e0\",\"icon-count-ida\":\"CounterIcon_styles__icon-count-ida___ce\",\"icon-count-set\":\"CounterIcon_styles__icon-count-set___de\",\"icon-count-hmm\":\"CounterIcon_styles__icon-count-hmm___c7\",\"icon-count-proteome\":\"CounterIcon_styles__icon-count-proteome___ad\",\"card-counter-block\":\"CounterIcon_styles__card-counter-block___de\"};","// extracted by mini-css-extract-plugin\nexport default {\"new-card\":\"Card_styles__new-card___df\",\"image\":\"Card_styles__image___b8\",\"card-tag\":\"Card_styles__card-tag___bf\",\"icon\":\"Card_styles__icon___d1\",\"title\":\"Card_styles__title___fb\",\"subheader\":\"Card_styles__subheader___ca\",\"content\":\"Card_styles__content___f0\",\"footer\":\"Card_styles__footer___fe\",\"card-more\":\"Card_styles__card-more___c3\",\"button-more\":\"Card_styles__button-more___f8\",\"compact\":\"Card_styles__compact___e9\",\"tag-publi\":\"Card_styles__tag-publi___f0\",\"tag-tuto\":\"Card_styles__tag-tuto___b1\",\"tag-tool\":\"Card_styles__tag-tool___dd\",\"tag-focus\":\"Card_styles__tag-focus___e5\",\"tag-blog\":\"Card_styles__tag-blog___a7\",\"white-link\":\"Card_styles__white-link___a2\",\"card-info-author\":\"Card_styles__card-info-author___e9\",\"button\":\"Card_styles__button___ee\",\"hollow\":\"Card_styles__hollow___d5\",\"secondary\":\"Card_styles__secondary___d8\",\"margin-bottom-large\":\"Card_styles__margin-bottom-large___d8\"};"],"names":["memberDBAccessions","speciesFeat","title","kingdom","description","icon","color","tax_id","proteome_id","entryType","type","css","cssBinder","cardStyle","_ref","entryDB","entryName","entryAccession","counters","memberDBs","proteins","domain_architectures","domainArchitectures","taxa","structures","sets","React","className","CounterIcon","endpoint","count","name","to","main","key","entry","db","accession","protein","isFilter","detail","taxonomy","structure","toLowerCase","set","Object","keys","map","acc","signature","local","fonts","proteome","Tooltip","toPlural","style","display","Link","disabled","position","top","left","MemberSymbol","NumberComponent","abbr","imageComponent","imageIconClass","subHeader","footer","linkForMore","labelForMore","compact","children","href","target","buttonType","allRE","isAll","string","test","EntryTypeFilter","PureComponent","constructor","_handleSelection","this","props","customLocation","value","_c","search","page","__rest","cursor","_b","_a","goToCustomLocation","call","assign","_formatType","replace","componentDidMount","loadWebComponent","then","m","InterproType","as","render","data","loading","payload","isStale","types","entries","getPayloadOrEmpty","sort","_ref2","_ref3","aType","bType","typeOrder","i","indexOf","j","localeCompare","unshift","reduce","_ref4","stale","_ref5","checked","onChange","margin","expanded","dimension","label","getUrlFor","createSelector","state","settings","api","_ref6","protocol","hostname","port","root","_","__","_search","group_by","format","pathname","descriptionToPath","query","mapStateToProps","loadData","getUrl","mapDispatchToProps","_description","integration","interpro_status","includes","both","integrated","unintegrated","s","rest","textTransform","latest_entries","latest","handleChange","stylego","categories","short","page_size","go_category","restOfsearch","terms","a","b","NaN","t","term","isNaN","Curated","_ref7","curation_status","mainEndpoint","mainDB","connect","FiltersPanel","IntegratedFilter","GOTermsFilter","LatestFilter","AIGeneratedFilter","extra_fields","short_name","metadata","subtitleFullName","Card","source_database","HighlightedText","text","textToHighlight","SummaryCounterEntries","Loading","pageStyle","ebiStyles","exporterStyle","filtersAndTable","GO_COLORS","Map","ArchiveCallout","Callout","config","readthedocs","AllEntriesDownload","fileType","File","customLocationDescription","List","dataBase","useEffect","_payload","notFound","status","databases","isStaleButShouldntDisplayStale","_e","_d","results","includeGrid","url","shouldShowMemberDBSelector","size","MemberDBSelector","contentType","paddingTop","EntryListFilter","SchemaOrgData","location","window","processData","schemaProcessDataTable","toUpperCase","Table","dataTable","ok","actualSize","withGrid","nextAPICall","next","previousAPICall","previous","currentAPICall","Exporter","ExternalExportButton","toPublicAPI","subpath","PageSizeSelector","EntryCard","SearchBox","HighlightToggler","Column","dataKey","headerClassName","cellClassName","renderer","_type","isSortable","row","schemaProcessDataTableRow","meta","extra","externalLinkRenderer","getExtUrlFor","symbol","distance","useContext","borderBottomWidth","memberDataBases","id","signature_in","goTerms","Array","from","category","code","go","identifier","background","get","GoLink","SummaryAsync","loadable","loader","subPagesForEntry","subPage","pages","subPages","childRoutesReg","RegExp","join","Entry","EndPointPage","subpagesRoutes","listOfEndpointEntities","subPagesForEndpoint"],"sourceRoot":""}