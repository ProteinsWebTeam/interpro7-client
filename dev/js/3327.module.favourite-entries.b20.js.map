{"version":3,"file":"js/3327.module.favourite-entries.b20.js","mappings":"8qBAqBA,IAAMA,GAAIC,EAAAA,EAAAA,GAAkBC,EAAAA,EAAiBC,EAAAA,EAAOC,EAAAA,EAAOC,EAAAA,GAWpD,MAAMC,UAAyBC,EAAAA,cAKpCC,WAAAA,CAAYC,GAAoB,IAAAC,EAC9BC,MAAMF,GAAMC,EAAAE,KAAA,KAoBdC,cAAaC,GAAG,YACd,IAAMC,QAAcC,EAAAA,EAAAA,IAAeC,EAAAA,IAC7BC,QAAgBH,EAAMI,SAEtBC,EADUC,OAAOC,OAAOJ,GACSK,KAAKC,IAC1CA,EAAEC,SAASC,KAAOF,EAAEC,SAASC,KAAKA,KAClCF,EAAEG,aAAe,CAAC,EAClBH,EAAEG,aAAaC,SAAWJ,EAAEC,SAASG,SAC9BJ,KAETd,EAAKmB,SAAS,CAAEC,IAAKV,GACvB,IA7BER,KAAKmB,MAAQ,CACXD,IAAK,GACLE,eAAgB,GAEpB,CAEAC,iBAAAA,GACErB,KAAKC,iBACLqB,EAAAA,EAAAA,GAAwB,CACtBC,cAAgBC,GAAYxB,KAAKiB,SAAS,CAAEG,eAAgBI,KAEhE,CAEAC,kBAAAA,CAAmBC,GACbA,EAAUF,QAAQG,SAAW3B,KAAKH,MAAM2B,QAAQG,QAClD3B,KAAKC,eACT,CAeA2B,MAAAA,GACE,OAAI5B,KAAKmB,MAAMD,IAAIS,OAAS,EAExBE,EAAAA,cAAA,OAAKC,UAAW1C,EAAE,oBAChByC,EAAAA,cAAA,OAAKC,UAAW1C,EAAE,QAChByC,EAAAA,cAAA,OAAKC,UAAW1C,EAAE,YAChByC,EAAAA,cAACE,EAAAA,EAAa,CAACD,UAAW1C,EAAE,WAAY4C,QAAQ,OAC7ChC,KAAKmB,MAAMD,IAAIP,KAAKvB,GACnByC,EAAAA,cAACI,EAAAA,EAAS,CAACC,MAAO9C,EAAG+C,IAAK/C,EAAEyB,SAASuB,eAGxCpC,KAAKmB,MAAMC,eAAeO,OAAS,GAClCE,EAAAA,cAACQ,EAAAA,EAAI,CACHC,GAAI,CACFC,YAAa,CACXC,MAAO,CAAC,iBAGZV,UAAW1C,EAAE,SAAU,uBACxB,wBAUXyC,EAAAA,cAACY,EAAAA,EAAO,CAACC,KAAK,QACZb,EAAAA,cAAA,QAAMc,MAAO,CAAEC,WAAY,SAAU,iDAGrCf,EAAAA,cAAA,WAAK,sDACiD,IACpDA,EAAAA,cAAA,QACEC,UAAW1C,EAAE,OAAQ,eACrB,YAAU,IACVuD,MAAO,CAAEE,MAAO,cACf,IAAI,uCAKf,EAnFWnD,EACJoD,UAAY,CACjBtB,QAASuB,IAAAA,MAAQC,YAmFrB,IAAMC,GAAkBC,EAAAA,EAAAA,KACrB/B,GAAUA,EAAMgC,WAAW3B,UAC3BA,IAAO,CAAQA,cAGlB,SAAe4B,EAAAA,EAAAA,IAAQH,EAAvB,CAAwCvD,E","sources":["webpack://interpro7-client/./src/components/home/FavouriteEntries/index.js"],"sourcesContent":["import React, { PureComponent } from 'react';\nimport getTableAccess, { FavEntries } from 'storage/idb';\nimport { createSelector } from 'reselect';\nimport { connect } from 'react-redux';\nimport T from 'prop-types';\n\nimport AnimatedEntry from 'components/AnimatedEntry';\n// $FlowFixMe\nimport EntryCard from 'components/home/EntryCard';\nimport Link from 'components/generic/Link';\n// $FlowFixMe\nimport Callout from 'components/SimpleCommonComponents/Callout';\nimport { getMismatchedFavourites } from 'utils/compare-favourites';\n\nimport { foundationPartial } from 'styles/foundation';\n\nimport ebiGlobalStyles from 'ebi-framework/css/ebi-global.css';\nimport fonts from 'EBI-Icon-fonts/fonts.css';\nimport theme from 'styles/theme-interpro.css';\nimport cardStyle from '../ByLatestEntries/styles.css';\n\nconst f = foundationPartial(ebiGlobalStyles, fonts, theme, cardStyle);\n\n/*:: type Props = {\n  entries: Array<string>,\n}; */\n\n/*:: type State = {\n  fav: Array<Object>,\n  changedEntries: Array<Object>,\n}; */\n\nexport class FavouriteEntries extends PureComponent /*:: <Props> */ {\n  static propTypes = {\n    entries: T.array.isRequired,\n  };\n\n  constructor(props /*: Props */) {\n    super(props);\n\n    this.state = {\n      fav: [],\n      changedEntries: [],\n    };\n  }\n\n  componentDidMount() {\n    this.getFavourites();\n    getMismatchedFavourites({\n      setChangedFav: (entries) => this.setState({ changedEntries: entries }),\n    });\n  }\n\n  componentDidUpdate(prevProps /*: Props */) {\n    if (prevProps.entries.length !== this.props.entries.length)\n      this.getFavourites();\n  }\n\n  getFavourites = async () => {\n    const favTA = await getTableAccess(FavEntries);\n    const content = await favTA.getAll();\n    const entries = Object.values(content);\n    const entryStructureModified = entries.map((e) => {\n      e.metadata.name = e.metadata.name.name;\n      e.extra_fields = {};\n      e.extra_fields.counters = e.metadata.counters;\n      return e;\n    });\n    this.setState({ fav: entryStructureModified });\n  };\n\n  render() {\n    if (this.state.fav.length > 0) {\n      return (\n        <div className={f('feat-entry-list')}>\n          <div className={f('row')}>\n            <div className={f('columns')}>\n              <AnimatedEntry className={f('wrapper')} element=\"div\">\n                {this.state.fav.map((f) => (\n                  <EntryCard entry={f} key={f.metadata.accession} />\n                ))}\n              </AnimatedEntry>\n              {this.state.changedEntries.length > 0 && (\n                <Link\n                  to={{\n                    description: {\n                      other: ['fav-updates'],\n                    },\n                  }}\n                  className={f('button', 'margin-bottom-none')}\n                >\n                  Check for updates\n                </Link>\n              )}\n            </div>\n          </div>\n        </div>\n      );\n    }\n    return (\n      <Callout type=\"info\">\n        <span style={{ fontWeight: 'bold' }}>\n          You don&apos;t have any entry tagged as favourite.\n        </span>\n        <div>\n          You can tag entries as favorites by clicking on the{' '}\n          <span\n            className={f('icon', 'icon-common')}\n            data-icon=\"&#xf005;\"\n            style={{ color: 'darkgray' }}\n          />{' '}\n          icon in the title of an entry page.\n        </div>\n      </Callout>\n    );\n  }\n}\nconst mapStateToProps = createSelector(\n  (state) => state.favourites.entries,\n  (entries) => ({ entries }),\n);\n\nexport default connect(mapStateToProps)(FavouriteEntries);\n"],"names":["f","foundationPartial","ebiGlobalStyles","fonts","theme","cardStyle","FavouriteEntries","PureComponent","constructor","props","_this","super","this","getFavourites","_asyncToGenerator","favTA","getTableAccess","FavEntries","content","getAll","entryStructureModified","Object","values","map","e","metadata","name","extra_fields","counters","setState","fav","state","changedEntries","componentDidMount","getMismatchedFavourites","setChangedFav","entries","componentDidUpdate","prevProps","length","render","React","className","AnimatedEntry","element","EntryCard","entry","key","accession","Link","to","description","other","Callout","type","style","fontWeight","color","propTypes","T","isRequired","mapStateToProps","createSelector","favourites","connect"],"sourceRoot":""}