{"version":3,"file":"js/1856.module.entry-alignments-subpage.182.js","mappings":"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","sources":["webpack://interpro7-client/./src/components/Tip/index.js","webpack://interpro7-client/./src/subPages/EntryAlignments/Viewer/index.js","webpack://interpro7-client/./src/subPages/EntryAlignments/Viewer/style.css?6ee1","webpack://interpro7-client/./src/subPages/EntryAlignments/index.js","webpack://interpro7-client/./src/subPages/EntryAlignments/style.css?12d4"],"sourcesContent":["// @flow\nimport { useEffect } from 'react';\nimport T from 'prop-types';\n\n// $FlowFixMe\nimport { addToast, changeSettingsRaw } from 'actions/creators';\nimport { connect } from 'react-redux';\n\nconst TTL = 5000;\n\n/*:: type Props = {\n  title?: string,\n  body: string,\n  checkBoxLabel?: string,\n  ttl?: number,\n  toastID: string,\n  settingsName: string,\n  addToast: function,\n  changeSettingsRaw: function,\n};*/\n\nconst Tip = (\n  {\n    title,\n    body,\n    checkBoxLabel,\n    ttl,\n    toastID,\n    addToast,\n    changeSettingsRaw,\n    settingsName,\n  } /*: Props */,\n) => {\n  useEffect(() => {\n    addToast(\n      {\n        title: title || '💡 Tip',\n        body: body,\n        checkBox: {\n          label: checkBoxLabel || 'Do not show again',\n          fn: () => changeSettingsRaw('notifications', settingsName, false),\n        },\n        ttl: ttl || TTL,\n      },\n      toastID,\n    );\n  });\n  return null;\n};\nTip.propTypes = {\n  title: T.string,\n  body: T.oneOfType([T.string, T.object]).isRequired,\n  checkBoxLabel: T.string,\n  ttl: T.number,\n  toastID: T.string.isRequired,\n  settingsName: T.string.isRequired,\n  addToast: T.func.isRequired,\n  changeSettingsRaw: T.func.isRequired,\n};\nexport default connect(null, { addToast, changeSettingsRaw })(Tip);\n","import React, { useState, useEffect, useRef } from 'react';\nimport { dataPropType } from 'higherOrder/loadData/dataPropTypes';\nimport T from 'prop-types';\n\nimport { goToCustomLocation } from 'actions/creators';\n\nimport Stockholm from 'stockholm-js';\nimport { createSelector } from 'reselect';\nimport { format } from 'url';\nimport loadData from 'higherOrder/loadData';\n// $FlowFixMe\nimport descriptionToPath from 'utils/processDescription/descriptionToPath';\n// $FlowFixMe\nimport Tooltip from 'components/SimpleCommonComponents/Tooltip';\n// $FlowFixMe\nimport Button from 'components/SimpleCommonComponents/Button';\n\nimport '@nightingale-elements/nightingale-manager';\nimport '@nightingale-elements/nightingale-navigation';\nimport '@nightingale-elements/nightingale-msa';\nimport '@nightingale-elements/nightingale-links';\n\nimport { foundationPartial } from 'styles/foundation';\n\nimport fonts from 'EBI-Icon-fonts/fonts.css';\nimport local from './style.css';\n\nconst f = foundationPartial(fonts, local);\n\nimport Loading from 'components/SimpleCommonComponents/Loading';\n\nconst defaultContactMinDistance = 5;\nconst defaultContactMinProbability = 0.9;\nconst numberOfBasesToDisplay = 200;\n\nconst AlignmentViewer = ({\n  data: { loading, payload },\n  colorscheme,\n  onConservationProgress,\n  setColorMap,\n  overlayConservation,\n  contacts = null,\n  contactMinDistance = defaultContactMinDistance,\n  contactMinProbability = defaultContactMinProbability,\n  onAlignmentLoaded = () => null,\n  goToCustomLocation,\n}) => {\n  const msaTrack = useRef(null);\n  const linksTrack = useRef(null);\n  const navigationTrack = useRef(null);\n  const [align, setAlign] = useState(null);\n  const [isReady, setReady] = useState(false);\n\n  useEffect(() => {\n    const waitForWC = async () => {\n      const promises = [\n        'nightingale-manager',\n        'nightingale-navigation',\n        'nightingale-msa',\n        'nightingale-links',\n      ].map((localName) => customElements.whenDefined(localName));\n      await Promise.all(promises);\n      setReady(true);\n    };\n    waitForWC();\n  }, []);\n  useEffect(() => {\n    if (payload && isReady) {\n      const aln = Stockholm.parse(payload);\n      setAlign(aln);\n      onAlignmentLoaded(aln);\n    }\n  }, [payload]);\n  useEffect(() => {\n    if (align) {\n      const formatedSeqs = align.seqname.map((name) => ({\n        name,\n        sequence: align.seqdata[name],\n      }));\n      requestAnimationFrame(() => (msaTrack.current.data = formatedSeqs));\n      msaTrack.current.addEventListener('conservationProgress', (evt) => {\n        onConservationProgress(evt.detail.progress);\n      });\n      msaTrack.current.addEventListener('drawCompleted', () => {\n        const { map } = msaTrack.current.getColorMap();\n        setColorMap(map || {});\n      });\n      msaTrack.current.addEventListener('msa-active-label', (event) => {\n        const name = event.detail.label;\n        const accession = align.gs.AC[name]?.[0]?.replace(/\\.\\d$/, '');\n        if (accession) {\n          goToCustomLocation({\n            description: {\n              main: { key: 'protein' },\n              protein: { db: 'uniprot', accession },\n            },\n          });\n        }\n      });\n\n      if (contacts && linksTrack.current) {\n        linksTrack.current.contacts = contacts.map((p) => [p[2], p[3], p[4]]);\n      }\n    }\n  }, [align, contacts]);\n\n  if (loading || !payload || !align) {\n    return <Loading />;\n  }\n\n  const labelWidth = 200;\n  const length = align.columns();\n\n  const conservationOptions = {\n    'calculate-conservation': true,\n    'sample-size-conservation': 100,\n  };\n  if (overlayConservation) {\n    conservationOptions['overlay-conservation'] = true;\n  }\n  return (\n    <>\n      <nightingale-manager id=\"example\">\n        <div style={{ display: 'flex' }}>\n          <div\n            style={{\n              width: labelWidth,\n              flexShrink: 0,\n              fontWeight: 'bold',\n              textAlign: 'center',\n              alignSelf: 'center',\n              display: 'flex',\n              flexDirection: 'column',\n              height: '80px',\n              justifyContent: 'center',\n              gap: '1rem',\n            }}\n          >\n            <span>{align.rows().toLocaleString()} sequences</span>\n            <div>\n              <Button\n                type=\"inline\"\n                icon=\"icon-minus-square\"\n                className={f('zoom-button')}\n                title={'Click or use CTRL + mouse wheel down to zoom out'}\n                onClick={() => {\n                  navigationTrack.current /*: any */\n                    ?.zoomOut();\n                }}\n              />\n\n              <Button\n                type=\"inline\"\n                icon=\"icon-plus-square\"\n                className={f('zoom-button')}\n                title={'Click or use CTRL + mouse wheel up to to zoom in'}\n                onClick={() => {\n                  navigationTrack.current /*: any */\n                    ?.zoomIn();\n                }}\n              />\n            </div>\n          </div>\n          <nightingale-navigation\n            ref={navigationTrack}\n            length={length}\n            display-end={Math.min(numberOfBasesToDisplay, length)}\n            height={80}\n          />\n        </div>\n        {contacts && (\n          <div style={{ display: 'flex' }}>\n            <div\n              style={{\n                width: labelWidth,\n                flexShrink: 0,\n                fontWeight: 'bold',\n              }}\n            >\n              Contacts{' '}\n              <Tooltip\n                title={`\n                  <p>\n                    The color of the nodes indicates if there are less <span style=\"color:orange; background:white;\">●</span>\n                    or more <span style=\"color:blue; background:white;\">●</span> predicted contacts.\n                  </p>`}\n              >\n                <sup>\n                  <span\n                    className={f('small', 'icon', 'icon-common')}\n                    data-icon=\"&#xf129;\"\n                    aria-label={'description for contact track'}\n                  />\n                </sup>\n              </Tooltip>\n            </div>\n            <nightingale-links\n              id=\"contacts-track\"\n              length={length}\n              ref={linksTrack}\n              height={60}\n              min-probability={contactMinProbability}\n              min-distance={contactMinDistance}\n              use-ctrl-to-zoom\n            />\n          </div>\n        )}\n        <nightingale-msa\n          length={length}\n          height=\"600\"\n          display-end={Math.min(numberOfBasesToDisplay, length)}\n          use-ctrl-to-zoom\n          label-width={labelWidth}\n          ref={msaTrack}\n          color-scheme={colorscheme}\n          {...conservationOptions}\n        />\n      </nightingale-manager>\n    </>\n  );\n};\nAlignmentViewer.propTypes = {\n  type: T.string.isRequired,\n  colorscheme: T.string,\n  onConservationProgress: T.func,\n  setColorMap: T.func,\n  contacts: T.array,\n  contactMinDistance: T.number,\n  contactMinProbability: T.number,\n  data: dataPropType,\n  onAlignmentLoaded: T.func,\n  goToCustomLocation: T.func,\n  overlayConservation: T.bool,\n};\n\nconst mapStateToPropsForAlignment = createSelector(\n  (state) => state.settings.api,\n  (state) => state.customLocation.description,\n  (_, props) => props.type,\n  ({ protocol, hostname, port, root }, description, type) => {\n    // omit elements from description\n    const { ...copyOfDescription } = description;\n    if (description.main.key) {\n      copyOfDescription[description.main.key] = {\n        ...description[description.main.key],\n        detail: null,\n      };\n    }\n    // build URL\n    return format({\n      protocol,\n      hostname,\n      port,\n      pathname: root + descriptionToPath(copyOfDescription),\n      query: { annotation: type },\n    });\n  },\n);\n\nexport default loadData({\n  getUrl: mapStateToPropsForAlignment,\n  fetchOptions: {\n    responseType: 'gzip',\n  },\n  mapDispatchToProps: { goToCustomLocation },\n})(AlignmentViewer);\n","// extracted by mini-css-extract-plugin\nexport default {\"zoom-button\":\"Viewer_style__zoom-button___cd\"};","import React, { useState, useEffect } from 'react';\nimport { dataPropType } from 'higherOrder/loadData/dataPropTypes';\nimport T from 'prop-types';\n\nimport { connect } from 'react-redux';\nimport { createSelector } from 'reselect';\nimport { goToCustomLocation } from 'actions/creators';\n\nimport { format } from 'url';\n\n// $FlowFixMe\nimport descriptionToPath from 'utils/processDescription/descriptionToPath';\n\nimport Link from 'components/generic/Link';\nimport Tip from 'components/Tip';\nimport AlignmentViewer from './Viewer';\nimport DropDownButton from 'components/SimpleCommonComponents/DropDownButton';\n// $FlowFixMe\nimport Button from 'components/SimpleCommonComponents/Button';\n\nimport { foundationPartial } from 'styles/foundation';\nimport localStyle from './style.css';\nimport ipro from 'styles/interpro-new.css';\nimport fonts from 'EBI-Icon-fonts/fonts.css';\n\nconst f = foundationPartial(localStyle, ipro, fonts);\n\nconst Alignment = ({\n  type,\n  numSequences,\n  colorscheme,\n  onConservationProgress,\n  setDisplayingAlignment,\n  setColorMap,\n  overlayConservation,\n}) => {\n  const [forceShow, setForceShow] = useState(false);\n  const threshold = 1000;\n  const show = forceShow || numSequences < threshold;\n  useEffect(() => {\n    setDisplayingAlignment(show);\n  }, [show]);\n  useEffect(() => {\n    setForceShow(false);\n  }, [numSequences]);\n\n  return (\n    <div>\n      {show ? (\n        <AlignmentViewer\n          onConservationProgress={onConservationProgress}\n          setColorMap={setColorMap}\n          type={type}\n          num={numSequences}\n          colorscheme={colorscheme}\n          overlayConservation={overlayConservation}\n        />\n      ) : (\n        <div>\n          <p>\n            This alignment has {numSequences} sequences. This can cause memory\n            issues in your browser.\n          </p>\n          <p>\n            <Button onClick={() => setForceShow(true)}>Open alignment</Button>\n          </p>\n        </div>\n      )}\n    </div>\n  );\n};\nAlignment.propTypes = {\n  type: T.string,\n  numSequences: T.number,\n  colorscheme: T.string,\n  onConservationProgress: T.func,\n  setDisplayingAlignment: T.func,\n  setColorMap: T.func,\n  overlayConservation: T.bool,\n};\n\nconst AllowedColorschemes = [\n  'buried_index',\n  'clustal',\n  'clustal2',\n  'cinema',\n  'helix_propensity',\n  'hydro',\n  'lesk',\n  'mae',\n  'nucleotide',\n  'purine_pyrimidine',\n  'strand_propensity',\n  'taylor',\n  'turn_propensity',\n  'zappo',\n];\nconst EntryAlignments = ({\n  data,\n  customLocation,\n  type,\n  url,\n  showCtrlToZoomToast,\n  goToCustomLocation,\n}) => {\n  const tag = 'alignment:';\n  const [colorscheme, setColorscheme] = useState('clustal2');\n  const [conservastionProgress, setConservastionProgress] = useState(0);\n  // TODO: draw the legend using 👇🏽 the colorMap coming from events in the component.\n  const [colorMap, setColorMap] = useState({});\n  const [isDisplayingAlignment, setDisplayingAlignment] = useState(false);\n  const [overlayConservation, setOverlayConservation] = useState(false);\n\n  // eslint-disable-next-line camelcase\n  const types = Object.entries(data?.payload?.metadata?.entry_annotations || {})\n    .filter(([type]) => type.startsWith(tag))\n    .map(([type, count]) => [type.slice(tag.length), count])\n    .sort(([, aCount], [, bCount]) => aCount - bCount);\n  if (!types.length) return null;\n  const handleChange = (evt) => {\n    goToCustomLocation({\n      ...customLocation,\n      search: { type: evt.target.value },\n    });\n  };\n  const alignmentType = type || '';\n  const conservationOptions =\n    conservastionProgress === 1 ? {} : { disabled: true };\n  return (\n    <div className={f('row', 'column')}>\n      {alignmentType !== '' && showCtrlToZoomToast ? (\n        <Tip\n          body=\"You can Zoom in/out by pressing [ctrl] and scroll up/down. Alternatively, you can  drag the borders in the navigation component.\"\n          toastID=\"ctrlToZoom\"\n          settingsName=\"showCtrlToZoomToast\"\n        />\n      ) : null}\n      <label className={f('alignment-selector')}>\n        <span>Available alignments:</span>\n        <select\n          value={alignmentType}\n          onChange={handleChange}\n          onBlur={handleChange}\n        >\n          <option value=\"\" disabled>\n            Choose...\n          </option>\n          {types.map(([type, count]) => (\n            <option key={type} value={type}>\n              {type} ({count.toLocaleString()})\n            </option>\n          ))}\n        </select>\n      </label>\n      <div className={f('controllers')}>\n        {alignmentType !== '' && (\n          <>\n            {isDisplayingAlignment && (\n              <>\n                <label>\n                  Colors:\n                  <select\n                    value={colorscheme}\n                    onChange={(evt) => setColorscheme(evt.target.value)}\n                    onBlur={(evt) => setColorscheme(evt.target.value)}\n                  >\n                    {AllowedColorschemes.map((color) => (\n                      <option key={color}>{color}</option>\n                    ))}\n                    <option {...conservationOptions}>\n                      conservation\n                      {conservastionProgress < 1\n                        ? `[Calculating: ${(\n                            conservastionProgress * 100\n                          ).toFixed(2)}%]`\n                        : ''}\n                    </option>\n                  </select>\n                </label>\n                <label className={f({ disabled: conservastionProgress < 1 })}>\n                  Conservation:\n                  <input\n                    type=\"checkbox\"\n                    value={overlayConservation}\n                    onChange={() =>\n                      setOverlayConservation(!overlayConservation)\n                    }\n                    disabled={conservastionProgress < 1}\n                  />\n                </label>\n                <DropDownButton\n                  label=\"Legends\"\n                  extraClasses={f('dropdown-container')}\n                >\n                  <table className={f('legend-table')}>\n                    <tbody>\n                      {Object.entries(colorMap).map(([legend, color], i) => (\n                        <tr key={i}>\n                          <td style={{ background: color }}> </td>\n                          <td>{legend}</td>\n                        </tr>\n                      ))}\n                    </tbody>\n                  </table>\n                </DropDownButton>\n              </>\n            )}\n            <Link\n              buttonType=\"secondary\"\n              href={`${url}${tag}${alignmentType}&download`}\n              download={`${\n                data?.payload?.metadata?.accession || 'download'\n              }.alignment.${alignmentType}.gz`}\n            >\n              <span\n                className={f('icon', 'icon-common', 'icon-download')}\n                data-icon=\"&#xf019;\"\n              />{' '}\n              Download\n            </Link>\n          </>\n        )}\n      </div>\n      {alignmentType !== '' && (\n        <Alignment\n          colorscheme={colorscheme}\n          type={`${tag}${alignmentType}`}\n          numSequences={\n            data?.payload?.metadata?.entry_annotations[`${tag}${alignmentType}`]\n          }\n          onConservationProgress={setConservastionProgress}\n          setDisplayingAlignment={setDisplayingAlignment}\n          setColorMap={setColorMap}\n          overlayConservation={overlayConservation}\n        />\n      )}\n    </div>\n  );\n};\nEntryAlignments.propTypes = {\n  data: dataPropType,\n  customLocation: T.object,\n  type: T.string,\n  url: T.string,\n  showCtrlToZoomToast: T.bool,\n  goToCustomLocation: T.func,\n};\nconst mapStateToProps = createSelector(\n  (state) => state.customLocation,\n  (state) => state.customLocation?.search?.type,\n  (state) => {\n    const { protocol, hostname, port, root } = state.settings.api;\n    const description = state.customLocation.description;\n    const { ...copyOfDescription } = description;\n    if (description.main.key) {\n      copyOfDescription[description.main.key] = {\n        ...description[description.main.key],\n        detail: null,\n      };\n    }\n\n    return format({\n      protocol,\n      hostname,\n      port,\n      pathname: root + descriptionToPath(copyOfDescription),\n      query: { annotation: '' },\n    });\n  },\n  (state) => state.settings.notifications.showCtrlToZoomToast,\n  (customLocation, type, url, showCtrlToZoomToast) => ({\n    customLocation,\n    type,\n    url,\n    showCtrlToZoomToast,\n  }),\n);\n\nexport default connect(mapStateToProps, { goToCustomLocation })(\n  EntryAlignments,\n);\n","// extracted by mini-css-extract-plugin\nexport default {\"alignment-selector\":\"EntryAlignments_style__alignment-selector___d4\",\"controllers\":\"EntryAlignments_style__controllers___a1\",\"disabled\":\"EntryAlignments_style__disabled___f1\"};"],"names":["Tip","_ref","title","body","checkBoxLabel","ttl","toastID","addToast","changeSettingsRaw","settingsName","useEffect","checkBox","label","fn","propTypes","T","isRequired","connect","f","foundationPartial","fonts","defaultContactMinDistance","defaultContactMinProbability","AlignmentViewer","data","loading","payload","colorscheme","onConservationProgress","setColorMap","overlayConservation","contacts","contactMinDistance","contactMinProbability","onAlignmentLoaded","goToCustomLocation","msaTrack","useRef","linksTrack","navigationTrack","align","setAlign","useState","isReady","setReady","_ref2","promises","map","localName","customElements","whenDefined","Promise","all","apply","arguments","waitForWC","aln","Stockholm","formatedSeqs","seqname","name","sequence","seqdata","requestAnimationFrame","current","addEventListener","evt","detail","progress","getColorMap","event","_align$gs$AC$name","accession","gs","AC","replace","description","main","key","protein","db","p","React","Loading","length","columns","conservationOptions","id","style","display","width","flexShrink","fontWeight","textAlign","alignSelf","flexDirection","height","justifyContent","gap","rows","toLocaleString","Button","type","icon","className","onClick","_navigationTrack$curr","zoomOut","_navigationTrack$curr2","zoomIn","ref","Math","min","Tooltip","_extends","dataPropType","mapStateToPropsForAlignment","createSelector","state","settings","api","customLocation","_","props","_ref3","protocol","hostname","port","root","copyOfDescription","Object","assign","_objectDestructuringEmpty","format","pathname","descriptionToPath","query","annotation","loadData","getUrl","fetchOptions","responseType","mapDispatchToProps","ipro","Alignment","numSequences","setDisplayingAlignment","forceShow","setForceShow","show","num","AllowedColorschemes","EntryAlignments","_data$payload","_data$payload2","_data$payload3","url","showCtrlToZoomToast","tag","setColorscheme","conservastionProgress","setConservastionProgress","colorMap","isDisplayingAlignment","setOverlayConservation","types","entries","metadata","entry_annotations","filter","startsWith","_ref4","count","slice","sort","_ref5","_ref6","aCount","bCount","handleChange","search","target","value","alignmentType","disabled","onChange","onBlur","_ref7","color","toFixed","DropDownButton","extraClasses","_ref8","i","legend","background","Link","buttonType","href","download","mapStateToProps","_state$customLocation","notifications"],"sourceRoot":""}