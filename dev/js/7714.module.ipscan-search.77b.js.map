{"version":3,"file":"js/7714.module.ipscan-search.77b.js","mappings":"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","sources":["webpack://interpro7-client/./src/higherOrder/loadData/defaults/index.js","webpack://interpro7-client/./src/utils/block-event/index.js","webpack://interpro7-client/./src/components/IPScan/AdvancedOptions/AdvancedOption/index.tsx","webpack://interpro7-client/./src/components/IPScan/AdvancedOptions/index.tsx","webpack://interpro7-client/./src/components/IPScan/AdvancedOptions/style.css?4112","webpack://interpro7-client/./src/components/IPScan/Search/SequenceInput/InfoMessages/index.tsx","webpack://interpro7-client/./src/components/IPScan/Search/SequenceInput/InfoMessages/style.css?8727","webpack://interpro7-client/./src/components/IPScan/Search/SequenceInput/index.tsx","webpack://interpro7-client/./src/components/IPScan/Search/index.tsx","webpack://interpro7-client/./src/components/ToggleSwitch/index.tsx","webpack://interpro7-client/./src/components/ToggleSwitch/style.css?e633","webpack://interpro7-client/./src/higherOrder/loadData/defaults/relatedCounters.ts","webpack://interpro7-client/./src/higherOrder/loadData/extract-params/index.ts","webpack://interpro7-client/./src/higherOrder/loadData/getFetch.ts","webpack://interpro7-client/./src/higherOrder/loadData/ts/index.tsx","webpack://interpro7-client/./src/utils/cancelable/index.ts","webpack://interpro7-client/./src/components/IPScan/Search/style.css?0fc7","webpack://interpro7-client/./src/pages/Search/style.css?d59f","webpack://interpro7-client/./src/styles/blocks.css?e075"],"sourcesContent":["import { createSelector } from 'reselect';\nimport { format } from 'url';\n\nimport descriptionToPath from 'utils/processDescription/descriptionToPath';\n\nimport config from 'config';\nimport { getNeededCountersForSubpages } from './relatedCounters';\n\nconst MULTIPLE_SLASHES = /([^:])\\/{2,}/g;\n\nconst DBS_WITH_SETS = ['pfam', 'cdd', 'pirsf'];\n\nexport const cleanUpMultipleSlashes = (str = '') =>\n  str.replace(MULTIPLE_SLASHES, '$1/');\n\nexport const getUrlForMeta = createSelector(\n  (state) => state.settings.api,\n  ({ protocol, hostname, port, root }) =>\n    cleanUpMultipleSlashes(\n      format({\n        protocol,\n        hostname,\n        port,\n        pathname: `${root}`,\n      }),\n    ),\n);\n\nexport const getUrlForRelease = (repoKey) =>\n  createSelector(\n    () => config.github[repoKey],\n    ({ owner, repo }) =>\n      `https://api.github.com/repos/${owner}/${repo}/releases/latest`,\n  );\nexport const getReadTheDocsURL = (relativePath) =>\n  createSelector(\n    () => config.github.ReadTheDocs,\n    ({ owner, repo, branch = 'master' }) =>\n      `https://raw.githubusercontent.com/${owner}/${repo}/${branch}/docs/${relativePath}`,\n  );\n\nexport const getUrl = createSelector(\n  // this one is just to memoize it\n  (key) => key,\n  (key) =>\n    createSelector(\n      (state) => state.settings[key],\n      (state) => state.settings.navigation.pageSize,\n      (state) => state.customLocation.description,\n      (state) => state.customLocation.search,\n      (state) => state.customLocation.hash,\n      // eslint-disable-next-line\n      (\n        { protocol, hostname, port, root },\n        settingsPageSize,\n        description,\n        search,\n        hash,\n      ) => {\n        const _search =\n          description.main.key && description[description.main.key].accession\n            ? {}\n            : { ...(search || {}) };\n        if (\n          !description[description.main.key].accession ||\n          Object.values(description).find(\n            ({ isFilter, db }) => isFilter && db,\n          ) ||\n          (description.entry && description.entry.memberDB)\n        )\n          _search.page_size = _search.page_size || settingsPageSize;\n\n        if (hash === 'grid') {\n          switch (description.main.key) {\n            case 'entry':\n              _search.extra_fields =\n                'short_name,description,literature,counters:protein-ida-taxonomy-structure';\n              if (DBS_WITH_SETS.includes(description.entry.db))\n                _search.extra_fields += '-set';\n              break;\n            case 'protein':\n              _search.extra_fields = 'counters:entry-structure';\n              break;\n            case 'structure':\n              _search.extra_fields = 'counters:entry-protein-taxonomy';\n              break;\n            case 'taxonomy':\n              _search.extra_fields =\n                'lineage,counters:entry-protein-structure-proteome';\n              break;\n            case 'proteome':\n              _search.extra_fields = 'counters:entry-protein-structure';\n              break;\n            case 'set':\n              _search.extra_fields = 'counters,description';\n              break;\n            default:\n              _search.extra_fields = undefined;\n              break;\n          }\n        }\n        if (hash === 'table') {\n          switch (description.main.key) {\n            case 'entry':\n              _search.extra_fields = 'short_name';\n              break;\n            case 'taxonomy':\n            case 'proteome':\n              _search.extra_fields = 'counters:entry-protein';\n              break;\n            case 'set':\n              _search.extra_fields = 'counters:entry,description';\n              break;\n            default:\n              break;\n          }\n        }\n        if (hash === 'tree' && _search.search !== undefined) {\n          delete _search.search;\n        }\n\n        // subpages will get the reverseURL, so its base dataLoader shold only get the accession payload\n        const _description =\n          description.main.key && description[description.main.key].accession\n            ? {\n                main: description.main,\n                [description.main.key]: description[description.main.key],\n              }\n            : description;\n\n        const cursor = _search.cursor;\n        if (cursor) delete _search.cursor;\n\n        const urlTmp = cleanUpMultipleSlashes(\n          format({\n            protocol,\n            hostname,\n            port,\n            pathname: root + descriptionToPath(_description),\n            query: _search,\n          }),\n        );\n        // Cursors can have symbols that shouldn't be escaped\n        if (cursor) {\n          const sep = urlTmp.indexOf('?') === -1 ? '?' : '&';\n          return `${urlTmp}${sep}cursor=${cursor}`;\n        }\n        return urlTmp;\n      },\n    ),\n);\n\nexport const getReversedUrl = createSelector(\n  (state) => state.settings.api,\n  (state) => state.settings.navigation.pageSize,\n  (state) => state.customLocation.description,\n  (state) => state.customLocation.search,\n  (state) => state.customLocation.hash,\n  (\n    { protocol, hostname, port, root },\n    settingsPageSize,\n    description,\n    search,\n    hash,\n  ) => {\n    // copy of description, to modify it after\n    const newDesc = {};\n    const _search = { ...search };\n    if (hash === 'tree' && _search.search !== undefined) {\n      delete _search.search;\n    }\n    if (_search.model_page !== undefined) {\n      delete _search.model_page;\n    }\n\n    let newMain;\n    for (const [key, value] of Object.entries(description)) {\n      newDesc[key] = key === 'other' ? [...value] : { ...value };\n      if (value.isFilter && value.order === 1) {\n        newMain = key;\n        newDesc[key].isFilter = false;\n      }\n    }\n    newDesc[description.main.key].isFilter = true;\n    newDesc.main.key = newMain;\n    const newQuery = {\n      ..._search,\n      extra_fields: undefined,\n      page_size: search.page_size || settingsPageSize,\n    };\n    if (newMain === 'entry') {\n      newQuery.extra_fields = 'short_name';\n    }\n    const counters = getNeededCountersForSubpages(\n      description.main.key,\n      newMain,\n    );\n    if (counters) {\n      if (newQuery.extra_fields) newQuery.extra_fields += `,${counters}`;\n      else newQuery.extra_fields = counters;\n    }\n\n    let url = format({\n      protocol,\n      hostname,\n      port,\n      pathname: root + descriptionToPath(newDesc),\n      query: newQuery,\n    });\n    if (description.main.key === 'entry' && newMain === 'taxonomy') {\n      url = url.replace('/entry/', '/protein/entry/');\n    }\n    if (description.main.key === 'taxonomy' && newMain === 'proteome') {\n      url = url.replace('/taxonomy/', '/protein/taxonomy/');\n    }\n    return url;\n  },\n);\nexport const includeTaxonFocusedOnURL = (url, focused) => {\n  const hasTaxIdRegex = /taxonomy\\/uniprot\\/\\d+/gi;\n  if (focused && +focused !== 1 && !url.match(hasTaxIdRegex)) {\n    return url.replace(/taxonomy\\/uniprot\\//, `/taxonomy/uniprot/${focused}/`);\n  }\n  return url;\n};\n\nexport const getUrlForApi = (...parameters) =>\n  getUrl('api')(...parameters)\n    .replace('/entry_alignments', '/')\n    .replace('/logo', '/')\n    .replace('/alphafold', '/')\n    .replace('/domain_architecture', '/')\n    .replace('/interactions', '/')\n    .replace('/subfamilies', '/')\n    .replace('/pathways', '/')\n    .replace('/feedback', '/')\n    .replace('/sequence', '/')\n    .replace('/similar_proteins', '/')\n    .replace('/curation', '/')\n    // To simplify set calls to use a single endpoint\n    .replace(/\\/set\\/[a-zA-Z0-9]+\\/entry\\/([a-zA-Z0-9]+)\\//, '/set/$1/');\n","// @flow\nexport default (f /*: function */) => (e /*: Event */) => {\n  e.preventDefault();\n  e.stopPropagation();\n  return f(e);\n};\n","import React, { PropsWithChildren } from 'react';\n\nimport Tooltip from 'components/SimpleCommonComponents/Tooltip';\n\ntype Props = PropsWithChildren<{\n  name: string;\n  value: string;\n  title?: string;\n  defaultChecked: boolean;\n}>;\n\n// TODO: it has this state, but I don't think was used.\n// this.state = {\n//     checked: !!props.defaultChecked,\n//   };\nconst AdvancedOption = ({\n  name,\n  value,\n  children,\n  title,\n  defaultChecked,\n}: Props) => {\n  const output = (\n    <>\n      <input\n        name={name}\n        defaultChecked={defaultChecked}\n        type=\"checkbox\"\n        value={value}\n        data-defaultchecked={defaultChecked}\n      />{' '}\n      {children}\n    </>\n  );\n  if (!title) return output;\n  return (\n    <label>\n      <Tooltip title={title}>{output}</Tooltip>\n    </label>\n  );\n};\n\nexport default AdvancedOption;\n","import React, { useRef } from 'react';\nimport { createSelector } from 'reselect';\nimport { format } from 'url';\n\nimport loadData from 'higherOrder/loadData/ts';\n\nimport Button from 'components/SimpleCommonComponents/Button';\nimport ToggleSwitch from 'components/ToggleSwitch';\n\nimport AdvancedOption from './AdvancedOption';\n\nimport cssBinder from 'styles/cssBinder';\n\nimport local from './style.css';\nimport localParent from '../Search/style.css';\n\nconst css = cssBinder(local, localParent);\n\nconst mdb1Values = new Set([\n  'CDD',\n  'HAMAP',\n  'Panther',\n  'PfamA',\n  'PIRSF',\n  'PRINTS',\n  'PrositeProfiles',\n  'SMART',\n  'NCBIfam',\n  'PrositePatterns',\n  'SFLD',\n]);\nconst mdb2Values = new Set(['Gene3d', 'SuperFamily']);\nconst otherValues = new Set([\n  'Coils',\n  'MobiDBLite',\n  'Phobius',\n  'SignalP',\n  'TMHMM',\n]);\nconst ignoreList = new Set();\n\nconst labels = new Map([\n  ['PfamA', 'Pfam'],\n  ['Panther', 'PANTHER'],\n  ['SuperFamily', 'SUPERFAMILY'],\n  ['Gene3d', 'CATH-Gene3D'],\n  ['PrositeProfiles', 'PROSITE profiles'],\n  ['PrositePatterns', 'PROSITE patterns'],\n]);\n\nconst groupApplications = (\n  applications: Array<IprscanParameterValue>,\n  initialOptions?: InterProLocationSearch,\n) => {\n  const mdb1 = [];\n  const mdb2 = [];\n  const other = [];\n  const noCategory = [];\n  const appOptions = initialOptions?.applications as Array<string>;\n  for (const application of applications) {\n    if (appOptions?.length) {\n      application.defaultValue = appOptions.includes(application.value);\n    }\n    if (mdb1Values.has(application.value)) mdb1.push(application);\n    else if (mdb2Values.has(application.value)) mdb2.push(application);\n    else if (otherValues.has(application.value)) other.push(application);\n    else if (!ignoreList.has(application.value)) noCategory.push(application);\n  }\n  return { mdb1, mdb2, other, noCategory };\n};\n\nconst applicationToCheckbox = ({\n  value,\n  defaultValue,\n  properties,\n}: {\n  value: string;\n  defaultValue: boolean;\n  properties: { properties: Array<{ value: string }> };\n}) => (\n  <AdvancedOption\n    name=\"appl\"\n    value={value}\n    defaultChecked={defaultValue}\n    title={properties && properties.properties[0].value}\n    key={value}\n  >\n    {labels.get(value) || value}\n  </AdvancedOption>\n);\n\nconst toggleAll = (checked: boolean, node: HTMLElement | null) => {\n  if (!node) return;\n  for (const checkbox of node.querySelectorAll<HTMLInputElement>(\n    'input[name=\"appl\"]',\n  )) {\n    checkbox.checked = checked;\n  }\n};\n\ntype Props = {\n  title?: string;\n  initialOptions?: InterProLocationSearch;\n  changeTitle: () => void;\n};\n\ninterface LoadedProps\n  extends Props,\n    LoadDataProps<IprscanParametersDetailsPayload> {}\n\nexport const AdvancedOptions = ({\n  data,\n  title,\n  initialOptions,\n  changeTitle,\n}: LoadedProps) => {\n  const fieldSetRef = useRef<HTMLFieldSetElement>(null);\n  if (!data) return null;\n  const { loading, payload, ok } = data;\n  if (loading) return 'Loading…';\n  if (!ok || !payload) return 'Failed…';\n  const { mdb1, mdb2, other, noCategory } = groupApplications(\n    payload.values.values,\n    initialOptions,\n  );\n  const selectAll = (event: Event) => {\n    event.preventDefault();\n    toggleAll(true, fieldSetRef.current);\n  };\n\n  const unselectAll = (event: Event) => {\n    event.preventDefault();\n    toggleAll(false, fieldSetRef.current);\n  };\n\n  return (\n    <section>\n      <details className={css('option-style')}>\n        <summary>\n          <span className={css('triangle')}>►</span>\n          <span>Advanced options</span>\n        </summary>\n        <fieldset className={css('new-fieldset')}>\n          <legend>Job configuration</legend>\n          <label style={{ marginBottom: '1rem' }}>\n            <ToggleSwitch\n              id=\"seqtype\"\n              name=\"seqtype\"\n              switchCond={false}\n              label=\"Sequence type:\"\n              size=\"small\"\n              offValue=\"protein (amino acids)\"\n              onValue=\"DNA/RNA (nucleotides)\"\n              width=\"11rem\"\n            />\n          </label>\n          <br />\n          <label style={{ marginBottom: '1rem' }}>\n            <ToggleSwitch\n              id=\"stay\"\n              name=\"stay\"\n              switchCond={false}\n              label=\"Create another job after this one:\"\n              size=\"small\"\n            />\n          </label>\n          <label className={css('new-input-group')}>\n            <span className={css('new-input-group-label')}>Job title</span>\n            <input\n              type=\"text\"\n              className={css('input-group-field')}\n              name=\"local-title\"\n              defaultValue={title}\n              onChange={changeTitle}\n              placeholder=\"Give this job a local title (only visible on this browser)\"\n            />\n          </label>\n        </fieldset>\n        <fieldset className={css('new-fieldset')} ref={fieldSetRef}>\n          <legend>Applications</legend>\n          <p>{payload.description}</p>\n          <div className={css('button-group', 'line-with-buttons')}>\n            <Button type=\"tertiary\" onClick={selectAll}>\n              Select all\n            </Button>\n            <Button type=\"tertiary\" onClick={unselectAll}>\n              Unselect all\n            </Button>\n          </div>\n          <fieldset className={css('new-fieldset')}>\n            <legend>Member databases</legend>\n            <fieldset className={css('new-fieldset')}>\n              <legend>Families, domains, sites & repeats</legend>\n              {mdb1.map(applicationToCheckbox)}\n            </fieldset>\n            <fieldset className={css('new-fieldset')}>\n              <legend>Structural domains</legend>\n              {mdb2.map(applicationToCheckbox)}\n            </fieldset>\n          </fieldset>\n          <fieldset className={css('new-fieldset')}>\n            <legend>Other sequence features</legend>\n            {other.map(applicationToCheckbox)}\n            {noCategory.map(applicationToCheckbox)}\n          </fieldset>\n        </fieldset>\n      </details>\n    </section>\n  );\n};\n\nconst getUrlFromState = createSelector(\n  (state: GlobalState) => state.settings.ipScan,\n  ({ protocol, hostname, port, root }) =>\n    format({\n      protocol,\n      hostname,\n      port,\n      pathname: `${root}/parameterdetails/appl`,\n    }),\n);\n\nexport default loadData(getUrlFromState as LoadDataParameters)(AdvancedOptions);\n","// extracted by mini-css-extract-plugin\nexport default {\"new-fieldset\":\"AdvancedOptions_style__new-fieldset___d0\",\"new-input-group\":\"AdvancedOptions_style__new-input-group___b9\",\"new-input-group-label\":\"AdvancedOptions_style__new-input-group-label___eb\",\"option-style\":\"AdvancedOptions_style__option-style___fb\",\"triangle\":\"AdvancedOptions_style__triangle___ce\"};","import React from 'react';\n\nimport Callout from 'components/SimpleCommonComponents/Callout';\n\nimport { MAX_NUMBER_OF_SEQUENCES } from '../..';\nimport { SequenceIssue } from '..';\n\nimport cssBinder from 'styles/cssBinder';\n\nimport local from './style.css';\n\nconst css = cssBinder(local);\n\ntype Props = {\n  sequenceIssues: Array<SequenceIssue>;\n};\n\nconst InfoMessages = ({ sequenceIssues }: Props) => {\n  const allOk = sequenceIssues.length === 0;\n  return (\n    <Callout\n      type={allOk ? 'announcement' : 'warning'}\n      style={{\n        backgroundColor: 'var(--colors-secondary-header)',\n      }}\n      alt\n      className={css('info-message')}\n    >\n      {allOk ? (\n        <div>\n          <span role=\"img\" aria-label=\"warning\">\n            ✅\n          </span>{' '}\n          Valid Sequence.\n        </div>\n      ) : (\n        <ul className={css('warnings')}>\n          {sequenceIssues.map((issue) => {\n            switch (issue.type) {\n              case 'invalidCharacters':\n                return (\n                  <li>\n                    The sequence with the header below has invalid characters.{' '}\n                    <div className={css('header')}>{issue.header}</div>\n                  </li>\n                );\n              case 'tooShort':\n                return (\n                  <li>\n                    The sequence with the header below is too short (min: three\n                    characters).{' '}\n                    <div className={css('header')}>{issue.header}</div>\n                  </li>\n                );\n              case 'tooMany':\n                return (\n                  <li>\n                    There are too many sequences. The maximum allowed is{' '}\n                    {MAX_NUMBER_OF_SEQUENCES}.{' '}\n                  </li>\n                );\n              case 'duplicatedHeaders':\n                return (\n                  <li>\n                    There are multiple sequences with the same header:{' '}\n                    <div className={css('header')}>{issue.header}</div>\n                  </li>\n                );\n              default:\n                return null;\n            }\n          })}\n        </ul>\n      )}\n    </Callout>\n  );\n};\n\nexport default InfoMessages;\n","// extracted by mini-css-extract-plugin\nexport default {\"info-message\":\"InfoMessages_style__info-message___d7\",\"header\":\"InfoMessages_style__header___af\",\"warnings\":\"InfoMessages_style__warnings___e0\"};","import React, {\n  PropsWithChildren,\n  useEffect,\n  useImperativeHandle,\n  useRef,\n  useState,\n} from 'react';\n\nimport {\n  Editor,\n  EditorState,\n  ContentState,\n  CompositeDecorator,\n  Modifier,\n  convertToRaw,\n  ContentBlock,\n  RawDraftContentBlock,\n} from 'draft-js';\n\nimport { MAX_NUMBER_OF_SEQUENCES } from '..';\n\nimport cssBinder from 'styles/cssBinder';\n\nimport blocks from 'styles/blocks.css';\nimport local from '../style.css';\nimport searchPageCss from 'pages/Search/style.css';\nimport buttonCSS from 'components/SimpleCommonComponents/Button/style.css';\nimport InfoMessages from './InfoMessages';\n\nconst css = cssBinder(local, blocks, searchPageCss, buttonCSS);\n\nconst MIN_LENGTH = 3;\n\nconst classedSpan = (className: string) => {\n  const Span = ({\n    offsetKey,\n    children,\n  }: PropsWithChildren<{ offsetKey: string }>) => {\n    return (\n      <span className={className} data-offset-key={offsetKey}>\n        {children}\n      </span>\n    );\n  };\n  return Span;\n};\n\nconst strategy =\n  (re: RegExp) =>\n  (block: ContentBlock, cb: (start: number, end: number) => void) => {\n    const text = block.getText();\n    let match;\n    while ((match = re.exec(text))) {\n      cb(match.index, match.index + match[0].length);\n    }\n  };\n\nconst doesPreviousBlockHasContent = (\n  block: ContentBlock,\n  contentState: ContentState,\n): boolean => {\n  const before = contentState.getBlockBefore(block.getKey());\n  if (!before) return true;\n  const trimmed = before.getText().trim();\n  if (trimmed === '' || trimmed.startsWith(';'))\n    return doesPreviousBlockHasContent(before, contentState);\n  return !trimmed.startsWith('>');\n};\n\nconst commentsStrategy =\n  (re: RegExp, forErrors = false) =>\n  (\n    block: ContentBlock,\n    cb: (start: number, end: number) => void,\n    contentState: ContentState,\n  ) => {\n    const text = block.getText();\n    let match;\n    while ((match = re.exec(text))) {\n      const prevSequenceOK = doesPreviousBlockHasContent(block, contentState);\n      if (!forErrors && (prevSequenceOK || text.trim().startsWith(';')))\n        cb(match.index, match.index + match[0].length);\n      if (forErrors && !prevSequenceOK)\n        cb(match.index, match.index + match[0].length);\n    }\n  };\n\nconst compositeDecorator = new CompositeDecorator([\n  {\n    strategy: commentsStrategy(/^\\s*[;].*$/gm),\n    component: classedSpan(css('comment')),\n  },\n  {\n    strategy: commentsStrategy(/^\\s*[>].*$/gm),\n    component: classedSpan(css('fasta-header')),\n  },\n  {\n    strategy: commentsStrategy(/^\\s*[>].*$/gm, true),\n    component: classedSpan(css('invalid-comment')),\n  },\n  {\n    strategy: strategy(/[^a-z]+/gi),\n    component: classedSpan(css('invalid-letter')),\n  },\n]);\n\nconst headerRE = /^\\s*>.*$/m;\nconst IUPACProtRE = /^[a-z\\s]*$/im;\n\nconst trimSequenceLines = (lines: Array<string>) =>\n  lines\n    .map((l) => l.trim()) // trimming\n    .map((l) => (l.startsWith(';') ? false : l)) // removing comments\n    .filter(Boolean) as Array<string>;\n\nconst addFastAHeaderIfNeeded = (\n  editorState: EditorState,\n  lines: Array<string>,\n) => {\n  let incrementalId = 1;\n  const minLengthForHeader = 3;\n  const currentContent = editorState.getCurrentContent();\n  if (currentContent.hasText()) {\n    const firstLine = (lines?.[0] || '').trim();\n    const hasHeader = firstLine.startsWith('>');\n    if (!hasHeader && firstLine.length > minLengthForHeader) {\n      const newHeader = `Sequence${incrementalId++}`;\n      const header = `>${newHeader}`;\n      // this.setState({ title: newHeader });\n      lines.splice(0, 0, header);\n      const newState = EditorState.createWithContent(\n        ContentState.createFromText(lines.join('\\n')),\n        compositeDecorator,\n      );\n      return EditorState.moveFocusToEnd(newState);\n    }\n  }\n  return null;\n};\n\nconst hasContentInNextLine = (\n  lines: Array<{ text: string }>,\n  i: number,\n): boolean => {\n  if (i + 1 >= lines.length) return false;\n  const line = lines[i + 1].text.trim();\n  if (line.startsWith(';') || line === '')\n    return hasContentInNextLine(lines, i + 1);\n  if (line.startsWith('>')) return false;\n  return true;\n};\n\nexport const cleanUpBlocks = (blocks: RawDraftContentBlock[]) => {\n  const headers: Record<string, number> = {};\n  return blocks\n    .map(({ text }, i, lines) => {\n      const line = text.trim();\n      if (!line) return null;\n      if (line.startsWith(';')) return line;\n      if (line.startsWith('>')) {\n        let newLine = line;\n        const header = line.slice(1).trim();\n        if (header in headers) {\n          headers[header]++;\n          newLine += ` - ${headers[header]}`;\n        } else {\n          headers[header] = 1;\n        }\n        return hasContentInNextLine(lines, i) ? newLine : null;\n      }\n      return line.replace(/[^a-z\\s]/gi, '').trim();\n    })\n    .filter(Boolean)\n    .join('\\n');\n};\n\nexport type SequenceIssue = {\n  type: 'invalidCharacters' | 'tooShort' | 'tooMany' | 'duplicatedHeaders';\n  header?: string;\n  detail?: string;\n};\n\nexport const checkLines = (lines: Array<string>): Array<SequenceIssue> => {\n  const issues: Array<SequenceIssue> = [];\n  let count = 0;\n  let firstLine = true;\n  let currentHeader = '';\n  const headersCount: Record<string, number> = {};\n  let numberOfSequences = 0;\n  const trimmedLines = trimSequenceLines(lines);\n  for (const line of trimmedLines) {\n    if (headerRE.test(line)) {\n      if (!firstLine && count < MIN_LENGTH)\n        issues.push({ type: 'tooShort', header: currentHeader });\n      currentHeader = line;\n      count = 0;\n      numberOfSequences++;\n      const header = line.slice(1).trim();\n      if (!headersCount[header]) headersCount[header] = 1;\n      else {\n        headersCount[header]++;\n        issues.push({\n          type: 'duplicatedHeaders',\n          header: `> ${header}`,\n        });\n      }\n    } else {\n      if (!IUPACProtRE.test(line)) {\n        issues.push({\n          type: 'invalidCharacters',\n          detail: 'Invalid characters',\n          header: currentHeader,\n        });\n      }\n      count += line.trim().length;\n    }\n    firstLine = false;\n  }\n  // last sequence\n  if (count < MIN_LENGTH)\n    issues.push({ type: 'tooShort', header: currentHeader });\n  if (numberOfSequences > MAX_NUMBER_OF_SEQUENCES) {\n    issues.push({ type: 'tooMany' });\n  }\n  return issues;\n};\ntype Props = {\n  value?: string | null;\n  onChecksChange?: (issues: Array<SequenceIssue>) => void;\n};\n\nexport type SequenceInputHandle = {\n  reset: (text?: string) => void;\n  cleanUp: () => void;\n  focusEditor: () => void;\n  getContent: () => string;\n  sequenceIssues: Array<SequenceIssue>;\n  hasText: () => boolean;\n};\n\nconst SequenceInput = React.forwardRef<SequenceInputHandle, Props>(\n  ({ value, onChecksChange }: Props, ref) => {\n    const editorRef = useRef<Editor>(null);\n    const [editorState, setEditorState] = useState<EditorState>(\n      EditorState.createEmpty(compositeDecorator),\n    );\n    const [issues, setIssues] = useState<Array<SequenceIssue>>([]);\n\n    const runChecks = (lines: Array<string>) => {\n      const newIssues: Array<SequenceIssue> = checkLines(lines);\n\n      if (newIssues !== issues) {\n        setIssues(newIssues);\n        if (onChecksChange) {\n          onChecksChange(newIssues);\n        }\n      }\n    };\n    const setNewText = (text: string) => {\n      const editorState = EditorState.createWithContent(\n        ContentState.createFromText(decodeURIComponent(text)),\n        compositeDecorator,\n      );\n      const lines = convertToRaw(editorState.getCurrentContent()).blocks.map(\n        (block) => block.text,\n      );\n      runChecks(lines);\n\n      setEditorState(editorState);\n    };\n    useEffect(() => {\n      if (!value) return;\n      setNewText(value);\n    }, [value]);\n\n    const reset = (text?: string) => {\n      setNewText(text || '');\n    };\n\n    const cleanUp = () => {\n      const blocks = convertToRaw(editorState.getCurrentContent()).blocks;\n      const cleanedText = cleanUpBlocks(blocks);\n      setNewText(cleanedText);\n    };\n    const focusEditor = () => {\n      if (editorRef.current) editorRef.current.focus();\n    };\n    const getContent = () => {\n      return convertToRaw(editorState.getCurrentContent())\n        .blocks.map((block) => block.text)\n        .join('\\n');\n    };\n    const hasText = () => editorState.getCurrentContent().hasText();\n\n    useImperativeHandle(ref, () => ({\n      reset,\n      cleanUp,\n      focusEditor,\n      getContent,\n      sequenceIssues: issues,\n      hasText,\n    }));\n\n    const handleChange = (newEditorState: EditorState): void => {\n      const lines = convertToRaw(newEditorState.getCurrentContent()).blocks.map(\n        (block) => block.text,\n      );\n      const stateWithHeader = addFastAHeaderIfNeeded(newEditorState, lines);\n      if (stateWithHeader) {\n        handleChange(stateWithHeader);\n        return;\n      }\n      runChecks(lines);\n      setEditorState(newEditorState);\n    };\n\n    const handlePastedText = (pasted: string): 'handled' => {\n      const blockMap = ContentState.createFromText(pasted).getBlockMap();\n      const newEditorState = EditorState.push(\n        editorState,\n        Modifier.replaceWithFragment(\n          editorState.getCurrentContent(),\n          editorState.getSelection(),\n          blockMap,\n        ),\n        'insert-fragment',\n      );\n      handleChange(newEditorState);\n      return 'handled';\n    };\n    const allOk = issues.length === 0;\n\n    return (\n      <section>\n        <div onClick={focusEditor} role=\"presentation\">\n          <div\n            className={css('editor', {\n              'invalid-block': !allOk && hasText(),\n              'valid-block': allOk && hasText(),\n            })}\n          >\n            <Editor\n              placeholder=\"Enter your sequence\"\n              editorState={editorState}\n              // handleDroppedFiles={handleDroppedFiles}\n              onChange={handleChange}\n              handlePastedText={handlePastedText}\n              ref={editorRef}\n            />\n          </div>\n        </div>\n        {hasText() && <InfoMessages sequenceIssues={issues} />}\n      </section>\n    );\n  },\n);\n\nSequenceInput.displayName = 'SequenceInput';\n\nexport default SequenceInput;\n","import React, { FormEvent, PureComponent, RefObject } from 'react';\nimport { connect } from 'react-redux';\nimport { createSelector } from 'reselect';\nimport { Helmet } from 'react-helmet-async';\n\nimport { createJob, goToCustomLocation } from 'actions/creators';\nimport loadable from 'higherOrder/loadable';\n\nimport AdvancedOptions from 'components/IPScan/AdvancedOptions';\nimport Redirect from 'components/generic/Redirect';\nimport Link from 'components/generic/Link';\nimport Callout from 'components/SimpleCommonComponents/Callout';\nimport Button from 'components/SimpleCommonComponents/Button';\n\nimport id from 'utils/cheap-unique-id';\nimport blockEvent from 'utils/block-event';\nimport { askNotificationPermission } from 'utils/browser-notifications';\nimport { schemaProcessDataPageSection } from 'schema_org/processors';\n\nimport SequenceInput, {\n  SequenceIssue,\n  SequenceInputHandle,\n} from './SequenceInput';\nimport example from './example.fasta';\n\nimport cssBinder from 'styles/cssBinder';\n\nimport blocks from 'styles/blocks.css';\nimport local from './style.css';\nimport searchPageCss from 'pages/Search/style.css';\nimport buttonCSS from 'components/SimpleCommonComponents/Button/style.css';\nimport fonts from 'EBI-Icon-fonts/fonts.css';\n\nconst css = cssBinder(searchPageCss, local, blocks, buttonCSS, fonts);\n\nexport const MAX_NUMBER_OF_SEQUENCES = 100;\n\nconst SchemaOrgData = loadable({\n  loader: () => import(/* webpackChunkName: \"schemaOrg\" */ 'schema_org'),\n  loading: () => null,\n});\n\nconst checkedSelectorFor = (name: string) => `input[name=\"${name}\"]:checked`;\n\nconst getCheckedApplications = (form: HTMLFormElement) =>\n  Array.from(\n    form.querySelectorAll<HTMLInputElement>(checkedSelectorFor('appl')),\n    (input: HTMLInputElement) => input.value,\n  );\n\nconst isXChecked = (x: string) => (form: HTMLElement) =>\n  !!form.querySelector(checkedSelectorFor(x));\n\nconst isStayChecked = isXChecked('stay');\n\ntype Props = {\n  createJob: typeof createJob;\n  goToCustomLocation: typeof goToCustomLocation;\n  ipScan?: ParsedURLServer;\n  value?: string | null;\n  main?: string;\n  search?: InterProLocationSearch;\n};\n\ntype State = {\n  title?: string;\n  initialAdvancedOptions?: InterProLocationSearch;\n  submittedJob: string | null;\n  sequenceIssues: Array<SequenceIssue>;\n  dragging: boolean;\n};\n\nexport class IPScanSearch extends PureComponent<Props, State> {\n  _formRef: RefObject<HTMLFormElement>;\n  _editorRef: RefObject<SequenceInputHandle>;\n  sequenceToSet?: string | null;\n\n  constructor(props: Props) {\n    super(props);\n\n    let initialAdvancedOptions = undefined;\n\n    if (props.search) {\n      initialAdvancedOptions = props.search;\n    }\n    this.state = {\n      title: undefined,\n      initialAdvancedOptions,\n      submittedJob: null,\n      sequenceIssues: [],\n      dragging: false,\n    };\n\n    this._formRef = React.createRef();\n    this._editorRef = React.createRef();\n    if (this.props.value) this.sequenceToSet = this.props.value;\n  }\n\n  componentDidUpdate() {\n    if (this.sequenceToSet && this._editorRef.current) {\n      this._handleReset(this.sequenceToSet);\n      this.sequenceToSet = null;\n    }\n  }\n\n  changeTitle = () => {\n    const newTitle = (\n      this._formRef.current?.querySelector<HTMLInputElement>(\n        'input[name=\"local-title\"]',\n      )?.value || ''\n    ).trim();\n    this.setState({\n      title: newTitle,\n    });\n  };\n\n  _handleReset = (text?: string | unknown) => {\n    if (this._formRef.current && typeof text !== 'string') {\n      const inputsToReset = Array.from(\n        this._formRef.current.querySelectorAll<HTMLInputElement>(\n          'input[name]:not([name=\"stay\"])',\n        ),\n      );\n      for (const input of inputsToReset) {\n        input.checked = !!input.dataset.defaultchecked;\n      }\n    }\n\n    this.setState(\n      {\n        dragging: false,\n        title: undefined,\n        submittedJob: null,\n      },\n      () => this._editorRef.current?.focusEditor(),\n    );\n    this._editorRef.current?.reset(typeof text === 'string' ? text : undefined);\n  };\n\n  _handleSubmit = (event: FormEvent) => {\n    event.preventDefault();\n    if (!this._formRef.current) return;\n    const editorContent = this._editorRef.current?.getContent();\n    if (!editorContent) return;\n    const localID = id(`internal-${Date.now()}`);\n    const entries =\n      editorContent.split('\\n').filter((line) => line.trim().startsWith('>'))\n        .length || 1;\n    this.props.createJob({\n      metadata: {\n        localID,\n        entries,\n        group: this.state.title,\n        type: 'InterProScan',\n        seqtype: isXChecked('seqtype')(this._formRef.current) ? 'n' : 'p',\n      },\n      data: {\n        input: editorContent,\n        applications: getCheckedApplications(this._formRef.current),\n      },\n    });\n    // Request browser notification\n    askNotificationPermission();\n\n    if (isStayChecked(this._formRef.current)) {\n      this._handleReset();\n      this.setState({ submittedJob: localID });\n    } else {\n      this.props.goToCustomLocation({\n        description: {\n          main: { key: 'result' },\n          result: { type: 'InterProScan' /* , accession: localID */ },\n        },\n      });\n    }\n  };\n\n  _handleFile = (file: File) => {\n    const fr = new FileReader();\n    fr.onload = () => {\n      this._handleReset(fr.result);\n      this.setState({\n        title: file.name,\n      });\n    };\n    fr.readAsText(file);\n  };\n\n  _loadExample = () => this._handleReset(example);\n\n  _cleanUp = () => this._editorRef.current?.cleanUp();\n\n  _handleDroppedFiles = blockEvent(({ dataTransfer }: DragEvent) => {\n    const file = dataTransfer?.files?.[0];\n    if (file) this._handleFile(file);\n  });\n\n  _handleDragging = blockEvent(() => this.setState({ dragging: true }));\n\n  _handleUndragging = blockEvent(() => this.setState({ dragging: false }));\n\n  _handleFileChange = ({ target }: React.ChangeEvent<HTMLInputElement>) => {\n    const file = target.files?.[0];\n    if (file) {\n      this._handleFile(file);\n      target.value = '';\n    }\n  };\n\n  render() {\n    // If we had a value, we used it in the constructor+componentDidUpdate\n    // But we don't want to have it in the url, so remove the value from it.\n    if (this.props.value)\n      return (\n        <Redirect\n          to={{\n            description: {\n              main: { key: 'search' },\n              search: { type: 'sequence' },\n            },\n          }}\n        />\n      );\n    const { dragging } = this.state;\n    const allOk = this.state.sequenceIssues.length === 0;\n    const hasText =\n      !!this._editorRef.current && this._editorRef.current?.hasText();\n    return (\n      <section className={css('vf-stack', 'vf-stack--400')}>\n        <form\n          onSubmit={this._handleSubmit}\n          onDrop={this._handleDroppedFiles}\n          onDrag={this._handleDragging}\n          onDragStart={this._handleDragging}\n          onDragEnd={this._handleUndragging}\n          onDragOver={this._handleDragging}\n          onDragEnter={this._handleDragging}\n          onDragExit={this._handleUndragging}\n          onDragLeave={this._handleUndragging}\n          className={css('search-form', { dragging })}\n          ref={this._formRef}\n        >\n          <div>\n            <div className={css('simple-box', 'ipscan-block')}>\n              <header>Scan your sequences</header>\n              <SchemaOrgData\n                data={{\n                  name: 'Search By Sequence',\n                  description: 'Search for InterPro matches in your sequences',\n                }}\n                processData={schemaProcessDataPageSection}\n              />\n              <div className={css('vf-stack', 'vf-stack--200')}>\n                {this.props.main === 'search' && this.state.submittedJob && (\n                  <Callout type=\"info\">\n                    Your search job(\n                    <span className={css('mono')}>\n                      {this.state.submittedJob}\n                    </span>\n                    ) has been submitted. You can check its state in the{' '}\n                    <Link\n                      to={{\n                        description: {\n                          main: { key: 'result' },\n                          result: { type: 'InterProScan' },\n                        },\n                      }}\n                    >\n                      Results page\n                    </Link>\n                  </Callout>\n                )}\n                {this.props.main === 'search' && (\n                  <div className={css('description')}>\n                    <Helmet>\n                      <title>InterProScan</title>\n                    </Helmet>\n                    <p>\n                      This form enables you to submit sequences to the\n                      InterProScan web service for scanning against the InterPro\n                      protein signature databases.\n                      <br />\n                      Please note that you can submit up to{' '}\n                      {MAX_NUMBER_OF_SEQUENCES} sequences at a time.\n                      Alternatively, you can{' '}\n                      <Link\n                        to={{\n                          description: { other: ['about', 'interproscan'] },\n                        }}\n                      >\n                        download InterProScan\n                      </Link>{' '}\n                      to scan your sequences locally.\n                    </p>\n                  </div>\n                )}\n                <SequenceInput\n                  value={this.props.value}\n                  ref={this._editorRef}\n                  onChecksChange={(issues) => {\n                    this.setState({ sequenceIssues: issues });\n                  }}\n                />\n              </div>\n\n              <div>\n                <label\n                  className={css(\n                    'vf-button',\n                    'vf-button--secondary',\n                    'vf-button--sm',\n                    'user-select-none',\n                  )}\n                >\n                  <span\n                    className={css('icon', 'icon-common', 'icon-folder-open')}\n                  />\n                  Choose file\n                  <input type=\"file\" onChange={this._handleFileChange} hidden />\n                </label>\n                <Button\n                  type=\"secondary\"\n                  className={css('user-select-none')}\n                  onClick={this._loadExample}\n                >\n                  Example protein sequence\n                </Button>\n                <Button\n                  className={css({\n                    hidden: allOk || !hasText,\n                  })}\n                  onClick={this._cleanUp}\n                  borderColor=\"var(--colors-alert-main)\"\n                  backgroundColor=\"var(--colors-alert-main)\"\n                >\n                  Automatic clean up\n                </Button>\n              </div>\n\n              <AdvancedOptions\n                title={this.state.title}\n                changeTitle={this.changeTitle}\n                initialOptions={this.state.initialAdvancedOptions}\n              />\n\n              <footer>\n                <div>\n                  <Button\n                    submit\n                    className={css({\n                      disabled: !allOk || !hasText,\n                    })}\n                    disabled={!allOk || !hasText}\n                    value=\"Search\"\n                  >\n                    Search\n                  </Button>\n                  <Button type=\"secondary\" onClick={this._handleReset}>\n                    Clear\n                  </Button>\n                </div>\n                <div className={css('search-adv')}>\n                  <span>Powered by InterProScan</span>\n                </div>\n              </footer>\n            </div>\n          </div>\n          <div className={css('dragging-overlay')}>Drop your file here</div>\n        </form>\n      </section>\n    );\n  }\n}\n\nconst mapStateToProps = createSelector(\n  (state: GlobalState) => state.settings.ipScan,\n  (state: GlobalState) => state.customLocation.description,\n  (state: GlobalState) => state.customLocation.search,\n  (ipScan, desc, search) => ({\n    ipScan,\n    value: desc.search.value,\n    main: desc.main.key!,\n    search,\n  }),\n);\n\nexport default connect(mapStateToProps, {\n  createJob,\n  goToCustomLocation,\n})(IPScanSearch);\n","import React, { useState, useEffect } from 'react';\n\nimport cssBinder from 'styles/cssBinder';\n\nimport fonts from 'EBI-Icon-fonts/fonts.css';\nimport local from './style.css';\n\nconst css = cssBinder(fonts, local);\n\ntype Props = {\n  name?: string;\n  id: string;\n  size?: 'large' | 'small' | 'tiny';\n  switchCond: boolean;\n  disabled?: boolean;\n  label?: string;\n  SRLabel?: string;\n  onValue?: string;\n  offValue?: string;\n  handleChange?: (evt?: React.ChangeEvent) => void;\n  addAccessionStyle?: boolean;\n  width?: string;\n};\n\nconst ToggleSwitch = ({\n  name = 'switch',\n  id,\n  size = 'large',\n  switchCond,\n  disabled = false,\n  label,\n  SRLabel,\n  onValue = 'On',\n  offValue = 'Off',\n  handleChange,\n  addAccessionStyle = false,\n  width,\n}: Props) => {\n  const [isOn, setIsOn] = useState(switchCond);\n  useEffect(() => {\n    setIsOn(switchCond);\n  }, [switchCond]);\n  const onInputChange = (evt?: React.ChangeEvent) => {\n    if (handleChange) {\n      handleChange(evt);\n    } else {\n      setIsOn(!isOn);\n    }\n  };\n  const paddleStyle = width ? { width } : {};\n  return (\n    <div className={css('new-switch', size)}>\n      <label htmlFor={id}>\n        <input\n          type=\"checkbox\"\n          checked={isOn}\n          className={css('switch-input')}\n          name={name}\n          id={id}\n          onChange={onInputChange}\n          disabled={disabled}\n        />\n        {label}\n        <label\n          className={css(\n            'switch-paddle',\n            addAccessionStyle ? 'accession-selector' : '',\n            disabled ? 'disabled' : '',\n          )}\n          style={{ ...paddleStyle }}\n          htmlFor={id}\n        >\n          {SRLabel ? (\n            <span className={css('show-for-sr')}>{SRLabel}:</span>\n          ) : null}\n          <span className={css('switch-active')} aria-hidden=\"true\">\n            {onValue}\n          </span>\n          <span className={css('switch-inactive')} aria-hidden=\"true\">\n            {offValue}\n          </span>\n        </label>\n      </label>\n    </div>\n  );\n};\n\nexport default ToggleSwitch;\n","// extracted by mini-css-extract-plugin\nexport default {\"new-switch\":\"ToggleSwitch_style__new-switch___f6\",\"switch-input\":\"ToggleSwitch_style__switch-input___b8\",\"switch-paddle\":\"ToggleSwitch_style__switch-paddle___c6\",\"switch-active\":\"ToggleSwitch_style__switch-active___d8\",\"switch-inactive\":\"ToggleSwitch_style__switch-inactive___d2\",\"tiny\":\"ToggleSwitch_style__tiny___a1\",\"small\":\"ToggleSwitch_style__small___d3\",\"large\":\"ToggleSwitch_style__large___e1\",\"disabled\":\"ToggleSwitch_style__disabled___fa\",\"accession-selector\":\"ToggleSwitch_style__accession-selector___cc\"};","export const getNeededCountersForSubpages = (\n  mainEndpoint: Endpoint,\n  filterEndpoint: Endpoint,\n  forExporter = false,\n) => {\n  const counters = [];\n  if (forExporter) {\n    if (['taxonomy', 'proteome', 'set'].includes(filterEndpoint)) {\n      counters.push('protein');\n      counters.push('entry');\n    }\n  } else {\n    if (['entry', 'taxonomy', 'set'].includes(mainEndpoint)) {\n      if (['taxonomy', 'proteome'].includes(filterEndpoint)) {\n        counters.push('protein');\n      }\n    }\n  }\n  if (counters.length) return `counters:${counters.join('-')}`;\n  return '';\n};\n","import { noop } from 'lodash-es';\n\nimport * as defaults from '../defaults';\n\n// getUrl\nconst extractGetUrl = <Props = unknown>(\n  getUrl: string | GetUrl<Props> = defaults.getUrlForApi,\n) => {\n  if (typeof getUrl === 'string') {\n    return defaults.getUrl(getUrl);\n  }\n  return getUrl;\n};\n\nexport type ExtractedParams<Props = unknown> = {\n  getUrl: GetUrl<Props>;\n  fetchOptions: FetchOptions;\n  propNamespace: string;\n  weight: number;\n  mapStateToProps:\n    | ((state: unknown, props: unknown) => Record<string, unknown>)\n    | typeof noop;\n  mapDispatchToProps: Record<string, unknown>;\n};\n\nexport default <Props = unknown>(params?: LoadDataParameters<Props>) => {\n  const extracted: ExtractedParams<Props> = {\n    getUrl: defaults.getUrlForApi as GetUrl<Props>,\n    fetchOptions: {},\n    propNamespace: '',\n    weight: 1,\n    mapStateToProps: noop,\n    mapDispatchToProps: {},\n  };\n  if (!params) return extracted;\n  if (typeof params !== 'object') {\n    extracted.getUrl =\n      typeof params === 'string' ? defaults.getUrl(params) : params;\n    return extracted;\n  }\n  extracted.getUrl = extractGetUrl(params.getUrl);\n  extracted.fetchOptions = params.fetchOptions || extracted.fetchOptions;\n  extracted.propNamespace = params.propNamespace || extracted.propNamespace;\n  extracted.weight = params.weight || extracted.weight;\n  extracted.mapStateToProps =\n    params.mapStateToProps || extracted.mapStateToProps;\n  extracted.mapDispatchToProps =\n    params.mapDispatchToProps || extracted.mapDispatchToProps;\n  return extracted;\n};\n","import cachedFetch, {\n  cachedFetchJSON,\n  cachedFetchYAML,\n  cachedFetchText,\n  cachedFetchGZIP,\n} from 'utils/cached-fetch';\n\nexport default ({ method, responseType }: FetchOptions = {}) => {\n  if (responseType === 'text') return cachedFetchText;\n  if (responseType === 'yaml') return cachedFetchYAML;\n  if (responseType === 'gzip') return cachedFetchGZIP;\n  if (method !== 'HEAD') return cachedFetchJSON;\n  return cachedFetch;\n};\n","import React, { PureComponent } from 'react';\nimport { connect } from 'react-redux';\nimport { createSelector } from 'reselect';\nimport { Diff } from 'utility-types';\n\nimport uniqueId from 'utils/cheap-unique-id';\nimport cancelable from 'utils/cancelable';\nimport {\n  dataProgressInfo,\n  dataProgressUnload,\n  addToast,\n} from 'actions/creators';\n\nimport extractParams from '../extract-params';\nimport getFetch from '../getFetch';\n\nimport { UnconnectedErrorBoundary } from 'wrappers/ErrorBoundary';\n\nconst TIMEOUT = 408;\nconst MS = 1000;\n\nconst mapStateToState = createSelector(\n  (state: unknown) => state,\n  (appState) => ({ appState }),\n);\n\n// Props to connect to the wrapper component that are not injected in the wrapped one\ntype ConnectedProps = {\n  dataProgressInfo?: typeof dataProgressInfo;\n  dataProgressUnload?: typeof dataProgressUnload;\n  addToast?: typeof addToast;\n  appState?: GlobalState;\n};\n\nconst loadData = <Payload = unknown, Namespace extends string = ''>(\n  params?: LoadDataParameters,\n) => {\n  const {\n    getUrl,\n    fetchOptions,\n    propNamespace,\n    weight,\n    mapStateToProps,\n    mapDispatchToProps,\n  } = extractParams(params);\n  const fetchFun = getFetch(fetchOptions);\n\n  // Defining the function here to be able to use the Generic Type Payload\n  const newData = (url: string): RequestedData<Payload> => ({\n    loading: !!url,\n    progress: 0,\n    ok: true,\n    status: null,\n    payload: null,\n    url,\n  });\n\n  return <BaseProps extends LoadDataProps<Payload, Namespace>>(\n    Wrapped: React.ComponentType<BaseProps>,\n  ) => {\n    type WrapperProps = ReturnType<typeof mapStateToProps> &\n      typeof mapDispatchToProps &\n      ConnectedProps;\n\n    type WrapperState = {\n      url: string;\n      data: RequestedData<Payload>;\n      staleData?: RequestedData<Payload>;\n      retries: number;\n      progress?: number;\n      loading?: boolean;\n    };\n\n    class DataWrapper extends PureComponent<WrapperProps, WrapperState> {\n      static displayName = `loadData(${Wrapped.displayName || Wrapped.name})`;\n      #id: string;\n      #request?: CancelableRequest;\n      timeoutID = 0;\n\n      constructor(props: WrapperProps) {\n        super(props);\n\n        // Identify this specific data loader\n        this.#id = uniqueId('data-loader');\n\n        // Initialize state\n        const url = getUrl?.(props.appState || {}, props) || '';\n        this.state = {\n          url,\n          data: newData(url),\n          staleData: undefined,\n          retries: 0,\n        };\n      }\n\n      static getDerivedStateFromProps(\n        nextProps: WrapperProps,\n        prevState: WrapperState,\n      ) {\n        // get potential new url in state according to props\n        const url = getUrl?.(nextProps.appState || {}, nextProps) || '';\n        // if it's the same, don't update the state\n        if (prevState.url === url) return null;\n        // otherwise, update url in state, and create new data object in state\n        return { data: newData(url), url };\n      }\n\n      componentDidMount() {\n        // start loading data on mount\n        this._load(this.state.url);\n      }\n\n      componentDidUpdate(_prevProps: WrapperProps, prevState: WrapperState) {\n        // if the url has changed\n        if (\n          prevState.url !== this.state.url ||\n          prevState.retries !== this.state.retries\n        ) {\n          // cancel current request\n          this._cancel();\n          // and start new one\n          this._load(this.state.url);\n        }\n      }\n\n      // cancel current request on unmount\n      componentWillUnmount() {\n        this._cancel();\n        if (this.timeoutID) {\n          window.clearTimeout(this.timeoutID);\n        }\n      }\n\n      _cancel = () => {\n        if (this.#request) this.#request.cancel();\n        this.props.dataProgressUnload?.(this.#id);\n      };\n\n      _progress = (progress: number) => {\n        this.setState(({ data }) => ({ data: { ...data, progress } }));\n        this.props.dataProgressInfo?.(this.#id, progress, weight);\n      };\n\n      _load = async (url: string) => {\n        if (!url) {\n          this.setState({\n            staleData: {\n              ...this.state.data,\n            },\n          });\n          return;\n        }\n        // Progress: 0\n        this.props.dataProgressInfo?.(this.#id, 0, weight);\n        this.#request = cancelable<BasicResponse>((signal) =>\n          fetchFun(\n            url,\n            { ...fetchOptions, signal },\n            this._progress,\n            this.props.addToast,\n          ),\n        );\n        // We keep a hold on *this* request, because it might change\n        const request = this.#request;\n        try {\n          const response = await request.promise;\n          // Analytics\n          gtag('event', 'data', {\n            event_category: 'data',\n            event_response: response.status,\n            event_label: url,\n            // Custom Metric in google analytics as metrics1: From Client Cache\n            event_clientcache: response.headers.has('Client-Cache') ? 1 : 0,\n            // Custom Metric in google analytics as metrics1: From Server Cache\n            event_cache: response.headers.has('Cached') ? 1 : 0,\n          });\n          // We have a response 🎉 set it into the local state\n          this.setState(({ data }) => {\n            const nextData = {\n              ...data,\n              ...response,\n              progress: 1,\n              loading: false,\n            };\n            return { data: nextData, staleData: nextData };\n          });\n          // Progress: 1\n          this.props.dataProgressInfo?.(this.#id, 1, weight);\n\n          const msToRetry =\n            (this.props.appState?.settings.navigation.secondsToRetry || 0) * MS;\n          // Scheduling to retry because we got a 408\n          if (response.status === TIMEOUT) {\n            this.timeoutID = window.setTimeout(() => {\n              console.log('Retrying the Timed out query');\n              this.setState({ retries: this.state.retries + 1 });\n            }, msToRetry);\n          }\n        } catch (error) {\n          // If request has been canceled, it means we did it, on purpose, so\n          // just ignore, otherwise it's a real error\n          if (!request.canceled) {\n            // we have a problem, something bad happened\n            // Analytics\n            gtag('event', 'error', {\n              event_category: 'data',\n              event_status: 'fail',\n              event_label: url,\n              // Custom Metric in google analytics as metrics3: Is Client Online\n              event_online: window.navigator.onLine ? 1 : 0,\n            });\n            this.setState(({ data }) => ({\n              data: { ...data, loading: false, progress: 1, ok: false, error },\n            }));\n            // Progress: 1\n            this.props.dataProgressInfo?.(this.#id, 1, weight);\n          }\n        }\n      };\n\n      render() {\n        const {\n          // props to be removed\n          dataProgressInfo: _,\n          dataProgressUnload: __,\n          addToast: ___,\n          appState,\n          // rest of props, to be passed down\n          ...rest\n        } = this.props;\n        const datakey: DataKey = `data${propNamespace}`;\n        const stalekey: IsStaleKey = `isStale${propNamespace}`;\n        const passedProps /*: LoadDataProps<Payload> */ = {\n          [datakey]: (this.state.staleData ||\n            this.state.data) as RequestedData<Payload>,\n          [stalekey]: this.state.staleData !== this.state.data,\n        };\n        // The correction below is needed for MS Edge\n        if (\n          this.state.data &&\n          !this.state.data.loading &&\n          this.state.data.url === this.state.url\n        )\n          passedProps[`isStale${propNamespace}`] = false;\n        return (\n          <UnconnectedErrorBoundary customLocation={appState?.customLocation}>\n            <Wrapped\n              {...(rest as BaseProps)}\n              {...passedProps}\n              {...(mapStateToProps?.(appState, {\n                ...(rest as BaseProps),\n                ...passedProps,\n              }) || {})}\n            />\n          </UnconnectedErrorBoundary>\n        );\n      }\n    }\n    const dispatchProps = {\n      dataProgressInfo,\n      dataProgressUnload,\n      addToast,\n      ...mapDispatchToProps,\n    };\n    const connector = connect<\n      ReturnType<typeof mapStateToProps>,\n      typeof dispatchProps,\n      Diff<BaseProps, LoadDataProps<Payload, Namespace>>,\n      GlobalState\n    >(mapStateToState, dispatchProps);\n    return connector(DataWrapper) as React.ComponentType<BaseProps>;\n  };\n};\n\nexport default loadData;\n","type CancelableParameter<T> =\n  | Promise<unknown>\n  | ((signal: AbortSignal) => Promise<T>);\n\nexport default <T = unknown>(\n  promiseOrFunction: CancelableParameter<T> = Promise.resolve()\n) => {\n  let promise = promiseOrFunction;\n  const controller = new AbortController();\n  if (!('then' in promiseOrFunction)) {\n    // not actually a Promise\n    promise = promiseOrFunction(controller.signal);\n  }\n  const output = {\n    promise: (promise as Promise<T>).then((value) => {\n      // eslint-disable-next-line no-throw-literal\n      if (output.canceled) throw { canceled: output.canceled };\n      return value;\n    }),\n    canceled: false,\n    cancel() {\n      output.canceled = true;\n      controller.abort();\n    },\n  };\n  return output;\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"editor\":\"Search_style__editor___bf\",\"line-with-buttons\":\"Search_style__line-with-buttons___aa\",\"file-input-label\":\"Search_style__file-input-label___e3\",\"search-form\":\"Search_style__search-form___e7\",\"dragging\":\"Search_style__dragging___e6\",\"dragging-overlay\":\"Search_style__dragging-overlay___f1\",\"ipscan-block\":\"Search_style__ipscan-block___a7\",\"description\":\"Search_style__description___b5\",\"sequence\":\"Search_style__sequence___db\",\"mono\":\"Search_style__mono___f7\",\"invalid-block\":\"Search_style__invalid-block___d9\",\"valid-block\":\"Search_style__valid-block___af\",\"comment\":\"Search_style__comment___f6\",\"fasta-header\":\"Search_style__fasta-header___f7\",\"invalid-comment\":\"Search_style__invalid-comment___f6\",\"invalid-letter\":\"Search_style__invalid-letter___fa\",\"search-input\":\"Search_style__search-input___be\",\"search-adv\":\"Search_style__search-adv___be\",\"user-select-none\":\"Search_style__user-select-none___ee\"};","// extracted by mini-css-extract-plugin\nexport default {\"tabs-panel-content\":\"Search_style__tabs-panel-content___ee\",\"search-form\":\"Search_style__search-form___dd\",\"help-col\":\"Search_style__help-col___e9\",\"removed\":\"Search_style__removed___d3\",\"hollow\":\"Search_style__hollow___f0\",\"simple-box\":\"Search_style__simple-box___a1\"};","// extracted by mini-css-extract-plugin\nexport default {\"card\":\"styles_blocks__card___ad\",\"grid\":\"styles_blocks__grid___b2\",\"simple-box\":\"styles_blocks__simple-box___c3\"};"],"names":["MULTIPLE_SLASHES","DBS_WITH_SETS","cleanUpMultipleSlashes","str","replace","getUrlForMeta","createSelector","state","settings","api","_ref","protocol","hostname","port","root","format","pathname","getUrlForRelease","repoKey","config","github","_ref2","owner","repo","getReadTheDocsURL","relativePath","ReadTheDocs","_ref3","branch","getUrl","key","navigation","pageSize","customLocation","description","search","hash","_ref4","settingsPageSize","_search","main","accession","Object","assign","values","find","_ref5","isFilter","db","entry","memberDB","page_size","extra_fields","includes","undefined","_description","cursor","urlTmp","descriptionToPath","query","sep","indexOf","getReversedUrl","_ref6","newMain","newDesc","value","model_page","entries","order","newQuery","counters","getNeededCountersForSubpages","url","includeTaxonFocusedOnURL","focused","match","getUrlForApi","arguments","f","e","preventDefault","stopPropagation","name","children","title","defaultChecked","output","React","type","Tooltip","css","cssBinder","localParent","mdb1Values","Set","mdb2Values","otherValues","ignoreList","labels","Map","applicationToCheckbox","defaultValue","properties","AdvancedOption","get","toggleAll","checked","node","checkbox","querySelectorAll","getUrlFromState","ipScan","loadData","data","initialOptions","changeTitle","fieldSetRef","useRef","loading","payload","ok","mdb1","mdb2","other","noCategory","groupApplications","applications","appOptions","application","length","has","push","className","style","marginBottom","ToggleSwitch","id","switchCond","label","size","offValue","onValue","width","onChange","placeholder","ref","Button","onClick","event","current","map","sequenceIssues","allOk","Callout","backgroundColor","alt","role","issue","header","MAX_NUMBER_OF_SEQUENCES","re","local","blocks","searchPageCss","buttonCSS","classedSpan","offsetKey","doesPreviousBlockHasContent","block","contentState","before","getBlockBefore","getKey","trimmed","getText","trim","startsWith","commentsStrategy","forErrors","cb","text","exec","prevSequenceOK","index","compositeDecorator","CompositeDecorator","strategy","component","headerRE","IUPACProtRE","hasContentInNextLine","lines","i","line","SequenceInput","onChecksChange","editorRef","editorState","setEditorState","useState","EditorState","createEmpty","issues","setIssues","runChecks","newIssues","count","firstLine","currentHeader","headersCount","numberOfSequences","trimmedLines","l","filter","Boolean","trimSequenceLines","test","slice","detail","checkLines","setNewText","createWithContent","ContentState","createFromText","decodeURIComponent","convertToRaw","getCurrentContent","useEffect","reset","cleanUp","cleanedText","headers","newLine","join","cleanUpBlocks","focusEditor","focus","getContent","hasText","useImperativeHandle","handleChange","newEditorState","stateWithHeader","addFastAHeaderIfNeeded","incrementalId","splice","newState","moveFocusToEnd","Editor","handlePastedText","pasted","blockMap","getBlockMap","Modifier","replaceWithFragment","getSelection","InfoMessages","displayName","fonts","SchemaOrgData","loadable","loader","checkedSelectorFor","isXChecked","x","form","querySelector","isStayChecked","IPScanSearch","PureComponent","constructor","props","super","newTitle","_b","_a","this","_formRef","setState","_handleReset","inputsToReset","Array","from","input","dataset","defaultchecked","dragging","submittedJob","_editorRef","_handleSubmit","editorContent","localID","Date","now","split","createJob","metadata","group","seqtype","askNotificationPermission","goToCustomLocation","result","_handleFile","file","fr","FileReader","onload","readAsText","_loadExample","_cleanUp","_handleDroppedFiles","blockEvent","dataTransfer","files","_handleDragging","_handleUndragging","_handleFileChange","target","initialAdvancedOptions","sequenceToSet","componentDidUpdate","render","Redirect","to","onSubmit","onDrop","onDrag","onDragStart","onDragEnd","onDragOver","onDragEnter","onDragExit","onDragLeave","processData","schemaProcessDataPageSection","Link","Helmet","hidden","borderColor","AdvancedOptions","submit","disabled","mapStateToProps","desc","connect","SRLabel","addAccessionStyle","isOn","setIsOn","paddleStyle","htmlFor","evt","mainEndpoint","filterEndpoint","forExporter","params","extracted","defaults","fetchOptions","propNamespace","weight","noop","mapDispatchToProps","_temp","method","responseType","cachedFetchText","cachedFetchYAML","cachedFetchGZIP","cachedFetchJSON","cachedFetch","mapStateToState","appState","extractParams","fetchFun","getFetch","newData","progress","status","Wrapped","DataWrapper","_DataWrapper_id","set","_DataWrapper_request","timeoutID","_cancel","__classPrivateFieldGet","cancel","dataProgressUnload","call","_progress","dataProgressInfo","_load","__awaiter","__classPrivateFieldSet","cancelable","signal","addToast","request","response","promise","gtag","event_category","event_response","event_label","event_clientcache","event_cache","nextData","staleData","_d","_c","msToRetry","_e","secondsToRetry","window","setTimeout","console","log","retries","error","canceled","event_status","event_online","navigator","onLine","_g","_f","uniqueId","getDerivedStateFromProps","nextProps","prevState","componentDidMount","_prevProps","componentWillUnmount","clearTimeout","_","__","___","rest","__rest","stalekey","passedProps","UnconnectedErrorBoundary","dispatchProps","connector","promiseOrFunction","Promise","resolve","controller","AbortController","then","abort"],"sourceRoot":""}