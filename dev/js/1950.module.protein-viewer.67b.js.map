{"version":3,"file":"js/1950.module.protein-viewer.67b.js","mappings":"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","sources":["webpack://interpro7-client/./src/higherOrder/loadData/dataPropTypes.js","webpack://interpro7-client/./src/components/GoTerms/List/index.js","webpack://interpro7-client/./src/subPages/Subfamilies/index.js","webpack://interpro7-client/./src/components/ExtLink/patternLinkWrapper/index.tsx","webpack://interpro7-client/./src/components/Nightingale/InterProTrack/index.tsx","webpack://interpro7-client/./src/components/Nightingale/Sequence/index.tsx","webpack://interpro7-client/./src/components/ProteinViewer/Options/LabelBy/index.tsx","webpack://interpro7-client/./src/components/Nightingale/Manager/index.tsx","webpack://interpro7-client/./src/components/ProteinViewer/grid.css?c086","webpack://interpro7-client/./src/components/ProteinViewer/ConservationMockupTrack/index.tsx","webpack://interpro7-client/./src/components/Nightingale/Navigation/index.tsx","webpack://interpro7-client/./src/components/ProteinViewer/Header/index.tsx","webpack://interpro7-client/./src/components/Nightingale/Saver/index.tsx","webpack://interpro7-client/./src/components/ProteinViewer/Options/index.tsx","webpack://interpro7-client/./src/components/Nightingale/Track/index.tsx","webpack://interpro7-client/./src/components/Nightingale/Linegraph/index.tsx","webpack://interpro7-client/./src/components/Nightingale/ColoredSequence/index.tsx","webpack://interpro7-client/./src/components/Nightingale/Variation/index.tsx","webpack://interpro7-client/./src/components/ProteinViewer/LabelsInTrack/Label/index.tsx","webpack://interpro7-client/./src/components/ProteinViewer/LabelsInTrack/ResidueLabel/index.tsx","webpack://interpro7-client/./src/components/ProteinViewer/LabelsInTrack/ExceptionalLabels/index.tsx","webpack://interpro7-client/./src/components/ProteinViewer/LabelsInTrack/index.tsx","webpack://interpro7-client/./src/components/ProteinViewer/LabelsInTrack/style.css?0474","webpack://interpro7-client/./src/components/ProteinViewer/Popup/ColorScale/index.tsx","webpack://interpro7-client/./src/components/ProteinViewer/Popup/ColorScale/style.css?cd34","webpack://interpro7-client/./src/components/ProteinViewer/Popup/Confidence/index.tsx","webpack://interpro7-client/./src/components/ProteinViewer/Popup/Residue/index.tsx","webpack://interpro7-client/./src/components/ProteinViewer/Popup/Variation/index.tsx","webpack://interpro7-client/./src/components/ProteinViewer/Popup/Positions/index.tsx","webpack://interpro7-client/./src/components/ProteinViewer/Popup/Entry/index.tsx","webpack://interpro7-client/./src/components/ProteinViewer/Popup/Conservation/index.tsx","webpack://interpro7-client/./src/components/ProteinViewer/Popup/RepeatsDB/index.tsx","webpack://interpro7-client/./src/components/ProteinViewer/Popup/PTM/index.tsx","webpack://interpro7-client/./src/components/ProteinViewer/Popup/DisProt/index.tsx","webpack://interpro7-client/./src/components/ProteinViewer/Popup/index.tsx","webpack://interpro7-client/./src/components/ProteinViewer/TracksInCategory/index.tsx","webpack://interpro7-client/./src/components/ProteinViewer/RepresentativeDomainsTrack/index.tsx","webpack://interpro7-client/./src/components/ProteinViewer/ShowMoreTracks/index.tsx","webpack://interpro7-client/./src/components/ProteinViewer/ShowMoreTracks/style.css?bd78","webpack://interpro7-client/./src/components/ProteinViewer/index.tsx","webpack://interpro7-client/./src/components/SimpleCommonComponents/FullScreenButton/index.tsx","webpack://interpro7-client/./src/utils/fullscreen/index.js","webpack://interpro7-client/./src/components/ProteinViewer/Popup/Entry/style.css?88ad","webpack://interpro7-client/./src/components/ProteinViewer/Popup/Positions/style.css?b55a","webpack://interpro7-client/./src/components/ProteinViewer/style.css?4a41"],"sourcesContent":["import T from 'prop-types';\n\nexport const metadataPropType = T.shape({\n  metadata: T.shape({\n    accession: T.string,\n    sequence: T.string,\n    name: T.shape({\n      name: T.string,\n    }),\n  }),\n});\n\nexport const resultsPropType = T.shape({\n  results: T.arrayOf([metadataPropType]),\n});\nconst interProScanUnitPropType = T.shape({\n  sequence: T.string.isRequired,\n  xref: T.shape({\n    0: T.shape({\n      identifier: T.string,\n    }).isRequired,\n  }).isRequired,\n});\nexport const interProScanPropType = T.shape({\n  results: T.shape(\n    {\n      0: interProScanUnitPropType.isRequired,\n    }.isRequired,\n  ),\n});\n\nexport const dataPropType = T.shape({\n  loading: T.bool,\n  payload: T.oneOfType([\n    metadataPropType,\n    resultsPropType,\n    interProScanPropType,\n    interProScanUnitPropType,\n    T.string,\n  ]),\n  status: T.number,\n  ok: T.bool,\n  progress: T.number,\n  url: T.string,\n});\n","// @flow\nimport React, { useState } from 'react';\nimport T from 'prop-types';\nimport { capitalize } from 'lodash-es';\n\n// $FlowFixMe\nimport GoLink from 'components/ExtLink/GoLink';\n// $FlowFixMe\nimport Tooltip from 'components/SimpleCommonComponents/Tooltip';\n// $FlowFixMe\nimport Button from 'components/SimpleCommonComponents/Button';\n\nimport { foundationPartial } from 'styles/foundation';\n\nimport local from '../style.css';\n\nconst f = foundationPartial(local);\n\n/*::\ntype Props = {\n  terms: typeof undefined | null | Array<{\n    identifier: string,\n    name: string,\n    category: {\n      code: string,\n      name: string,\n    }\n  }>,\n  maxNumberOfTerms?: number,\n}\n */\n\nconst DEFAULT_MAX_NUMBER_OF_TERMS = 2;\nconst colors = {\n  P: 'var(--colors-go-bp)',\n  F: 'var(--colors-go-mf)',\n  C: 'var(--colors-go-cc)',\n};\nconst ListOfGOTerms = (\n  { terms, maxNumberOfTerms = DEFAULT_MAX_NUMBER_OF_TERMS } /*: Props */,\n) => {\n  const [showMore, setShowMore] = useState(false);\n  if (!terms) return null;\n  const hasMany = terms.length > maxNumberOfTerms;\n  const termsToShow =\n    showMore || !hasMany ? terms : terms.slice(0, maxNumberOfTerms);\n  return (\n    <>\n      {termsToShow.map(\n        ({ identifier, name, category: { code, name: categoryName } }) => (\n          <Tooltip\n            key={identifier}\n            title={`${capitalize(\n              categoryName.replace('_', ' '),\n            )}: [${identifier}] ${name}`}\n          >\n            <GoLink\n              id={identifier}\n              className={f('go-terms', 'ext')}\n              style={{\n                background: colors[code] || 'transparent',\n              }}\n            >\n              {name}\n            </GoLink>{' '}\n          </Tooltip>\n        ),\n      )}\n      {terms.length !== termsToShow.length && (\n        <Button type=\"hollow\" onClick={() => setShowMore(true)}>\n          Show {terms.length - maxNumberOfTerms} more\n        </Button>\n      )}\n    </>\n  );\n};\nListOfGOTerms.propTypes = {\n  terms: T.arrayOf(\n    T.shape({\n      identifier: T.string,\n      name: T.string,\n    }),\n  ),\n  maxNumberOfTerms: T.number,\n};\nexport default ListOfGOTerms;\n","// @flow\nimport React from 'react';\nimport T from 'prop-types';\nimport { dataPropType } from 'higherOrder/loadData/dataPropTypes';\n\nimport { createSelector } from 'reselect';\nimport { format } from 'url';\n\n// $FlowFixMe\nimport descriptionToPath from 'utils/processDescription/descriptionToPath';\nimport loadData from 'higherOrder/loadData';\n\n// $FlowFixMe\nimport Table, { Column, PageSizeSelector } from 'components/Table';\nimport Link from 'components/generic/Link';\nimport Loading from 'components/SimpleCommonComponents/Loading';\nimport ListOfGOTerms from 'components/GoTerms/List';\n\nimport f from 'styles/foundation';\n\nexport const FunFamLink = ({ accession, children }) => {\n  const parts = accession.split(':FF:');\n  const lengthOfPrefix = 6;\n  return parts.length === 2 ? (\n    <Link\n      target=\"_blank\"\n      className={f('ext')}\n      href={`http://www.cathdb.info/version/latest/superfamily/${parts[0].slice(\n        lengthOfPrefix,\n      )}/funfam/${Number(parts[1])}`}\n    >\n      {children}\n    </Link>\n  ) : (\n    <>{children}</>\n  );\n};\n\nexport const PantherLink = ({ accession, children }) => (\n  <Link\n    target=\"_blank\"\n    className={f('ext')}\n    href={`http://www.pantherdb.org/panther/family.do?clsAccession=${accession.toUpperCase()}`}\n  >\n    {children}\n  </Link>\n);\n\nconst SubfamiliesSubpage = (\n  { data, search, db } /*: {\n    data: {loading: boolean, ok: boolean, status: number, payload: ?Object, url: string},\n    search: Object,\n    db: string,\n  }*/,\n) => {\n  if (data.loading) return <Loading />;\n\n  let SubfamilyLink = 'span';\n  if (db === 'panther') SubfamilyLink = PantherLink;\n  if (db === 'cathgene3d') SubfamilyLink = FunFamLink;\n  return (\n    <section>\n      <Table\n        dataTable={data.payload?.results.map((e) => e.metadata) || []}\n        contentType=\"search\"\n        loading={data.loading}\n        status={data.status}\n        ok={data.ok}\n        query={search}\n        actualSize={data.payload?.count || 0}\n        nextAPICall={data.payload?.next}\n        previousAPICall={data.payload?.previous}\n        currentAPICall={data.url}\n      >\n        <PageSizeSelector />\n        <Column\n          dataKey=\"accession\"\n          renderer={(accession) => (\n            <SubfamilyLink accession={accession}>{accession}</SubfamilyLink>\n          )}\n        >\n          Accession\n        </Column>\n        <Column\n          dataKey=\"name\"\n          renderer={(name, { accession }) => (\n            <SubfamilyLink accession={accession}>{name}</SubfamilyLink>\n          )}\n        >\n          Name\n        </Column>\n        <Column\n          dataKey=\"go_terms\"\n          renderer={(terms) => <ListOfGOTerms terms={terms} />}\n        >\n          GO terms\n        </Column>\n      </Table>\n    </section>\n  );\n};\nSubfamiliesSubpage.propTypes = {\n  data: dataPropType,\n  search: T.object,\n  db: T.string,\n};\nconst mapStateToUrl = createSelector(\n  (state) => state.settings.api,\n  (state) => state.customLocation.description?.entry,\n  (state) => state.customLocation.search,\n  ({ protocol, hostname, port, root }, { accession, db }, search) => {\n    const s = {\n      ...search,\n      subfamilies: '',\n    };\n    return format({\n      protocol,\n      hostname,\n      port,\n      pathname:\n        root +\n        descriptionToPath({\n          main: { key: 'entry' },\n          entry: { db, accession },\n        }),\n      query: s,\n    });\n  },\n);\nexport const mapStateToProps = createSelector(\n  (state) => state.customLocation.search,\n  (state) => state.customLocation.description.entry.db,\n  (search, db) => ({ search, db }),\n);\n\nexport default loadData({\n  getUrl: mapStateToUrl,\n  mapStateToProps,\n})(SubfamiliesSubpage);\n","import React from 'react';\nimport BaseLink from '../BaseLink';\n\nconst patternLinkWrapper = (pattern: string) => {\n  const Wrapped = ({ id, target, children, ...props }: BaseLinkProps) => (\n    <BaseLink id={id} target={target || '_blank'} pattern={pattern} {...props}>\n      {children || id}\n    </BaseLink>\n  );\n  Wrapped.displayName = 'PatternLinkWrapper';\n  return Wrapped;\n};\n\nexport const UniProtLink = patternLinkWrapper(\n  'https://www.uniprot.org/uniprotkb/{id}/entry',\n);\nUniProtLink.displayName = 'UniProtLink';\n\nexport const DOILink = patternLinkWrapper('{id}');\nDOILink.displayName = 'DOILink';\n\nexport const PTMLink = patternLinkWrapper(\n  'https://www.uniprot.org/uniprotkb/{id}/entry#ptm_processing',\n);\nPTMLink.displayName = 'PTMLink';\n\nexport const AlphafoldLink = patternLinkWrapper(\n  'https://alphafold.ebi.ac.uk/entry/{id}',\n);\nAlphafoldLink.displayName = 'AlphafoldLink';\n\nexport default patternLinkWrapper;\n","import React from 'react';\nimport { createComponent } from '@lit/react';\nimport NightingaleInterproTrackCE from '@nightingale-elements/nightingale-interpro-track';\n\nexport const NightingaleInterproTrack = createComponent({\n  tagName: 'nightingale-interpro-track',\n  elementClass: NightingaleInterproTrackCE,\n  react: React,\n  // events: {\n  //   onactivate: 'activate',\n  //   onchange: 'change',\n  // },\n});\n\nexport default React.memo(NightingaleInterproTrack);\n//export default NightingaleInterproTrack;\n","import React from 'react';\nimport { createComponent } from '@lit/react';\nimport NightingaleSequenceCE from '@nightingale-elements/nightingale-sequence';\n\nexport const NightingaleSequence = createComponent({\n  tagName: 'nightingale-sequence',\n  elementClass: NightingaleSequenceCE,\n  react: React,\n  // events: {\n  //   onactivate: 'activate',\n  //   onchange: 'change',\n  // },\n});\n\nexport default NightingaleSequence;\n","import React, { useId } from 'react';\n\nimport { connect } from 'react-redux';\nimport { createSelector } from 'reselect';\n\nimport { changeSettingsRaw } from 'actions/creators';\n\nimport cssBinder from 'styles/cssBinder';\n\nimport protvistaCSS from '../style.css';\n\nconst css = cssBinder(protvistaCSS);\n\ntype Props = {\n  labelContent: LabelUISettings;\n  changeSettingsRaw: typeof changeSettingsRaw;\n};\n\ntype LabelOptions = 'accession' | 'name' | 'short';\nconst labelMap: Array<[LabelOptions, string]> = [\n  ['accession', 'Accession'],\n  ['name', 'Name'],\n  ['short', 'Short Name'],\n];\n\nconst LabelBy = ({ labelContent, changeSettingsRaw }: Props) => {\n  const id = useId();\n  const updateLabel = (evt: React.FormEvent) => {\n    const opt = (evt.target as HTMLInputElement).value;\n    if (['accession', 'name', 'short'].includes(opt)) {\n      const next = {\n        ...labelContent,\n        [opt]: !labelContent?.[opt as LabelOptions],\n      };\n      if (!next.accession && !next.name && !next.short) {\n        next.short = true;\n      }\n      changeSettingsRaw('ui', 'labelContent', next);\n    }\n  };\n  return (\n    <section>\n      <ul className={css('nested-list', 'no-bullet')}>\n        <header>Label by</header>\n        {labelMap.map(([key, label]) => (\n          <li key={key}>\n            <div\n              className={css('vf-form__item', 'vf-form__item--checkbox')}\n              style={{\n                whiteSpace: 'nowrap',\n              }}\n            >\n              <input\n                className=\"vf-form__checkbox\"\n                type=\"checkbox\"\n                onChange={updateLabel}\n                value={key}\n                checked={labelContent[key]}\n                id={`${id}-${key}`}\n              />\n              <label className={css('vf-form__label')} htmlFor={`${id}-${key}`}>\n                {label}\n              </label>\n            </div>\n          </li>\n        ))}\n      </ul>\n    </section>\n  );\n};\n\nconst mapStateToProps = createSelector(\n  (state: GlobalState) => state.settings.ui,\n  (ui: UISettings) => ({\n    labelContent: ui.labelContent,\n  }),\n);\n\nexport default connect(mapStateToProps, { changeSettingsRaw })(LabelBy);\n","import React from 'react';\nimport { createComponent } from '@lit/react';\nimport NightingaleManagerCE from '@nightingale-elements/nightingale-manager';\n\nexport const NightingaleManager = createComponent({\n  tagName: 'nightingale-manager',\n  elementClass: NightingaleManagerCE,\n  react: React,\n  // events: {\n  //   onactivate: 'activate',\n  //   onchange: 'change',\n  // },\n});\n\nexport default NightingaleManager;\n","// extracted by mini-css-extract-plugin\nexport default {\"protvista-grid\":\"ProteinViewer_grid__protvista-grid___b6\",\"printing\":\"ProteinViewer_grid__printing___f5\",\"view-options-wrap\":\"ProteinViewer_grid__view-options-wrap___ae\",\"track-sized\":\"ProteinViewer_grid__track-sized___b0\",\"track\":\"ProteinViewer_grid__track___b8\",\"residue-accession-container\":\"ProteinViewer_grid__residue-accession-container___f4\",\"track-label\":\"ProteinViewer_grid__track-label___ba\",\"track-accession-child\":\"ProteinViewer_grid__track-accession-child___b1\",\"tracks-container\":\"ProteinViewer_grid__tracks-container___ec\",\"track-container\":\"ProteinViewer_grid__track-container___e6\",\"popper\":\"ProteinViewer_grid__popper___b8\",\"hide\":\"ProteinViewer_grid__hide___a4\"};","import React, { useState } from 'react';\nimport Loading from 'components/SimpleCommonComponents/Loading';\n\nimport cssBinder from 'styles/cssBinder';\n\nimport style from '../../ProteinViewer/style.css';\nimport grid from '../../ProteinViewer/grid.css';\nimport fonts from 'EBI-Icon-fonts/fonts.css';\nimport tooltip from 'components/SimpleCommonComponents/Tooltip/style.css';\n\nconst css = cssBinder(style, grid, fonts, tooltip);\n\ntype Props = {\n  showConservationButton?: boolean;\n  handleConservationLoad?: () => void;\n  conservationError?: string;\n  isPrinting: boolean;\n};\n\nconst ConservationMockupTrack = ({\n  showConservationButton,\n  handleConservationLoad,\n  conservationError,\n  isPrinting,\n}: Props) => {\n  const [isLoading, setLoading] = useState(false);\n\n  const handleConservation = () => {\n    if (handleConservationLoad) {\n      handleConservationLoad();\n      setLoading(true);\n    }\n  };\n  return showConservationButton ? (\n    <div\n      className={css('tracks-container', 'track-sized', 'protvista-grid', {\n        printing: isPrinting,\n      })}\n    >\n      <header>\n        <button onClick={() => handleConservation()}>\n          <span className={css('icon', 'icon-common', 'icon-caret-right')} />{' '}\n          Match Conservation\n        </button>\n      </header>\n      <div className={css('track')}>\n        <div\n          className={css('conservation-placeholder-component')}\n          // ref={this._conservationTrackRef}\n        >\n          {conservationError ? (\n            <div className={css('conservation-error')}>\n              ⚠️ {conservationError}\n            </div>\n          ) : (\n            <>{isLoading ? <Loading inline /> : null}</>\n          )}\n        </div>\n      </div>\n      <div className={css('track-label')}>\n        <button\n          type=\"button\"\n          className={css('hollow', 'button', 'user-select-none')}\n          onClick={() => handleConservation()}\n        >\n          Fetch Conservation\n        </button>\n      </div>\n    </div>\n  ) : null;\n};\n\nexport default ConservationMockupTrack;\n","import React from 'react';\nimport { createComponent } from '@lit/react';\nimport NightingaleNavigationCE from '@nightingale-elements/nightingale-navigation';\n\nexport const NightingaleNavigation = createComponent({\n  tagName: 'nightingale-navigation',\n  elementClass: NightingaleNavigationCE,\n  react: React,\n  // events: {\n  //   onactivate: 'activate',\n  //   onchange: 'change',\n  // },\n});\n\nexport default NightingaleNavigation;\n","import React, { forwardRef } from 'react';\nimport cssBinder from 'styles/cssBinder';\n\nimport NightingaleNavigationCE from '@nightingale-elements/nightingale-navigation';\n\nimport NightingaleNavigation from 'components/Nightingale/Navigation';\nimport NightingaleSequence from 'components/Nightingale/Sequence';\n\nimport style from '../../ProteinViewer/style.css';\nimport grid from '../../ProteinViewer/grid.css';\n\nconst css = cssBinder(style, grid);\n\ntype Props = {\n  length: number;\n  sequence: string;\n  highlightColor: string;\n};\n\nconst ProteinViewerHeader = forwardRef<NightingaleNavigationCE, Props>(\n  ({ length, sequence, highlightColor }, ref) => {\n    return (\n      <>\n        <div className={css('track')}>\n          <NightingaleNavigation\n            length={length}\n            margin-color=\"#fafafa\"\n            margin-left={20}\n            height={50}\n            show-highlight\n            highlight-color={highlightColor}\n            ref={ref}\n          />\n        </div>\n        <div className={css('track')}>\n          <NightingaleSequence\n            sequence={sequence}\n            length={length}\n            margin-color=\"#fafafa\"\n            margin-left={20}\n            highlight-event=\"onmouseover\"\n            highlight-color={highlightColor}\n            height={30}\n            use-ctrl-to-zoom\n          />\n        </div>\n      </>\n    );\n  },\n);\n\nexport default ProteinViewerHeader;\n","import React from 'react';\nimport { createComponent } from '@lit/react';\nimport NightingaleSaverCE from '@nightingale-elements/nightingale-saver';\n\nexport const NightingaleSaver = createComponent({\n  tagName: 'nightingale-saver',\n  elementClass: NightingaleSaverCE,\n  react: React,\n  // events: {\n  //   onactivate: 'activate',\n  //   onchange: 'change',\n  // },\n});\n\nexport default NightingaleSaver;\n","import React, {\n  PropsWithChildren,\n  Children,\n  // useState,\n  useEffect,\n  useId,\n} from 'react';\nimport { createSelector } from 'reselect';\n\n// import ReactToPrint from 'react-to-print';\n\nimport NightingaleSaverCE from '@nightingale-elements/nightingale-saver';\n\nimport { connect } from 'react-redux';\nimport { changeSettingsRaw } from 'actions/creators';\nimport { EntryColorMode } from 'utils/entry-color';\n\nimport Tooltip from 'components/SimpleCommonComponents/Tooltip';\nimport FullScreenButton from 'components/SimpleCommonComponents/FullScreenButton';\nimport DropDownButton from 'components/SimpleCommonComponents/DropDownButton';\nimport { Exporter } from 'components/Table';\nimport TooltipAndRTDLink from 'components/Help/TooltipAndRTDLink';\nimport NightingaleSaver from 'components/Nightingale/Saver';\nimport Loading from 'components/SimpleCommonComponents/Loading';\nimport Button from 'components/SimpleCommonComponents/Button';\n\nimport LabelBy from './LabelBy';\n\nimport cssBinder from 'styles/cssBinder';\nimport localCSS from './style.css';\nimport fonts from 'EBI-Icon-fonts/fonts.css';\n\nimport protvistaGridCSS from '../../ProteinViewer/grid.css';\nimport protvistaCSS from '../../ProteinViewer/style.css';\nimport protvistaGridCSSasText from '!!raw-loader!../../ProteinViewer/grid.css';\nimport protvistaCSSastext from '!!raw-loader!../../ProteinViewer/style.css';\nimport vfIproCSS from '!!raw-loader!styles/interpro-vf.css';\nimport fontCSS from '!!raw-loader!styles/fonts.css';\nimport colorsCSS from '!!raw-loader!styles/colors.css';\n\n// const ONE_SEC = 1000;\n\nconst css = cssBinder(localCSS, fonts);\n\ntype Props = PropsWithChildren<{\n  title?: string;\n  setPrintingMode: (v: boolean) => void;\n  onZoomIn?: () => void;\n  onZoomOut?: () => void;\n  parentReferences: {\n    mainRef: React.MutableRefObject<HTMLDivElement | null>;\n    componentsRef: React.MutableRefObject<HTMLDivElement | null>;\n  };\n  colorDomainsBy?: string;\n  changeSettingsRaw?: typeof changeSettingsRaw;\n  setExpandedAllTracks: (v: boolean) => void;\n  tooltipEnabled: boolean;\n  setTooltipEnabled: (v: boolean) => void;\n  loading: boolean;\n}>;\n\nconst ProteinViewerOptions = ({\n  children,\n  // setPrintingMode,\n  onZoomIn,\n  onZoomOut,\n  title,\n  parentReferences,\n  colorDomainsBy,\n  changeSettingsRaw,\n  // setExpandedAllTracks,\n  tooltipEnabled,\n  setTooltipEnabled,\n  loading = false,\n}: Props) => {\n  // const [expanded, setExpanded] = useState(true);\n  const componentsDivId =\n    parentReferences.componentsRef.current?.getAttribute('id');\n\n  const id = useId();\n  useEffect(() => {\n    customElements.whenDefined('nightingale-saver').then(() => {\n      const saver = document.getElementById(\n        `${componentsDivId}Saver`,\n      ) as NightingaleSaverCE;\n      if (saver) {\n        saver.preSave = () => {\n          const base = parentReferences.componentsRef.current;\n          if (base) {\n            // Including the styles of interpro-type elements\n            base.querySelectorAll('interpro-type').forEach((el: Element) => {\n              el.innerHTML = el.shadowRoot?.innerHTML || '';\n            });\n            const style = document.createElement('style');\n            style.setAttribute('id', 'tmp_style');\n            // TODO it needs to be changed in an efficient way through webpack\n            let str = protvistaGridCSSasText + protvistaCSSastext;\n            const cssStyles = [protvistaCSS, protvistaGridCSS];\n            cssStyles.forEach((item) => {\n              Object.keys(item).forEach((key) => {\n                str = str.replace(\n                  new RegExp(`\\\\.${key}([:,[.\\\\s])`, 'gm'),\n                  `.${item[key]}$1`,\n                );\n              });\n            });\n\n            str = str + fontCSS + colorsCSS + vfIproCSS;\n            style.innerHTML = str;\n            base.appendChild(style);\n          } else\n            console.warn(\n              \"Couldn't set up the style for the nightingale-saver snapshot \",\n            );\n        };\n        saver.postSave = () => {\n          const base = parentReferences.componentsRef.current;\n          const styleElement = document.getElementById('tmp_style');\n          if (base && styleElement) {\n            base.removeChild(styleElement);\n            base.querySelectorAll('interpro-type').forEach((el) => {\n              el.innerHTML = '';\n            });\n          }\n        };\n      }\n    });\n  }, [componentsDivId]);\n\n  let ExporterButton = null;\n  if (children) {\n    ExporterButton = Children.toArray(children).filter(\n      (child) => (child as unknown as { type: unknown }).type === Exporter,\n    )?.[0];\n  }\n\n  const changeColor = (evt: React.FormEvent) => {\n    if (changeSettingsRaw)\n      changeSettingsRaw(\n        'ui',\n        'colorDomainsBy',\n        (evt.target as HTMLInputElement)?.value,\n      );\n  };\n  // Currently disabled\n  // const toggleExpandAll = () => {\n  //   setExpandedAllTracks(!expanded);\n  //   setExpanded(!expanded);\n  // };\n  const colorOptions = [\n    [EntryColorMode.ACCESSION, 'Accession'],\n    [EntryColorMode.MEMBER_DB, 'Member Database'],\n    [EntryColorMode.DOMAIN_RELATIONSHIP, 'Domain Relationship'],\n  ];\n  return (\n    <>\n      <div className={css('view-options-title')}>\n        {title || 'Domains on protein'}\n        <TooltipAndRTDLink rtdPage=\"protein_viewer.html\" />\n      </div>\n      {loading && <Loading inline />}\n      <div className={css('view-options')}>\n        <div className={css('option-fullscreen', 'font-l', 'viewer-options')}>\n          <FullScreenButton\n            element={parentReferences.mainRef.current}\n            tooltip=\"View the domain viewer in full screen mode\"\n          />\n        </div>\n        <div className={css('viewer-options')}>\n          <div style={{ marginRight: '0.4rem' }}>\n            {onZoomOut && (\n              <Button\n                type=\"inline\"\n                icon=\"icon-minus-square\"\n                className={css('zoom-button')}\n                title={'Click to zoom out      Ctrl+Scroll'}\n                onClick={onZoomOut}\n              />\n            )}\n            {onZoomIn && (\n              <Button\n                type=\"inline\"\n                icon=\"icon-plus-square\"\n                className={css('zoom-button')}\n                title={'Click to zoom in      Ctrl+Scroll'}\n                onClick={onZoomIn}\n              />\n            )}\n          </div>\n        </div>\n\n        <DropDownButton\n          label={\n            <Tooltip title={'Additional customization options'}>\n              Options\n            </Tooltip>\n          }\n          extraClasses={css('protvista-menu')}\n        >\n          <ul className={css('menu-options', 'vf-content')}>\n            <section>\n              <ul className={css('nested-list')}>\n                <header>Colour by</header>\n                {colorOptions.map(([mode, label]) => (\n                  <li key={mode}>\n                    <div\n                      className={css('vf-form__item', 'vf-form__item--radio')}\n                      style={{\n                        whiteSpace: 'nowrap',\n                      }}\n                    >\n                      <input\n                        className=\"vf-form__radio\"\n                        type=\"radio\"\n                        onChange={changeColor}\n                        value={mode}\n                        checked={colorDomainsBy === mode}\n                        id={`${id}-color-${mode}`}\n                      />\n                      <label\n                        className={css('vf-form__label')}\n                        htmlFor={`${id}-color-${mode}`}\n                      >\n                        {label}\n                      </label>\n                    </div>\n                  </li>\n                ))}\n              </ul>\n            </section>\n            <hr />\n            <LabelBy />\n            <hr />\n            <li>\n              <NightingaleSaver\n                element-id={componentsDivId}\n                background-color={'#e5e5e5'}\n                id={`${componentsDivId}Saver`}\n                extra-height={12}\n                scale-factor={2}\n              >\n                <Button\n                  type=\"inline\"\n                  icon=\"icon-camera\"\n                  style={{\n                    fontWeight: 500,\n                  }}\n                >\n                  Save as Image\n                </Button>\n              </NightingaleSaver>{' '}\n            </li>\n            {/* \n             this is misbehaving, so I'm disabling it until we get a fix for it\n            <li>\n              <Button\n              type=\"inline\"\n                onClick={toggleExpandAll}\n                aria-label={`${expanded ? 'Collapse' : 'Expand'} all tracks`}\n              >\n                {expanded ? 'Collapse' : 'Expand'} All Tracks\n              </Button>\n            </li> */}\n            <hr />\n            <li key={'tooltip'}>\n              <div\n                className={css('vf-form__item', 'vf-form__item--checkbox')}\n                style={{\n                  whiteSpace: 'nowrap',\n                }}\n              >\n                <input\n                  className=\"vf-form__checkbox\"\n                  type=\"checkbox\"\n                  onChange={() => setTooltipEnabled(!tooltipEnabled)}\n                  checked={tooltipEnabled}\n                  id={`${id}-tooltip`}\n                />{' '}\n                <label\n                  className={css('vf-form__label')}\n                  htmlFor={`${id}-tooltip`}\n                >\n                  Tooltip {tooltipEnabled ? 'Active' : 'Inactive'}\n                </label>\n              </div>\n            </li>\n          </ul>\n        </DropDownButton>\n\n        {ExporterButton ? (\n          <div className={css('exporter')}>{ExporterButton}</div>\n        ) : null}\n      </div>\n    </>\n  );\n};\n\nconst mapStateToProps = createSelector(\n  (state: GlobalState) => state.settings.ui,\n  (ui: Record<string, unknown>) => ({\n    colorDomainsBy:\n      (ui.colorDomainsBy as string) || EntryColorMode.DOMAIN_RELATIONSHIP,\n  }),\n);\n\nexport default connect(mapStateToProps, { changeSettingsRaw })(\n  ProteinViewerOptions,\n);\n","import React from 'react';\nimport { createComponent } from '@lit/react';\nimport NightingaleTrackCE from '@nightingale-elements/nightingale-track';\n\nexport const NightingaleTrack = createComponent({\n  tagName: 'nightingale-track',\n  elementClass: NightingaleTrackCE,\n  react: React,\n  // events: {\n  //   onactivate: 'activate',\n  //   onchange: 'change',\n  // },\n});\n\nexport default NightingaleTrack;\n","import React from 'react';\nimport { createComponent } from '@lit/react';\nimport NightingaleLinegraphTrackCE from '@nightingale-elements/nightingale-linegraph-track';\n\nexport const NightingaleLinegraphTrack = createComponent({\n  tagName: 'nightingale-linegraph-track',\n  elementClass: NightingaleLinegraphTrackCE,\n  react: React,\n  // events: {\n  //   onactivate: 'activate',\n  //   onchange: 'change',\n  // },\n});\n\nexport default NightingaleLinegraphTrack;\n","import React from 'react';\nimport { createComponent } from '@lit/react';\nimport NightingaleColoredSequenceCE from '@nightingale-elements/nightingale-colored-sequence';\n\nexport const NightingaleColoredSequence = createComponent({\n  tagName: 'nightingale-colored-sequence',\n  elementClass: NightingaleColoredSequenceCE,\n  react: React,\n  // events: {\n  //   onactivate: 'activate',\n  //   onchange: 'change',\n  // },\n});\n\nexport default NightingaleColoredSequence;\n","import React from 'react';\nimport { createComponent } from '@lit/react';\nimport NightingaleVariationCE from '@nightingale-elements/nightingale-variation';\n\nexport const NightingaleVariation = createComponent({\n  tagName: 'nightingale-variation',\n  elementClass: NightingaleVariationCE,\n  react: React,\n  // events: {\n  //   onactivate: 'activate',\n  //   onchange: 'change',\n  // },\n});\n\nexport default NightingaleVariation;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { createSelector } from 'reselect';\n\nimport { getTextForLabel } from 'utils/text';\n\nimport { ExtendedFeature } from '../..';\n\ntype LabelProps = {\n  entry: ExtendedFeature;\n  label?: LabelUISettings;\n};\nconst Label = ({ entry, label }: LabelProps) => {\n  const type =\n    entry.source_database === 'interpro' && entry.type ? (\n      <interpro-type type={entry.type.replace('_', ' ')} dimension=\"1em\" />\n    ) : null;\n  return (\n    <>\n      {entry.accession.startsWith('residue:') ? (\n        entry.accession.split('residue:')[1]\n      ) : (\n        <>\n          {type}\n          {getTextForLabel(entry, label)}\n        </>\n      )}\n    </>\n  );\n};\n\nconst mapStateToProps = createSelector(\n  (state: GlobalState) => state.settings.ui,\n  (ui: UISettings) => ({ label: ui.labelContent })\n);\n\nexport default connect(mapStateToProps)(Label);\n","import React from 'react';\n\nimport { ExtendedFeature } from '../..';\n\nimport cssBinder from 'styles/cssBinder';\n\nimport grid from '../../../ProteinViewer/grid.css';\n\nconst css = cssBinder(grid);\n\ntype Props = {\n  entry: ExtendedFeature;\n  expandedTrack: boolean;\n};\n\nconst ResidueLabel = ({ entry, expandedTrack }: Props) => {\n  if (!entry.residues) return null;\n  return (\n    <>\n      {entry.residues.map((residue) =>\n        residue.locations.map((r, i) => (\n          <div className={css('residue-accession-container')}>\n            <div\n              key={`res_${r.accession}_${i}`}\n              className={css('residue-accession-child', {\n                hide: !expandedTrack,\n              })}\n            >\n              <span>\n                {r.description\n                  ? r.description.charAt(0).toUpperCase() +\n                    r.description.slice(1)\n                  : r.accession}\n              </span>\n            </div>\n          </div>\n        )),\n      )}\n    </>\n  );\n};\n\nexport default ResidueLabel;\n","import React from 'react';\n\nimport { NOT_MEMBER_DBS } from 'menuConfig';\nimport Link from 'components/generic/Link';\n\nimport { AlphafoldLink, PTMLink } from 'components/ExtLink/patternLinkWrapper';\nimport Tooltip from 'components/SimpleCommonComponents/Tooltip';\n\nimport { FunFamLink } from 'subPages/Subfamilies';\n\nimport { ExtendedFeature } from '../..';\n\nimport cssBinder from 'styles/cssBinder';\n\nimport style from '../../../ProteinViewer/style.css';\n\nconst css = cssBinder(style);\n\ntype PropsEL = {\n  entry: ExtendedFeature;\n  isPrinting: boolean;\n  databases?: DBsInfo;\n};\n\nconst EXCEPTIONAL_TYPES = [\n  'intrinsically_disordered_regions',\n  'residue',\n  'sequence_conservation',\n  'chain',\n  'secondary_structure',\n  'variation',\n  'ptm',\n];\nconst EXCEPTIONAL_PREFIXES = ['G3D:', 'REPEAT:', 'DISPROT:'];\n\nexport const isAnExceptionalLabel = (entry: ExtendedFeature): boolean => {\n  return (\n    // Exceptional types coming from InterPro (e.g PTMs), should not result in an ExceptionalLabel.\n    (EXCEPTIONAL_TYPES.includes(entry.type || '') &&\n      entry.source_database !== 'interpro') ||\n    NOT_MEMBER_DBS.has(entry.source_database || '') ||\n    EXCEPTIONAL_PREFIXES.some((prefix) => entry.accession.startsWith(prefix))\n  );\n};\n\nconst ExceptionalLabels = ({ entry, isPrinting, databases }: PropsEL) => {\n  const label = (entry.locations?.[0]?.fragments?.[0]?.seq_feature ||\n    entry.accession) as string;\n\n  if (entry.source_database === 'mobidblt') {\n    return (\n      <>\n        {isPrinting ? (\n          <span>{entry.accession}</span>\n        ) : (\n          <Link target=\"_blank\" href={`https://mobidb.org/${entry.protein}`}>\n            {entry.accession.replace('Mobidblt-', 'MobiDB-lite: ')}\n          </Link>\n        )}\n        {entry.children &&\n          entry.children.map((d) => (\n            <div className={css('centered-label')} key={`main_${d.accession}`}>\n              {d.accession.replace('Mobidblt-', '')}\n            </div>\n          ))}\n      </>\n    );\n  }\n\n  if (entry.source_database === 'funfam') {\n    return isPrinting ? (\n      <span>{label}</span>\n    ) : (\n      <FunFamLink accession={entry.accession}>{label}</FunFamLink>\n    );\n  }\n  if (entry.source_database === 'pfam-n') {\n    return isPrinting ? (\n      <span>Pfam-N: {entry.accession}</span>\n    ) : (\n      <Link\n        to={{\n          description: {\n            main: { key: 'entry' },\n            entry: { db: 'pfam', accession: entry.accession },\n          },\n        }}\n      >\n        Pfam-N: {label}\n      </Link>\n    );\n  }\n  if (entry.source_database === 'alphafold') {\n    return isPrinting ? (\n      <span>pLDDT</span>\n    ) : (\n      <AlphafoldLink id={entry.protein || ''} className={css('ext')}>\n        pLDDT\n      </AlphafoldLink>\n    );\n  }\n\n  if (entry.source_database === 'ptm') {\n    return isPrinting ? (\n      <span>UniProt</span>\n    ) : (\n      <PTMLink id={entry.accession || ''} className={css('ext')}>\n        {entry.name}\n      </PTMLink>\n    );\n  }\n\n  if (entry.source_database === 'elm')\n    return isPrinting ? (\n      <span>{label}</span>\n    ) : (\n      <Link href={`http://elm.eu.org/${entry.accession}`}>{label}</Link>\n    );\n  if (entry.source_database === 'proteinsAPI')\n    return isPrinting ? (\n      <span>{label}</span>\n    ) : (\n      <Link\n        className={css('ext')}\n        href={`https://www.uniprot.org/uniprotkb/${entry.protein}/variant-viewer`}\n        target=\"_blank\"\n      >\n        Go to UniProt\n      </Link>\n    );\n\n  if (entry.type === 'residue') {\n    const processedAccession = entry.accession.replace('residue:', '');\n    const descriptionString = entry.locations?.[0].description;\n\n    return isPrinting ? (\n      <span>Residue: {processedAccession}</span>\n    ) : (\n      <>\n        {entry.source_database !== 'pirsr' && (\n          <Link\n            to={{\n              description: {\n                main: { key: 'entry' },\n                entry: {\n                  db: entry.source_database,\n                  accession: processedAccession,\n                },\n              },\n            }}\n          >\n            {processedAccession}\n          </Link>\n        )}\n\n        <div\n          className={css(\n            processedAccession === 'PIRSR_GROUP' ? 'pirsr-label' : '',\n          )}\n        >\n          {descriptionString}\n        </div>\n      </>\n    );\n  }\n\n  if (\n    NOT_MEMBER_DBS.has(entry.source_database || '') ||\n    entry.type === 'chain' ||\n    entry.type === 'secondary_structure'\n  )\n    return (\n      <>\n        <span style={{ textTransform: 'capitalize' }}>\n          {(entry.source_database || '').replace('_', ' ')}:\n        </span>{' '}\n        {label}\n      </>\n    );\n  if (entry.type === 'sequence_conservation') {\n    return (\n      <Tooltip title={'Score calculated using Phmmer and HMM profile'}>\n        <div className={css('sequence-conservation-label')}>\n          {databases?.[entry.accession]?.name || entry.accession} conservation\n        </div>\n      </Tooltip>\n    );\n  }\n\n  if (entry.accession && entry.accession.startsWith('REPEAT:')) {\n    return isPrinting ? (\n      <span>RepeatsDB</span>\n    ) : (\n      <Link\n        href={`https://repeatsdb.org/annotations/source/AlphaFoldDB/structure/${\n          entry.accession.split(':')[1]\n        }/chain/A`}\n        target=\"_blank\"\n        className={css('ext')}\n      >\n        RepeatsDB\n      </Link>\n    );\n  }\n  if (entry.accession && entry.accession.startsWith('DISPROT:')) {\n    return isPrinting ? (\n      <span>DisProt consensus</span>\n    ) : (\n      <Link href={`https://disprot.org/${entry.protein}`} target=\"_blank\">\n        DisProt consensus\n      </Link>\n    );\n  }\n  return null;\n};\n\nexport default ExceptionalLabels;\n","import React from 'react';\n\nimport Link from 'components/generic/Link';\n\nimport { ExtendedFeature } from '..';\nimport Label from './Label';\nimport ResidueLabel from './ResidueLabel';\n\nimport cssBinder from 'styles/cssBinder';\n\nimport style from '../../ProteinViewer/style.css';\nimport grid from '../../ProteinViewer/grid.css';\nimport local from './style.css';\nimport ExceptionalLabels, { isAnExceptionalLabel } from './ExceptionalLabels';\n\nconst css = cssBinder(style, grid, local);\n\ntype Props = {\n  entry: ExtendedFeature;\n  hideCategory: boolean;\n  expandedTrack: boolean;\n  isPrinting: boolean;\n};\n\nconst LabelsInTrack = ({\n  entry,\n  hideCategory,\n  isPrinting,\n  expandedTrack,\n}: Props) => {\n  const key = entry.source_database === 'pdb' ? 'structure' : 'entry';\n  return (\n    <div\n      className={css('track-label', {\n        hideCategory,\n      })}\n    >\n      {isAnExceptionalLabel(entry) ? (\n        <ExceptionalLabels entry={entry} isPrinting={isPrinting} />\n      ) : (\n        <>\n          {isPrinting ? (\n            <b>\n              <Label entry={entry} />\n            </b>\n          ) : (\n            <>\n              {entry.source_database !== 'interpro' &&\n                // Conditions for residue section\n                !(\n                  entry.accession.startsWith('residue:') ||\n                  entry.accession.startsWith('PIRSR')\n                ) &&\n                !hideCategory && (\n                  <div className={css('inner-track-label')}>\n                    <b>Unintegrated</b>\n                  </div>\n                )}\n              <div\n                className={css(\n                  entry.children || entry.residues\n                    ? 'inner-track-label'\n                    : 'track-accession-child',\n                )}\n              >\n                <Link\n                  to={{\n                    description: {\n                      main: {\n                        key,\n                      },\n                      [key]: {\n                        db: entry.source_database,\n                        accession: entry.accession.startsWith('residue:')\n                          ? entry.accession.split('residue:')[1]\n                          : entry.accession,\n                      },\n                    },\n                  }}\n                >\n                  <Label entry={entry} />\n                </Link>\n              </div>\n            </>\n          )}\n          <div\n            className={css({\n              hide: !expandedTrack,\n            })}\n          >\n            <ResidueLabel entry={entry} expandedTrack={expandedTrack} />\n\n            {entry.children &&\n              entry.children.map((d) => (\n                <div\n                  key={`main_${d.accession}`}\n                  className={css('track-accession-child')}\n                >\n                  {isPrinting ? (\n                    <Label entry={d} />\n                  ) : (\n                    <Link\n                      to={{\n                        description: {\n                          main: { key: 'entry' },\n                          entry: {\n                            db: d.source_database,\n                            accession: d.accession,\n                          },\n                        },\n                      }}\n                    >\n                      <Label entry={d} />\n                    </Link>\n                  )}\n                  <ResidueLabel entry={d} expandedTrack={expandedTrack} />\n                </div>\n              ))}\n          </div>\n        </>\n      )}\n    </div>\n  );\n};\nexport default LabelsInTrack;\n","// extracted by mini-css-extract-plugin\nexport default {\"inner-track-label\":\"LabelsInTrack_style__inner-track-label___b1\",\"track-accession-child\":\"LabelsInTrack_style__track-accession-child___cc\",\"track-label\":\"LabelsInTrack_style__track-label___b7\",\"icon-interpro\":\"LabelsInTrack_style__icon-interpro___a9\"};","import React from 'react';\n\nimport cssBinder from 'styles/cssBinder';\nimport localCSS from './style.css';\n\nconst css = cssBinder(localCSS);\n\nconst COLOR_SCALE_WIDTH = 80;\nconst COLOR_SCALE_HEIGHT = 20;\n\ntype ColorScaleType = {\n  domain: Array<number>;\n  range: Array<string>;\n  width?: number;\n  height?: number;\n};\nconst ColorScale = ({\n  domain,\n  range,\n  width = COLOR_SCALE_WIDTH,\n  height = COLOR_SCALE_HEIGHT,\n}: ColorScaleType) => {\n  const maxDomain = domain.slice(-1)[0];\n  return (\n    <div className={css('color-scale')}>\n      <div className={css('legend', 'left')}>{domain[0]}</div>\n      <svg height={height} width={width}>\n        <defs>\n          <linearGradient id=\"grad1\" x1=\"0%\" y1=\"0%\" x2=\"100%\" y2=\"0%\">\n            <stop offset=\"0%\" style={{ stopColor: range[0] }} />\n            {domain.slice(1).map((d, i) => (\n              <stop\n                key={i}\n                offset={`${(100 * d) / maxDomain}%`}\n                style={{ stopColor: range[i + 1] }}\n              />\n            ))}\n          </linearGradient>\n        </defs>\n        <rect width=\"100%\" height={height} fill=\"url(#grad1)\" />\n      </svg>\n      <div className={css('legend', 'right')}>{maxDomain}</div>\n    </div>\n  );\n};\n\nexport default ColorScale;\n","// extracted by mini-css-extract-plugin\nexport default {\"color-scale\":\"ColorScale_style__color-scale___b4\",\"legend\":\"ColorScale_style__legend___ae\",\"left\":\"ColorScale_style__left___c2\",\"right\":\"ColorScale_style__right___a9\"};","import React from 'react';\n\nimport ColorScale from '../ColorScale';\nimport NightingaleColoredSequence from '@nightingale-elements/nightingale-colored-sequence';\n\nconst levels = {\n  H: 'Very high',\n  M: 'Confident',\n  L: 'Low',\n  D: 'Very Low',\n};\n\nexport type ConfidenceDetail = {\n  target?: HTMLElement;\n  feature: {\n    aa?: keyof typeof levels;\n    start?: number;\n  };\n};\ntype Props = {\n  detail: ConfidenceDetail;\n};\n\nconst ConfidencePopup = ({ detail }: Props) => {\n  const element = detail?.target?.closest<NightingaleColoredSequence>(\n    'nightingale-colored-sequence'\n  );\n  if (!element) return null;\n  const aa = detail.feature.aa || '';\n  return (\n    <section>\n      <h6>Residue {detail.feature.start}</h6>\n      <div>\n        <b>{aa ? levels[aa] : '-'}</b>\n        <br />\n        <ColorScale {...element.colorScale} />\n      </div>\n    </section>\n  );\n};\n\nexport default ConfidencePopup;\n","import React from 'react';\n\nexport type ResidueDetail = {\n  feature?: {\n    locations: Array<ProtVistaLocation>;\n    accession: string;\n    currentResidue: {\n      description?: string;\n      residue?: string;\n      residues?: string;\n      start: number;\n      end: number;\n    };\n  };\n  highlight: string;\n};\ntype Props = {\n  detail: ResidueDetail;\n  sourceDatabase: string;\n};\n\nconst ProtVistaResiduePopup = ({ detail, sourceDatabase }: Props) => {\n  if (!detail?.feature) return null;\n\n  let accession = detail.feature.accession;\n\n  if (sourceDatabase === 'PIRSF') {\n    accession = accession.replace('PIRSF', 'PIRSR');\n    accession = accession.replace(/\\.\\d+/, '');\n  }\n\n  const residueLocation: ProtVistaLocation = detail?.feature.locations[0];\n  const residueDescription: string = residueLocation.description || '';\n  const highlightPositions = detail.highlight.split(':');\n  const residuePosition =\n    highlightPositions[0] == highlightPositions[1]\n      ? highlightPositions[0]\n      : highlightPositions[0] + '-' + highlightPositions[1];\n\n  return (\n    <section>\n      <h6>\n        {sourceDatabase} -{' '}\n        {accession.startsWith('residue:')\n          ? accession.split('residue:')[1]\n          : accession}\n      </h6>\n      {residueDescription && <p>{residueDescription}</p>}\n      <div>\n        {/* Display only the position of the currently highlighted residue */}\n        Residue ({residuePosition})\n      </div>\n    </section>\n  );\n};\n\nexport default ProtVistaResiduePopup;\n","import { VariationDatum } from '@nightingale-elements/nightingale-variation/dist/nightingale-variation';\nimport React from 'react';\n\nexport type VariationDetail = {\n  feature?: VariationDatum;\n};\ntype Props = {\n  detail: VariationDetail;\n};\n\nconst ProtVistaVariationPopup = ({ detail }: Props) => {\n  if (!detail?.feature) return null;\n  const { accession, wildType, variant, start, size, consequenceType } =\n    detail.feature;\n\n  const hasMultiple = size !== undefined && (size || 0) > 1;\n  return (\n    <section>\n      <h6>{accession}</h6>\n      <p>\n        {wildType}&gt;{variant} - {consequenceType}\n      </p>\n      <div>\n        Position{hasMultiple && 's'}: {start}\n        {hasMultiple && `-${start + (size || 0)}`}\n      </div>\n    </section>\n  );\n};\n\nexport default ProtVistaVariationPopup;\n","import React from 'react';\nimport { connect } from 'react-redux';\n\nimport { goToCustomLocation } from 'actions/creators';\n\nimport cssBinder from 'styles/cssBinder';\nimport ipro from 'styles/interpro-vf.css';\nimport localCSS from './style.css';\nconst css = cssBinder(ipro, localCSS);\n\ntype Props = {\n  fragments?: Array<ProtVistaFragment>;\n  protein?: string;\n  goToCustomLocation: typeof goToCustomLocation;\n};\nconst Positions = ({ fragments, protein, goToCustomLocation }: Props) => {\n  const handleClick = (start: number, end: number) => () => {\n    if (!protein) return;\n    goToCustomLocation({\n      description: {\n        main: { key: 'protein' },\n        protein: { accession: protein, db: 'UniProt', detail: 'sequence' },\n      },\n      hash: `${start}-${end}`,\n    });\n  };\n\n  return (\n    <ul>\n      {(fragments || []).map(({ start, end }, i) => (\n        <li key={i}>\n          <button\n            className={css('button', 'secondary', 'coordinates')}\n            onClick={handleClick(start, end)}\n            style={{\n              cursor: protein ? 'pointer' : 'inherit',\n            }}\n          >\n            {start} - {end}\n          </button>\n        </li>\n      ))}\n    </ul>\n  );\n};\nexport default connect(null, { goToCustomLocation })(Positions);\n","import React from 'react';\n\nimport Positions from '../Positions';\nimport Link from 'components/generic/Link';\n\nimport cssBinder from 'styles/cssBinder';\nimport ipro from 'styles/interpro-vf.css';\nimport localCSS from './style.css';\n\nconst css = cssBinder(ipro, localCSS);\nexport type EntryDetail = {\n  target?: HTMLElement;\n  feature?: {\n    accession: string;\n    integrated: string;\n    description: string;\n    name: string;\n    type: string;\n    entry: string;\n    protein?: string;\n    parent?: { protein?: string };\n    locations: Array<ProtVistaLocation>;\n    confidence?: string;\n  };\n  highlight: string;\n};\ntype Props = {\n  detail: EntryDetail;\n  sourceDatabase: string;\n  currentLocation: InterProLocation;\n};\nconst getSecondaryStructureType = (locations: Array<ProtVistaLocation>) => {\n  let type = '';\n  if (locations && locations.length > 0) {\n    if (locations[0].fragments && locations[0].fragments[0]) {\n      const shape = locations[0].fragments[0].shape || '';\n      type = shape.charAt(0).toUpperCase() + shape.slice(1);\n    }\n  }\n  return type;\n};\n\nconst ProtVistaEntryPopup = ({\n  detail,\n  sourceDatabase,\n  currentLocation,\n}: Props) => {\n  const {\n    accession,\n    description,\n    name,\n    type: originalType,\n    entry,\n    locations,\n    confidence,\n  } = detail?.feature || {};\n  const isInterPro = sourceDatabase.toLowerCase() === 'interpro';\n  const integrated = detail.feature?.integrated;\n\n  // To include the type of fragment of the secondary structure\n  let type = originalType;\n  if (originalType === 'secondary_structure' && locations) {\n    type = `Secondary Structure: ${getSecondaryStructureType(locations)}`;\n  }\n\n  // To only show the location of the currntly selected fragment\n  const highlightChild =\n    detail.target &&\n    detail.target.classList.contains('child-fragment') &&\n    detail.highlight;\n  let newLocations = null;\n  if (highlightChild) {\n    newLocations = highlightChild.split(',').map((loc: string) => {\n      const [start, end] = loc.split(':').map(Number);\n      return {\n        fragments: [{ start, end }],\n        model_acc: null,\n        subfamily: locations?.[0]?.subfamily,\n      };\n    });\n  }\n  const protein =\n    currentLocation?.description?.protein?.accession ||\n    detail?.feature?.protein ||\n    detail?.feature?.parent?.protein;\n  return (\n    <section className={css('entry-popup')}>\n      <h6>\n        <div className={css('pop-wrapper')}>\n          <div>\n            {isInterPro && (\n              <interpro-type\n                type={(type || '').replace('_', ' ')}\n                dimension=\"1.4em\"\n                aria-label=\"Entry type\"\n              />\n            )}\n          </div>\n          <div>{sourceDatabase}</div>\n          <div>\n            {accession?.startsWith('residue:')\n              ? accession.split('residue:')[1]?.replace('PIRSF', 'PIRSR')\n              : accession}\n          </div>\n        </div>{' '}\n      </h6>\n\n      {name && <h6 className={css('title')}>{name}</h6>}\n      {description && <p>[{description}]</p>}\n\n      {entry && (\n        <p>\n          <small>({entry})</small>\n        </p>\n      )}\n\n      {integrated ? (\n        <h6>\n          Integrated:{' '}\n          <Link\n            to={{\n              description: {\n                main: { key: 'entry' },\n                entry: { db: 'interpro', accession: integrated },\n              },\n            }}\n          >\n            <span style={{ color: 'white' }}>{integrated}</span>\n          </Link>\n        </h6>\n      ) : null}\n      <ul>\n        {(newLocations || locations || []).map(\n          ({ fragments, model_acc: model, subfamily }, j) => (\n            <li key={j}>\n              {model && model !== accession && <>Model: {model}</>}\n              {subfamily && (\n                <div className={css('subfamily')}>\n                  <header>Subfamily</header>\n                  <ul>\n                    <li>\n                      <header>Accession:</header> {subfamily.accession}\n                    </li>\n                    <li>\n                      <header>Name:</header> {subfamily.name}\n                    </li>\n                  </ul>\n                </div>\n              )}\n              <Positions fragments={fragments} protein={protein} />\n            </li>\n          ),\n        )}\n      </ul>\n      {confidence && <p>Confidence: {confidence}</p>}\n    </section>\n  );\n};\n\nexport default ProtVistaEntryPopup;\n","import React from 'react';\n\nexport type ConservationDetail = {\n  feature: {\n    [p: string]: {\n      position: number;\n      value?: number;\n    };\n  };\n};\ntype Props = {\n  detail: ConservationDetail;\n};\n\nconst ProtVistaConservationPopup = ({ detail }: Props) => {\n  const match = detail.feature;\n  const sourceDatabase = 'PANTHER'; // TODO: get it from match.accession;\n  const accession = Object.keys(match)[0];\n\n  return (\n    <section>\n      <h6>{accession}</h6>\n\n      <div>\n        <div>{sourceDatabase}</div>\n\n        {match[accession]?.value && (\n          <>\n            <p>Position : {match[accession].position}</p>\n            <p>Conservation : {match[accession].value}</p>\n          </>\n        )}\n      </div>\n    </section>\n  );\n};\nexport default ProtVistaConservationPopup;\n","import React from 'react';\nimport Positions from '../Positions';\n\nexport type RepeatsDBDetail = {\n  feature: {\n    accession: string;\n    type: string;\n    protein: string;\n    locations: Array<ProtVistaLocation>;\n  };\n};\ntype Props = {\n  detail: RepeatsDBDetail;\n};\n\nconst RepeatsDBPopup = ({ detail }: Props) => {\n  const { locations, protein } = detail.feature;\n  return (\n    <section>\n      <h5>RepeatsDB: consensus</h5>\n\n      {locations.map(({ fragments }, i) => (\n        <div key={i}>\n          <Positions fragments={fragments} protein={protein} key={i} />\n        </div>\n      ))}\n    </section>\n  );\n};\nexport default RepeatsDBPopup;\n","import React from 'react';\nimport type { PTMFragment } from 'src/components/ProteinViewer';\n\nexport type PTMDetail = {\n  target?: HTMLElement;\n  highlight: string;\n  feature?: {\n    name?: string;\n    accession?: string;\n    type?: string;\n    sources?: string;\n    locations: {\n      accession: string;\n      description: string;\n      fragments: PTMFragment[];\n    }[];\n  };\n};\ntype Props = {\n  detail: PTMDetail;\n};\n\nconst ProtVistaPTMPopup = ({ detail }: Props) => {\n  const highlightedPosition = parseInt(detail.highlight.split(':')[0]);\n  const ptmData: PTMFragment | undefined =\n    detail.feature?.locations[0].fragments.filter(\n      (f) => f.start == highlightedPosition,\n    )[0];\n\n  if (ptmData) {\n    const ptmPeptide: string = ptmData.peptide as string;\n    const ptmPos: number = ptmData.relative_pos as number;\n    const peptideStart: number = ptmData.peptide_start as number;\n\n    return (\n      <section>\n        <div>\n          <span> Peptide: </span>\n\n          {/* Show peptide sequence and highlight PTM */}\n          <span>{ptmPeptide.slice(0, ptmPos)}</span>\n          <span>\n            <b>{ptmPeptide[ptmPos]}</b>\n          </span>\n          <span>{ptmPeptide.slice(ptmPos + 1)}</span>\n\n          {/* Show peptide sequence and highlight PTM */}\n          <span>\n            &nbsp;({peptideStart} - {ptmData.peptide_end as string}){' '}\n          </span>\n        </div>\n        <div>\n          {ptmData.ptm_type as string} on {ptmPeptide[ptmPos]} (\n          {peptideStart + ptmPos})\n        </div>\n        <div>Source: {ptmData.source as string[]}</div>\n      </section>\n    );\n  }\n\n  return <></>;\n};\n\nexport default ProtVistaPTMPopup;\n","import React from 'react';\nimport Positions from '../Positions';\n\nexport type DisProtDetail = {\n  feature: {\n    accession: string;\n    type: string;\n    protein: string;\n    locations: Array<ProtVistaLocation>;\n  };\n};\ntype Props = {\n  detail: DisProtDetail;\n};\n\nconst DisProtPopup = ({ detail }: Props) => {\n  const { locations, type, protein } = detail.feature;\n  return (\n    <section>\n      <h5>DisProt: {type}</h5>\n\n      {locations.map(({ fragments }, i) => (\n        <div key={i}>\n          <Positions fragments={fragments} protein={protein} key={i} />\n        </div>\n      ))}\n    </section>\n  );\n};\nexport default DisProtPopup;\n","import React from 'react';\n\nimport ProtVistaConfidencePopup, { ConfidenceDetail } from './Confidence';\nimport ProtVistaResiduePopup, { ResidueDetail } from './Residue';\nimport ProtVistaVariationPopup, { VariationDetail } from './Variation';\nimport ProtVistaEntryPopup, { EntryDetail } from './Entry';\nimport ProtVistaConservationPopup, { ConservationDetail } from './Conservation';\nimport RepeatsDBPopup, { RepeatsDBDetail } from './RepeatsDB';\nimport ProtVistaPTMPopup, { PTMDetail } from './PTM';\nimport DisProtPopup, { DisProtDetail } from './DisProt';\nimport { ExtendedFeature } from '..';\n\nexport type PopupDetail = (\n  | ConservationDetail\n  | ResidueDetail\n  | ConfidenceDetail\n  | EntryDetail\n) & {\n  target?: HTMLElement;\n  type?: string;\n};\ntype Props = {\n  sourceDatabase: string;\n  currentLocation: InterProLocation;\n  detail: PopupDetail;\n};\n\nconst ProtVistaPopup = ({ detail, sourceDatabase, currentLocation }: Props) => {\n  // comes from PTMTrack\n  if (\n    (detail as PTMDetail)?.feature?.type == 'ptm' &&\n    !(detail as PTMDetail).feature?.accession?.startsWith('IPR')\n  ) {\n    return <ProtVistaPTMPopup detail={detail as PTMDetail} />;\n  }\n\n  // comes from the conservation track\n  if (detail.type === 'conservation') {\n    return <ProtVistaConservationPopup detail={detail as ConservationDetail} />;\n  }\n\n  // comes from a residue\n  if (\n    (detail.feature as ExtendedFeature).type === 'residue' ||\n    (detail.feature as ExtendedFeature).residues !== undefined\n  ) {\n    return (\n      <ProtVistaResiduePopup\n        detail={detail as ResidueDetail}\n        sourceDatabase={sourceDatabase}\n      />\n    );\n  }\n\n  const colouredTrack = detail?.target?.closest('nightingale-colored-sequence');\n  // comes from the alphafold confidence track\n  if (colouredTrack) {\n    if (colouredTrack.classList.contains('confidence'))\n      return <ProtVistaConfidencePopup detail={detail as ConfidenceDetail} />;\n  }\n  const variationTrack = detail?.target?.closest('nightingale-variation');\n  // comes from the alphafold confidence track\n  if (variationTrack) {\n    return <ProtVistaVariationPopup detail={detail as VariationDetail} />;\n  }\n\n  if (\n    ((detail as RepeatsDBDetail)?.feature?.accession || '').startsWith(\n      'REPEAT:',\n    )\n  )\n    return <RepeatsDBPopup detail={detail as RepeatsDBDetail} />;\n  if (\n    ((detail as RepeatsDBDetail)?.feature?.accession || '').startsWith(\n      'DISPROT:',\n    )\n  )\n    return <DisProtPopup detail={detail as DisProtDetail} />;\n\n  // comes from the Entry track\n  return (\n    <ProtVistaEntryPopup\n      detail={detail as EntryDetail}\n      sourceDatabase={sourceDatabase}\n      currentLocation={currentLocation}\n    />\n  );\n};\n\nexport default ProtVistaPopup;\n","import React, {\n  useState,\n  useEffect,\n  useRef,\n  ReactNode,\n  forwardRef,\n  useImperativeHandle,\n} from 'react';\n\nimport { connect } from 'react-redux';\nimport { createSelector } from 'reselect';\n\nimport useStateRef from 'utils/hooks/useStateRef';\nimport { getTrackColor, EntryColorMode } from 'utils/entry-color';\n\nimport { LineData } from '@nightingale-elements/nightingale-linegraph-track';\nimport NightingaleInterProTrackCE from '@nightingale-elements/nightingale-interpro-track';\n\nimport NightingaleTrack from 'components/Nightingale/Track';\nimport NightingaleInterProTrack from 'components/Nightingale/InterProTrack';\nimport NightingaleLinegraphTrack from 'components/Nightingale/Linegraph';\nimport NightingaleColoredSequence from 'components/Nightingale/ColoredSequence';\nimport NightingaleVariation from 'components/Nightingale/Variation';\nimport uniqueId from 'utils/cheap-unique-id';\n\nimport cssBinder from 'styles/cssBinder';\n\nimport style from '../style.css';\nimport grid from '../grid.css';\nimport { ExtendedFeature } from '..';\nimport LabelsInTrack from '../LabelsInTrack';\n\nimport ProtVistaPopup, { PopupDetail } from '../Popup';\nimport { ProteinsAPIVariation } from '@nightingale-elements/nightingale-variation/dist/proteinAPI';\n\nconst css = cssBinder(style, grid);\n\n// TODO: get from nightingale types\ntype EventType = 'click' | 'mouseover' | 'mouseout' | 'reset';\ntype DetailInterface = {\n  eventType: EventType;\n  feature?: ExtendedFeature | null;\n  target?: HTMLElement;\n  highlight?: string;\n  selectedId?: string | null;\n  parentEvent?: Event;\n};\n\nconst OTHER_TRACK_TYPES = [\n  'secondary_structure',\n  'sequence_conservation',\n  'confidence',\n  'residue',\n  'Model',\n  'Domain',\n  'consensus majority',\n  'variation',\n];\n\nconst MARGIN_CHANGE_TRACKS = [\n  'phobius',\n  'elm',\n  'pfam-n',\n  'funfam',\n  'mobidblt',\n  'tmhmm',\n  'signalp',\n  'coils',\n];\n\nconst EXCEPTIONAL_PREFIXES = ['G3D:', 'REPEAT:', 'DISPROT:'];\n\nconst b2sh = new Map([\n  ['N_TERMINAL_DISC', 'discontinuosStart'], // TODO fix spelling in this and nightingale\n  ['C_TERMINAL_DISC', 'discontinuosEnd'],\n  ['CN_TERMINAL_DISC', 'discontinuos'],\n  ['NC_TERMINAL_DISC', 'discontinuos'],\n]);\n\nconst webComponents = [\n  'nightingale-colored-sequence',\n  'nightingale-linegraph-track',\n  'nightingale-interpro-track',\n  'nightingale-track',\n];\nconst mapToFeatures = (entry: ExtendedFeature, colorDomainsBy: string) =>\n  (entry.entry_protein_locations || entry.locations || []).map((loc) => ({\n    accession: entry.accession,\n    name: entry.name,\n    short_name: entry.short_name,\n    integrated: entry.integrated,\n    source_database: entry.source_database,\n    locations: [loc],\n    color: getTrackColor(entry, colorDomainsBy),\n    entry_type: entry.entry_type,\n    type: entry.type || 'entry',\n    residues: entry.residues && JSON.parse(JSON.stringify(entry.residues)),\n    chain: entry.chain,\n    protein: entry.protein,\n    confidence: loc.confidence,\n  }));\n\nconst mapToContributors = (entry: ExtendedFeature, colorDomainsBy: string) =>\n  entry.children?.map((child) => ({\n    accession: child.accession,\n    chain: entry.chain,\n    name: child.name,\n    short_name: child.short_name,\n    residues: child.residues && JSON.parse(JSON.stringify(child.residues)),\n    source_database: child.source_database,\n    entry_type: child.entry_type,\n    type: child.type,\n    integrated: child.integrated,\n    locations: (child.entry_protein_locations || child.locations || []).map(\n      (loc) => ({\n        ...loc,\n        fragments: loc.fragments.map((f) => ({\n          shape: b2sh.get(\n            (f as unknown as { 'dc-status': string })['dc-status'],\n          ),\n          ...f,\n        })),\n      }),\n    ),\n    parent: entry,\n    color: getTrackColor(\n      Object.assign(child, { parent: entry }),\n      colorDomainsBy,\n    ),\n    location2residue: child.location2residue,\n    // expanded: true,\n  }));\nexport type ExpandedHandle = {\n  setExpandedAllTracks: (v: boolean) => void;\n};\ntype Props = {\n  entries: Array<ExtendedFeature>;\n  highlightColor: string;\n  hideCategory: boolean;\n  isPrinting: boolean;\n  openTooltip: (element: HTMLElement | undefined, content: ReactNode) => void;\n  closeTooltip: () => void;\n  sequence: string;\n  customLocation?: InterProLocation;\n  colorDomainsBy?: string;\n  databases?: DBsInfo;\n};\nconst TracksInCategory = forwardRef<ExpandedHandle, Props>(\n  (\n    {\n      entries,\n      sequence,\n      hideCategory,\n      isPrinting,\n      highlightColor,\n      customLocation,\n      openTooltip,\n      closeTooltip,\n      colorDomainsBy,\n      databases,\n    },\n    ref,\n  ) => {\n    const [expandedTrack, setExpandedTrack, expandedTrackRef] = useStateRef<\n      Record<string, boolean>\n    >({});\n    const [hasListeners, setHasListeners] = useState<Record<string, boolean>>(\n      {},\n    );\n    const [hasData, setHasData] = useState<Record<string, boolean>>({});\n    const databasesRef = useRef<DBsInfo | null>(null);\n    const uniqueID = useRef(uniqueId());\n    const getTrackAccession = (accession: string) =>\n      `track_${uniqueID.current}_${accession}`;\n    useEffect(() => {\n      if (databases) databasesRef.current = databases;\n    }, [databases]);\n    const handleTrackEvent = ({ detail }: { detail: DetailInterface }) => {\n      if (detail) {\n        const accession = detail.feature?.accession || '';\n        switch (detail.eventType) {\n          case 'click':\n            setExpandedTrack({\n              ...expandedTrackRef.current,\n              [accession]: !expandedTrackRef.current[accession],\n            });\n            break;\n          case 'mouseout':\n            closeTooltip();\n            break;\n          case 'mouseover': {\n            const sourceDatabase =\n              databasesRef.current?.[detail.feature?.source_database || '']\n                ?.name ||\n              detail.feature?.source_database ||\n              '';\n            if (customLocation) {\n              openTooltip(\n                detail.target,\n                <ProtVistaPopup\n                  detail={detail as unknown as PopupDetail}\n                  sourceDatabase={sourceDatabase}\n                  currentLocation={customLocation}\n                />,\n              );\n            }\n            break;\n          }\n          default:\n            break;\n        }\n      }\n    };\n\n    useEffect(() => {\n      setHasData({}); // Forcing reload of the data\n    }, [colorDomainsBy]);\n\n    const setExpandedAllTracks = (expanded: boolean) => {\n      setExpandedTrack(\n        Object.fromEntries(\n          entries\n            .filter((entry) => !OTHER_TRACK_TYPES.includes(entry.type || ''))\n            .map((entry) => [entry.accession, expanded]),\n        ),\n      );\n    };\n    useImperativeHandle(ref, () => ({ setExpandedAllTracks }), []);\n    useEffect(() => {\n      setExpandedAllTracks(true);\n      Promise.all(\n        webComponents.map((wc) => customElements.whenDefined(wc)),\n      ).then(() => {\n        const addedListeners: Record<string, boolean> = {};\n        const addedData: Record<string, boolean> = {};\n        for (const entry of entries) {\n          const track = document.getElementById(\n            getTrackAccession(entry.accession),\n          );\n          if (track) {\n            // setting up the listeners\n            if (!hasListeners[entry.accession]) {\n              track.addEventListener('change', (evt) =>\n                handleTrackEvent({ detail: (evt as CustomEvent).detail }),\n              );\n              addedListeners[entry.accession || ''] = true;\n            }\n            // adding the data\n            if (!hasData[entry.accession]) {\n              if (\n                ['nightingale-track', 'nightingale-interpro-track'].includes(\n                  track.tagName.toLowerCase(),\n                )\n              ) {\n                (track as NightingaleInterProTrackCE).data = mapToFeatures(\n                  entry,\n                  colorDomainsBy || 'MEMBER_DB',\n                );\n                const contributors = mapToContributors(\n                  entry,\n                  colorDomainsBy || 'MEMBER_DB',\n                );\n                if (contributors)\n                  (track as NightingaleInterProTrackCE).contributors =\n                    contributors;\n              }\n              addedData[entry.accession || ''] = true;\n            }\n          }\n        }\n        if (Object.keys(addedListeners).length)\n          setHasListeners({\n            ...hasListeners,\n            ...addedListeners,\n          });\n        if (Object.keys(addedData).length)\n          setHasData({\n            ...hasData,\n            ...addedData,\n          });\n      });\n    }, [entries, hasData]);\n\n    return (\n      <>\n        {entries &&\n          entries.map((entry) => {\n            const type = entry.type || '';\n            const isExternalSource = EXCEPTIONAL_PREFIXES.some((prefix) =>\n              entry.accession.startsWith(prefix),\n            );\n\n            // Space unintegrated tracks\n            const trackTopMargin =\n              entry.source_database !== 'interpro' && // Not integrated\n              !MARGIN_CHANGE_TRACKS.includes(\n                entry.source_database?.toLowerCase() || '',\n              ) && // Not included in other_features (eg. pfam-n, etc..)\n              !entry.accession.startsWith('residue:') // Not a residue\n                ? 14\n                : 2;\n\n            return (\n              <React.Fragment key={entry.accession}>\n                <div\n                  className={css('track', {\n                    hideCategory,\n                  })}\n                >\n                  {OTHER_TRACK_TYPES.includes(type) ||\n                  isExternalSource ||\n                  // Handle PTM exceptional case.\n                  // Requires different tracks depending on where the info comes from (proteinsAPI or InterPro)\n                  (entry.type === 'ptm' && entry.source_database === 'ptm') ? (\n                    <div className={css('track', type.replace('_', '-'))}>\n                      {entry.type === 'sequence_conservation' &&\n                        (entry.warnings || []).length > 0 && (\n                          <div className={css('conservation-warning')}>\n                            {(entry.warnings || []).map((message) => (\n                              <div key={message}>{message}</div>\n                            ))}\n                          </div>\n                        )}\n                      {entry.type === 'sequence_conservation' &&\n                        (entry.warnings || []).length === 0 && (\n                          <NightingaleLinegraphTrack\n                            data={entry.data as LineData[]}\n                            length={sequence.length}\n                            type=\"conservation\"\n                            id={getTrackAccession(entry.accession)}\n                            margin-color=\"#fafafa\"\n                            margin-left={20}\n                            highlight-event=\"onmouseover\"\n                            highlight-color={highlightColor}\n                            use-ctrl-to-zoom\n                          />\n                        )}\n                      {entry.type === 'confidence' && (\n                        <NightingaleColoredSequence\n                          id={getTrackAccession(entry.accession)}\n                          data={entry.data as string}\n                          length={sequence.length}\n                          scale=\"H:90,M:70,L:50,D:0\"\n                          height={12}\n                          color-range=\"#ff7d45:0,#ffdb13:50,#65cbf3:70,#0053d6:90,#0053d6:100\"\n                          margin-right={10}\n                          margin-left={20}\n                          margin-color=\"#fafafa\"\n                          highlight-event=\"onmouseover\"\n                          highlight-color={highlightColor}\n                          className=\"confidence\"\n                          use-ctrl-to-zoom\n                        />\n                      )}\n                      {entry.type === 'variation' && (\n                        <NightingaleVariation\n                          id={getTrackAccession(entry.accession)}\n                          data={entry.data as ProteinsAPIVariation}\n                          length={sequence.length}\n                          row-height={14}\n                          margin-color=\"#fafafa\"\n                          margin-left={20}\n                          highlight-event=\"onmouseover\"\n                          highlight-color={highlightColor}\n                          className=\"variation\"\n                          use-ctrl-to-zoom\n                          colorConfig={() => '#990000'}\n                          condensed-view\n                          protein-api\n                        />\n                      )}\n                      {(['secondary_structure', 'residue', 'ptm'].includes(\n                        entry.type || '',\n                      ) ||\n                        isExternalSource) && (\n                        <NightingaleTrack\n                          length={sequence.length}\n                          margin-color=\"#fafafa\"\n                          margin-left={20}\n                          height={12}\n                          id={getTrackAccession(entry.accession)}\n                          highlight-event=\"onmouseover\"\n                          highlight-color={highlightColor}\n                          use-ctrl-to-zoom\n                        />\n                      )}{' '}\n                    </div>\n                  ) : (\n                    <>\n                      <NightingaleInterProTrack\n                        length={sequence.length}\n                        margin-color=\"#fafafa\"\n                        id={getTrackAccession(entry.accession)}\n                        show-label\n                        margin-left={20}\n                        margin-top={trackTopMargin} // Space unintegrated\n                        // @ts-ignore\n                        samesize={entry.source_database !== 'mobidblt'}\n                        shape=\"roundRectangle\"\n                        highlight-event=\"onmouseover\"\n                        highlight-color={highlightColor}\n                        label=\".feature.short_name\"\n                        use-ctrl-to-zoom\n                        expanded={expandedTrack[entry.accession]}\n                      />\n                    </>\n                  )}\n                </div>\n\n                <LabelsInTrack\n                  entry={entry}\n                  hideCategory={hideCategory}\n                  expandedTrack={!!expandedTrack[entry.accession]}\n                  isPrinting={isPrinting}\n                />\n              </React.Fragment>\n            );\n          })}\n      </>\n    );\n  },\n);\n\nconst mapStateToProps = createSelector(\n  (state: GlobalState) => state.customLocation,\n  (state: GlobalState) => state.settings.ui,\n  (customLocation: InterProLocation, ui: Record<string, unknown>) => ({\n    customLocation,\n    colorDomainsBy:\n      (ui.colorDomainsBy as string) || EntryColorMode.DOMAIN_RELATIONSHIP,\n  }),\n);\nexport default connect(mapStateToProps, null, null, {\n  forwardRef: true,\n})(TracksInCategory);\n","import React, { ReactNode, useRef, useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport { createSelector } from 'reselect';\n\nimport NightingaleInterProTrack from 'components/Nightingale/InterProTrack';\nimport ProtVistaPopup, { PopupDetail } from '../Popup';\n\nimport { getTrackColor, EntryColorMode } from 'utils/entry-color';\n\nimport cssBinder from 'styles/cssBinder';\n\nimport style from '../style.css';\nimport grid from '../grid.css';\n\nconst css = cssBinder(style, grid);\nimport { ExtendedFeature } from '..';\n\ntype EventType =\n  | 'click'\n  | 'mouseover'\n  | 'mouseenter'\n  | 'mouseleave'\n  | 'mouseout'\n  | 'reset';\ntype DetailInterface = {\n  eventType: EventType;\n  feature?: ExtendedFeature | null;\n  target?: HTMLElement;\n  highlight?: string;\n  selectedId?: string | null;\n  parentEvent?: Event;\n};\n\ntype Props = {\n  type: string;\n  entries: Array<ExtendedFeature>;\n  highlightColor: string;\n  hideCategory: boolean;\n  length: number;\n  colorDomainsBy?: keyof typeof EntryColorMode;\n  openTooltip: (element: HTMLElement | undefined, content: ReactNode) => void;\n  closeTooltip: () => void;\n  isPrinting: boolean;\n  customLocation?: InterProLocation;\n};\n\nconst RepresentativeTrack = ({\n  type,\n  entries,\n  highlightColor,\n  hideCategory,\n  length,\n  colorDomainsBy,\n  openTooltip,\n  closeTooltip,\n  isPrinting,\n  customLocation,\n}: Props) => {\n  const [data, setData] = useState(entries);\n  const containerRef = useRef<HTMLDivElement | null>(null);\n  const tooltipTimeout = useRef<number | null>(null);\n  const hasTooltipOpen = useRef(false); // tracks tooltip open state\n\n  // Update data with track color based on the selected color mode\n  useEffect(() => {\n    setData(\n      entries.map((entry) => ({\n        ...entry,\n        color: getTrackColor(\n          colorDomainsBy === EntryColorMode.DOMAIN_RELATIONSHIP\n            ? {\n                parent: entry.integrated\n                  ? { accession: entry.integrated }\n                  : null,\n              }\n            : entry,\n          colorDomainsBy,\n        ),\n      })),\n    );\n  }, [entries, colorDomainsBy]);\n\n  // Tooltip event handling\n  const handleTrackEvent = (event: CustomEvent<DetailInterface>) => {\n    const { detail } = event;\n    if (detail.eventType === 'mouseover' && !hasTooltipOpen.current) {\n      if (tooltipTimeout.current) clearTimeout(tooltipTimeout.current);\n      hasTooltipOpen.current = true; // Set the flag to prevent re-triggering\n      if (customLocation)\n        openTooltip(\n          detail.target,\n          <ProtVistaPopup\n            detail={detail as unknown as PopupDetail}\n            sourceDatabase={detail.feature?.source_database || ''}\n            currentLocation={customLocation}\n          />,\n        );\n    } else if (detail.eventType === 'mouseout' && hasTooltipOpen.current) {\n      tooltipTimeout.current = window.setTimeout(() => {\n        closeTooltip();\n        hasTooltipOpen.current = false;\n      }, 50);\n    }\n  };\n\n  // Attach event listeners\n  useEffect(() => {\n    const container = containerRef.current;\n    if (container) {\n      container.addEventListener('change', (event) =>\n        handleTrackEvent(event as CustomEvent<DetailInterface>),\n      );\n    }\n    return () => {\n      if (container) {\n        //container.removeEventListener('change', handleTrackEvent);\n      }\n      if (tooltipTimeout.current) {\n        clearTimeout(tooltipTimeout.current);\n      }\n    };\n  }, [closeTooltip]);\n\n  return (\n    <>\n      <div className={css('track', { hideCategory })} ref={containerRef}>\n        <NightingaleInterProTrack\n          length={length}\n          data={data}\n          margin-color=\"#fafafa\"\n          margin-left={20}\n          id=\"Domains\"\n          shape=\"roundRectangle\"\n          highlight-event=\"onmouseover\"\n          highlight-color={highlightColor}\n          show-label\n          label=\".feature.short_name\"\n          use-ctrl-to-zoom\n        />\n      </div>\n      <div className={css('track-label', 'centered-label')}>\n        <b>Representative {type.toLowerCase()}</b>\n      </div>\n    </>\n  );\n};\n\nconst mapStateToProps = createSelector(\n  (state: GlobalState) => state.customLocation,\n  (state: GlobalState) => state.settings.ui,\n  (customLocation: InterProLocation, ui: Record<string, unknown>) => ({\n    customLocation,\n    colorDomainsBy:\n      (ui.colorDomainsBy as keyof typeof EntryColorMode) ||\n      EntryColorMode.DOMAIN_RELATIONSHIP,\n  }),\n);\n\nexport default connect(mapStateToProps, null, null, { forwardRef: true })(\n  RepresentativeTrack,\n);\n","import React from 'react';\nimport cssBinder from 'styles/cssBinder';\nimport styles from './style.css';\nimport Tooltip from 'components/SimpleCommonComponents/Tooltip';\nimport fonts from 'EBI-Icon-fonts/fonts.css';\nimport { SettingsAction } from 'src/actions/types';\n\nconst css = cssBinder(styles, fonts);\n\ntype CategoryVisibility = { [name: string]: boolean };\n\ntype Props = {\n  showMore: boolean;\n  hideCategory: CategoryVisibility;\n  showMoreChanged: (v: boolean) => void;\n  setHideCategory: (v: CategoryVisibility) => void;\n  switchCategoryVisibilityShowMore: (\n    categories: CategoryVisibility,\n    name: string[],\n    hide: boolean,\n  ) => CategoryVisibility;\n  changeSettingsRaw: (\n    category: string,\n    key: string,\n    value: string | number | boolean | LabelUISettings,\n  ) => SettingsAction;\n};\n\nconst ShowMoreTracks = ({\n  showMore,\n  hideCategory,\n  showMoreChanged,\n  setHideCategory,\n  switchCategoryVisibilityShowMore,\n  changeSettingsRaw,\n}: Props) => {\n  const handleClick = (view: boolean) => {\n    const newHideCategory = switchCategoryVisibilityShowMore(\n      hideCategory,\n      ['families', 'domains'],\n      view,\n    );\n    setHideCategory(newHideCategory);\n    showMoreChanged(view);\n    changeSettingsRaw('ui', 'showMoreSettings', view);\n  };\n\n  return (\n    <div className={css('view-mode-option-container')}>\n      <div className={css('no-margin', 'view-mode-option-label')}>\n        <b>Feature Display Mode</b>{' '}\n        <Tooltip\n          html={`\n        <b style = \"text-align:left\" > Change which annotations are displayed</b>\n        <ul style = \"text-align:left\" >\n          <li> Overview: representative features only </li>\n          <li> Full: all available features </li>\n        </ul> `}\n        >\n          <span className={css('icon', 'icon-common')} data-icon=\"&#xf059;\" />\n        </Tooltip>\n      </div>\n      <div className={css('view-mode-checkboxes')}>\n        <div className={css('view-mode-checkbox')}>\n          <div>\n            <input\n              type=\"radio\"\n              name=\"featureDisplay\"\n              value=\"overview\"\n              checked={!showMore}\n              className={css('no-margin')}\n              onChange={() => handleClick(false)}\n            />\n          </div>\n          <div className={css('checkbox-label')}>Summary</div>\n        </div>\n        <div className={css('view-mode-checkbox')}>\n          <div>\n            <input\n              type=\"radio\"\n              name=\"featureDisplay\"\n              value=\"overview\"\n              checked={showMore}\n              className={css('no-margin')}\n              onChange={() => handleClick(true)}\n            />\n          </div>\n          <div className={css('checkbox-label')}>Full</div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ShowMoreTracks;\n","// extracted by mini-css-extract-plugin\nexport default {\"view-mode-option-container\":\"ShowMoreTracks_style__view-mode-option-container___e7\",\"view-mode-checkboxes\":\"ShowMoreTracks_style__view-mode-checkboxes___c4\",\"view-mode-checkbox\":\"ShowMoreTracks_style__view-mode-checkbox___c6\",\"no-margin\":\"ShowMoreTracks_style__no-margin___c3\",\"view-mode-option-label\":\"ShowMoreTracks_style__view-mode-option-label___d6\",\"checkbox-label\":\"ShowMoreTracks_style__checkbox-label___b0\"};","import React, {\n  useState,\n  useRef,\n  ReactNode,\n  PropsWithChildren,\n  useEffect,\n} from 'react';\nimport { createSelector } from 'reselect';\nimport { connect } from 'react-redux';\nimport { changeSettingsRaw } from 'actions/creators';\n\nimport loadData from 'higherOrder/loadData/ts';\nimport { getUrlForMeta } from 'higherOrder/loadData/defaults';\n\nimport {\n  Feature,\n  FeatureLocation,\n} from '@nightingale-elements/nightingale-track';\n\nimport {\n  useFloating,\n  FloatingArrow,\n  autoPlacement,\n  arrow,\n  offset,\n} from '@floating-ui/react';\n\nimport useStateRef from 'utils/hooks/useStateRef';\n\nimport NightingaleManager from 'components/Nightingale/Manager';\nimport id from 'utils/cheap-unique-id';\nimport ConservationMockupTrack from './ConservationMockupTrack';\n\nimport Header from './Header';\nimport Options from './Options';\nimport TracksInCategory, { ExpandedHandle } from './TracksInCategory';\n\nimport cssBinder from 'styles/cssBinder';\n\nimport style from './style.css';\nimport grid from './grid.css';\nimport tooltip from 'components/SimpleCommonComponents/Tooltip/style.css';\nimport fonts from 'EBI-Icon-fonts/fonts.css';\nimport RepresentativeTrack from './RepresentativeDomainsTrack';\nimport ShowMoreTracks from './ShowMoreTracks';\n\nTracksInCategory.displayName = 'TracksInCategory';\nHeader.displayName = 'TracksHeader';\n\nconst css = cssBinder(style, grid, fonts, tooltip);\n\nconst highlightColor = '#607D8B50';\nconst TOOLTIP_DELAY = 300;\n\ntype Residue = {\n  locations: Array<\n    FeatureLocation & {\n      accession: string;\n      description: string;\n    }\n  >;\n};\nexport type ExtendedFeatureLocation = {\n  fragments: Array<{\n    start: number;\n    end: number;\n    [annotation: string]: unknown;\n  }>;\n} & {\n  representative?: boolean;\n  confidence?: number;\n  description?: string;\n  seq_feature?: string;\n};\nexport type ExtendedFeature = Feature & {\n  data?: unknown;\n  representative?: boolean;\n  entry_protein_locations?: Array<ExtendedFeatureLocation>;\n  locations?: Array<ExtendedFeatureLocation>;\n  name?: string;\n  short_name?: string;\n  source_database?: string;\n  entry_type?: string;\n  residues?: Array<Residue>;\n  location2residue?: unknown;\n  chain?: string;\n  protein?: string;\n  integrated?: string;\n  children?: Array<ExtendedFeature>;\n  warnings?: Array<string>;\n};\n\ntype PTM = {\n  position: number;\n  name: string;\n  sources: string[];\n};\n\ntype PTMFeature = {\n  begin: string;\n  end: string;\n  peptide: string;\n  ptms: PTM[];\n};\n\ntype PTMData = {\n  accession: string;\n  features: PTMFeature[];\n};\n\nexport type PTMFragment = {\n  [annotation: string]: unknown;\n  start: number;\n  end: number;\n};\n\ntype Zoomable = { zoomIn: () => void; zoomOut: () => void };\n\ntype Props = PropsWithChildren<{\n  /** data for the protein to display */\n  protein: MinimalProteinMetadata;\n  /** The title at the top left corner */\n  title: string;\n  /** The data of the entry matches */\n  data: ProteinViewerData;\n  /** `DISABLED` - conservation data is currently disabled */\n  showConservationButton?: boolean;\n  /** `DISABLED` - conservation data is currently disabled */\n  handleConservationLoad?: () => void;\n  /** `DISABLED` - conservation data is currently disabled */\n  conservationError?: string;\n  /** TO include loading animation in the header */\n  loading: boolean;\n\n  changeSettingsRaw: typeof changeSettingsRaw;\n  showMoreSettings: boolean;\n\n  mainTracks: string[];\n\n  hideCategories: Record<string, boolean>;\n}>;\ninterface LoadedProps extends Props, LoadDataProps<RootAPIPayload, 'Base'> {}\n\ntype CategoryVisibility = { [name: string]: boolean };\n\nconst switchCategoryVisibility = (\n  categories: CategoryVisibility,\n  names: string[],\n): CategoryVisibility => {\n  return names.reduce((updatedCategories, name) => {\n    return {\n      ...updatedCategories,\n      [name]: !updatedCategories[name],\n    };\n  }, categories);\n};\n\nconst switchCategoryVisibilityShowMore = (\n  categories: CategoryVisibility,\n  names: string[],\n  hide: boolean,\n): CategoryVisibility => {\n  return names.reduce((updatedCategories, name) => {\n    return {\n      ...updatedCategories,\n      [name]: hide,\n    };\n  }, categories);\n};\n\nexport const ProteinViewer = ({\n  mainTracks,\n  hideCategories,\n  protein,\n  title,\n  data,\n  showConservationButton,\n  changeSettingsRaw,\n  showMoreSettings,\n  handleConservationLoad,\n  conservationError,\n  dataBase,\n  loading = false,\n  children,\n}: LoadedProps) => {\n  const [isPrinting, setPrinting] = useState(false);\n\n  // State variable to show/hide \"secondary\" tracks\n  const [showMore, setShowMore] = useState(showMoreSettings);\n\n  const [hideCategory, setHideCategory] =\n    useState<CategoryVisibility>(hideCategories);\n\n  const categoryRefs = useRef<ExpandedHandle[]>([]);\n\n  const [_, setOverTooltip, overTooltipRef] = useStateRef(false);\n  const arrowRef = useRef(null);\n  const navigationRef = useRef(null);\n  const idRef = useRef<string>(id('protein-viewer'));\n  const mainRef = useRef<HTMLDivElement>(null);\n  const componentsRef = useRef<HTMLDivElement>(null);\n  const intervalId = useRef<NodeJS.Timer | null>(null);\n  const [tooltipEnabled, setTooltipEnabled, tooltipEnabledRef] =\n    useStateRef(true);\n  const [tooltipContent, setTooltipContent] = useState<ReactNode>(null);\n  const { refs, floatingStyles, context } = useFloating({\n    middleware: [\n      autoPlacement(),\n      offset({\n        mainAxis: 10,\n      }),\n      arrow({\n        element: arrowRef,\n      }),\n    ],\n  });\n\n  const typeNameToSectionName: Record<string, string> = {\n    'alphafold confidence': 'AlphaFold Confidence',\n    families: 'Families',\n    domains: 'Domains',\n    'pathogenic and likely pathogenic variants':\n      'Pathogenic and Likely Pathogenic Variants',\n    'intrinsically disordered regions': 'Intrinsically Disordered Regions',\n    'spurious proteins': 'Spurious Proteins',\n    'conserved residues': 'Conserved Residues',\n    unintegrated: 'Unintegrated',\n    'other features': 'Other Features',\n    'other residues': 'Other Residues',\n    'conserved site': 'Conserved Site',\n    'active site': 'Active Site',\n    'binding site': 'Binding Site',\n    PTM: 'Post-translational Modifications',\n    'match conservation': 'Match Conservation',\n    'coiled-coils, signal peptides, transmembrane regions':\n      'Coiled-coils, Signal Peptides and Transmembrane Regions',\n    'short linear motifs': 'Short Linear Motifs',\n    'pfam-n': 'Pfam-N',\n    funfam: 'FunFam',\n  };\n\n  useEffect(() => {\n    const newHideCategory = switchCategoryVisibilityShowMore(\n      hideCategory,\n      ['families', 'domains'],\n      showMoreSettings ? false : true,\n    );\n    setHideCategory(newHideCategory);\n  }, [showMoreSettings]);\n\n  const openTooltip = (\n    element: HTMLElement | undefined,\n    content: ReactNode,\n  ) => {\n    if (element && tooltipEnabledRef.current) {\n      refs.setReference(element);\n      setTooltipContent((prevContent) => {\n        // Only update if content has changed\n        if (prevContent !== content) {\n          return content;\n        }\n        return prevContent; // No update, prevents re-render\n      });\n      if (intervalId.current) {\n        clearInterval(intervalId.current as unknown as number);\n        intervalId.current = null;\n      }\n    }\n  };\n\n  const closeTooltip = () => {\n    if (!intervalId.current)\n      intervalId.current = setInterval(() => {\n        if (!overTooltipRef.current) {\n          setTooltipContent(null);\n          if (intervalId.current) {\n            clearInterval(intervalId.current as unknown as number);\n            intervalId.current = null;\n          }\n        }\n      }, TOOLTIP_DELAY);\n  };\n  const setExpandedAllTracks = (expanded: boolean) => {\n    for (const category of categoryRefs.current) {\n      category?.setExpandedAllTracks(expanded);\n    }\n  };\n\n  const residuesToLocations = (\n    residues: Residue[] | undefined,\n  ): ExtendedFeatureLocation[] => {\n    const newLocations: ExtendedFeatureLocation[] = [];\n    if (residues) {\n      residues.map((residue) => {\n        residue.locations.map((location) => {\n          newLocations.push(location);\n        });\n      });\n    }\n    return newLocations;\n  };\n\n  const ptmFeaturesFragments = (features: PTMFeature[]): PTMFragment[] => {\n    const ptmFragments: PTMFragment[] = [];\n\n    features.map((feature) => {\n      feature.ptms.map((ptm) => {\n        const ptmFragment: PTMFragment = {\n          start: parseInt(feature.begin) + ptm.position - 1, // Absolute modification pos\n          end: parseInt(feature.begin) + ptm.position - 1, // Absolute modification pos\n          relative_pos: ptm.position - 1,\n          ptm_type: ptm.name,\n          peptide: feature.peptide,\n          peptide_start: parseInt(feature.begin),\n          peptide_end: parseInt(feature.end),\n          source: ptm.sources.join(', '),\n        };\n\n        ptmFragments.push(ptmFragment);\n      });\n    });\n    return ptmFragments;\n  };\n\n  return (\n    <div ref={mainRef} className={css('fullscreenable', 'margin-bottom-large')}>\n      {/* Tooltip */}\n      <div\n        ref={refs.setFloating}\n        style={floatingStyles}\n        className={css('popper', { hide: !tooltipContent })}\n        onMouseEnter={() => setOverTooltip(true)}\n        onMouseLeave={() => setOverTooltip(false)}\n      >\n        <FloatingArrow ref={arrowRef} context={context} />\n        {tooltipContent}\n      </div>\n\n      <div>\n        <NightingaleManager id=\"pv-manager\">\n          <div\n            className={css('protvista-grid', {\n              printing: isPrinting,\n            })}\n          >\n            <div className={css('view-options-wrap', 'track-sized')}>\n              <Options\n                setPrintingMode={setPrinting}\n                onZoomIn={() =>\n                  (navigationRef.current as unknown as Zoomable)?.zoomIn()\n                }\n                onZoomOut={() =>\n                  (navigationRef.current as unknown as Zoomable)?.zoomOut()\n                }\n                title={title}\n                parentReferences={{\n                  mainRef,\n                  componentsRef,\n                }}\n                setExpandedAllTracks={setExpandedAllTracks}\n                tooltipEnabled={tooltipEnabled}\n                setTooltipEnabled={setTooltipEnabled}\n                loading={loading}\n              >\n                {children}\n              </Options>\n              {protein.accession &&\n                !protein.accession.startsWith('iprscan') &&\n                mainTracks.length !== Object.entries(hideCategories).length && (\n                  <ShowMoreTracks\n                    showMore={showMore}\n                    changeSettingsRaw={changeSettingsRaw}\n                    showMoreChanged={setShowMore}\n                    setHideCategory={setHideCategory}\n                    switchCategoryVisibilityShowMore={\n                      switchCategoryVisibilityShowMore\n                    }\n                    hideCategory={hideCategory}\n                  />\n                )}\n            </div>\n          </div>\n\n          <div ref={componentsRef} id={idRef.current}>\n            <div\n              className={css('protvista-grid', {\n                printing: isPrinting,\n              })}\n            >\n              <Header\n                length={protein.length}\n                sequence={protein.sequence}\n                highlightColor={highlightColor}\n                ref={navigationRef}\n              />\n              {(data as unknown as ProteinViewerData<ExtendedFeature>)\n                .filter(([_, tracks]) => tracks && tracks.length)\n                .map(([type, entries, component]) => {\n                  entries.forEach((entry: ExtendedFeature) => {\n                    entry.protein = protein.accession;\n                  });\n\n                  const LabelComponent = component?.component || 'span';\n                  let representativeEntries: ExtendedFeature[] | null = null;\n                  let nonRepresentativeEntries: ExtendedFeature[] | null = null;\n\n                  if (type === 'domains' || type === 'families') {\n                    representativeEntries = entries.filter(\n                      (entry) => entry.representative === true,\n                    );\n                    nonRepresentativeEntries = entries.filter(\n                      (entry) => entry.representative !== true,\n                    );\n                  }\n\n                  // A few sections (like Alphafold camel case) need to be named differently than simply capitalizing words in the type.\n                  // This dict is used to go from type to section name\n                  const sectionName = typeNameToSectionName[type];\n\n                  // Show only the main tracks unless button \"Show more\" is clicked\n                  let hideDiv: string = '';\n                  if (!showMore && !mainTracks.includes(type)) {\n                    hideDiv = 'none';\n                  }\n\n                  // Transform PTM data to track-like data\n                  if (type == 'ptm') {\n                    const ptmFragmentsGroupedByModification: {\n                      [type: string]: PTMFragment[];\n                    } = {};\n\n                    // PTMs coming from APIs\n                    entries\n                      .filter(\n                        (entry) => entry.source_database === 'proteinsAPI',\n                      )\n                      .map((entry) => {\n                        const fragments = ptmFeaturesFragments(\n                          (entry.data as PTMData).features,\n                        );\n                        fragments.map((fragment) => {\n                          if (\n                            ptmFragmentsGroupedByModification[\n                              fragment.ptm_type as string\n                            ]\n                          ) {\n                            ptmFragmentsGroupedByModification[\n                              fragment.ptm_type as string\n                            ].push(fragment);\n                          } else {\n                            ptmFragmentsGroupedByModification[\n                              fragment.ptm_type as string\n                            ] = [fragment];\n                          }\n                        });\n                      });\n\n                    const ptmsEntriesGroupedByModification: ExtendedFeature[] =\n                      [];\n                    Object.entries(ptmFragmentsGroupedByModification).map(\n                      (ptmData) => {\n                        const modificationType: string = ptmData[0]; // Key\n                        const fragments: PTMFragment[] = ptmData[1]; // Key\n                        const newFeature: ExtendedFeature = {\n                          accession: protein.accession,\n                          name: modificationType,\n                          type: 'ptm',\n                          source_database: 'ptm',\n                          locations: [{ fragments: fragments }],\n                        };\n\n                        ptmsEntriesGroupedByModification.push(newFeature);\n                      },\n                    );\n\n                    // PTMs coming from InterPro and external API should be in the same section but require different processing due to different structure (see above)\n                    entries = ptmsEntriesGroupedByModification.concat(\n                      entries.filter(\n                        (entry) => entry.source_database === 'interpro',\n                      ),\n                    );\n                  }\n\n                  return (\n                    <div\n                      key={type}\n                      // Conditioanally display the div containing the track\n                      style={{ display: hideDiv }}\n                      className={css(\n                        'tracks-container',\n                        'track-sized',\n                        'protvista-grid',\n                        {\n                          printing: isPrinting,\n                        },\n                      )}\n                    >\n                      <header>\n                        <button\n                          onClick={() =>\n                            setHideCategory(\n                              switchCategoryVisibility(hideCategory, [type]),\n                            )\n                          }\n                          className={css('as-text')}\n                        >\n                          <span\n                            className={css(\n                              'icon',\n                              'icon-common',\n                              hideCategory[type]\n                                ? 'icon-caret-right'\n                                : 'icon-caret-down',\n                            )}\n                          />{' '}\n                          {sectionName}\n                        </button>\n                      </header>\n                      {component && (\n                        <div className={css('track-accession')}>\n                          <LabelComponent {...(component?.attributes || {})} />\n                        </div>\n                      )}{' '}\n                      {representativeEntries ? (\n                        <>\n                          {representativeEntries.length > 0 ? (\n                            <RepresentativeTrack\n                              type={type}\n                              hideCategory={false}\n                              highlightColor={highlightColor}\n                              entries={representativeEntries}\n                              length={protein.sequence.length}\n                              openTooltip={openTooltip}\n                              closeTooltip={closeTooltip}\n                              isPrinting={isPrinting}\n                            />\n                          ) : (\n                            ' '\n                          )}\n                          <TracksInCategory\n                            entries={nonRepresentativeEntries || []}\n                            sequence={protein.sequence}\n                            hideCategory={hideCategory[type]}\n                            highlightColor={highlightColor}\n                            openTooltip={openTooltip}\n                            closeTooltip={closeTooltip}\n                            isPrinting={isPrinting}\n                            ref={(ref: ExpandedHandle) =>\n                              categoryRefs.current.push(ref)\n                            }\n                            databases={dataBase?.payload?.databases}\n                          />\n                        </>\n                      ) : (\n                        <TracksInCategory\n                          entries={entries}\n                          sequence={protein.sequence}\n                          hideCategory={hideCategory[type]}\n                          highlightColor={highlightColor}\n                          openTooltip={openTooltip}\n                          closeTooltip={closeTooltip}\n                          isPrinting={isPrinting}\n                          ref={(ref: ExpandedHandle) =>\n                            categoryRefs.current.push(ref)\n                          }\n                          databases={dataBase?.payload?.databases}\n                        />\n                      )}\n                    </div>\n                  );\n                })}\n              <ConservationMockupTrack\n                showConservationButton={showConservationButton}\n                handleConservationLoad={handleConservationLoad}\n                conservationError={conservationError}\n                isPrinting={isPrinting}\n              />\n            </div>\n          </div>\n        </NightingaleManager>\n      </div>\n    </div>\n  );\n};\n\n// Map the Redux state and actions to props\nconst mapStateToProps = createSelector(\n  (state: GlobalState) => state.settings.ui,\n  (ui) => ({\n    showMoreSettings: ui.showMoreSettings,\n  }),\n);\n\n// Connect to the Redux store and inject `changeSettingsRaw` into the props of ProteinViewer\nexport default connect(mapStateToProps, { changeSettingsRaw })(\n  loadData<RootAPIPayload, 'Base'>({\n    getUrl: getUrlForMeta,\n    propNamespace: 'Base',\n  })(ProteinViewer),\n);\n","import React, { useState, useEffect } from 'react';\n\nimport { noop } from 'lodash-es';\n\nimport Tooltip from 'components/SimpleCommonComponents/Tooltip';\nimport Button from 'components/SimpleCommonComponents/Button';\n\nimport { requestFullScreen, exitFullScreen } from 'utils/fullscreen';\nimport cssBinder from 'styles/cssBinder';\n\nimport fonts from 'EBI-Icon-fonts/fonts.css';\n\nconst css = cssBinder(fonts);\n\ntype Props = {\n  /**\n   * Hook that is call when the full screen action gets trigger\n   * @returns void\n   */\n  onFullScreenHook?: () => void;\n  /**\n   * Hook that is call when exiting the full screen action\n   * @returns void\n   */\n  onExitFullScreenHook?: () => void;\n  /**\n   * Either the id, or directly the DOM element to be send to full screen\n   */\n  element?: string | HTMLElement | null;\n  /**\n   * Content of the tooltip that appears when hovering this button\n   */\n  tooltip: string;\n  /**\n   * Extra CSS classes to add\n   */\n  className?: string;\n  /**\n   * Should we change the icon for one from https://www.ebi.ac.uk/style-lab/general/fonts/v1.3/\n   */\n  dataIcon?: string;\n  /**\n   * To disable the component\n   */\n  disabled?: boolean;\n};\nconst FullScreenButton = ({\n  element,\n  tooltip,\n  className,\n  dataIcon,\n  disabled = false,\n  onFullScreenHook = noop,\n  onExitFullScreenHook = noop,\n}: Props) => {\n  const [elementInDOM, setElementInDom] = useState<\n    HTMLElement | null | undefined\n  >(null);\n  const [isFull, setFull] = useState(false);\n  const onFullscreen = () => {\n    if (document.fullscreenElement === null) {\n      setFull(false);\n      onExitFullScreenHook();\n    }\n  };\n  useEffect(() => {\n    document.addEventListener('fullscreenchange', onFullscreen);\n    return () => document.removeEventListener('fullscreenchange', onFullscreen);\n  }, []);\n  useEffect(() => {\n    setElementInDom(\n      typeof element === 'string' ? document.getElementById(element) : element,\n    );\n  }, [element]);\n\n  if (!elementInDOM) return null;\n  const _handleFullScreen = () => {\n    if (isFull) {\n      exitFullScreen();\n      onExitFullScreenHook();\n    } else {\n      requestFullScreen(elementInDOM).then(() => onFullScreenHook());\n    }\n    setFull(!isFull);\n  };\n  const _className =\n    className || css('margin-bottom-none', 'icon', 'icon-common');\n  const icon =\n    dataIcon || (isFull ? 'icon-fullscreen-collapse' : 'icon-fullscreen');\n  return (\n    <Tooltip title={tooltip}>\n      <Button\n        type=\"inline\"\n        onClick={_handleFullScreen}\n        icon={icon}\n        title={tooltip}\n        className={_className}\n        disabled={disabled}\n      />\n    </Tooltip>\n  );\n};\n\nexport default FullScreenButton;\n","export const requestFullScreen = (element) => {\n  if ('requestFullscreen' in element) {\n    return element.requestFullscreen();\n  } else if ('webkitRequestFullscreen' in element) {\n    return element.webkitRequestFullscreen();\n  } else if ('mozRequestFullScreen' in element) {\n    return element.mozRequestFullScreen();\n  } else if ('msRequestFullscreen' in element) {\n    return element.msRequestFullscreen();\n  }\n};\n\nexport const exitFullScreen = () => {\n  if ('exitFullscreen' in document) {\n    return document.exitFullscreen();\n  } else if ('webkitExitFullscreen' in document) {\n    return document.webkitExitFullscreen();\n  } else if ('mozExitFullScreen' in document) {\n    return document.mozExitFullScreen();\n  } else if ('msExitFullscreen' in document) {\n    return document.msExitFullscreen();\n  }\n};\n\nexport const onFullScreenChange = (element, callback) => {\n  if ('onfullscreenchange' in element) {\n    element.onfullscreenchange = callback;\n  } else if ('onwebkitfullscreenchange' in element) {\n    element.onwebkitfullscreenchange = callback;\n  } else if ('onmozfullscreenchange' in element) {\n    element.onmozfullscreenchange = callback;\n  } else if ('onfullscreenchange' in document) {\n    document.onfullscreenchange = callback;\n  } else if ('onwebkitfullscreenchange' in document) {\n    document.onwebkitfullscreenchange = callback;\n  } else if ('onmozfullscreenchange' in document) {\n    document.onmozfullscreenchange = callback;\n  } else if ('onMSFullscreenChange' in document) {\n    document.onMSFullscreenChange = callback;\n  }\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"pop-wrapper\":\"Entry_style__pop-wrapper___b9\",\"subfamily\":\"Entry_style__subfamily___d8\",\"entry-popup\":\"Entry_style__entry-popup___da\",\"title\":\"Entry_style__title___b8\"};","// extracted by mini-css-extract-plugin\nexport default {\"coordinates\":\"Positions_style__coordinates___f9\"};","// extracted by mini-css-extract-plugin\nexport default {\"view-options-wrap\":\"ProteinViewer_style__view-options-wrap___e6\",\"track-row\":\"ProteinViewer_style__track-row___ea\",\"track-component\":\"ProteinViewer_style__track-component___fe\",\"track-length\":\"ProteinViewer_style__track-length___bb\",\"note\":\"ProteinViewer_style__note___e5\",\"length\":\"ProteinViewer_style__length___e5\",\"unintegrated-label\":\"ProteinViewer_style__unintegrated-label___c6\",\"sequence-conservation-label\":\"ProteinViewer_style__sequence-conservation-label___e6\",\"pirsr-label\":\"ProteinViewer_style__pirsr-label___fd\",\"centered-label\":\"ProteinViewer_style__centered-label___d0\",\"sequence-conservation\":\"ProteinViewer_style__sequence-conservation___eb\",\"residue\":\"ProteinViewer_style__residue___c5\",\"conservation-warning\":\"ProteinViewer_style__conservation-warning___d6\",\"aligned-to-track-component\":\"ProteinViewer_style__aligned-to-track-component___cb\",\"track-accession\":\"ProteinViewer_style__track-accession___e1\",\"hideCategory\":\"ProteinViewer_style__hideCategory___f0\",\"fullscreenable\":\"ProteinViewer_style__fullscreenable___fe\",\"fullscreen\":\"ProteinViewer_style__fullscreen___b7\",\"matches-in-table\":\"ProteinViewer_style__matches-in-table___c5\",\"track-in-table\":\"ProteinViewer_style__track-in-table___c1\",\"conservation-placeholder-component\":\"ProteinViewer_style__conservation-placeholder-component___c3\",\"protvista\":\"ProteinViewer_style__protvista___c9\",\"conservation-error\":\"ProteinViewer_style__conservation-error___be\"};"],"names":["metadataPropType","T","metadata","accession","sequence","name","resultsPropType","results","interProScanUnitPropType","isRequired","xref","identifier","interProScanPropType","dataPropType","loading","payload","status","ok","progress","url","f","foundationPartial","local","DEFAULT_MAX_NUMBER_OF_TERMS","colors","P","F","C","ListOfGOTerms","_ref","terms","maxNumberOfTerms","showMore","setShowMore","useState","hasMany","length","termsToShow","slice","React","map","_ref2","category","code","categoryName","Tooltip","key","title","capitalize","replace","GoLink","id","className","style","background","Button","type","onClick","propTypes","FunFamLink","children","parts","split","Link","target","href","Number","PantherLink","toUpperCase","SubfamiliesSubpage","_ref3","_data$payload","_data$payload2","_data$payload3","_data$payload4","data","search","db","Loading","SubfamilyLink","Table","dataTable","e","contentType","query","actualSize","count","nextAPICall","next","previousAPICall","previous","currentAPICall","PageSizeSelector","Column","dataKey","renderer","_ref4","mapStateToUrl","createSelector","state","settings","api","_state$customLocation","customLocation","description","entry","_ref5","_ref6","protocol","hostname","port","root","s","Object","assign","subfamilies","format","pathname","descriptionToPath","main","mapStateToProps","loadData","getUrl","patternLinkWrapper","pattern","Wrapped","_a","props","__rest","BaseLink","displayName","UniProtLink","DOILink","PTMLink","AlphafoldLink","NightingaleInterproTrack","createComponent","tagName","elementClass","NightingaleInterproTrackCE","react","NightingaleSequenceCE","css","cssBinder","protvistaCSS","labelMap","ui","labelContent","connect","changeSettingsRaw","useId","updateLabel","evt","opt","value","includes","short","label","whiteSpace","onChange","checked","htmlFor","NightingaleManagerCE","grid","fonts","tooltip","showConservationButton","handleConservationLoad","conservationError","isPrinting","isLoading","setLoading","handleConservation","printing","inline","NightingaleNavigationCE","ProteinViewerHeader","forwardRef","ref","highlightColor","NightingaleNavigation","height","NightingaleSequence","NightingaleSaverCE","localCSS","colorDomainsBy","EntryColorMode","DOMAIN_RELATIONSHIP","onZoomIn","onZoomOut","parentReferences","tooltipEnabled","setTooltipEnabled","componentsDivId","componentsRef","current","getAttribute","useEffect","customElements","whenDefined","then","saver","document","getElementById","preSave","base","querySelectorAll","forEach","el","innerHTML","shadowRoot","createElement","setAttribute","str","protvistaGridCSSasText","protvistaGridCSS","item","keys","RegExp","appendChild","console","warn","postSave","styleElement","removeChild","ExporterButton","_b","Children","toArray","filter","child","Exporter","changeColor","colorOptions","ACCESSION","MEMBER_DB","TooltipAndRTDLink","rtdPage","FullScreenButton","element","mainRef","marginRight","icon","DropDownButton","extraClasses","mode","LabelBy","NightingaleSaver","fontWeight","NightingaleTrackCE","NightingaleLinegraphTrackCE","NightingaleColoredSequenceCE","NightingaleVariationCE","source_database","dimension","startsWith","getTextForLabel","expandedTrack","residues","residue","locations","r","i","hide","charAt","EXCEPTIONAL_TYPES","EXCEPTIONAL_PREFIXES","databases","_d","_c","fragments","seq_feature","protein","d","to","processedAccession","descriptionString","_e","NOT_MEMBER_DBS","has","textTransform","_f","hideCategory","some","prefix","isAnExceptionalLabel","ExceptionalLabels","Label","ResidueLabel","COLOR_SCALE_WIDTH","COLOR_SCALE_HEIGHT","domain","range","width","maxDomain","x1","y1","x2","y2","offset","stopColor","fill","levels","H","M","L","D","detail","closest","aa","feature","start","ColorScale","colorScale","sourceDatabase","residueDescription","highlightPositions","highlight","residuePosition","wildType","variant","size","consequenceType","hasMultiple","undefined","ipro","goToCustomLocation","handleClick","end","hash","cursor","currentLocation","originalType","confidence","isInterPro","toLowerCase","integrated","shape","getSecondaryStructureType","highlightChild","classList","contains","newLocations","loc","model_acc","subfamily","parent","_g","color","j","model","Positions","match","position","highlightedPosition","parseInt","ptmData","ptmPeptide","peptide","ptmPos","relative_pos","peptideStart","peptide_start","peptide_end","ptm_type","source","ProtVistaPTMPopup","ProtVistaConservationPopup","ProtVistaResiduePopup","colouredTrack","ProtVistaConfidencePopup","ProtVistaVariationPopup","RepeatsDBPopup","DisProtPopup","ProtVistaEntryPopup","OTHER_TRACK_TYPES","MARGIN_CHANGE_TRACKS","b2sh","Map","webComponents","mapToFeatures","entry_protein_locations","short_name","getTrackColor","entry_type","JSON","parse","stringify","chain","mapToContributors","get","location2residue","TracksInCategory","entries","openTooltip","closeTooltip","setExpandedTrack","expandedTrackRef","useStateRef","hasListeners","setHasListeners","hasData","setHasData","databasesRef","useRef","uniqueID","uniqueId","getTrackAccession","handleTrackEvent","eventType","ProtVistaPopup","setExpandedAllTracks","expanded","fromEntries","useImperativeHandle","Promise","all","wc","addedListeners","addedData","track","addEventListener","contributors","isExternalSource","trackTopMargin","warnings","message","NightingaleLinegraphTrack","NightingaleColoredSequence","scale","NightingaleVariation","colorConfig","NightingaleTrack","NightingaleInterProTrack","samesize","LabelsInTrack","setData","containerRef","tooltipTimeout","hasTooltipOpen","container","event","window","setTimeout","clearTimeout","showMoreChanged","setHideCategory","switchCategoryVisibilityShowMore","view","newHideCategory","html","Header","categories","names","reduce","updatedCategories","ProteinViewer","mainTracks","hideCategories","showMoreSettings","dataBase","setPrinting","categoryRefs","_","setOverTooltip","overTooltipRef","arrowRef","navigationRef","idRef","intervalId","tooltipEnabledRef","tooltipContent","setTooltipContent","refs","floatingStyles","context","useFloating","middleware","autoPlacement","mainAxis","arrow","typeNameToSectionName","families","domains","unintegrated","PTM","funfam","content","setReference","prevContent","clearInterval","setInterval","setFloating","onMouseEnter","onMouseLeave","FloatingArrow","NightingaleManager","Options","setPrintingMode","zoomIn","zoomOut","ShowMoreTracks","tracks","component","LabelComponent","representativeEntries","nonRepresentativeEntries","representative","sectionName","hideDiv","ptmFragmentsGroupedByModification","features","ptmFragments","ptms","ptm","ptmFragment","begin","sources","join","push","fragment","ptmsEntriesGroupedByModification","modificationType","newFeature","concat","display","attributes","RepresentativeTrack","ConservationMockupTrack","getUrlForMeta","propNamespace","dataIcon","disabled","onFullScreenHook","noop","onExitFullScreenHook","elementInDOM","setElementInDom","isFull","setFull","onFullscreen","fullscreenElement","removeEventListener","_className","_handleFullScreen","exitFullscreen","webkitExitFullscreen","mozExitFullScreen","msExitFullscreen","requestFullscreen","webkitRequestFullscreen","mozRequestFullScreen","msRequestFullscreen","requestFullScreen"],"sourceRoot":""}