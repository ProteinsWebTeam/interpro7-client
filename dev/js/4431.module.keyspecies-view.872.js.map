{"version":3,"file":"js/4431.module.keyspecies-view.872.js","mappings":"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","sources":["webpack://interpro7-client/./src/staticData/home.js","webpack://interpro7-client/./src/components/Matches/ProteinDownloadRenderer/index.tsx","webpack://interpro7-client/./src/components/Matches/ProteinDownloadRenderer/style.css?151f","webpack://interpro7-client/./src/components/Table/views/Table/index.tsx","webpack://interpro7-client/./src/components/Table/SimpleTable/index.tsx","webpack://interpro7-client/./src/components/Taxonomy/KeySpeciesTable/index.tsx"],"sourcesContent":["// @flow\n\nexport const memberDBAccessions = [\n  'G3DSA:[0-9]{1}\\\\.[0-9]{2,3}\\\\.[0-9]{1,4}\\\\.[0-9]{2,4}',\n  '(?:c|s)d[0-9]{5}',\n  'MF_[0-9]{5}(_(A|B){1})?',\n  'PTHR[0-9]{5}(:SF[0-9]{1,3})?',\n  'PF[0-9]{5}',\n  'PIRSF[0-9]{6}',\n  'PR[0-9]{5}',\n  'PD[A-Z0-9]{6}',\n  'PS[0-9]{5}',\n  'PS[0-9]{5}',\n  'sfld[gfs]\\\\d{5}',\n  'SM[0-9]{5}',\n  'SSF[0-9]{5,6}',\n  'TIGR[0-9]{5}',\n  'NF[0-9]{6}',\n  'ANF[0-9]{5}',\n];\n\nexport const speciesFeat = [\n  {\n    title: 'Rice',\n    kingdom: 'Eukaryota',\n    description: 'Oryza sativa subsp. japonica',\n    icon: '6',\n    color: '#5cb85c',\n    tax_id: '39947',\n    proteome_id: 'UP000059680',\n  },\n  {\n    title: 'Mouse-ear cress',\n    kingdom: 'Eukaryota',\n    description: 'Arabidopsis thaliana',\n    icon: 'B',\n    color: '#5cb85c',\n    tax_id: '3702',\n    proteome_id: 'UP000006548',\n  },\n  {\n    title: 'Human',\n    kingdom: 'Eukaryota',\n    description: 'Homo sapiens',\n    icon: 'H',\n    color: '#d9534f',\n    tax_id: '9606',\n    proteome_id: 'UP000005640',\n  },\n  {\n    title: 'Zebrafish',\n    kingdom: 'Eukaryota',\n    description: 'Danio rerio',\n    icon: 'Z',\n    color: '#d9534f',\n    tax_id: '7955',\n    proteome_id: 'UP000000437',\n  },\n  {\n    title: 'Mouse',\n    kingdom: 'Eukaryota',\n    description: 'Mus musculus',\n    icon: 'M',\n    color: '#d9534f',\n    tax_id: '10090',\n    proteome_id: 'UP000000589',\n  },\n  {\n    title: 'Fruit fly',\n    kingdom: 'Eukaryota',\n    description: 'Drosophila melanogaster',\n    icon: 'F',\n    color: '#d9534f',\n    tax_id: '7227',\n    proteome_id: 'UP000000803',\n  },\n  {\n    title: 'Caenorhabditis elegans',\n    kingdom: 'Eukaryota',\n    description: 'Caenorhabditis elegans',\n    icon: 'W',\n    color: '#d9534f',\n    tax_id: '6239',\n    proteome_id: 'UP000001940',\n  },\n  {\n    title: 'Bakerâ€™s yeast',\n    kingdom: 'Eukaryota',\n    description: 'Saccharomyces cerevisiae (strain ATCC 204508 / S288c)',\n    icon: 'Y',\n    color: '#5bc0de',\n    tax_id: '559292',\n    proteome_id: 'UP000002311',\n  },\n  {\n    title: 'Fission yeast',\n    kingdom: 'Eukaryota',\n    description: 'Schizosaccharomyces pombe (strain 972 / ATCC 24843)',\n    icon: 'Y',\n    color: '#5bc0de',\n    tax_id: '284812',\n    proteome_id: 'UP000002485',\n  },\n  {\n    title: 'Escherichia coli',\n    kingdom: 'Bacteria',\n    description: 'Escherichia coli O127:H6 (strain E2348/69 / EPEC)',\n    icon: 'L',\n    color: '#5bc0de',\n    tax_id: '83333',\n    proteome_id: 'UP000000625',\n  },\n  {\n    title: 'Halobacterium salinarum',\n    kingdom: 'Archaea',\n    description: 'Halobacterium salinarum',\n    icon: 'v',\n    color: '#5bc0de',\n    tax_id: '2242',\n    proteome_id: 'UP000000554',\n  },\n  {\n    title: 'Enterobacteria phage T4',\n    kingdom: 'Virus',\n    description: 'Escherichia virus T4',\n    icon: 'v',\n    color: '#5bc0de',\n    tax_id: '10665',\n    proteome_id: 'UP000009087',\n  },\n];\n\nexport const GoList = [\n  {\n    title: 'Catalytic activity',\n    accession: 'GO:0003824',\n    category: 'Molecular function',\n    description: 'Description from GO website',\n    counterD: '-',\n    counterS: 386,\n    color: '#5cb85c',\n  },\n  {\n    title: 'DNA binding',\n    accession: 'GO:0003677',\n    category: 'Molecular function',\n    description: 'Description from GO website',\n    counterD: '-',\n    counterS: 450,\n    color: '#5cb85c',\n  },\n  {\n    title: 'Metabolic process',\n    accession: 'GO:0008152',\n    category: 'Biological process',\n    description: 'Description from GO website',\n    counterD: '-',\n    counterS: 386,\n    color: '#5bc0de',\n  },\n  {\n    title: 'Oxidation-reduction process',\n    accession: 'GO:0055114',\n    category: 'Molecular function',\n    description: 'Description from GO website',\n    counterD: '-',\n    counterS: 386,\n    color: '#5cb85c',\n  },\n  {\n    title: 'Outer membrane',\n    accession: 'GO:0019867',\n    description: 'Description from GO website',\n    counterD: '-',\n    counterS: 386,\n    category: 'Cellular components',\n    color: '#d9534f',\n  },\n  {\n    title: 'ATP binding',\n    accession: 'GO:0005524',\n    description: 'Description from GO website',\n    counterD: '-',\n    counterS: 42,\n    category: 'Molecular function',\n    color: '#5cb85c',\n  },\n  {\n    title: 'Oxidoreductase activity',\n    accession: 'GO:0016491',\n    description: 'Description from GO website',\n    counterD: '-',\n    counterS: 93,\n    category: 'Molecular function',\n    color: '#5cb85c',\n  },\n  {\n    title: 'Transport',\n    accession: 'GO:0006810',\n    description: 'Description from GO website',\n    counterD: '-',\n    counterS: 10,\n    category: 'Biological process',\n    color: '#5bc0de',\n  },\n  {\n    title: 'DNA replication',\n    accession: 'GO:0006260',\n    description: 'Description from GO website',\n    counterD: '-',\n    counterS: 564,\n    category: 'Molecular function',\n    color: '#5cb85c',\n  },\n  {\n    title: 'Integral component of membrane',\n    accession: 'GO:0016021',\n    description: 'Description from GO website',\n    counterD: '-',\n    counterS: 36,\n    category: 'Molecular function',\n    color: '#5cb85c',\n  },\n  {\n    title: 'Cofactor bindind',\n    accession: 'GO:0048037',\n    description: 'Description from GO website',\n    counterD: '-',\n    counterS: 36,\n    category: 'Molecular function',\n    color: '#5cb85c',\n  },\n  {\n    title: 'DNA polymerase complex',\n    accession: 'GO:0042575',\n    description: 'Description from GO website',\n    counterD: '-',\n    counterS: 36,\n    category: 'Cellular components',\n    color: '#d9534f',\n  },\n  {\n    title: 'Cell projection assembly',\n    accession: 'GO:0030031',\n    description: 'Description from GO website',\n    counterD: '-',\n    counterS: 36,\n    category: 'Biological process',\n    color: '#5bc0de',\n  },\n  {\n    title: 'Cellular component organization',\n    accession: 'GO:0016043',\n    description: 'Description from GO website',\n    counterD: '-',\n    counterS: 36,\n    category: 'Biological process',\n    color: '#5bc0de',\n  },\n  {\n    title: 'Cell growth',\n    accession: 'GO:0016049',\n    description: 'Description from GO website',\n    counterD: '-',\n    counterS: 36,\n    category: 'Biological process',\n    color: '#5bc0de',\n  },\n];\n\nexport const entryType = [\n  {\n    type: 'Domain',\n    description: `\n      Domains are distinct functional, structural or sequence units that may\n      exist in a variety of biological contexts. A match to an InterPro entry of\n      this type indicates the presence of a domain.\n    `,\n  },\n  {\n    type: 'Family',\n    description: `\n      A protein family is a group of proteins that share a common evolutionary\n      origin reflected by their related functions, similarities in sequence, or\n      similar primary, secondary or tertiary structure. A match to an InterPro\n      entry of this type indicates membership of a protein family.\n    `,\n  },\n  {\n    type: 'Homologous Superfamily',\n    description:\n      'A homologous superfamily is a group of proteins that share a common evolutionary origin, reflected by similarity in their structure. Since superfamily members often display very low similarity at the sequence level, this type of InterPro entry is usually based on a collection of underlying hidden Markov models, rather than a single signature.',\n  },\n  {\n    type: 'Repeat',\n    description: `\n      A short sequence that is typically repeated within a\n      protein.\n    `,\n  },\n  {\n    type: 'Conserved Site',\n    description: `\n      A short sequence that contains one or more conserved residues\n    `,\n  },\n  {\n    type: 'Active Site',\n    description: `\n      A short sequence that contains one or more conserved residues, which allow the protein to bind to a ligand.\n    `,\n  },\n  {\n    type: 'Binding Site',\n    description: `\n      A short sequence that contains one or more conserved residues, which form a protein interaction site.\n    `,\n  },\n  {\n    type: 'PTM',\n    description: `\n      A short sequence that contains one or more conserved residues.\n      Post-translational modification site.\n    `,\n  },\n];\n","import React from 'react';\n\nimport Tooltip from 'components/SimpleCommonComponents/Tooltip';\nimport Link from 'components/generic/Link';\nimport File from 'components/File';\n\nimport cssBinder from 'styles/cssBinder';\n\nimport local from './style.css';\nimport fonts from 'EBI-Icon-fonts/fonts.css';\n\nconst css = cssBinder(local, fonts);\n\nconst ProteinDownloadRenderer =\n  (description?: InterProDescription) =>\n  (\n    accession: string,\n    row: {\n      source_database: string;\n      proteins?: number;\n      counters?: { extra_fields: { counters: { proteins: number } } };\n    },\n    count?: number,\n  ) => {\n    if (!description) return null;\n    const endpointToFilterBy = description.taxonomy.isFilter\n      ? 'taxonomy'\n      : 'proteome';\n    return (\n      <div className={css('actions')}>\n        <div className={css('view-icon-div')}>\n          <Link\n            className={css('icon', 'icon-conceptual', 'view-link')}\n            to={{\n              description: {\n                main: { key: description.main.key },\n                [description.main.key!]: {\n                  ...description[description.main.key as Endpoint],\n                },\n                protein: {\n                  db: 'uniprot',\n                  order: 1,\n                  isFilter: true,\n                },\n                [endpointToFilterBy]: {\n                  accession: accession,\n                  db: row.source_database,\n                  order: 2,\n                  isFilter: true,\n                },\n              },\n            }}\n            aria-label=\"View proteins\"\n          >\n            <small className={css('match-proteins-link')}>\n              {count} protein{count && count > 1 ? 's' : ''} matched{' '}\n            </small>\n          </Link>\n        </div>\n      </div>\n    );\n  };\n\nexport default ProteinDownloadRenderer;\n","// extracted by mini-css-extract-plugin\nexport default {\"actions\":\"ProteinDownloadRenderer_style__actions___a8\",\"view-icon-div\":\"ProteinDownloadRenderer_style__view-icon-div___f1\",\"icon-count-organisms\":\"ProteinDownloadRenderer_style__icon-count-organisms___be\",\"view-link\":\"ProteinDownloadRenderer_style__view-link___e9\",\"match-proteins-link\":\"ProteinDownloadRenderer_style__match-proteins-link___e7\"};","import React, { PureComponent } from 'react';\n\nimport Header from 'components/Table/Header';\nimport Body from 'components/Table/Body';\n\nimport cssBinder from 'styles/cssBinder';\n\nimport fonts from 'EBI-Icon-fonts/fonts.css';\nimport styles from '../../style.css';\nimport { ColumnProps } from '../../Column';\n\nconst css = cssBinder(styles, fonts);\n\ntype Props<\n  RowData = Record<string, unknown>,\n  ExtraData = Record<string, unknown>,\n> = {\n  dataTable: Array<RowData & {}>;\n  rowKey?: string;\n  loading?: boolean;\n  ok?: boolean;\n  status?: number;\n  notFound?: boolean;\n  columns: Array<ColumnProps<unknown, RowData, ExtraData>>;\n  rowClassName?: string | ((rowData: RowData) => string);\n  groups?: Array<string>;\n  groupActions?: React.FC<{ group: string }>;\n};\n\nclass TableView<\n  RowData = Record<string, unknown>,\n  ExtraData = Record<string, unknown>,\n> extends PureComponent<Props<RowData, ExtraData>> {\n  render() {\n    const {\n      loading,\n      ok,\n      status,\n      columns,\n      notFound,\n      dataTable,\n      rowKey,\n      rowClassName,\n      groups,\n      groupActions,\n    } = this.props;\n    return (\n      <table\n        className={css('table', 'light', 'nolink', 'sorting')}\n        data-testid=\"data-table\"\n      >\n        <Header columns={columns} notFound={notFound} />\n        <Body<RowData, ExtraData>\n          rows={dataTable || []}\n          rowKey={rowKey}\n          columns={columns}\n          notFound={!!notFound}\n          loading={!!loading}\n          ok={ok}\n          status={status || 0}\n          rowClassName={rowClassName}\n          groups={groups}\n          groupActions={groupActions}\n        />\n      </table>\n    );\n  }\n}\n\nexport default TableView;\n","/* eslint react/jsx-pascal-case: 0 */\nimport React, {\n  PureComponent,\n  Children,\n  PropsWithChildren,\n  ReactElement,\n} from 'react';\n\nimport _Header from '../Header';\nimport _Body from '../Body';\nimport _Column, { ColumnProps } from '../Column';\nimport _Row from '../Row';\nimport _Footer from '../Footer';\nimport TableView from '../views/Table';\n\nimport cssBinder from 'styles/cssBinder';\n\nimport fonts from 'EBI-Icon-fonts/fonts.css';\nimport styles from '../style.css';\n\nconst css = cssBinder(fonts, styles);\n\ntype Props<RowData = Record<string, unknown>> = PropsWithChildren<{\n  dataTable: Array<RowData & {}>;\n  rowKey?: string;\n  isStale?: boolean;\n  loading?: boolean;\n  ok?: boolean;\n  status?: number;\n  query?: Record<string, unknown>;\n  title?: string;\n  notFound?: boolean;\n  contentType?: string;\n}>;\n\nexport default class Table<\n  RowData = Record<string, unknown>,\n> extends PureComponent<Props<RowData>> {\n  render() {\n    const {\n      dataTable,\n      rowKey,\n      isStale,\n      loading,\n      ok,\n      status,\n      query,\n      title,\n      notFound,\n      children,\n    } = this.props;\n\n    const _query = query || {};\n    const _children = Children.toArray(children);\n    // Extract prop information out of every Column element's props\n    const columns = _children\n      .filter((child) => (child as ReactElement).type === _Column)\n      .map(\n        (child) =>\n          (child as ReactElement).props as ColumnProps<unknown, RowData>,\n      );\n    return (\n      <div className={css('vf-stack', 'result-page')}>\n        <div className={css('table-results-filtering')}>\n          <div className={css('pagesize-wrapper')}>\n            {title && <h4>{title}</h4>}\n          </div>\n        </div>\n        <div className={css('vf-stack')}>\n          <div className={css('table-main', { loading: loading || isStale })}>\n            <TableView<RowData>\n              loading={loading}\n              ok={ok}\n              status={status}\n              columns={columns}\n              notFound={notFound}\n              dataTable={dataTable}\n              rowKey={rowKey}\n            />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport const Header = _Header;\nexport const Body = _Body;\nexport const Column = _Column;\nexport const Row = _Row;\nexport const Footer = _Footer;\n","import React from 'react';\n\nimport { createSelector } from 'reselect';\n\nimport loadData from 'higherOrder/loadData/ts';\nimport { STATUS_OK } from 'utils/server-message';\nimport { getReversedUrl } from 'higherOrder/loadData/defaults';\n\nimport Loading from 'components/SimpleCommonComponents/Loading';\nimport Callout from 'components/SimpleCommonComponents/Callout';\nimport { Column } from 'components/Table';\nimport Table from 'components/Table/SimpleTable';\nimport ProteinDownloadRenderer from 'components/Matches/ProteinDownloadRenderer';\nimport NumberComponent from 'components/NumberComponent';\n\nimport { speciesFeat } from 'staticData/home';\n\nimport cssBinder from 'styles/cssBinder';\n\nimport fonts from 'EBI-Icon-fonts/fonts.css';\nimport tableStyles from 'components/Table/style.css';\n\nconst css = cssBinder(fonts, tableStyles);\n\ntype Props = {\n  description?: InterProDescription;\n};\ninterface LoadedProps\n  extends Props,\n    LoadDataProps<\n      PayloadList<{\n        metadata: TaxonomyMetadata;\n        extra_fields?: { counters: Record<string, number> };\n      }>\n    > {}\n\ntype SpeciesFeature = (typeof speciesFeat)[number];\n\nconst _KeySpeciesTableWithData = ({ data, description }: LoadedProps) => {\n  if (!data) return null;\n  const { status, loading, payload } = data;\n  if (!loading && status !== STATUS_OK)\n    return (\n      <Callout type=\"info\">\n        There is no key species associated with this accession\n      </Callout>\n    );\n  if (loading || !payload) return <Loading />;\n  const dataTable = payload.results.map((r) => ({\n    ...r.metadata,\n    ...((r.extra_fields && r.extra_fields.counters) || {}),\n    features: speciesFeat.find((f) => f.tax_id === r.metadata.accession),\n  }));\n  return (\n    <Table\n      dataTable={dataTable}\n      notFound={payload.results.length === 0}\n      contentType=\"taxonomy\"\n      title=\"Key Species\"\n    >\n      <Column\n        dataKey=\"accession\"\n        defaultKey=\"icons\"\n        renderer={(acc: string, { features }: { features: SpeciesFeature }) => {\n          return (\n            <span\n              style={{ color: features.color, fontSize: '2em' }}\n              className={css('small', 'icon', 'icon-species')}\n              data-icon={features.icon}\n              aria-label={acc}\n            />\n          );\n        }}\n      >\n        {' '}\n      </Column>\n      <Column\n        dataKey=\"accession\"\n        renderer={(acc: string) => <span>{acc}</span>}\n      >\n        Tax ID\n      </Column>\n      <Column dataKey=\"name\" renderer={(name: string) => <span>{name}</span>}>\n        Name\n      </Column>\n      <Column\n        dataKey=\"proteins\"\n        cellClassName={css('table-center')}\n        headerClassName={css('table-header-center')}\n        renderer={(count) => <NumberComponent abbr>{count}</NumberComponent>}\n      >\n        protein count\n      </Column>\n      <Column\n        dataKey=\"accession\"\n        defaultKey=\"proteinFastas\"\n        headerClassName={css('table-header-center')}\n        cellClassName={css('table-center')}\n        renderer={ProteinDownloadRenderer(description)}\n      >\n        Actions\n      </Column>\n    </Table>\n  );\n};\n\nconst mapStateToProps = createSelector(\n  (state: GlobalState) => state.customLocation.description,\n  (description) => ({ description }),\n);\nexport default loadData({\n  getUrl: ({ ...args }) => {\n    const reversed = getReversedUrl({ ...args });\n    return `${reversed}${reversed.indexOf('?') >= 0 ? '&' : '?'}key_species`;\n  },\n  mapStateToProps,\n} as LoadDataParameters)(_KeySpeciesTableWithData);\n"],"names":["memberDBAccessions","speciesFeat","title","kingdom","description","icon","color","tax_id","proteome_id","entryType","type","css","cssBinder","fonts","accession","row","count","endpointToFilterBy","taxonomy","isFilter","React","className","Link","to","main","key","Object","assign","protein","db","order","source_database","styles","TableView","PureComponent","render","loading","ok","status","columns","notFound","dataTable","rowKey","rowClassName","groups","groupActions","this","props","Header","Body","rows","Table","isStale","query","children","Children","toArray","filter","child","_Column","map","tableStyles","mapStateToProps","createSelector","state","customLocation","loadData","getUrl","_a","args","__rest","reversed","getReversedUrl","indexOf","_ref","data","payload","STATUS_OK","Callout","Loading","results","r","metadata","extra_fields","counters","features","find","f","length","contentType","Column","dataKey","defaultKey","renderer","acc","_ref2","style","fontSize","name","cellClassName","headerClassName","NumberComponent","abbr","ProteinDownloadRenderer"],"sourceRoot":""}