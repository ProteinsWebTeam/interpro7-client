{"version":3,"file":"js/9209.module.list-subpage.df0.js","mappings":"gUAsBMA,GAAkBC,EAAAA,EAAAA,KACrBC,GAAUA,EAAMC,SAASC,MACzBF,GAAUA,EAAMG,eAAeC,cAC/BJ,GAAUA,EAAMG,eAAeE,SAChC,CAAAC,EAAqCF,EAAWG,KAAiB,IAAhE,SAAEC,EAAQ,SAAEC,EAAQ,KAAEC,EAAI,KAAEC,GAAML,GAAe,OAAED,GAAQE,EACpDK,EAAUC,EAAAA,OAAOC,QAAQV,GAAaW,QAAOC,IAAA,IAAEC,EAAGC,GAAEF,EAAA,OAAKE,EAAEC,QAAQ,IACzE,GAAuB,IAAnBP,EAAQQ,OAAZ,CACA,IAAOC,EAAUN,GAAUH,EAAQ,GAC7BU,EAAO,CACXC,KAAM,CAAEC,IAAKH,GACb,CAACA,GAAQR,EAAAA,OAAAY,OAAA,GACJV,EAAM,CACTW,UAAWrB,EACXc,UAAU,IAEZ,CAACf,EAAYmB,KAAKC,KAAGX,EAAAA,OAAAY,OAAA,GAChBrB,EAAYA,EAAYmB,KAAKC,KAAI,CACpCL,UAAU,KAGd,IACE,OAAOQ,EAAAA,EAAAA,QAAO,CACZnB,WACAC,WACAC,OACAkB,SAAUjB,GAAOkB,EAAAA,EAAAA,GAAkBP,IAEvC,CAAE,MAAAQ,GACA,MACF,CAvBgC,CAuBhC,IAGEC,GAAkBC,EAAAA,EAAAA,GAASlC,EAATkC,EArCCC,IAAgC,IAA/B,KAAEC,EAAI,iBAAEC,GAAkBF,EAElD,OADAE,EAAiBD,IAASA,EAAKE,SAAWF,EAAKG,SACxC,IAAI,IAqCPC,EAAcC,IAAsB,IAArB,KAAEL,EAAI,OAAE7B,GAAQkC,GAC5BC,EAAWC,IAAgBC,EAAAA,EAAAA,UAAS,MACrCC,EAAatC,GAAUA,EAAOA,OACpC,OACEuC,EAAAA,cAAAA,EAAAA,SAAA,KACGD,GAAcC,EAAAA,cAACb,EAAe,CAACI,iBAAkBM,IAClDG,EAAAA,cAACC,EAAAA,EAAO,CAACX,KAAMA,EAAMY,gBAAiBH,GAAcH,IACnD,EAGPF,EAAYS,UAAY,CACtBb,KAAMc,EAAAA,GAAaC,WACnB5C,OAAQ6C,IAAAA,MAAQ,CACd7C,OAAQ6C,IAAAA,UAGZ,IAAMC,GAAkBpD,EAAAA,EAAAA,KACrBC,GAAUA,EAAMG,eAAeE,SAC/BA,IAAM,CAAQA,aAEjB,SAAe+C,EAAAA,EAAAA,IAAQD,EAAvB,CAAwCb,E","sources":["webpack://interpro7-client/./src/subPages/ListSubPage/index.js"],"sourcesContent":["// @flow\nimport React, { useState } from 'react';\nimport T from 'prop-types';\nimport { dataPropType } from 'higherOrder/loadData/dataPropTypes';\n\nimport { connect } from 'react-redux';\nimport { createSelector } from 'reselect';\nimport { format } from 'url';\n\nimport loadData from 'higherOrder/loadData';\n\n// $FlowFixMe\nimport descriptionToPath from 'utils/processDescription/descriptionToPath';\n// $FlowFixMe\nimport Related from 'components/Related';\nimport { Object } from 'core-js';\n\nconst _AccessionSearch = ({ data, onSearchComplete }) => {\n  onSearchComplete(data && !data.loading && data.payload);\n  return null;\n};\n\nconst getURLFromState = createSelector(\n  (state) => state.settings.api,\n  (state) => state.customLocation.description,\n  (state) => state.customLocation.search,\n  ({ protocol, hostname, port, root }, description, { search }) => {\n    const filters = Object.entries(description).filter(([_, v]) => v.isFilter);\n    if (filters.length !== 1) return;\n    const [endpoint, filter] = filters[0];\n    const desc = {\n      main: { key: endpoint },\n      [endpoint]: {\n        ...filter,\n        accession: search,\n        isFilter: false,\n      },\n      [description.main.key]: {\n        ...description[description.main.key],\n        isFilter: true,\n      },\n    };\n    try {\n      return format({\n        protocol,\n        hostname,\n        port,\n        pathname: root + descriptionToPath(desc),\n      });\n    } catch {\n      return;\n    }\n  },\n);\nconst AccessionSearch = loadData(getURLFromState)(_AccessionSearch);\n\nconst ListSubPage = ({ data, search }) => {\n  const [accSearch, setAccSearch] = useState(null);\n  const searchTerm = search && search.search;\n  return (\n    <>\n      {searchTerm && <AccessionSearch onSearchComplete={setAccSearch} />}\n      <Related data={data} accessionSearch={searchTerm && accSearch} />\n    </>\n  );\n};\nListSubPage.propTypes = {\n  data: dataPropType.isRequired,\n  search: T.shape({\n    search: T.string,\n  }),\n};\nconst mapStateToProps = createSelector(\n  (state) => state.customLocation.search,\n  (search) => ({ search }),\n);\nexport default connect(mapStateToProps)(ListSubPage);\n"],"names":["getURLFromState","createSelector","state","settings","api","customLocation","description","search","_ref2","_ref3","protocol","hostname","port","root","filters","Object","entries","filter","_ref4","_","v","isFilter","length","endpoint","desc","main","key","assign","accession","format","pathname","descriptionToPath","_unused","AccessionSearch","loadData","_ref","data","onSearchComplete","loading","payload","ListSubPage","_ref5","accSearch","setAccSearch","useState","searchTerm","React","Related","accessionSearch","propTypes","dataPropType","isRequired","T","mapStateToProps","connect"],"sourceRoot":""}