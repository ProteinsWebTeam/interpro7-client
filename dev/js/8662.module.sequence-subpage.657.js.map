{"version":3,"file":"js/8662.module.sequence-subpage.657.js","mappings":"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","sources":["webpack://interpro7-client/./src/components/Protein/Sequence/DownloadButton/index.tsx","webpack://interpro7-client/./src/components/Protein/Sequence/IPScanButton/index.tsx","webpack://interpro7-client/./src/components/Protein/Sequence/index.js","webpack://interpro7-client/./src/subPages/Sequence/index.tsx","webpack://interpro7-client/./src/utils/sequence/index.ts","webpack://interpro7-client/./src/components/Protein/Sequence/style.css?2ab4","webpack://interpro7-client/./src/styles/summary.css?f42a"],"sourcesContent":["import React from 'react';\n\nimport { splitSequenceByChunks } from 'utils/sequence';\n\nimport cssBinder from 'styles/cssBinder';\n\nimport fonts from 'EBI-Icon-fonts/fonts.css';\nimport summary from 'styles/summary.css';\nimport ipro from 'styles/interpro-vf.css';\nimport buttonCSS from 'components/SimpleCommonComponents/Button/style.css';\n\nconst css = cssBinder(summary, ipro, fonts, buttonCSS);\n\ntype Props = { accession: string; sequence: string };\nconst DownloadButton = ({ accession, sequence }: Props) => {\n  return (\n    <a\n      className={css('vf-button', 'vf-button--secondary', 'vf-button--sm')}\n      style={{\n        display: 'block',\n        minWidth: '200px',\n        width: '100%',\n      }}\n      download={`${accession}.fa`}\n      href={URL.createObjectURL(\n        new Blob([splitSequenceByChunks(sequence, accession, false)], {\n          type: 'text/plain',\n        }),\n      )}\n    >\n      <span\n        className={css('icon', 'icon-common', 'icon-download')}\n        data-icon=\"&#xf019;\"\n      />\n      &nbsp;Download sequence (FASTA)\n    </a>\n  );\n};\n\nexport default DownloadButton;\n","import React from 'react';\n\nimport { connect } from 'react-redux';\nimport { goToCustomLocation } from 'actions/creators';\n\nimport Link from 'components/generic/Link';\nimport cssBinder from 'styles/cssBinder';\n\nimport sequenceStyles from '../style.css';\nimport fonts from 'EBI-Icon-fonts/fonts.css';\nimport buttonCSS from 'components/SimpleCommonComponents/Button/style.css';\n\nconst css = cssBinder(sequenceStyles, fonts, buttonCSS);\n\ntype Props = {\n  goToCustomLocation: typeof goToCustomLocation;\n  sequence: string | (() => string);\n  title: string;\n  minWidth: string;\n};\n\nconst IPScanButton = ({\n  goToCustomLocation,\n  sequence,\n  title,\n  minWidth,\n}: Props) => {\n  const _handleIPSClick = (event: MouseEvent) => {\n    event.preventDefault();\n    const seq = typeof sequence === 'function' ? sequence() : sequence;\n    goToCustomLocation({\n      description: {\n        main: { key: 'search' },\n        search: { type: 'sequence', value: seq },\n      },\n    });\n  };\n\n  return (\n    <Link\n      to={{\n        description: {\n          main: { key: 'search' },\n          search: { type: 'sequence' },\n        },\n      }}\n      onClick={_handleIPSClick}\n    >\n      <div\n        className={css(\n          'sequence-link',\n          'vf-button',\n          'vf-button--secondary',\n          'vf-button--sm',\n        )}\n        data-icon=\"&#xf061;\"\n        style={{ minWidth: minWidth, marginRight: '1rem' }}\n      >\n        <div className={css('shape', 'ips', 'gray')} />\n        <div className={css('shape', 'ips', 'green')} />\n        <div className={css('shape', 'ips', 'pale-green')} />\n        <div className={css('shape', 'ips', 'red')} />\n        <div className={css('shape', 'ips', 'blue')} />\n        <span>{title}</span>\n      </div>\n    </Link>\n  );\n};\n\nexport default connect(null, { goToCustomLocation })(IPScanButton);\n","import React, { PureComponent } from 'react';\nimport T from 'prop-types';\nimport { connect } from 'react-redux';\nimport { createSelector } from 'reselect';\n\nimport { goToCustomLocation } from 'actions/creators';\n\nimport { foundationPartial } from 'styles/foundation';\n// import HmmerButton from 'components/Protein/Sequence/HmmerButton';\nimport IPScanButton from 'components/Protein/Sequence/IPScanButton';\nimport DownloadButton from './DownloadButton';\n\nimport local from './style.css';\nimport ipro from 'styles/interpro-new.css';\nimport loadable from 'higherOrder/loadable';\nimport ebiGlobalStyles from 'ebi-framework/css/ebi-global.css';\n\nconst f = foundationPartial(ebiGlobalStyles, ipro, local);\n\nconst comment = /^\\s*[;>].*$/gm;\nconst whiteSpaces = /\\s*/g;\nconst chunkOfTen = /.{1,10}/g;\nconst chunkOfEighty = /(.{1,80})/g;\nconst CHUNK_SIZE = 10;\n\n/*:: type InnerProps = {\n  sequence: string,\n  start?: number,\n  end?: number,\n}; */\nconst SchemaOrgData = loadable({\n  loader: () => import(/* webpackChunkName: \"schemaOrg\" */ 'schema_org'),\n  loading: () => null,\n});\n\nexport const schemaProcessData = (length /*: number */) => ({\n  '@id': '@additionalProperty',\n  '@type': 'PropertyValue',\n  additionalType: 'hhttp://semanticscience.org/resource/SIO_000205',\n  name: 'protein sequence',\n  value: {\n    '@type': 'StructuredValue',\n    additionalType: [\n      'bio:BioChemEntity',\n      'http://semanticscience.org/resource/SIO_010015',\n    ],\n    additionalProperty: {\n      '@type': 'PropertyValue',\n      name: 'length',\n      value: length,\n    },\n  },\n});\n\n/*::\n  type EdgeBlockProps = {\n    segment: string ,\n    position: number ,\n    start: number ,\n    end: number ,\n  }\n */\nconst EdgeBlock = ({ segment, position, start, end } /*: EdgeBlockProps */) => {\n  const pos = position + 1;\n  return (\n    <>\n      {pos < start ? (\n        <span className={f('light-sequence')}>\n          {segment.slice(0, start - pos)}\n        </span>\n      ) : null}\n      {pos + CHUNK_SIZE > start || pos + CHUNK_SIZE < end ? (\n        <span>{segment.slice(start - pos, end - pos + 1)}</span>\n      ) : null}\n\n      {pos + CHUNK_SIZE > end ? (\n        <span className={f('light-sequence')}>\n          {segment.slice(end - pos + 1)}\n        </span>\n      ) : null}\n    </>\n  );\n};\nEdgeBlock.propTypes = {\n  segment: T.string,\n  position: T.number,\n  start: T.number,\n  end: T.number,\n};\nexport class InnerSequence extends PureComponent /*:: <InnerProps> */ {\n  static propTypes = {\n    sequence: T.string.isRequired,\n    start: T.number,\n    end: T.number,\n  };\n\n  render() {\n    const sequenceWords =\n      this.props.sequence\n        .replace(comment, '')\n        .replace(whiteSpaces, '')\n        .match(chunkOfTen) || [];\n    const { start, end } = this.props;\n    return (\n      <div className={f('raw-sequence-viewer', 'row')}>\n        <SchemaOrgData\n          data={this.props.sequence.length}\n          processData={schemaProcessData}\n        />\n        {sequenceWords.map((e, i) => {\n          let isBeforeStart = false;\n          let isAfterEnd = false;\n          let isStartBlock = false;\n          let isEndBlock = false;\n          if (typeof start !== 'undefined' && typeof end !== 'undefined') {\n            isBeforeStart = start > 0 && start > (i + 1) * CHUNK_SIZE;\n            isAfterEnd = end > 0 && end <= i * CHUNK_SIZE;\n            isStartBlock =\n              start > 0 &&\n              start + CHUNK_SIZE > 1 + (i + 1) * CHUNK_SIZE &&\n              start <= (i + 1) * CHUNK_SIZE;\n            isEndBlock =\n              end > 0 && end < (i + 1) * CHUNK_SIZE && end > i * CHUNK_SIZE;\n          }\n          return (\n            <React.Fragment key={i}>\n              <span\n                className={f('sequence_word', {\n                  'light-sequence': isBeforeStart || isAfterEnd,\n                })}\n                style={{ zIndex: -i, display: 'inline-block' }}\n                data-index={i}\n              >\n                {isStartBlock || isEndBlock ? (\n                  <EdgeBlock\n                    segment={e}\n                    start={start || 0}\n                    end={end || (i + 1) * CHUNK_SIZE}\n                    position={i * CHUNK_SIZE}\n                  />\n                ) : (\n                  e\n                )}\n              </span>\n              <div className={f('sequence_word_spacer')} />\n            </React.Fragment>\n          );\n        })}\n      </div>\n    );\n  }\n}\n\n/*:: type SequenceProps = {\n  sequence: string,\n  goToCustomLocation: function,\n  accession: string,\n  name: ?string,\n  customLocation: Object,\n}; */\n\nexport class Sequence extends PureComponent /*:: <SequenceProps> */ {\n  /*:: _ref: { current: null | React$ElementRef<'div'> }; */\n\n  static propTypes = {\n    sequence: T.string,\n    goToCustomLocation: T.func.isRequired,\n    accession: T.string.isRequired,\n    customLocation: T.object,\n    name: T.string,\n  };\n\n  constructor(props /*: SequenceProps */) {\n    super(props);\n\n    this._ref = React.createRef();\n  }\n  componentDidMount() {\n    document.addEventListener('selectionchange', this._goToSelection);\n    this._selectFromHash();\n  }\n  componentDidUpdate() {\n    this._selectFromHash();\n  }\n  componentWillUnmount() {\n    document.removeEventListener('selectionchange', this._goToSelection);\n  }\n\n  _goToSelection = () => {\n    const { start, end } = this._getSelectionRange();\n    this.props.goToCustomLocation({\n      ...this.props.customLocation,\n      hash: `${start}-${end}`,\n    });\n  };\n  _getPositionFromHash = (hash) => {\n    const re = /^(\\d)+-(\\d)+$/;\n    if (re.test(hash)) {\n      const [start, end] = hash.split('-').map(Number);\n      if (start < end) {\n        return { start, end };\n      }\n    }\n    return null;\n  };\n  _selectFromHash = () => {\n    const hash = this.props.customLocation.hash;\n    const { start: s, end: e } = this._getSelectionRange();\n    if (hash !== `${s}-${e}`) {\n      const position = this._getPositionFromHash(hash);\n      if (!position) return null;\n      const { start, end } = position;\n      const range = document.createRange();\n      const startNode = document.querySelector(\n        `span[data-index='${Math.floor((start - 1) / CHUNK_SIZE)}']`,\n      );\n      const endNode = document.querySelector(\n        `span[data-index='${Math.floor(end / CHUNK_SIZE)}']`,\n      );\n      if (startNode && endNode) {\n        if (startNode.firstChild)\n          range.setStart(startNode.firstChild, (start - 1) % CHUNK_SIZE);\n        if (endNode.firstChild)\n          range.setEnd(endNode.firstChild, end % CHUNK_SIZE);\n        window.getSelection().empty();\n        window.getSelection().addRange(range);\n      }\n    }\n  };\n\n  _isSelectionInSequence = (selection) => {\n    if (!this._ref.current) return false;\n    // Beginning of selection is in the sequence element\n    const selectionIsInSequence = this._ref.current.contains(\n      selection.anchorNode,\n    );\n    if (!this._ref.current) return false;\n    // End of selection is in the sequence element\n    return (\n      selectionIsInSequence && this._ref.current.contains(selection.focusNode)\n    );\n  };\n  _getSelectionRange = () => {\n    let sequenceToSearch = this.props.sequence;\n    let start = 1;\n    let end = sequenceToSearch.length;\n    if ('getSelection' in window) {\n      const selection = window.getSelection();\n      if (this._isSelectionInSequence(selection)) {\n        // Get the text in the selection\n        const selectionString = selection.toString().trim();\n        if (selectionString) {\n          sequenceToSearch = selectionString.replace(/\\s/gi, '');\n        } else {\n          return { start, end };\n        }\n        // define start and end value of sequence selection\n        start =\n          +selection.anchorNode.parentElement.dataset.index * CHUNK_SIZE +\n          selection.anchorOffset +\n          1;\n        end = sequenceToSearch.length + start - 1;\n      }\n    }\n    return { start, end };\n  };\n\n  _getSelection = () => {\n    let sequenceToSearch = this.props.sequence;\n    const { start, end } = this._getSelectionRange();\n\n    // Split by line of 80 characters\n    sequenceToSearch = sequenceToSearch\n      .slice(Math.max(0, start - 1), end)\n      .replace(chunkOfEighty, '$1\\n');\n    // Prepend metainformation\n    const meta = `>${\n      this.props.accession\n    } mol:protein subsequence:${start}-${end} length:${end - start + 1} ${\n      this.props.name || ''\n    }`.trim();\n    return encodeURIComponent(`${meta}\\n${sequenceToSearch}`);\n  };\n\n  render() {\n    const { sequence, accession, name } = this.props;\n    const header = accession || name;\n    return (\n      <section id=\"sequence\">\n        <div className={f('row', 'columns')}>\n          <h5>Sequence</h5>\n        </div>\n\n        <div className={f('row')}>\n          <div\n            className={f(\n              'small-12',\n              'medium-12',\n              'large-8',\n              'columns',\n              'margin-bottom-large',\n            )}\n            ref={this._ref}\n          >\n            {header && (\n              <div\n                className={f(\n                  'raw-sequence-viewer',\n                  'row',\n                  'raw-sequence-header',\n                )}\n              >\n                {`> ${header}`}\n              </div>\n            )}\n            <InnerSequence sequence={sequence} />\n          </div>\n          <div className={f('small-12', 'medium-12', 'large-4', 'columns')}>\n            <IPScanButton\n              sequence={this._getSelection}\n              title={'Search selection with InterProScan'}\n              minWidth=\"302px\"\n            />\n            {/* <HmmerButton\n              sequence={this._getSelection}\n              title=\"Search selection with HMMER\"\n              minWidth=\"302px\"\n            /> */}\n            <DownloadButton sequence={sequence} accession={accession} />\n          </div>\n        </div>\n      </section>\n    );\n  }\n}\nconst mapStateToProps = createSelector(\n  (state) => state.customLocation,\n  (customLocation) => ({ customLocation }),\n);\n\nexport default connect(mapStateToProps, { goToCustomLocation })(Sequence);\n","import React from 'react';\n\nimport Sequence, { InnerSequence } from 'components/Protein/Sequence';\n\ntype Props = {\n  data: RequestedData<MetadataPayload<ProteinMetadata> | IprscanDataIDB>;\n  localPayload: LocalPayload;\n  localTitle: string;\n  orf?: number;\n};\n\nconst SequenceSubPage = ({ data, localPayload, localTitle, orf }: Props) => {\n  let accession;\n  let sequence;\n  let name;\n  const local = localPayload;\n  let payload = null;\n  const { loading, ok } = data;\n  const hasORF =\n    (local as Iprscan5NucleotideResult)?.openReadingFrames?.length &&\n    typeof orf !== 'undefined';\n  const currentORF = hasORF\n    ? (local as Iprscan5NucleotideResult)?.openReadingFrames?.[orf!]\n    : undefined;\n  const protein = currentORF?.protein;\n\n  if (ok && !loading && !payload && data?.payload) {\n    payload = data?.payload;\n  }\n  if (!payload && !local) return null;\n  if ((payload as MetadataPayload)?.metadata) {\n    const metadata = (payload as MetadataPayload<ProteinMetadata>)?.metadata;\n    accession = metadata?.accession;\n    sequence = metadata?.sequence;\n    name = (metadata?.name as unknown as NameObject)?.name || metadata?.name;\n    // TODO: Remove by October 2024 - I think this case is never reached.\n    // } else if ((payload as IprscanDataIDB)?.results) {\n    //   const results = (payload as IprscanDataIDB).results;\n    //   accession = results?.[0]?.xref?.accession;\n    //   sequence = results?.[0]?.xref?.sequence;\n    //   name = results?.[0]?.xref?.name?.name;\n  } else if (hasORF && protein) {\n    accession = protein.xref[0].id || '';\n    name = protein.xref[0].name || '';\n    sequence = protein.sequence;\n  } else {\n    const result = local as Iprscan5Result;\n    accession = result.xref[0].id || '';\n    name = localTitle || result.xref[0].name || '';\n    sequence = result.sequence;\n  }\n  return (\n    <>\n      <Sequence accession={accession} sequence={sequence} name={name} />\n      {hasORF && protein && (\n        <section id=\"nucleotides\">\n          <h5>Nucleotide Sequence</h5>\n          <InnerSequence\n            sequence={local?.sequence}\n            start={currentORF.start}\n            end={currentORF.end}\n            name={protein.xref[0].name}\n          />\n        </section>\n      )}\n    </>\n  );\n};\n\nexport default SequenceSubPage;\n","export const splitSequenceByChunks = (\n  sequence: string,\n  id: string,\n  encode: boolean = true\n) => {\n  const start = 1;\n  const end = sequence.length;\n  // Split lines\n  const formattedSequence = sequence\n    .slice(Math.max(0, start - 1), end)\n    .replace(/(.{1,80})/g, '$1\\n');\n  const meta = `>${id} ${start}-${end}`.trim();\n  const output = `${meta}\\n${formattedSequence}`;\n  return encode ? encodeURIComponent(output) : output;\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"raw-sequence-viewer\":\"Sequence_style__raw-sequence-viewer___c9\",\"raw-sequence-header\":\"Sequence_style__raw-sequence-header___f1\",\"sequence_word\":\"Sequence_style__sequence_word___c7\",\"light-sequence\":\"Sequence_style__light-sequence___a6\",\"sequence_word_spacer\":\"Sequence_style__sequence_word_spacer___d7\",\"sequence-link\":\"Sequence_style__sequence-link___e1\",\"shape\":\"Sequence_style__shape___fb\",\"hmmer\":\"Sequence_style__hmmer___db\",\"yellow\":\"Sequence_style__yellow___a9\",\"red\":\"Sequence_style__red___e5\",\"blue\":\"Sequence_style__blue___cb\",\"ips\":\"Sequence_style__ips___d0\",\"gray\":\"Sequence_style__gray___ec\",\"green\":\"Sequence_style__green___d3\",\"pale-green\":\"Sequence_style__pale-green___ff\"};","// extracted by mini-css-extract-plugin\nexport default {\"summary-row\":\"styles_summary__summary-row___b3\",\"summary-grid\":\"styles_summary__summary-grid___b5\"};"],"names":["css","cssBinder","summary","ipro","fonts","buttonCSS","_ref","accession","sequence","React","className","style","display","minWidth","width","download","href","URL","createObjectURL","Blob","splitSequenceByChunks","type","sequenceStyles","connect","goToCustomLocation","title","Link","to","description","main","key","search","onClick","event","preventDefault","seq","value","marginRight","f","foundationPartial","ebiGlobalStyles","local","comment","whiteSpaces","chunkOfTen","chunkOfEighty","CHUNK_SIZE","SchemaOrgData","loadable","loader","loading","schemaProcessData","length","additionalType","name","additionalProperty","EdgeBlock","segment","position","start","end","pos","slice","propTypes","T","InnerSequence","PureComponent","render","sequenceWords","this","props","replace","match","data","processData","map","e","i","isBeforeStart","isAfterEnd","isStartBlock","isEndBlock","zIndex","isRequired","Sequence","constructor","super","_goToSelection","_getSelectionRange","Object","assign","customLocation","hash","_getPositionFromHash","test","split","Number","_selectFromHash","s","range","document","createRange","startNode","querySelector","Math","floor","endNode","firstChild","setStart","setEnd","window","getSelection","empty","addRange","_isSelectionInSequence","selection","current","selectionIsInSequence","contains","anchorNode","focusNode","sequenceToSearch","selectionString","toString","trim","parentElement","dataset","index","anchorOffset","_getSelection","max","meta","encodeURIComponent","componentDidMount","addEventListener","componentDidUpdate","componentWillUnmount","removeEventListener","header","id","ref","IPScanButton","DownloadButton","mapStateToProps","createSelector","state","localPayload","localTitle","orf","payload","ok","hasORF","_a","openReadingFrames","currentORF","_b","undefined","protein","metadata","_c","xref","result","encode","formattedSequence","output"],"sourceRoot":""}