{"version":3,"file":"js/9439.module.download-form.d38.js","mappings":"smBAaA,IAAMA,GAAIC,EAAAA,EAAAA,GCZV,CAAgB,MAAQ,oCAAoC,QAAU,sCAAsC,QAAU,sCAAsC,YAAc,4CDqCnK,MAAMC,UAAwBC,EAAAA,cA4BnCC,WAAAA,CAAYC,GAA6B,IAAAC,EACvCC,MAAMF,GAAMC,EAAAE,KAAA,KAoBdC,SAAW,SAACC,EAAIC,GAGd,QAHkB,IAAJA,IAAAA,EAAO,GACjBL,EAAKM,YAAYN,EAAKM,WAAWC,OAEhCP,EAAKQ,KAAKC,QAAf,CACA,IAAMC,GAAaC,EAAAA,EAAAA,GACjBP,EACAJ,EAAKD,MAAMa,KACXZ,EAAKD,MAAMc,aAIVb,EAAKD,MAAMe,SACXd,EAAKD,MAAMgB,QACZL,GACsB,OAAtBV,EAAKQ,KAAKC,UAEVT,EAAKQ,KAAKC,QAAQM,OAAQ,iBAAiBL,EAAU,KACnDV,EAAKD,MAAMiB,WAAa,KACvBC,SAIFjB,EAAKD,MAAMmB,cACXlB,EAAKD,MAAMoB,aACZd,IAASD,GACTgB,OAAOC,SAAShB,IAChBe,OAAOC,SAASjB,IAalBJ,EAAKM,WAAa,IAAIgB,EAAAA,UACtBtB,EAAKM,WAAWiB,MAAM,CACpBlB,KAAM,CAAEmB,MAAOnB,GACfD,GAAI,CAAEoB,MAAOpB,GAEbqB,OAAQ,eACRC,OAAQlB,IAAe,IAAd,MAAEgB,GAAOhB,EACXR,EAAKQ,KAAKC,UACfT,EAAKQ,KAAKC,QAAQkB,YAAc,KAC9BhB,EAAAA,EAAAA,GAAoBa,EAAOxB,EAAKD,MAAMa,KAAMZ,EAAKD,MAAMc,cACvD,IACA,KArBAb,EAAKQ,KAAKC,UACZT,EAAKQ,KAAKC,QAAQkB,YAAc,IAAGjB,GAAc,IA3BvB,CAkDhC,EAxEER,KAAKM,KAAOoB,EAAAA,WACd,CAEAC,iBAAAA,GACE3B,KAAKC,SAASD,KAAKH,MAAM+B,SAC3B,CAEAC,kBAAAA,CAAkBC,GAAqB,IAAlBF,SAAUzB,GAAM2B,EACnC9B,KAAKC,SAASD,KAAKH,MAAM+B,SAAUzB,EACrC,CAEA4B,oBAAAA,GACM/B,KAAKI,aACPJ,KAAKI,WAAWC,OAChBL,KAAKI,WAAW4B,UAChBhC,KAAKI,WAAa,KAEtB,CAyDAoB,MAAAA,GACE,IAAAS,EAeIjC,KAAKH,OAfH,QAEJqC,EAAO,YAGPjB,EAAW,UACXkB,EAAS,MAMTC,GAGDH,EADIpC,E,oIAAKwC,CAAAJ,EAAAK,GAGV,OACEZ,EAAAA,cAAA,OAAAa,EAAA,CACEJ,UAAW3C,EAAE2C,EAAW,CAAED,UAASjB,cAAamB,UAChDI,IAAKxC,KAAKM,MACNT,GAGV,EAjIWH,EAMJ+C,UAAY,CACjBb,SAAUc,IAAAA,UAAY,CAACA,IAAAA,OAAUA,IAAAA,SACjCR,QAASQ,IAAAA,KACT1B,YAAa0B,IAAAA,KACbC,SAAUD,IAAAA,OACVP,UAAWO,IAAAA,OACXzB,YAAayB,IAAAA,KAAOE,WACpBC,SAAUH,IAAAA,KAAOE,WACjBlC,KAAMgC,IAAAA,KACNN,MAAOM,IAAAA,KACP/B,YAAa+B,IAAAA,OACb9B,QAAS8B,IAAAA,KACT7B,MAAO6B,IAAAA,UAAY,CAACA,IAAAA,OAAUA,IAAAA,SAC9B5B,UAAW4B,IAAAA,QAnBFhD,EAsBJoD,aAAe,CACpBH,SA3C4B,EA4C5BjC,MAAM,EACNC,YAhDsB,GA2J1B,IAAMoC,GAAkBC,EAAAA,EAAAA,KACrBC,GAAUA,EAAMC,SAASC,GAAGlC,cAC5BA,IAAW,CAAQA,kBAGtB,SAAemC,EAAAA,EAAAA,IAAQL,EAAvB,CAAwCrD,E,mCE9KxC,IAAM2D,EAAQ,CAAC,GAAI,IAAK,IAAK,KAG7B,MCDA,GACE/B,EACAZ,EACAC,KAEA,GAAKW,GAAmB,IAAVA,EAAd,CACA,IAAIgC,EAASC,KAAKC,OAAOlC,GACzB,OAAImC,MAAMH,GAAgB,OACtBpC,OAAOC,SAASmC,KACd5C,EACF4C,EDTN,SAAgBhC,EAAqBX,QAAY,IAAZA,IAAAA,EAAgC,GAGnE,IAFA,IAAI2C,EAAShC,EACToC,EAAY,EACTJ,GALU,IAKa3C,GAC5B+C,IACAJ,EAASC,KAAKC,MAAMF,EAPL,KASjB,MAAO,GAAGA,EAAOK,iBAAmBN,EAAMK,EAC3C,CCCcE,CAAQN,EAAQ3C,GAIrBO,OAAOC,SAASmC,KAASA,EAASA,EAAOK,mBAG1CL,EAZ0B,CAalC,C,2OCbKO,EAAmB,gBAEnBC,EAAgB,CAAC,OAAQ,MAAO,SAEzBC,EAAyB,SAACC,GAAQ,YAAL,IAAHA,IAAAA,EAAM,IAC3CA,EAAIC,QAAQJ,EAAkB,MAAM,EAEzBK,GAAgBlB,EAAAA,EAAAA,KAC1BC,GAAUA,EAAMC,SAASiB,MAC1B7D,IAAA,IAAC,SAAE8D,EAAQ,SAAEC,EAAQ,KAAEC,EAAI,KAAEC,GAAMjE,EAAA,OACjCyD,GACES,EAAAA,EAAAA,QAAO,CACLJ,WACAC,WACAC,OACAG,SAAU,GAAGF,IAEhB,IAGQG,EAAoBC,IAC/B3B,EAAAA,EAAAA,KACE,IAAM4B,EAAAA,QAAOC,OAAOF,KACpB7C,IAAA,IAAC,MAAEgD,EAAK,KAAEC,GAAMjD,EAAA,sCACkBgD,EAAK,IAAIC,EAAI,sBAEtCC,EAAqBC,IAChCjC,EAAAA,EAAAA,KACE,IAAM4B,EAAAA,QAAOC,OAAOK,cACpBC,IAAA,IAAC,MAAEL,EAAK,KAAEC,EAAI,OAAEK,EAAS,UAAUD,EAAA,2CACIL,EAAK,IAAIC,EAAI,IAAIK,EAAM,SAASH,CAAY,IAG1EI,GAASrC,EAAAA,EAAAA,KAEnBsC,GAAQA,IACRA,IACCtC,EAAAA,EAAAA,KACGC,GAAUA,EAAMC,SAASoC,KACzBrC,GAAUA,EAAMC,SAASqC,WAAWC,WACpCvC,GAAUA,EAAMwC,eAAeC,cAC/BzC,GAAUA,EAAMwC,eAAeE,SAC/B1C,GAAUA,EAAMwC,eAAeG,OAEhC,CAAAC,EAEEC,EACAJ,EACAC,EACAC,KACG,IALH,SAAExB,EAAQ,SAAEC,EAAQ,KAAEC,EAAI,KAAEC,GAAMsB,EAM5BE,EACJL,EAAYM,KAAKV,KAAOI,EAAYA,EAAYM,KAAKV,KAAKW,UACtD,CAAC,EAACC,OAAAC,OAAA,GACIR,GAAU,CAAC,GAUvB,KARGD,EAAYA,EAAYM,KAAKV,KAAKW,WACnCC,OAAOE,OAAOV,GAAaW,MACzBC,IAAA,IAAC,SAAEC,EAAQ,GAAEC,GAAIF,EAAA,OAAKC,GAAYC,CAAE,KAErCd,EAAYe,OAASf,EAAYe,MAAMC,YAExCX,EAAQY,UAAYZ,EAAQY,WAAab,GAE9B,SAATF,EACF,OAAQF,EAAYM,KAAKV,KACvB,IAAK,QACHS,EAAQa,aACN,4EACE9C,EAAc+C,SAASnB,EAAYe,MAAMD,MAC3CT,EAAQa,cAAgB,QAC1B,MACF,IAAK,UACHb,EAAQa,aAAe,2BACvB,MACF,IAAK,YACHb,EAAQa,aAAe,kCACvB,MACF,IAAK,WACHb,EAAQa,aACN,oDACF,MACF,IAAK,WACHb,EAAQa,aAAe,mCACvB,MACF,IAAK,MACHb,EAAQa,aAAe,uBACvB,MACF,QACEb,EAAQa,kBAAeE,EAI7B,GAAa,UAATlB,EACF,OAAQF,EAAYM,KAAKV,KACvB,IAAK,QACHS,EAAQa,aAAe,aACvB,MACF,IAAK,WACL,IAAK,WACHb,EAAQa,aAAe,yBACvB,MACF,IAAK,MACHb,EAAQa,aAAe,6BAMhB,SAAThB,QAAsCkB,IAAnBf,EAAQJ,eACtBI,EAAQJ,OAIjB,IAAMoB,EACJrB,EAAYM,KAAKV,KAAOI,EAAYA,EAAYM,KAAKV,KAAKW,UACtD,CACED,KAAMN,EAAYM,KAClB,CAACN,EAAYM,KAAKV,KAAMI,EAAYA,EAAYM,KAAKV,MAEvDI,EAEAsB,EAASjB,EAAQiB,OACnBA,UAAejB,EAAQiB,OAE3B,IAAMC,EAASlD,GACbS,EAAAA,EAAAA,QAAO,CACLJ,WACAC,WACAC,OACAG,SAAUF,GAAO2C,EAAAA,EAAAA,GAAkBH,GACnCI,MAAOpB,KAIX,GAAIiB,EAAQ,CACV,IAAMI,GAA+B,IAAzBH,EAAOI,QAAQ,KAAc,IAAM,IAC/C,MAAO,GAAGJ,EAASG,EAAG,UAAUJ,CAClC,CACA,OAAOC,CAAM,MAKRK,GAAiBtE,EAAAA,EAAAA,KAC3BC,GAAUA,EAAMC,SAASiB,MACzBlB,GAAUA,EAAMC,SAASqC,WAAWC,WACpCvC,GAAUA,EAAMwC,eAAeC,cAC/BzC,GAAUA,EAAMwC,eAAeE,SAC/B1C,GAAUA,EAAMwC,eAAeG,OAChC,CAAA2B,EAEEzB,EACAJ,EACAC,EACAC,KACG,IAWC4B,GAhBJ,SAAEpD,EAAQ,SAAEC,EAAQ,KAAEC,EAAI,KAAEC,GAAMgD,EAO5BE,EAAU,CAAC,EACX1B,EAAOG,OAAAC,OAAA,GAAQR,GASrB,IAAK,IAAOL,EAAKhE,KARJ,SAATsE,QAAsCkB,IAAnBf,EAAQJ,eACtBI,EAAQJ,YAEUmB,IAAvBf,EAAQ2B,mBACH3B,EAAQ2B,WAIUxB,OAAOyB,QAAQjC,IACxC+B,EAAQnC,GAAe,UAARA,EAAkB,IAAIhE,GAAM4E,OAAAC,OAAA,GAAQ7E,GAC/CA,EAAMiF,UAA4B,IAAhBjF,EAAMsG,QAC1BJ,EAAUlC,EACVmC,EAAQnC,GAAKiB,UAAW,GAG5BkB,EAAQ/B,EAAYM,KAAKV,KAAKiB,UAAW,EACzCkB,EAAQzB,KAAKV,IAAMkC,EACnB,IAAMK,EAAQ3B,OAAAC,OAAA,GACTJ,EAAO,CACVa,kBAAcE,EACdH,UAAWhB,EAAOgB,WAAab,IAEjB,UAAZ0B,IACFK,EAASjB,aAAe,cAE1B,IAAMkB,GAAWC,EAAAA,EAAAA,GACfrC,EAAYM,KAAKV,IACjBkC,GAEEM,IACED,EAASjB,aAAciB,EAASjB,cAAgB,IAAIkB,EACnDD,EAASjB,aAAekB,GAG/B,IAAIE,GAAMxD,EAAAA,EAAAA,QAAO,CACfJ,WACAC,WACAC,OACAG,SAAUF,GAAO2C,EAAAA,EAAAA,GAAkBO,GACnCN,MAAOU,IAQT,MAN6B,UAAzBnC,EAAYM,KAAKV,KAA+B,aAAZkC,IACtCQ,EAAMA,EAAI/D,QAAQ,UAAW,oBAEF,aAAzByB,EAAYM,KAAKV,KAAkC,aAAZkC,IACzCQ,EAAMA,EAAI/D,QAAQ,aAAc,uBAE3B+D,CAAG,IAGDC,EAA2BA,CAACD,EAAKE,IAExCA,GAAwB,IAAZA,IAAkBF,EAAIG,MADhB,4BAEbH,EAAI/D,QAAQ,sBAAuB,qBAAqBiE,EAAO,KAEjEF,EAGII,EAAe,WAAH,OACvB/C,EAAO,MAAPA,IAAcgD,WACXpE,QAAQ,oBAAqB,KAC7BA,QAAQ,QAAS,KACjBA,QAAQ,aAAc,KACtBA,QAAQ,uBAAwB,KAChCA,QAAQ,gBAAiB,KACzBA,QAAQ,eAAgB,KACxBA,QAAQ,YAAa,KACrBA,QAAQ,YAAa,KACrBA,QAAQ,YAAa,KACrBA,QAAQ,oBAAqB,KAC7BA,QAAQ,YAAa,KAErBA,QAAQ,+CAAgD,WAAW,C,mCC/OxE,QAAgBzE,GAAuB8I,IACrCA,EAAEC,iBACFD,EAAEE,kBACKhJ,EAAE8I,G,4KCcLG,GAAMC,E,SAAAA,GCjBZ,CAAgB,UAAY,iCAAiC,KAAO,4BAA4B,OAAS,8BAA8B,cAAc,mCAAmC,QAAU,iCDmBrLC,EAAa,IACbC,EAAa,IAgBpB,MAAOC,UAAiBlJ,EAAAA,cAA9BC,WAAAA,G,oBACE,KAAAkJ,sBAAuBC,EAAAA,EAAAA,IAAW,K,SAEhCC,EAAAA,EAAAA,KAEsB,QAAtBC,GAAAC,EAAAlJ,KAAKH,OAAMsJ,mBAAW,IAAAF,GAAAA,EAAAG,KAAAF,EACpBlJ,KAAKH,MAAMmI,IACXhI,KAAKH,MAAMwJ,SACXrJ,KAAKH,MAAMyJ,OACXtJ,KAAKH,MAAM0J,WACZ,IAGH,KAAAC,oBAAqBT,EAAAA,EAAAA,IACnB,K,QACE,OAAyB,QAAzBE,GAAAC,EAAAlJ,KAAKH,OAAM4J,sBAAc,IAAAR,OAAA,EAAAA,EAAAG,KAAAF,EACvBlJ,KAAKH,MAAMmI,IACXhI,KAAKH,MAAMwJ,SACXrJ,KAAKH,MAAMyJ,OACZ,GAmFP,CAhFE9H,MAAAA,GACE,IAAM,SACJ6H,EAAQ,WACRE,EAAU,SACVG,EAAQ,MACRC,EAAK,OACLC,EAAM,QACNC,EAAO,gBACPC,GACE9J,KAAKH,MACT,IAAK6J,EAAU,OAAO,KACtB,IAAM,SAAEK,EAAQ,WAAEC,EAAU,QAAEC,EAAO,QAAEC,GAAYR,EAC7CS,EAAcjJ,OAAOC,SAAS4I,KAAcC,EAClD,OACEtI,EAAAA,cAAAA,EAAAA,SAAA,KACGiI,EAAQf,IAAeiB,GACtBnI,EAAAA,cAAC0I,EAAAA,EAAO,CAACC,KAAMV,EAAQhB,EAAa,QAAU,WAAS,iCACtB,IAC/BjH,EAAAA,cAAChC,EAAAA,GAAe,CAACgB,MAAI,GAAEiJ,GAAwB,YAAU,KACxDW,EAAAA,EAAAA,IAASf,GAAW,IAAG,IACvBI,EAAQhB,EACL,8DACA,iEAAgE,2HAKvEgB,EAAQhB,EACPjH,EAAAA,cAAA,OAAKS,UAAWsG,EAAI,SAAO,qDAGzB,KACHqB,EAAkBI,GACjBxI,EAAAA,cAAC0I,EAAAA,EAAO,CAACC,KAAK,SACZ3I,EAAAA,cAAA,gDACAA,EAAAA,cAAA,mDACyCA,EAAAA,cAAA,SAAIwI,GAAc,kCACtCxI,EAAAA,cAAA,SAAIoI,GAAoB,6EAG7CpI,EAAAA,cAAA,SACEA,EAAAA,cAAC6I,EAAAA,EAAI,CACHpI,UAAWsG,EAAI,SAAU,UACzB+B,QAASxK,KAAKwJ,oBAAkB,iCAOxC9H,EAAAA,cAAA,OAAKS,UAAWsG,EAAI,cAClB/G,EAAAA,cAAC+I,EAAAA,EAAM,CACLD,QAASxK,KAAK8I,qBACd4B,WAAYX,GAAYJ,EAAQhB,GAAckB,GAAWD,EACzDe,gBAAiBhB,EAAQf,EAAa,aAAU9B,EAChD8D,YAAajB,EAAQf,EAAa,cAAW9B,EAC7C+D,UAAWlB,EAAQf,EAAa,cAAW9B,GAAS,YAItDpF,EAAAA,cAAC6I,EAAAA,EAAI,CACHpI,UAAWsG,EAAI,CACbqC,QAASnB,GAASf,IAEpBmC,WAAW,UACXL,UAAWV,GAAcL,EAAQhB,EACjCqC,KAAMf,EACNP,SAAQ,WAAyB,cAAbL,EAA2B,MAAQA,IAAU,YAIlEc,GACCzI,EAAAA,cAAC+I,EAAAA,EAAM,CAACJ,KAAK,WAAWG,QAASxK,KAAKwJ,oBAAkB,WAOlE,EAGF,SAAepG,EAAAA,EAAAA,SAAQ0D,EAAW,CAAEqC,YAAW,KAAEM,eAAcA,EAAAA,IAA/D,CAAmEZ,E,uVE7I7DoC,EAAkBC,GAAQA,E,sBCO1BzC,GAAMC,EAAAA,EAAAA,GCNZ,CAAgB,kBAAkB,yCAAyC,yBAAyB,gDAAgD,wBAAwB,gDDM/IyC,EAAAA,GAoB7B,QAVmB7K,IAAoC,IAAnC,MAAE8B,EAAK,MAAEgJ,EAAK,OAAEC,GAAe/K,EACjD,OACEoB,EAAAA,cAAA,SAAOS,UAAWsG,EAAI,oBACpB/G,EAAAA,cAAA,QAAMS,UAAWsG,EAAI,0BAA2BrG,GAC/CgJ,EACD1J,EAAAA,cAAA,OAAKS,UAAWsG,EAAI,2BAA4B4C,GAC1C,EELZ,IAAM5C,GAAMC,EAAAA,EAAAA,KACN4C,EAAmB,IAAIC,IAAI,CAAC,MAAO,aAAc,iBAEjDC,EHnBN,SAAeC,GAMD,IANE,SACdC,EAAWT,EAAe,WAC1BU,GAAa,QACb,IAAAF,EAGK,CAAC,EAACA,EACP,MAAO,CAACG,EAAcC,KACpB,IAAM3C,EAAKwC,EAASE,GACd3C,EAAKyC,EAASG,GACpB,OAAI3C,EAAKD,EAAW0C,GAAc,EAAI,EAClCzC,EAAKD,EAAW0C,EAAa,GAAK,EAC/B,CAAC,CAEX,CGKcG,CAAU,CAAEJ,SAAWK,GAAUA,EAAM,KAEhDC,EAAmB,SAAnBA,EACJC,EACAC,EACAC,GADqB,YAAR,IAAbD,IAAAA,GAAgB,GAGhBhG,OAAOyB,QAAQsE,GACZG,QAAO9L,IAAA,IAAEgF,GAAIhF,EAAA,OAAKgL,EAAiBe,IAAI/G,KAAS4G,CAAa,IAC7DI,KAAKd,GACLe,KAAIzK,IAAiB,IAAfwD,EAAKhE,GAAMQ,EAChB,MAAqB,iBAAVR,EAEPI,EAAAA,cAAA,UAAQ4D,IAAKA,EAAKhE,MAAOgE,EAAIkH,eAC1BL,GAAaA,EAAU7G,GACpB6G,EAAU7G,GAAKmH,KACfnH,EAAIoH,OAAO,GAAGC,cAAgBrH,EAAIsH,MAAM,IAKhDlL,EAAAA,cAAA,YAAU4D,IAAKA,EAAKlD,MAAOkD,EAAIrB,QAAQ,IAAK,MACzC+H,EAAiB1K,EAAO4K,EAAeC,GAC/B,GAEb,EAcOU,EAA4BhN,IACvC,IAAM,KACJwK,EAAI,KACJyC,EAAI,QACJtC,EAAO,cACP0B,GAAgB,EAAK,KACrBO,EAAI,MACJnL,EAAK,iBACLyL,EAAgB,UAChBC,GACEnN,EACJ,IAAKiN,EAAM,OAAO,KAClB,IACIG,GADE,QAAE/K,EAAO,QAAE+J,GAAYa,EAEzBI,EAAQT,EACRnJ,EAAShC,EASb,MARa,UAAT+I,GAA+B,aAAX/G,IAClB4I,GACFgB,EAAQT,EAAKxI,QAAQ,MAAO,gBAC5BX,EAASyJ,GAETE,EAAcvL,EAAAA,cAACmL,EAAwB3G,OAAAC,OAAA,GAAKtG,EAAK,CAAEqM,eAAa,MAIlExK,EAAAA,cAAAA,EAAAA,SAAA,KACEA,EAAAA,cAACyL,EAAU,CACT/K,MACEV,EAAAA,cAAAA,EAAAA,SAAA,KACG2I,EAAI,IAAG6B,EAAgB,cAAgB,KAAI,KAGhDd,MACE1J,EAAAA,cAAAA,EAAAA,SAAA,MACIQ,GAAW+J,EACXvK,EAAAA,cAAA,UACES,UAAWsG,EAAI,qBACfgE,KAAMS,EACN5L,MAAOgC,EACP8J,SAAUC,EAAAA,EACVC,OAAQD,EAAAA,GAER3L,EAAAA,cAAA,UAAQJ,MAAM,IAAI,oBACjB0K,EACCC,GAAQ3B,EAAAA,EAAAA,IAASD,IACjB6B,EACAc,IAIJtL,EAAAA,cAAA,SAAO2I,KAAK,SAASoC,KAAMS,EAAO5L,MAAOgC,KAI/C+H,OACE3J,EAAAA,cAAC+I,EAAAA,EAAM,YAAWyC,EAAO1C,QAASA,GAAO,WAK5CyC,EACA,EAIDM,GAAmBvK,EAAAA,EAAAA,KACtBC,GAAuBA,EAAMC,SAASiB,MACvC,CAACqJ,EAAgB3N,IAAiBA,EAAMwK,OACxC,CAAAlF,EAAqCkF,KAAI,IAAxC,SAAEjG,EAAQ,SAAEC,EAAQ,KAAEC,EAAI,KAAEC,GAAMY,EAAA,OACjCpB,EAAAA,EAAAA,KACES,EAAAA,EAAAA,QAAO,CACLJ,WACAC,WACAC,OACAG,SAAaF,EAAI,IAAI8F,IAExB,IAGL,SAAeoD,EAAAA,EAAAA,GAASF,EAAxB,CACEV,G,eCzHF,QAbgBvM,IAAmB,IAAlB,IAAE0H,GAAY1H,EAC7B,OACEoB,EAAAA,cAAA,eACEA,EAAAA,cAAA,oCACAA,EAAAA,cAAA,SACEA,EAAAA,cAAC6I,EAAAA,EAAI,CAACS,KAAMhD,EAAK0F,OAAO,UACtBhM,EAAAA,cAAA,YAAOsG,KAGH,E,aCZD2F,EAAe,CAC1B1H,UAAW,4BACX2H,MAAO,QACPC,KAAM,OACNC,IAAK,OAkCP,QA1BuBxN,IAAA,IAAC,SACtB+I,EAAQ,aACR0E,EAAY,cACZC,EAAa,qBACbC,GACM3N,EAAA,OACNoB,EAAAA,cAAA,UACE+K,KAAK,WACLnL,MAAO+H,GAAY,YAAW,aACnB,gBACX+D,SAAUC,EAAAA,EACVC,OAAQD,EAAAA,GAER3L,EAAAA,cAAA,UAAQJ,MAAM,YAAYoJ,UAAWsD,GAAiBC,GACnDN,EAAa1H,WAEhBvE,EAAAA,cAAA,UAAQJ,MAAM,QAAQoJ,SAA2B,YAAjBqD,GAC7BJ,EAAaC,OAEhBlM,EAAAA,cAAA,UAAQJ,MAAM,QAAQqM,EAAaE,MACnCnM,EAAAA,cAAA,UAAQJ,MAAM,MAAMoJ,UAAWsD,GAAiBC,GAC7CN,EAAaG,KAET,ECkIX,QApDwBjI,IAOZ,I,IAONqI,GAdmB,SACvB7E,EAAQ,YACR3D,EAAW,OACX4D,EAAM,QACNO,EAAO,MACPF,EAAK,OACLC,GACM/D,EACAsI,EA9BYzI,IAClBQ,OAAOyB,QAAQjC,GACZ0G,QAAO9L,IAAA,IAAE,CAAE8N,GAAK9N,EAAA,OAAM8N,EAAiC7H,QAAQ,IAC/DgG,KAAI,CAAAzK,EAAeuM,EAAClJ,KAAA,IAAdkF,EAAM+D,GAAKtM,GAAK,OAAEwM,GAAQnJ,EAAA,OAG/BzD,EAAAA,cAACA,EAAAA,SAAc,CAAC4D,IAAK+E,GAClBgE,EAAI,GAAKC,EAAS,GAAK,KACvBD,IAAMC,EAAS,GAAKD,EAAI,GAAK,QA9CZE,EAAClE,EAAcmE,KACvC,IAAKA,EAAU,OAAO,KACtB,IAAM,GAAEhI,EAAE,YAAEyG,EAAW,UAAEhH,GAAcuI,EACvC,OAAIvI,EAEAvE,EAAAA,cAAAA,EAAAA,SAAA,YACMA,EAAAA,cAAA,SAAI8E,GAAO,IAAC9E,EAAAA,cAAA,SAAa,aAAT2I,EAAsB,QAAUA,GAAS,mBACnD3I,EAAAA,cAAA,SAAIuE,IAIhBO,GAAMyG,EAENvL,EAAAA,cAAAA,EAAAA,SAAA,kBACa,IACM,QAAhBuL,GACCvL,EAAAA,cAAAA,EAAAA,SAAA,KACEA,EAAAA,cAAA,SAAIuL,GAAiB,KAGzBvL,EAAAA,cAAA,SAAI8E,GAAO,IAAC9E,EAAAA,cAAA,UAAI4I,EAAAA,EAAAA,IAASD,KAI3B7D,GAAOyG,GAA+B,QAAhBA,EAEtBvL,EAAAA,cAAAA,EAAAA,SAAA,YACMA,EAAAA,cAAA,SAAI8E,GAAMyG,GAAgB,IAACvL,EAAAA,cAAA,UAAI4I,EAAAA,EAAAA,IAASD,KAKhD3I,EAAAA,cAAAA,EAAAA,SAAA,YACMA,EAAAA,cAAA,SAAa,aAAT2I,EAAsB,QAAUA,GACvC,EAaEkE,CAAkBlE,EAAM+D,GACV,IAoBLK,CAAW/I,GACvBgJ,EAAwB,GAmC5B,OAlCIP,EAAQG,SACVI,EAAahN,EAAAA,cAAAA,EAAAA,SAAA,0BAAqByM,IAIhCtE,EACFqE,EAAcxM,EAAAA,cAAA,8BAEVkI,EACFsE,EAAcxM,EAAAA,cAAA,yDAEdwM,EACExM,EAAAA,cAAA,iBACOA,EAAAA,cAAA,SAAIiM,EAAatE,GAAY,cAAiB,qBAAmB,IAnIxDsF,EACtBjJ,EACAiE,K,MAEM3D,EAAuB,QAAhBkD,EAAAxD,EAAYM,YAAI,IAAAkD,OAAA,EAAAA,EAAE5D,IAC/B,IAAKU,EAAM,OAAO,KAClB,IAAM,GAAEQ,EAAE,YAAEyG,EAAW,UAAEhH,GAAcP,EACrCM,GAEF,OAAIC,EAEAvE,EAAAA,cAAAA,EAAAA,SAAA,KACEA,EAAAA,cAAA,qBAAe,UAAOA,EAAAA,cAAA,SAAI8E,GAAO,IAAC9E,EAAAA,cAAA,SAAIsE,GAAS,kBAAgB,IAC/DtE,EAAAA,cAAA,SAAIuE,IAINO,GAAMyG,EAENvL,EAAAA,cAAAA,EAAAA,SAAA,KACEA,EAAAA,cAAA,mBAAa,oBAAkB,IAC/BA,EAAAA,cAACkN,EAAAA,GAAkB,CAAClO,MAAI,GAAEiJ,GAA4B,IACrC,QAAhBsD,GACCvL,EAAAA,cAAAA,EAAAA,SAAA,KACEA,EAAAA,cAAA,SAAIuL,GAAiB,KAGzBvL,EAAAA,cAAA,SAAI8E,GAAO,IAAC9E,EAAAA,cAAA,UAAI4I,EAAAA,EAAAA,IAAStE,KAI3BQ,GAAMyG,EAENvL,EAAAA,cAAAA,EAAAA,SAAA,KACEA,EAAAA,cAAA,mBAAa,oBAAkB,IAC/BA,EAAAA,cAACkN,EAAAA,GAAkB,CAAClO,MAAI,GAAEiJ,GAA4B,IACtDjI,EAAAA,cAAA,SAAI8E,GAAMyG,GAAgB,IAACvL,EAAAA,cAAA,UAAI4I,EAAAA,EAAAA,IAAStE,KAK5CtE,EAAAA,cAAAA,EAAAA,SAAA,KACEA,EAAAA,cAAA,6BAAuB,OAAIA,EAAAA,cAAA,UAAI4I,EAAAA,EAAAA,IAAStE,IAAU,qCAEjD,EAwFI2I,CAAgBjJ,EAAaiE,GAAM,IAAG+E,EAAU,KAGxC,UAAbrF,IACoB,QAAlBH,EAAAxD,aAAW,EAAXA,EAAae,aAAK,IAAAyC,OAAA,EAAAA,EAAE3C,YACF,QAAlB0C,EAAAvD,aAAW,EAAXA,EAAae,aAAK,IAAAwC,OAAA,EAAAA,EAAEhD,aAMJoH,EAAAA,EACFA,EAAAA,IASlB3L,EAAAA,cAAA,eACEA,EAAAA,cAAA,yBACCwM,EACO,EC/IP,IASDnL,GAAkBC,EAAAA,EAAAA,KACrBC,GAAuBA,EAAMyG,WAC9B,CAAC8D,EAAc1L,KAAsC,IAApC,IAAEkG,EAAG,SAAEqB,EAAQ,OAAEC,GAAexH,EAC/C,MAAO,CACLkG,MACAqB,WACAC,SACD,IAEH,CAACuF,EAAS1J,KAA+B,IAA7B,IAAE6C,EAAG,SAAEqB,EAAQ,OAAEC,GAAQnE,EACnC,MAAO,CACLuE,SACEmF,EACE,CAAC7G,EAAKqB,EAAUC,GAAU,UAAU8C,OAAO0C,SAASC,KAAK,OACtD,CAAC,EACT,IAIL,SAAetB,EAAAA,EAAAA,GAAS,CACtBpI,OAAQA,CAACmI,EAAC3H,KAAA,IAAE,IAAEmC,GAAKnC,EAAA,OAAKmC,CAAG,EAC3BjF,mBAFF,EA5B8CzC,IAK5B,IAL6B,SAC7CsB,EAAQ,KACRkL,EAAI,SACJpD,EAAQ,QACRG,GACYvJ,EACZ,OAAOsB,EAAS,CAAEkL,OAAMpD,WAAUG,WAAU,I,eC4C9C,QAViB/H,IAAmC,IAAlC,KAAEgL,EAAI,QAAEjD,GAAsB/H,EAC9C,OAAKgL,EAEHpL,EAAAA,cAAA,eACEA,EAAAA,cAAA,sBA1DUsN,EAAA1O,EAQduJ,KACE,IARF,QACE3H,EAAO,QACP+J,EAAO,GACPgD,EAAE,OACFC,EAAM,QACNC,GACoC7O,EAGtC,GAAI4B,GAAW2H,EAAS,MAAO,wBAE/B,IAAKoF,EAAI,MAAO,2CAEhB,GAhBiB,MAgBbC,EACF,MAAO,sCAGT,IAAKjD,EAAS,MAAO,uCAErB,IAAMtC,EAAQsC,EAAQtC,MACtB,GAAIA,EACF,OACEjI,EAAAA,cAAAA,EAAAA,SAAA,+BACyBA,EAAAA,cAAChC,EAAAA,GAAe,CAACgB,MAAI,GAAEiJ,GAAyB,IAAG,OAEzEA,EAAQ,EAAI,IAAM,GAAE,KAK3B,IAAIyF,KAASD,aAAO,EAAPA,EAASE,IAAI,oBAAqB,GAI/C,GAHKD,IACHA,EAAOE,KAAKC,UAAUtD,EAAS,KAAM,GAAGqC,QAEtCc,GAAQlO,OAAOC,SAASiO,GAAO,CACjC,IAAO9N,EAAOkO,IAAUC,EAAAA,EAAAA,GAASL,EAAM,CACrC5L,MAAO,EACPkM,SAAU,MACVC,OAAQ,UAEV,OACEjO,EAAAA,cAAAA,EAAAA,SAAA,+BACyBA,EAAAA,cAAChC,EAAAA,GAAe,KAAE4B,GAAyB,IACjEkO,EAGP,CAEA,MAAO,wBAAwB,EAU1BR,CAAQlC,IAAQjD,IAJH,IAKN,E,4ICnEd,MCCA,GAAgB,SAAW,oCAAoC,oBAAoB,6CAA6C,gBAAgB,yCAAyC,eAAe,wCAAwC,oBAAoB,8C,0BC0B9PpB,GAAMC,EAAAA,EAAAA,GAAUkH,EAAOzE,EAAAA,EAAO0E,EAAAA,EAAiBC,EAAAA,GAErDC,EAAAA,EAAkBC,iBAAiB,aAAcC,EAAAA,GACjDF,EAAAA,EAAkBC,iBAAiB,SAAUE,EAAAA,GAC7CH,EAAAA,EAAkBC,iBAAiB,OAAQG,EAAAA,GAG3C,IAAMC,EAAU,CAAEC,YAAa,oBACzBC,EAAM,IAAIC,IAAI,CAClB,CACE,KACA,CACEC,UAAUA,EAAAA,EAAAA,GCvChB,swKDuCoCJ,GAC9B/F,KAAM,uBACNoG,OAAQ,WAGZ,CACE,KACA,CACED,UAAUA,EAAAA,EAAAA,GE/ChB,mwKF+CkCJ,GAC5B/F,KAAM,qBACNoG,OAAQ,SAGZ,CACE,KACA,CACED,UAAUA,EAAAA,EAAAA,GFvDhB,2+KEuDgCJ,GAC1B/F,KAAM,yBACNoG,OAAQ,iBAuBR,MAAOC,WAAgB/Q,EAAAA,cAI3BC,WAAAA,CAAYC,GACVE,MAAMF,GAkDR,KAAA8Q,eAAgB5H,EAAAA,EAAAA,IAAWzI,IAA6C,IAA5C,OAAEoN,GAAsCpN,GAC1DgB,MAAOsP,GAAalD,EAC5B1N,KAAK6Q,SAAS,CAAED,YAAW,IAnD3B5Q,KAAKiD,MAAQ,CAAE2N,SAAU,KAAME,KAAM,KAAM9F,KAAM,MACjDhL,KAAKM,KAAOoB,EAAAA,WACd,CAEA,+BAAOqP,CAAyBC,EAAkBC,GAChD,IAAMC,EAAWZ,EAAIjB,IAAI4B,EAAUL,UACnC,IAAKM,EAAU,OAAO,KACtB,IAAMJ,EAAOI,EAASV,SAASQ,GAAW/M,QAAQ,UAAW,QAE7D,OAAI6M,IAASG,EAAUH,KAAa,MAEhCG,EAAUjG,MAAMmG,IAAIC,gBAAgBH,EAAUjG,MAG3C,CAAE8F,OAAM9F,KAFFmG,IAAIE,gBAAgB,IAAIC,KAAK,CAACR,GAAO,CAAEzG,KAAM6G,EAAS7G,SAGrE,CAEA1I,iBAAAA,GACO3B,KAAKM,KAAKC,UACfP,KAAKuR,WAAa,IAAIC,IAAJ,CAAgBxR,KAAKM,KAAKC,QAAS,CACnDkR,KAAMA,IAAMzR,KAAKiD,MAAM6N,MAAQ,KAEjC9Q,KAAKuR,WAAWG,GAAG,WAAW,IAC5B1R,KAAKH,MAAM8R,SACT,CACE9Q,MAAO,kBACP+Q,KAAM,gDACNC,IAnDE,KAqDJ,eAGJ7R,KAAKuR,WAAWG,GAAG,SAAS,IAC1B1R,KAAKH,MAAM8R,SACT,CACE9Q,MAAO,sBACP+Q,KAAM,uFACNC,IA7DE,IA8DF1P,UAAWsG,EAAI,UAEjB,eAGN,CAEA1G,oBAAAA,GACM/B,KAAKuR,YAAYvR,KAAKuR,WAAWO,SACvC,CAOAtQ,MAAAA,G,OACQ,SAAEoP,EAAQ,KAAEE,EAAI,KAAE9F,GAAShL,KAAKiD,MACtC,OACEvB,EAAAA,cAAA,eACEA,EAAAA,cAAA,0BACAA,EAAAA,cAAA,gTAKyBA,EAAAA,cAAA,6BAA4B,0DAGrDA,EAAAA,cAAA,4WAOEA,EAAAA,cAAA,KAAGsJ,KAAK,+CAA6C,aAEvDtJ,EAAAA,cAAA,WACEA,EAAAA,cAAA,qCAEEA,EAAAA,cAAA,UACE0L,SAAUpN,KAAK2Q,cACfrD,OAAQtN,KAAK2Q,cACbrP,MAAOsP,GAEPlP,EAAAA,cAAA,UAAQJ,MAAM,MAAI,WAClBI,EAAAA,cAAA,UAAQJ,MAAM,MAAI,oBAClBI,EAAAA,cAAA,UAAQJ,MAAM,MAAI,qCAGtBI,EAAAA,cAAC+I,EAAAA,EAAM,CAACJ,KAAK,YAAY7H,IAAKxC,KAAKM,KAAMyR,KAAK,aAAW,qBAE/C,IACVrQ,EAAAA,cAAA,KACES,UAAWsG,EACT,YACA,uBACA,iBAEFiB,SAAQ,mBAAqBkH,EAC7B5F,KAAMA,GAAQ,IAEdtJ,EAAAA,cAAA,QACES,UAAWsG,EACT,OACA,cACA,cACA,mBAEK,IAAG,YAGA,OAAbmI,GACClP,EAAAA,cAAC0I,EAAAA,EAAO,CAACC,KAAK,QAAM,sCACiB3I,EAAAA,cAAA,0BAAuB,OAAK,IAC/DA,EAAAA,cAAA,gCAA6B,mCAAiC,IAC9DA,EAAAA,cAAA,6BAGJA,EAAAA,cAACqO,EAAAA,EAAiB,CAACa,SAA2B,QAAjB1H,EAAAoH,EAAIjB,IAAIuB,UAAS,IAAA1H,OAAA,EAAAA,EAAEuH,OAAQb,MAAOoC,EAAAA,GAC5DlB,GAAQ,KAKnB,EAGF,UAAe1N,EAAAA,EAAAA,SAAQ0D,EAAW,CAAE6K,SAAQA,EAAAA,IAA5C,CAAgDjB,I,gBGhN1CjI,IAAMC,EAAAA,EAAAA,GCJZ,CAAgB,SAAW,yCAAyC,iBAAiB,+CAA+C,KAAO,qCAAqC,KAAO,qCAAqC,MAAQ,sCAAsC,mBAAmB,iDAAiD,mBAAmB,iDAAiD,MAAQ,sCAAsC,KAAO,qCAAqC,SAAW,2CDUze,MAAOuJ,WAA0BtS,EAAAA,cAC7C6B,MAAAA,GACE,IAAM,SAAEkI,GAAa1J,KAAKH,MAC1B,IAAK6J,EAAU,OAAO,KACtB,IAAM,SAAEK,EAAQ,WAAEC,GAAeN,EAC3BS,EAAcjJ,OAAOC,SAAS4I,KAAcC,EAC9CkI,EAAiB,EAWrB,OAVI/H,EAEA+H,EADEnI,EAC0B,GAAXA,EAAiB,IAEjB,IAEG,IAAbA,IACTmI,EAAiB,KAIjBxQ,EAAAA,cAAAA,EAAAA,SAAA,KACEA,EAAAA,cAAA,OAAKyQ,MAAM,IAAIC,OAAO,KACpB1Q,EAAAA,cAAA,YACEA,EAAAA,cAAA,UAAQ2Q,GAAG,gBACT3Q,EAAAA,cAAA,kBACE4Q,GAAG,gBACHC,OAAO,UACPC,aAAa,OAEf9Q,EAAAA,cAAA,iBACE4Q,GAAG,UACHC,OAAO,SACPE,KAAK,SACLrM,OAAO,iDAET1E,EAAAA,cAAA,WAAS4Q,GAAG,gBAAgBI,IAAI,cAItChR,EAAAA,cAAA,OACES,UAAWsG,GAAI,kBACfmH,MAAO,CAAE+C,QAASxI,EAAc,EAAI,IAEpCzI,EAAAA,cAAA,OAAKS,UAAWsG,GAAI,mBAAoB,aACtC/G,EAAAA,cAAA,OAAKS,UAAWsG,GAAI,OAAQ,OAAQ,cACpC/G,EAAAA,cAAA,OACES,UAAWsG,GAAI,mBAAoB,YACnCmH,MAAO,CAAEgD,UAAW,cAA+B,IAAjBV,EAAoB,OAEtDxQ,EAAAA,cAAA,OAAKS,UAAWsG,GAAI,QAAS,cAC7B/G,EAAAA,cAAA,OAAKS,UAAWsG,GAAI,QAAS,OAAQ,cACrC/G,EAAAA,cAAA,OAAKS,UAAWsG,GAAI,WAAY,OAAQ,aACtC/G,EAAAA,cAAA,YAAO6B,KAAKsP,MAAwB,KAAjB9I,GAAY,IAAS,OAG5CrI,EAAAA,cAAA,OAAKS,UAAWsG,GAAI,QAAS,OAAQ,eAEvC/G,EAAAA,cAAA,OAAKS,UAAWsG,GAAI,OAAQ,OAAQ,cACpC/G,EAAAA,cAAA,OAAKS,UAAWsG,GAAI,QAAS,OAAQ,eAI7C,E,iCE3DIA,IAAMC,EAAAA,EAAAA,GAAUoK,EAAO3H,EAAAA,GAEhB4H,GAAyBtB,GACpCA,EAAK7E,MAAM,EAAI6E,EAAKuB,YAAY,MAgHlC,SAtG0B1S,IAMd,I,GANe,KACzBwM,EAAI,eACJmG,EAAc,MACd3R,EAAK,SACL4R,EAAQ,SACR9F,GACM9M,EACA6S,GAAWC,EAAAA,EAAAA,QAAO,MAIxB,IAHAC,EAAAA,EAAAA,YAAU,KACRjG,EAAS,CAAEM,OAAQyF,EAAS5S,SAAkC,GAC7D,KACEuM,IAASmG,EAAgB,OAAO,KACrC,IAAIK,EAASxG,EAAKwG,OACZC,EAAWjS,IACf,IAAKA,EAAO,OAAO,EACnB,IAAMkS,EAAWF,aAAM,EAANA,EAAmCE,QACpD,OAAIA,GACYC,OAAOD,GAAW,IACnBE,KAAKpS,EAET,GAENqS,EAAOC,IAAYC,EAAAA,EAAAA,UAASN,EAAQjS,IACvCwS,EAAY,OACVtR,EAAOsK,EAAKwG,OAA4BS,KAC9C,GAAIvR,EAAK,CACP,IAAM8C,EAAMyN,GAAsBvQ,GAAO,IACzC8Q,EAASL,EAAee,QAAQ1O,EAClC,CACA,IAAM+E,EAAQiJ,EAAkCjJ,KAC1C+F,EAAWkD,EAAkCW,KACtC,WAAT5J,GAAqB+F,IACvB0D,EAA+B,IAAnB1D,EAAQ9B,OAAe,WAAa,UAGlD,IAIM7B,EAAO,UAAUK,EAAKL,KAC5B,OACE/K,EAAAA,cAACyL,EAAU,CACT/K,MACEV,EAAAA,cAAAA,EAAAA,SAAA,KACGoL,EAAKL,KAAM,IACZ/K,EAAAA,cAACwS,GAAAA,EAAO,CAACrT,MAAK,QAAUiM,EAAKpH,YAAW,UACtChE,EAAAA,cAAA,QACES,UAAWsG,GAAI,QAAS,OAAQ,eAAc,YACpC,IAAU,2CACsBqE,EAAKL,SAKvDrB,MACE1J,EAAAA,cAAAA,EAAAA,SAAA,KACiB,WAAdoS,GACCpS,EAAAA,cAAA,UACES,UAAWsG,GAAI,yBACfgE,KAAMA,EACNnL,MAAOA,EACP8L,SAAUC,EAAAA,EACVC,OAAQD,EAAAA,GAEgC,QAAvCnE,EAACoK,EAAkCW,YAAI,IAAA/K,OAAA,EAAAA,EAAEqD,KAAK4H,GAC7CzS,EAAAA,cAAA,UAAQ4D,IAAK6O,GAASA,MAIb,aAAdL,GACCpS,EAAAA,cAAA,SACE+K,KAAMA,EACNpC,KAAK,OACL+J,UAAQ,EACRjS,UAAWsG,GAAI,yBACfnH,MAAOwL,EAAKL,OAGD,SAAdqH,GACCpS,EAAAA,cAAA,SACEJ,MAAOA,EACP8L,SA9CaiH,IACvBT,EAASL,EAASc,EAAM3G,OAA4BpM,OAAO,EA8CjDgM,OAAQD,EAAAA,EACRZ,KAAMA,EACNpC,KAAK,OACLuF,MAAO,CACLjF,gBAAiBgJ,EAAQ,UAAY,WAEvCxR,UAAWsG,GAAI,4BAKvB4C,OACE3J,EAAAA,cAAC+I,EAAAA,EAAM,CAACD,QAAS0I,EAAU1Q,IAAK2Q,GAAQ,WAI1C,EC7GN,IAAM1K,IAAMC,EAAAA,EAAAA,GAAUoK,GAyFhBwB,IAAmBtR,EAAAA,EAAAA,KACtBC,GAAuBA,EAAMC,SAASiB,MACvCrC,IAAA,IAAC,SAAEsC,EAAQ,SAAEC,EAAQ,KAAEC,EAAI,KAAEC,GAAMzC,EAAA,OACjCiC,EAAAA,EAAAA,KACES,EAAAA,EAAAA,QAAO,CACLJ,WACAC,WACAC,OACAG,SAAaF,EAAI,mBAEpB,IAGL,UAAekJ,EAAAA,EAAAA,GAAS,CACtBpI,OAAQiP,GACRC,aAAc,CACZC,aAAc,SAHlB,EA7FsBlU,IAAkD,I,SAAjD,KAAE+J,EAAI,KAAEyC,EAAI,OAAEnH,EAAM,SAAEyH,GAAuB9M,GAC3DmU,EAAOC,IAAYb,EAAAA,EAAAA,UAAwB,OAC3Cc,EAAUC,IAAef,EAAAA,EAAAA,UAAwB,MAClDgB,IAAmB/H,IAASA,EAAK5K,SAAW4K,EAAKmC,MAAQnC,EAAKb,SACpEoH,EAAAA,EAAAA,YAAU,KACJoB,GAAOC,EAAS,KAAK,KAE3BrB,EAAAA,EAAAA,YAAU,IACD,IACLwB,EACIzH,EAAS,CAAEM,OAAQ,YACnB5G,GACL,CAAC6N,IACJ,IAAMG,EAAqB5O,OAAO6O,KAAKpP,GAAU,CAAC,GAIlD,GAHI8O,GACFK,EAAmBE,KAAKP,GAEtBE,EAAU,CACZ,IAAMM,EAAMH,EAAmBzN,QAAQsN,GACnCM,GAAO,EACTH,EAAmBI,OAAOD,EAAK,GAE/BL,EAAY,KAEhB,CACA,IAAKC,EAAgB,OAAO,KAC5B,IAAMM,EAAajP,OAAOkP,cAC0B,QAAjDC,EAA4C,QAA5CC,EAAmB,QAAnBrM,EAAY,QAAZC,EAAA4D,EAAKb,eAAO,IAAA/C,OAAA,EAAAA,EAAEqM,aAAK,IAAAtM,OAAA,EAAAA,EAAA,IAAOoB,EAAI,sBAAc,IAAAiL,OAAA,EAAAA,EAAEjG,WAAG,IAAAgG,OAAA,EAAAA,EAAEF,aAAc,IAC/D/I,QAAQoJ,GAAMA,EAAEzB,OAChBxH,KAAKiJ,I,UACElQ,EAAMyN,GAAsByC,EAAEzB,MAAQ,IAC5C,MAAO,CAA2C,QAA1CuB,EAAmC,QAAnCrM,EAAY,QAAZC,EAAA4D,EAAKb,eAAO,IAAA/C,OAAA,EAAAA,EAAEuM,WAAWN,kBAAU,IAAAlM,OAAA,EAAAA,EAAG3D,UAAI,IAAAgQ,OAAA,EAAAA,EAAE7I,KAAMnH,EAAI,KAG9DoQ,EAAqBxP,OAAO6O,KAAKI,GAAY/I,QAChDoJ,GAAMA,IAAwC,IAAnCV,EAAmBzN,QAAQmO,KAEnCG,EAAgBC,IACpBlB,EAAUkB,EAAIlI,OAA6BpM,MAAM,EAGnD,OACEI,EAAAA,cAAA,WACEA,EAAAA,cAAA,+BAEEA,EAAAA,cAAA,UACE+K,KAAK,eACLnL,MAAM,GACN8L,SAAUuI,EACVrI,OAAQqI,GAERjU,EAAAA,cAAA,UAAQJ,MAAM,GAAGoJ,UAAQ,EAACmL,QAAM,EAACjG,MAAO,CAAEkG,MAAO,SAAQ,oBAGxDJ,EAAmBnJ,KAAI,CAACiJ,EAAGnH,IAC1B3M,EAAAA,cAAA,UAAQ4D,IAAK+I,EAAG/M,MAAOkU,GACpBA,OAKRV,GAAsBA,EAAmBxG,OAAS,GACjD5M,EAAAA,cAAA,YAAUS,UAAWsG,GAAI,aACvB/G,EAAAA,cAAA,kCACCoT,EAAmBvI,KAAKiJ,I,UAAM,OAC7B9T,EAAAA,cAACqU,GAAiB,CAChBzQ,IAAKkQ,EACLlU,MAAOqE,aAAM,EAANA,EAAS6P,GAChBpI,SAAUA,EACV8F,SAAUA,IAAM0B,EAAYY,GAC5B1I,KAAyC,QAAnC7D,EAAY,QAAZC,EAAA4D,EAAKb,eAAO,IAAA/C,OAAA,EAAAA,EAAEuM,WAAWN,kBAAU,IAAAlM,OAAA,EAAAA,EAAGkM,EAAWK,IACvDvC,eAA4B,QAAZqC,EAAAxI,EAAKb,eAAO,IAAAqJ,OAAA,EAAAA,EAAEG,YAC9B,KAIJ,I,oDC/FJO,I,SAAS,0BACTC,GACJ,mCACIC,GACJ,6BAcIC,GACJA,CAACzK,EAA4B0K,IAC5BC,GACCA,EACG9J,KAAKrB,IACJ,IAAM5J,EAAQoK,GAAW2D,EAAAA,GAAAA,GAAInE,EAAMQ,GAAYR,EAC/C,OAAOkL,EAAaA,EAAW9U,GAASA,CAAK,IAE9CyN,KAAK,KAENuH,GACJC,GAEAA,EACIA,EACGhK,KAAIjM,IAAA,IAAC,UAAEkW,GAAWlW,EAAA,OACjBkW,EAAUjK,KAAIzK,IAAA,IAAC,MAAE2U,EAAK,IAAEC,GAAK5U,EAAA,OAAQ2U,EAAK,KAAKC,CAAG,IAAI3H,KAAK,IAAI,IAEhEA,KAAK,KACR,GAEA4H,GAAiBA,CAACC,EAAMC,IACzBD,EAAK3Q,UAAS,IAAI2Q,EAAKnK,KAAI,KAC5BoK,EAAO,IAAIA,EAAK5Q,UAAS,IAAI4Q,EAAKpK,KAAI,IAAM,IAAE,IAC5CmK,EAAKE,YAAY,GAAGN,UAAU,GAAGC,MAAK,IACxCG,EAAKE,YAAY,GAAGN,UAAU,GAAGE,IAAG,IAGlCK,GAAsBC,IAC1B,GAAY,MAAPA,IAAAA,EAAS1I,OAAQ,MAAO,GAC7B,IAAM2I,EAAaD,EAAQ,GACrBE,EAAoB,MAAPF,OAAO,EAAPA,EAAU,GAC7B,OAAKE,EACDA,EAAWjR,UAAUkR,WAAW,OACxBR,GAAeM,GAAW,IAAIF,GACtCC,EAAQpK,MAAM,KACZ3I,QAAQ,KAAM,KACV0S,GAAeM,EAAYC,GAAW,IAAIH,GAClDC,EAAQpK,MAAM,KACZ3I,QAAQ,KAAM,IAPM0S,GAAeM,GAAYhT,QAAQ,KAAM,GAO5C,EAGVmT,GAaN,CACL3Q,MAAO,CACL,CAAEgG,KAAM,YAAaf,SAAU,sBAC/B,CAAEe,KAAM,OAAQf,SAAU,iBAC1B,CAAEe,KAAM,kBAAmBf,SAAU,4BACrC,CAAEe,KAAM,OAAQf,SAAU,iBAC1B,CAAEe,KAAM,kBAAmBf,SAAU,uBACrC,CACEe,KAAM,wBACNf,SAAU,4BACV0K,WAAaiB,GACXA,EACInR,OAAO6O,KAAKsC,GACT9K,KAAK/F,GAAON,OAAO6O,KAAKsC,EAAI7Q,IAAKuI,KAAK,OACtCA,KAAK,KACR,IAER,CACEtC,KAAM,WACNf,SAAU,oBACV0K,WAAakB,GACXA,EAAQA,EAAM/K,KAAKgL,GAAMA,EAAEC,aAAYzI,KAAK,KAAO,KAGzD0I,QAAS,CACP,CAAEhL,KAAM,YAAaf,SAAU,sBAC/B,CAAEe,KAAM,kBAAmBf,SAAU,4BACrC,CAAEe,KAAM,OAAQf,SAAU,iBAC1B,CAAEe,KAAM,SAAUf,SAAU,kCAC5B,CAAEe,KAAM,WAAYf,SAAU,2CAC9B,CAAEe,KAAM,SAAUf,SAAU,oBAE9BgM,UAAW,CACT,CAAEjL,KAAM,YAAaf,SAAU,sBAC/B,CAAEe,KAAM,kBAAmBf,SAAU,4BACrC,CAAEe,KAAM,OAAQf,SAAU,iBAC1B,CAAEe,KAAM,kBAAmBf,SAAU,4BACrC,CAAEe,KAAM,aAAcf,SAAU,wBAElCiM,SAAU,CACR,CAAElL,KAAM,YAAaf,SAAU,sBAC/B,CAAEe,KAAM,kBAAmBf,SAAU,4BACrC,CAAEe,KAAM,OAAQf,SAAU,iBAC1B,CAAEe,KAAM,SAAUf,SAAU,mBAC5B,CACEe,KAAM,WACNf,SAAU,oBACV0K,WAAaxU,GACXA,EAAWA,EAASmN,KAAK,KAAO,IAEpC,CAAEtC,KAAM,oBAAqBf,SAAU,iCACvC,CAAEe,KAAM,qBAAsBf,SAAU,mCAE1CkM,SAAU,CACR,CAAEnL,KAAM,YAAaf,SAAU,sBAC/B,CAAEe,KAAM,kBAAmBf,SAAU,4BACrC,CAAEe,KAAM,OAAQf,SAAU,iBAC1B,CAAEe,KAAM,SAAUf,SAAU,qBAC5B,CAAEe,KAAM,oBAAqBf,SAAU,iCACvC,CAAEe,KAAM,qBAAsBf,SAAU,mCAE1CmM,IAAK,CACH,CAAEpL,KAAM,YAAaf,SAAU,sBAC/B,CAAEe,KAAM,kBAAmBf,SAAU,4BACrC,CAAEe,KAAM,OAAQf,SAAU,iBAC1B,CAAEe,KAAM,oBAAqBf,SAAU,iCACvC,CAAEe,KAAM,qBAAsBf,SAAU,mCAE1CoM,SAAU,CACR,CAAErL,KAAM,UAAWf,SAAU,aAC7B,CAAEe,KAAM,cAAef,SAAU,kBACjC,CAAEe,KAAM,gBAAiBf,SAAU,2BACnC,CACEe,KAAM,uBACNf,SAAU,kCAEZ,CAAEe,KAAM,sBAAuBf,SAAU,iCACzC,CACEe,KAAM,YACNf,SAAU,YACV0K,WAAYE,KAGhByB,UAAW,CACT,CAAEtL,KAAM,YAAaf,SAAU,MAC/B,CAAEe,KAAM,OAAQf,SAAU,kBAC1B,CACEe,KAAM,cACNf,SAAU,qBACV0K,WA3JJ1Q,GAEAA,EACGqJ,KAAK,MACL9K,QAAQ+R,GAAQ,IAChB/R,QAAQgS,GAAQ,MAChBhS,QAAQiS,GAAK,MACbjS,QAAQ,KAAM,IACdA,QAAQ,UAAW,MACnBA,QAAQ,KAAM,KAoJf,CAAEwI,KAAM,kBAAmBf,SAAU,8BAEvCsM,IAAK,CACH,CAAEvL,KAAM,SAAUf,SAAU,UAC5B,CAAEe,KAAM,WAAYf,SAAU,OAC9B,CAAEe,KAAM,kBAAmBf,SAAU,mBACrC,CAAEe,KAAM,2BAA4Bf,SAAU,4BAC9C,CAAEe,KAAM,wBAAyBf,SAAU,yBAC3C,CACEe,KAAM,yBACNf,SAAU,yBACV0K,WAAYW,MAIlBK,GAAQa,aAAe,IAClBb,GAAQK,QACX,CAAEhL,KAAM,kBAAmBf,SAAU,wBACrC,CACEe,KAAM,UACNf,SAAU,qCACV0K,WAAYE,KAGhBc,GAAQc,iBAAmB,IACtBd,GAAQK,QACX,CACEhL,KAAM,sBACNf,SAAU,aACVyM,gBAAiB,YACjB/B,WAAYD,GAAY,cAE1B,CACE1J,KAAM,QACNf,SAAU,aACVyM,gBAAiB,QACjB/B,WAAYD,GAAY,UAE1B,CACE1J,KAAM,qBACNf,SAAU,aACVyM,gBAAiB,8BACjB/B,WAAYD,GAAY,8BAA+BG,MAG3Dc,GAAQgB,iBAAmB,IACtBhB,GAAQM,UACX,CACEjL,KAAM,SACNf,SAAU,WACVyM,gBAAiB,QACjB/B,WAAYD,GAAY,UAE1B,CACE1J,KAAM,WACNf,SAAU,WACVyM,gBAAiB,YAEjB/B,WAAYD,GAAY,cAE1B,CACE1J,KAAM,qBACNf,SAAU,WACVyM,gBAAiB,8BACjB/B,WAAYD,GAAY,8BAA+BG,MAG3Dc,GAAQiB,eAAiB,IACpBjB,GAAQM,UACX,CACEjL,KAAM,SACNf,SAAU,UACVyM,gBAAiB,QACjB/B,WAAYD,GAAY,UAE1B,CACE1J,KAAM,WACNf,SAAU,UACVyM,gBAAiB,UACjB/B,WAAYD,GAAY,YAE1B,CACE1J,KAAM,iBACNf,SAAU,UACVyM,gBAAiB,iBACjB/B,WAAYD,GAAY,mBAE1B,CACE1J,KAAM,qBACNf,SAAU,UACVyM,gBAAiB,8BACjB/B,WAAYD,GAAY,8BAA+BG,KAEzD,CACE7J,KAAM,UACNf,SAAU,UACVyM,gBAAiB,0BACjB/B,WAAYD,GAAY,0BAA2BG,MAGvDc,GAAQkB,eAAiB,IACpBlB,GAAQ3Q,MACX,CACEgG,KAAM,SACNf,SAAU,aACVyM,gBAAiB,QACjB/B,WAAYD,GAAY,UAE1B,CACE1J,KAAM,WACNf,SAAU,aACVyM,gBAAiB,UACjB/B,WAAYD,GAAY,YAE1B,CACE1J,KAAM,iBACNf,SAAU,aACVyM,gBAAiB,iBACjB/B,WAAYD,GAAY,mBAE1B,CACE1J,KAAM,qBACNf,SAAU,aACVyM,gBAAiB,8BACjB/B,WAAYD,GAAY,8BAA+BG,KAEzD,CACE7J,KAAM,UACNf,SAAU,aACVyM,gBAAiB,0BACjB/B,WAAYD,GAAY,0BAA2BG,MAGvDc,GAAQmB,aAAe,IAClBnB,GAAQ3Q,MACX,CAAEgG,KAAM,oBAAqBf,SAAU,yBACvC,CAAEe,KAAM,iBAAkBf,SAAU,8BACpC,CACEe,KAAM,UACNf,SAAU,sCACV0K,WAAYE,KAIT,ICpRD7N,IAAMC,EAAAA,EAAAA,GAAUoK,GAEhB0F,IAAgBC,EAAAA,EAAAA,GAAS,CAC7BC,OAAQA,IAAM,gCACdxW,QAASA,IAAM,OA4CX,MAAOyW,WAAqBhZ,EAAAA,cAIhCC,WAAAA,CAAYC,GACVE,MAAMF,GAYR,KAAA8Q,cAAiB0D,I,oBACf,GAAKrU,KAAKM,KAAKC,QAAf,CACA,IA+CIqY,EA/CEC,EAKF,CACFnT,YAAa,CAAC,GAEVgI,EAAS2G,aAAK,EAALA,EAAO3G,OAEtB,GAAIA,aAAkBoL,qBACpBjB,EAAAA,EAAAA,GAAIgB,EAAQnL,EAAOqL,QAAQzT,KAAO,KAAMoI,EAAOqL,QAAQzX,QAElDoM,EAAOqL,QAAQzX,OAClB,IAAK,IAAM8J,KAASpL,KAAKM,KAAKC,QAAQyY,iBAAiB,qBAChCtL,EAAOqL,QAAQE,MAAK,mBAAmBvL,EAAOqL,QAAQzT,IAAG,oBAAoBoI,EAAOqL,QAAQzT,IAAG,MAEnH8F,EAA2B9J,MAAQ,GAI1C,IAAK,IAAM4X,KAAWlZ,KAAKM,KAAKC,QAAQ4Y,SAAU,CAChD,IAAM,KAAE1M,EAAI,MAAEnL,EAAK,KAAE+I,EAAI,QAAE+O,GAAYF,EACnCzM,IAGFoL,EAAAA,EAAAA,GAAIgB,EAAQpM,EAAe,aAATpC,EAAsB+O,EAAU9X,EAEtD,CAC4C,0BAAvCoM,aAAM,EAANA,EAA8BjB,QAEjCoM,EAAOlT,OAAS,CAAC,GAIjBkT,EAAOnT,YAAYe,OACa,aAAhCoS,EAAOnT,YAAYe,MAAMD,KAGzBqS,EAAOnT,YAAYe,MAAMwG,YAAc,OAGzC4K,EAAAA,EAAAA,GACEgB,EAAOnT,YACP,EAAwB,QAAvBwD,EAAA2P,EAAOnT,YAAYM,YAAI,IAAAkD,OAAA,EAAAA,EAAE5D,MAAO,GAAI,YACrC,MAGF,IAAM+T,EAAa5Q,GAAI,qBAAqB6Q,MAAM,KAClD,IAEEV,GAAO1R,EAAAA,GAAAA,GAAkB2R,EAAOnT,cAChCgI,aAAM,EAANA,EAAQ6L,YAAa7L,EAAO6L,UAAUC,UAAUH,EAClD,CAAE,MAAAI,GAEA,aADA/L,aAAM,EAANA,EAAQ6L,YAAa7L,EAAO6L,UAAUG,OAAOL,GAE/C,CACIR,EAAOlT,QAAUO,OAAO6O,KAAK8D,EAAOlT,QAAQ2I,SAE9CsK,GAAQ,IAAI1S,OAAOyB,QAAQkR,EAAOlT,QAC/B4G,KAAIjM,IAAA,IAAEqZ,EAAGC,GAAEtZ,EAAA,OAAQqZ,EAAC,IAAIC,CAAC,IACzB7K,KAAK,OAKR8J,EAAOvP,QAEe,UAApBuP,EAAOxP,WACiB,QAAxBJ,EAAA4P,EAAOnT,YAAYe,aAAK,IAAAwC,OAAA,EAAAA,EAAE1C,YACF,QAAxB+O,EAAAuD,EAAOnT,YAAYe,aAAK,IAAA6O,OAAA,EAAAA,EAAErP,aAG5B4S,EAAOvP,QAAS,GAGI,UAApBuP,EAAOxP,UAC0B,aAAV,QAAvBgM,EAAAwD,EAAOnT,YAAYM,YAAI,IAAAqP,OAAA,EAAAA,EAAE/P,OAGzBuT,EAAOxP,SAAW,aAGG,UAApBwP,EAAOxP,UAA4C,cAApBwP,EAAOxP,WACvCwP,EAAOnT,YAAYM,OACyC,QAA3D6T,EAAAhB,EAAOnT,YAAYmT,EAAOnT,YAAYM,KAAKV,YAAgB,IAAAuU,OAAA,EAAAA,EAAErT,MAG9DqS,EAAOxP,SAAW,QAEpB,IAAMyQ,EAAW,CAAClB,EAAMC,EAAOxP,SAAUwP,EAAOvP,QAAU,UACvD8C,OAAO0C,SACPC,KAAK,KACJ+K,KAAsC,QAAzBC,EAAA/Z,KAAKH,MAAM4F,sBAAc,IAAAsU,OAAA,EAAAA,EAAEnU,QACb,QAA7BoU,GAAAC,EAAAja,KAAKH,OAAMqa,0BAAkB,IAAAF,GAAAA,EAAA5Q,KAAA6Q,EAAA/T,OAAAC,OAAAD,OAAAC,OAAA,GACxBnG,KAAKH,MAAM4F,gBAAe,CAC7BG,KAAMkU,KAjGoB,CAmG9B,EA/GA9Z,KAAKM,KAAOoB,EAAAA,YACZ1B,KAAK0G,SAAW,CAAC,CACnB,CAgHAlF,MAAAA,G,eACQ,QAAE2Y,EAAO,IAAEhW,EAAG,YAAElD,EAAW,KAAE6L,GAAS9M,KAAKH,MACjD,IAAKiN,IAAS3I,EAAK,OAAO,KAC1B,IAAM,YACJuB,EAAW,OACXC,EACA0D,SAAU+Q,EAAE,OACZ9Q,GAtKuB1D,KAC3B,IAAOgT,EAAMvP,EAAUC,GAAU1D,EAC9ByU,WAAW,MAAO,KAClBA,WAAW,MAAO,KAClBA,WAAW,MAAO,KAClBf,MAAM,KAET,IADuB,CAAC,QAAS,OAAQ,YAAa,OAClCzS,SAASwC,GAC3B,MAAM,IAAIiR,MAAM,uCAClB,IAAM3K,EAKF,CAAEtG,SAAUA,EAAuBC,SAAUA,IAC1C0B,EAAMuP,GAAU3B,EAAKU,MAAM,KAClC,IACE3J,EAAOjK,aAAc8U,EAAAA,GAAAA,GAAkBxP,GACnCuP,IACF5K,EAAOhK,OAASO,OAAOkP,YACrBmF,EAAOjB,MAAM,KAAK/M,KAAKiJ,GAAMA,EAAE8D,MAAM,QAG3C,CAAE,MAAApQ,GACA,CAEF,OAAOyG,CAAM,EA6IP8K,CAAoBN,GACxB,IAAKzU,EAAa,OAAO,KAEzB,IAAM2D,EAAW+Q,GAAM,OAEjBM,GAAWC,EAAAA,GAAAA,KACfnW,EAAAA,EAAAA,QAAO,CACLJ,SAAUD,EAAIC,SACdC,SAAUF,EAAIE,SACdC,KAAMH,EAAIG,KACVG,UAAWN,EAAII,MAAO2C,EAAAA,GAAAA,GAAkBxB,IAAczB,QACpD,OACA,KAEFkD,MAAOxB,KAILiV,EAAc1U,OAAOyB,QAAQjC,GAAa0G,QAC9CtK,IAAA,IAAE,CAAE+Y,GAAG/Y,EAAA,YAA2CgF,IAArC+T,EAAwBtU,QAAsB,IAGvD4H,EAAUyM,EAAYxO,QAC1BjH,IAAA,IAAE,CAAEkF,GAAKlF,EAAA,OAAMkF,EAA0B9D,QAAQ,IAG7CP,EAAON,EAAYM,KAAKV,KAAO,QAC/BwV,EAAY3M,EAAQG,QAAWH,EAAQ,GAAG,GAC1C4M,EACJD,GAAapV,EAAYoV,GAAW7U,UAAS,GACtCD,EAAO8U,EAAU,GAAGnO,cAAgBmO,EAAUlO,MAAM,GACvD5G,EAEAgV,EAAkB5D,GAAQ2D,IAAc3D,GAAQpR,GAEhDiV,EAAYA,CAACrC,EAAcsC,KAC/B,IAAMC,EAAQvC,EAAKU,MAAM,OACnB5N,EAAWyP,EAAM,GACpB7B,MAAM,YACN8B,SAASC,GAASA,EAAK/B,MAAM,OAC7BlN,OAAO0C,SACPvC,KAAK8O,GAAUA,EAAKlE,WAAW,KAAOkE,EAAO,KAAKA,EAAI,OACtDtM,KAAK,IACR,OAAIoM,EAAM7M,OAAS,EACV,KAAK6M,EAAM,GAAE,aAAaD,EAAUxP,EAAQ,IAE9C,GAAGwP,EAAUxP,CAAQ,IAEzBoB,aAAI,EAAJA,EAAM5K,WAAW4K,aAAI,EAAJA,EAAMb,WAC1BjM,KAAK0G,SAAWoG,EAAKb,QAAQe,WAE/B,IAAMsO,EAAiBpa,QACa,QAAlCoU,EAAwB,QAAxBrM,EAAa,QAAbC,EAAA4D,aAAI,EAAJA,EAAMb,eAAO,IAAA/C,OAAA,EAAAA,EAAE8D,iBAAS,IAAA/D,OAAA,EAAAA,EAAEsS,gBAAQ,IAAAjG,OAAA,EAAAA,EAAEpL,UAAW,GAG3CsR,EAAYA,CAAC5C,EAAcsC,KAC/B,IAAMC,EAAQvC,EAAKU,MAAM,OACnB5N,EAAWyP,EAAM,GACpB7B,MAAM,YACN8B,SAASC,GAASA,EAAK/B,MAAM,OAC7BlN,OAAO0C,SACPvC,KAAK8O,GAAUA,EAAKlE,WAAW,KAAOkE,EAAO,OAAOA,EAAI,OACxDtM,KAAK,IACR,OAAIoM,EAAM7M,OAAS,GACP6M,EAAM,GAAE,KAAKD,EAAUxP,GAAWzH,QAAQ,QAAS,IAExD,GAAGiX,EAAUxP,CAAQ,EAGxBqC,EAAerI,EAAYM,GAEjC,OACEtE,EAAAA,cAAA,QACE0L,SAAUpN,KAAK2Q,cACfnO,IAAKxC,KAAKM,KACV6B,UAAWsG,GAAI,kBAEf/G,EAAAA,cAAA,yBACAA,EAAAA,cAAC8W,GAAa,CACZ1L,KAAM,CACJL,KAAM,yCACN/G,YACE,oGAEJ+V,YAAaC,EAAAA,KAEfha,EAAAA,cAAA,YAAUS,UAAWsG,GAAI,aACvB/G,EAAAA,cAAA,gCACAA,EAAAA,cAAA,wCAEEA,EAAAA,cAAA,UAAQ+K,KAAK,uBAAuBkP,aAAc3V,GAC/C4U,EAAYrO,KAAI1G,IAAA,IAAEwE,GAAKxE,EAAA,OACtBnE,EAAAA,cAAA,UAAQ4D,IAAK+E,EAAM/I,MAAO+I,GACvBA,EAAKqC,OAAO,GAAGC,cAAgBtC,EAAKuC,MAAM,GACpC,MAIflL,EAAAA,cAACka,EAAa,CACZvR,KAAMrE,EACN1E,OAAQyM,EAAavH,IAAM,IAAIgG,cAC/BO,kBACGgB,EAA+Bd,aAAe,IAC/CT,cACFC,KAAI,eAAiBzG,EAAI,MACzBwE,QAASxK,KAAK2Q,cACd3D,UAAWhN,KAAK0G,WAElBhF,EAAAA,cAACma,GAAa,CACZxR,KAAMrE,EACNL,OAAQA,EACRyH,SAAUpN,KAAK2Q,iBAGnBjP,EAAAA,cAAA,YAAUS,UAAWsG,GAAI,aACvB/G,EAAAA,cAAA,yBACAA,EAAAA,cAAA,2BAEEA,EAAAA,cAAA,OAAKS,UAAWsG,GAAI,iBACjBmS,EACExO,QACC9F,IAAA,IAAE+D,GAAK/D,EAAA,OACL+D,IAASrE,IAASN,EAAY2E,GAAkB9D,QAAQ,IAE3DgG,KAAIhF,IAAA,IAAE8C,GAAK9C,EAAA,OACV7F,EAAAA,cAAC+I,EAAAA,EAAM,CACLnF,IAAK+E,EACL/I,MAAO+I,EAAI,0BACcA,EAAI,YAAW,gBAExCG,QAASxK,KAAK2Q,eAEbtG,EAAKqC,OAAO,GAAGC,cAAgBtC,EAAKuC,MAAM,GACpC,KAGflL,EAAAA,cAAA,MAAIS,UAAWsG,GAAI,cAChB0F,EAAQ5B,KAAIuP,IAAA,IAAExW,EAAKhE,GAAMwa,EAAA,OACxBpa,EAAAA,cAAA,MAAI4D,IAAKA,GACP5D,EAAAA,cAAA,YAAUS,UAAWsG,GAAI,aACvB/G,EAAAA,cAAA,cAAS4D,GACT5D,EAAAA,cAACyL,EAAU,CACT/K,MAAM,eACNgJ,MACE1J,EAAAA,cAAA,SACE2I,KAAK,OACL+J,UAAQ,EACR9S,MAAOgE,EACPmH,KAAI,eAAiBnH,EAAG,cAG5B+F,OACE3J,EAAAA,cAAC+I,EAAAA,EAAM,2BACoBnF,EAAG,YAC5BkF,QAASxK,KAAK2Q,eAAa,YAMjCjP,EAAAA,cAACka,EAAa,CACZvR,KAAM/E,EACNhE,OACGA,EAA2BkF,IAAM,IAClCgG,cACFO,kBACGzL,EAAwB2L,aAAe,IACxCT,cACFC,KAAI,eAAiBnH,EAAG,MACxBkF,QAASxK,KAAK2Q,cACd3D,UAAWhN,KAAK0G,WAElBhF,EAAAA,cAACyL,EAAU,CACT/K,MAAUkD,EAAG,cACb8F,MACE1J,EAAAA,cAAA,SACE2I,KAAK,OACLK,UAAWhF,EAAYJ,GAAiBkB,GACxCmV,aACGra,EAA2B2E,WAAa,GAE3CwG,KAAI,eAAiBnH,EAAG,aACxBnD,UAAWsG,GAAI,qBAAoB,4BACRnD,IAG/B+F,OACE3J,EAAAA,cAAC+I,EAAAA,EAAM,2BACoBnF,EAAG,aAC5BkF,QAASxK,KAAK2Q,eAAa,aAOhC,OAKbjP,EAAAA,cAAA,kCACAA,EAAAA,cAACqa,EAAc,CACb1S,SAAUA,EACV0E,aAAcrI,EAAYM,KAAKV,IAC/B0I,iBAAgE,QAA/CqH,EAAA3P,aAAW,EAAXA,EAAcA,EAAYM,KAAKV,YAAgB,IAAA+P,OAAA,EAAAA,EAAE7O,IAClEyH,wBACmD,QAA/C4L,EAAAnU,aAAW,EAAXA,EAAcA,EAAYM,KAAKV,YAAgB,IAAAuU,OAAA,EAAAA,EAAE5T,aAIvDvE,EAAAA,cAAA,qBACAA,EAAAA,cAACsa,EAAO,CAAChU,IAAK0S,IACdhZ,EAAAA,cAACua,EAA8B,CAC7BjU,IAAK0S,EACLrR,SAAUA,EACVC,OAAQA,IAEP4S,IAAgC,IAA/B,KAAEpP,EAAI,SAAEpD,EAAQ,QAAEG,GAASqS,EAC3B,IAAKpP,EAAM,OAAO,KAClB,IAAMnD,EAASmD,EAAKb,SAAWa,EAAKb,QAAQtC,OAAU,GAChD,GAAEnD,EAAE,YAAEyG,GAAgBc,EACtBnE,EAAmB,IAAVD,IAAuB,OAAPnD,GAA+B,OAAhByG,GAC9C,OACEvL,EAAAA,cAAAA,EAAAA,SAAA,KACEA,EAAAA,cAACya,EAAQ,CAACrP,KAAMA,EAAMjD,QAASA,IAE9BkE,EAAavH,KAAOuH,EAAa9H,WAChCvE,EAAAA,cAACgP,GAAO,CACNrH,SAAUA,EACVrB,IAAK0S,EACLpR,OAAQA,EACR8N,QAAS4D,EAAgBzO,KACtB6P,GACIA,EAAE1Q,UACH0Q,EAAEjE,gBAAkB,QAAQiE,EAAEjE,gBAAe,KAAO,MAG1D8C,UAAWA,EACXO,UAAWA,IAIf9Z,EAAAA,cAAA,WACEA,EAAAA,cAAA,sBACAA,EAAAA,cAAC2a,EAAe,CACdhT,SAAUA,EACV3D,YAAaA,EACb4D,OAAQA,EACRO,UAAWA,EACXF,MAAOA,EACPC,OAAQA,IAEVlI,EAAAA,cAACmH,GAAAA,GAAQ,CACPQ,SAAUA,EACVC,OAAQA,EACRC,WAAYvD,EACZgC,IAAK0S,EACLhR,SAAUA,EACVG,QAASA,EACTF,MAAOA,EACPC,OAAQA,EACRE,gBAAiBwR,KAGpBra,GAAeS,EAAAA,cAACuQ,GAAiB,CAACvI,SAAUA,IAC5C,IAMf,EAGF,IAAM3G,IAAkBC,EAAAA,EAAAA,KACrBC,GAAuBA,EAAMwC,iBAC7BxC,GAAuBA,EAAMC,SAASiB,MACtClB,GAAuBA,EAAMC,SAASC,GAAGlC,cAC1C,CAACwE,EAAgBtB,EAAKlD,KAAgB,CAAGwE,iBAAgBtB,MAAKlD,kBAGhE,UAAewM,EAAAA,EAAAA,GAAS,CACtBpI,OAAQnB,EAAAA,GACRnB,gBAAe,GACfuZ,mBAAoB,CAAEpC,mBAAkBA,EAAAA,KAH1C,CAIyBvB,G,gDClfZ5Q,EAA+B,SAC1CgG,EACAwO,EACAC,QAAW,IAAXA,IAAAA,GAAc,GAEd,IAAM1U,EAAW,GAajB,OAZI0U,EACE,CAAC,WAAY,WAAY,OAAO3V,SAAS0V,KAC3CzU,EAASkN,KAAK,WACdlN,EAASkN,KAAK,UAGZ,CAAC,QAAS,WAAY,OAAOnO,SAASkH,IACpC,CAAC,WAAY,YAAYlH,SAAS0V,IACpCzU,EAASkN,KAAK,WAIhBlN,EAASwG,OAAe,YAAYxG,EAASiH,KAAK,KAC/C,EACT,C,4DCKA,QAAiCwL,IAC/B,IApBAlV,EAoBMoX,EAAoC,CACxCpX,OAAQqX,EAAAA,GACRnI,aAAc,CAAC,EACfoI,cAAe,GACfC,OAAQ,EACR7Z,gBAAiBsK,EAAAA,EACjBiP,mBAAoB,CAAC,GAEvB,OAAK/B,EACiB,iBAAXA,GACTkC,EAAUpX,OACU,iBAAXkV,EAAsBmC,EAAAA,GAAgBnC,GAAUA,EAClDkC,IAETA,EAAUpX,aAlCV,KAAAA,EAkCiCkV,EAAOlV,UAlCxCA,EAAiCqX,EAAAA,IAEX,iBAAXrX,EACFqX,EAAAA,GAAgBrX,GAElBA,GA8BPoX,EAAUlI,aAAegG,EAAOhG,cAAgBkI,EAAUlI,aAC1DkI,EAAUE,cAAgBpC,EAAOoC,eAAiBF,EAAUE,cAC5DF,EAAUG,OAASrC,EAAOqC,QAAUH,EAAUG,OAC9CH,EAAU1Z,gBACRwX,EAAOxX,iBAAmB0Z,EAAU1Z,gBACtC0Z,EAAUH,mBACR/B,EAAO+B,oBAAsBG,EAAUH,mBAClCG,GAdaA,CAerB,C,iDC1CD,iBAAehR,GAAgD,IAA/C,OAAEoR,EAAM,aAAErI,QAAY,IAAA/I,EAAmB,CAAC,EAACA,EACzD,MAAqB,SAAjB+I,EAAgCsI,EAAAA,GACf,SAAjBtI,EAAgCuI,EAAAA,GACf,SAAjBvI,EAAgCwI,EAAAA,GACrB,SAAXH,EAA0BI,EAAAA,GACvBC,EAAAA,EACR,C,y0BCQKC,GAAkBna,EAAAA,EAAAA,KACrBC,GAAmBA,IACnBma,IAAQ,CAAQA,eA2PnB,QA/OE7C,IAEA,IAAM,OACJlV,EAAM,aACNkP,EAAY,cACZoI,EAAa,OACbC,EAAM,gBACN7Z,EAAe,mBACfuZ,IACEe,EAAAA,EAAAA,GAAc9C,GACZ+C,GAAWC,EAAAA,EAAAA,GAAShJ,GAGpBiJ,EAAWxV,IAAW,CAC1B9F,UAAW8F,EACX+B,SAAU,EACVkF,IAAI,EACJC,OAAQ,KACRjD,QAAS,KACTjE,QAGF,OACEyV,I,QAeA,MAAMC,UAAoB/d,EAAAA,cAMxBC,WAAAA,CAAYC,GACVE,MAAMF,GALR8d,EAAA9F,IAAA,aACA+F,EAAA/F,IAAA,aACA,KAAAgG,UAAY,EAwDZ,KAAAC,QAAU,K,QACJC,EAAA/d,KAAI4d,EAAA,MAAWG,EAAA/d,KAAI4d,EAAA,KAAUI,SACJ,QAA7B/U,GAAAC,EAAAlJ,KAAKH,OAAMoe,0BAAkB,IAAAhV,GAAAA,EAAAG,KAAAF,EAAG6U,EAAA/d,KAAI2d,EAAA,KAAK,EAG3C,KAAAO,UAAanU,I,QACX/J,KAAK6Q,UAASvQ,IAAA,IAAC,KAAEwM,GAAMxM,EAAA,MAAM,CAAEwM,KAAI5G,OAAAC,OAAAD,OAAAC,OAAA,GAAO2G,GAAI,CAAE/C,aAAY,IACjC,QAA3Bd,GAAAC,EAAAlJ,KAAKH,OAAMse,wBAAgB,IAAAlV,GAAAA,EAAAG,KAAAF,EAAG6U,EAAA/d,KAAI2d,EAAA,KAAM5T,EAAU6S,EAAO,EAG3D,KAAAwB,MAAepW,IAAeqW,O,EAAA,K,OAAA,E,EAAA,Y,kBAC5B,GAAKrW,EAAL,CAS2B,QAA3BiB,GAAAC,EAAAlJ,KAAKH,OAAMse,wBAAgB,IAAAlV,GAAAA,EAAAG,KAAAF,EAAG6U,EAAA/d,KAAI2d,EAAA,KAAM,EAAGf,GAC3C0B,EAAAte,KAAI4d,GAAYW,EAAAA,EAAAA,IAA2BC,GACzClB,EACEtV,EAAG9B,OAAAC,OAAAD,OAAAC,OAAA,GACEoO,GAAY,CAAEiK,WACnBxe,KAAKke,UACLle,KAAKH,MAAM8R,YAEd,KAED,IAAM8M,EAAUV,EAAA/d,KAAI4d,EAAA,KACpB,IACE,IAAMc,QAAiBD,EAAQE,QAE/BC,KAAK,QAAS,OAAQ,CACpBC,eAAgB,OAChBC,eAAgBJ,EAASxP,OACzB6P,YAAa/W,EAEbgX,kBAAmBN,EAASvP,QAAQ9C,IAAI,gBAAkB,EAAI,EAE9D4S,YAAaP,EAASvP,QAAQ9C,IAAI,UAAY,EAAI,IAGpDrM,KAAK6Q,UAAS/O,IAAa,IAAZ,KAAEgL,GAAMhL,EACfod,EAAQhZ,OAAAC,OAAAD,OAAAC,OAAAD,OAAAC,OAAA,GACT2G,GACA4R,GAAQ,CACX3U,SAAU,EACV7H,SAAS,IAEX,MAAO,CAAE4K,KAAMoS,EAAUC,UAAWD,EAAU,IAGrB,QAA3B7J,GAAAC,EAAAtV,KAAKH,OAAMse,wBAAgB,IAAA9I,GAAAA,EAAAjM,KAAAkM,EAAGyI,EAAA/d,KAAI2d,EAAA,KAAM,EAAGf,GAE3C,IAAMwC,EA1KL,MA2KqB,QAAnBvF,EAAA7Z,KAAKH,MAAMud,gBAAQ,IAAAvD,OAAA,EAAAA,EAAE3W,SAASqC,WAAW8Z,iBAAkB,GA5KxD,MA8KFX,EAASxP,SACXlP,KAAK6d,UAAYyB,OAAOC,YAAW,KACjCC,QAAQC,IAAI,gCACZzf,KAAK6Q,SAAS,CAAE6O,QAAS1f,KAAKiD,MAAMyc,QAAU,GAAI,GACjDN,GAEP,CAAE,MAAOO,GAGFlB,EAAQmB,WAGXhB,KAAK,QAAS,QAAS,CACrBC,eAAgB,OAChBgB,aAAc,OACdd,YAAa/W,EAEb8X,aAAcR,OAAOS,UAAUC,OAAS,EAAI,IAE9ChgB,KAAK6Q,UAAS1L,IAAA,IAAC,KAAE2H,GAAM3H,EAAA,MAAM,CAC3B2H,KAAI5G,OAAAC,OAAAD,OAAAC,OAAA,GAAO2G,GAAI,CAAE5K,SAAS,EAAO6H,SAAU,EAAGkF,IAAI,EAAO0Q,UAC1D,IAE0B,QAA3B1F,GAAAF,EAAA/Z,KAAKH,OAAMse,wBAAgB,IAAAlE,GAAAA,EAAA7Q,KAAA2Q,EAAGgE,EAAA/d,KAAI2d,EAAA,KAAM,EAAGf,GAE/C,CAlEA,MANE5c,KAAK6Q,SAAS,CACZsO,UAASjZ,OAAAC,OAAA,GACJnG,KAAKiD,MAAM6J,OAuEtB,E,YA3E8B,K,6QA2E7B,EAvICwR,EAAAte,KAAI2d,GAAOsC,EAAAA,EAAAA,GAAS,eAAc,KAGlC,IAAMjY,GAAM3C,aAAM,EAANA,EAASxF,EAAMud,UAAY,CAAC,EAAGvd,KAAU,GACrDG,KAAKiD,MAAQ,CACX+E,MACA8E,KAAM0Q,EAAQxV,GACdmX,eAAWrY,EACX4Y,QAAS,EAEb,CAEA,+BAAO3O,CACLC,EACAC,GAGA,IAAMjJ,GAAM3C,aAAM,EAANA,EAAS2L,EAAUoM,UAAY,CAAC,EAAGpM,KAAc,GAE7D,OAAIC,EAAUjJ,MAAQA,EAAY,KAE3B,CAAE8E,KAAM0Q,EAAQxV,GAAMA,MAC/B,CAEArG,iBAAAA,GAEE3B,KAAKoe,MAAMpe,KAAKiD,MAAM+E,IACxB,CAEAnG,kBAAAA,CAAmBqe,EAA0BjP,GAGzCA,EAAUjJ,MAAQhI,KAAKiD,MAAM+E,KAC7BiJ,EAAUyO,UAAY1f,KAAKiD,MAAMyc,UAGjC1f,KAAK8d,UAEL9d,KAAKoe,MAAMpe,KAAKiD,MAAM+E,KAE1B,CAGAjG,oBAAAA,GACE/B,KAAK8d,UACD9d,KAAK6d,WACPyB,OAAOa,aAAangB,KAAK6d,UAE7B,CAyFArc,MAAAA,GACE,IAAM0H,EAQFlJ,KAAKH,OANPse,iBAAkB3Q,EAClByQ,mBAAoBmC,EACpBzO,SAAU0O,EAAG,SACbjD,GAAQlU,EAELoX,E,yUAAIC,CAAArX,EAPH,iEAUAsX,EAAQ,UAAyB7D,EACjC8D,EAA4C,CAChD,CAHW,OAAmB9D,GAGlB3c,KAAKiD,MAAMkc,WACrBnf,KAAKiD,MAAM6J,KACb,CAAC0T,GAAWxgB,KAAKiD,MAAMkc,YAAcnf,KAAKiD,MAAM6J,MASlD,OALE9M,KAAKiD,MAAM6J,OACV9M,KAAKiD,MAAM6J,KAAK5K,SACjBlC,KAAKiD,MAAM6J,KAAK9E,MAAQhI,KAAKiD,MAAM+E,MAEnCyY,EAAY,UAAU9D,IAAmB,GAEzCjb,EAAAA,cAACgf,EAAAA,EAAwB,CAACjb,eAAgB2X,aAAQ,EAARA,EAAU3X,gBAClD/D,EAAAA,cAAC+b,EAAOvX,OAAAC,OAAA,GACDma,EACDG,GACC1d,aAAe,EAAfA,EAAkBqa,EAAQlX,OAAAC,OAAAD,OAAAC,OAAA,GACzBma,GACDG,MACC,CAAC,IAIf,E,4BAtLO/C,EAAAiD,YAAc,aAAYlD,EAAQkD,aAAelD,EAAQhR,MAAI,IAwLtE,IAAMmU,EAAa1a,OAAAC,OAAA,CACjBgY,iBAAgB,KAChBF,mBAAkB,KAClBtM,SAAQA,EAAAA,IACL2K,GAQL,OANkBlZ,EAAAA,EAAAA,IAKhB+Z,EAAiByD,EACZC,CAAUnD,EAA8C,CAChE,C,4CC3QH,iBACEoD,QAAA,IAAAA,IAAAA,EAA4CC,QAAQC,WAEpD,IAAIrC,EAAUmC,EACRG,EAAa,IAAIC,gBACjB,SAAUJ,IAEdnC,EAAUmC,EAAkBG,EAAWzC,SAEzC,IAAM7O,EAAS,CACbgP,QAAUA,EAAuBwC,MAAM7f,IAErC,GAAIqO,EAAOiQ,SAAU,KAAM,CAAEA,SAAUjQ,EAAOiQ,UAC9C,OAAOte,CAAK,IAEdse,UAAU,EACV5B,MAAAA,GACErO,EAAOiQ,UAAW,EAClBqB,EAAWG,OACb,GAEF,OAAOzR,CACR,C,8FCrBY0R,EAA0Bnb,OAAO6O,KAAKnQ,EAAAA,QAAO0c,OAK7CC,EAAwBrb,OAAOyB,QAAQ/C,EAAAA,QAAO0c,OAAO/U,KAChEjM,IAAa,IAAXgF,EAAKsU,GAAEtZ,EACDgB,EAAQsY,EACd,OAAItY,GAASA,EAAMigB,QAAkC,iBAAjBjgB,EAAMigB,OACjCjgB,EAAMigB,OAELjc,EAAG,OAOXkc,EAAU,MASHlX,EAAW,SACtBmX,EACA9X,EACA+X,QADA,IAAA/X,IAAAA,EAAgB,UAChB,IAAA+X,IAAAA,GAA6B,GAG7B,IADA,IAAMC,EAAUF,EAAO1gB,OACdsN,EAAI,EAAGA,EAAIgT,EAAS/S,OAAQD,IACnC,GAAIgT,EAAShT,KAAOsT,EAClB,OAAIhY,EAAQ,EAAU4X,EAAOlT,GACtBsT,EAGX,GAAID,EACF,OAAOC,EAAQ1d,QAAQud,EAAS,KAAO7X,EAAQ,EAAI,IAAM,IAE3D,MAAM,IAAI2Q,MAAM,uBAClB,C","sources":["webpack://interpro7-client/./src/components/NumberComponent/index.js","webpack://interpro7-client/./src/components/NumberComponent/style.css?1c2d","webpack://interpro7-client/./src/components/NumberComponent/utils/get-abbr/index.js","webpack://interpro7-client/./src/components/NumberComponent/utils/number-to-display-text/index.js","webpack://interpro7-client/./src/higherOrder/loadData/defaults/index.js","webpack://interpro7-client/./src/utils/block-event/index.js","webpack://interpro7-client/./src/components/DownloadForm/Controls/index.tsx","webpack://interpro7-client/./src/components/DownloadForm/Controls/style.css?516a","webpack://interpro7-client/./src/utils/sort-functions/basic/index.js","webpack://interpro7-client/./src/components/DownloadForm/InputGroup/index.tsx","webpack://interpro7-client/./src/components/DownloadForm/InputGroup/style.css?fe5f","webpack://interpro7-client/./src/components/DownloadForm/DBChoiceInput/index.tsx","webpack://interpro7-client/./src/components/DownloadForm/ApiLink/index.tsx","webpack://interpro7-client/./src/components/DownloadForm/FormatSelector/index.tsx","webpack://interpro7-client/./src/components/DownloadForm/TextExplanation/index.tsx","webpack://interpro7-client/./src/components/DownloadForm/DataPreviewAndProgressProvider/index.tsx","webpack://interpro7-client/./src/components/DownloadForm/Estimate/index.tsx","webpack://interpro7-client/./src/snippets/template.js.tmpl","webpack://interpro7-client/./src/components/DownloadForm/style.css?cbc2","webpack://interpro7-client/./src/components/DownloadForm/Snippet/index.tsx","webpack://interpro7-client/./src/snippets/template.py.tmpl","webpack://interpro7-client/./src/snippets/template.pl.tmpl","webpack://interpro7-client/./src/components/DownloadForm/ProgressAnimation/index.tsx","webpack://interpro7-client/./src/components/DownloadForm/ProgressAnimation/style.css?594e","webpack://interpro7-client/./src/components/DownloadForm/URLParameters/SelectedParameter/index.tsx","webpack://interpro7-client/./src/components/DownloadForm/URLParameters/index.tsx","webpack://interpro7-client/./src/web-workers/download/object2TSV.js","webpack://interpro7-client/./src/components/DownloadForm/index.tsx","webpack://interpro7-client/./src/higherOrder/loadData/defaults/relatedCounters.ts","webpack://interpro7-client/./src/higherOrder/loadData/extract-params/index.ts","webpack://interpro7-client/./src/higherOrder/loadData/getFetch.ts","webpack://interpro7-client/./src/higherOrder/loadData/ts/index.tsx","webpack://interpro7-client/./src/utils/cancelable/index.ts","webpack://interpro7-client/./src/utils/pages/toPlural.ts"],"sourcesContent":["import React, { PureComponent } from 'react';\nimport T from 'prop-types';\nimport { connect } from 'react-redux';\nimport { createSelector } from 'reselect';\n\nimport { Tweenable } from 'shifty';\n\n// import random from 'utils/random';\nimport numberToDisplayText from './utils/number-to-display-text';\n\nimport { foundationPartial } from 'styles/foundation';\nimport style from './style.css';\n\nconst f = foundationPartial(style);\n\nconst UNIT_SCALE_MARGIN = 1; // abbr at this level\n// examples: (1: 1000 -> 1k) (10: 1000 -> 1000, 10000 -> 10k)\n\nexport const DEFAULT_DURATION = 1;\n\n// const DELAY_RANGE = 0.25;\n\n/*:: type ComponentProps = {\n  children: ?(number | string),\n  loading?: boolean,\n  noAnimation?: boolean,\n  duration: number,\n  className: ?string,\n  lowGraphics: boolean,\n  dispatch: function,\n  abbr: boolean,\n  label?: boolean,\n  scaleMargin: number,\n  noTitle: ?boolean,\n  title?: number | string,\n  titleType?: string,\n}; */\n\nexport class NumberComponent extends PureComponent /*:: <ComponentProps> */ {\n  /*::\n    _ref: { current: HTMLSpanElement | null };\n    _animation: ?any;\n  */\n\n  static propTypes = {\n    children: T.oneOfType([T.number, T.string]),\n    loading: T.bool,\n    noAnimation: T.bool,\n    duration: T.number,\n    className: T.string,\n    lowGraphics: T.bool.isRequired,\n    dispatch: T.func.isRequired,\n    abbr: T.bool,\n    label: T.bool,\n    scaleMargin: T.number,\n    noTitle: T.bool,\n    title: T.oneOfType([T.string, T.number]),\n    titleType: T.string,\n  };\n\n  static defaultProps = {\n    duration: DEFAULT_DURATION,\n    abbr: false,\n    scaleMargin: UNIT_SCALE_MARGIN,\n  };\n\n  constructor(props /*: ComponentProps */) {\n    super(props);\n    this._ref = React.createRef();\n  }\n\n  componentDidMount() {\n    this._animate(this.props.children);\n  }\n\n  componentDidUpdate({ children: from }) {\n    this._animate(this.props.children, from);\n  }\n\n  componentWillUnmount() {\n    if (this._animation) {\n      this._animation.stop();\n      this._animation.dispose();\n      this._animation = null;\n    }\n  }\n\n  _animate = (to, from = 0) => {\n    if (this._animation) this._animation.stop();\n\n    if (!this._ref.current) return;\n    const finalValue = numberToDisplayText(\n      to,\n      this.props.abbr,\n      this.props.scaleMargin,\n    );\n\n    if (\n      !this.props.noTitle &&\n      !this.props.title &&\n      finalValue &&\n      this._ref.current !== null\n    ) {\n      this._ref.current.title = `Approximately ${finalValue} ${\n        this.props.titleType || ''\n      }`.trim();\n    }\n\n    const canAnimate =\n      !this.props.noAnimation &&\n      !this.props.lowGraphics &&\n      from !== to &&\n      Number.isFinite(from) &&\n      Number.isFinite(to);\n\n    if (!canAnimate) {\n      if (this._ref.current) {\n        this._ref.current.textContent = `${finalValue || ''}`;\n      }\n      return;\n    }\n\n    // const animatable = { value: from };\n    // eslint-disable-next-line no-magic-numbers\n    // const duration = this.props.duration + random(-0.5, 0.5) * DELAY_RANGE;\n\n    this._animation = new Tweenable();\n    this._animation.tween({\n      from: { value: from },\n      to: { value: to },\n      // duration,\n      easing: 'easeOutQuart',\n      render: ({ value }) => {\n        if (!this._ref.current) return;\n        this._ref.current.textContent = `${\n          numberToDisplayText(value, this.props.abbr, this.props.scaleMargin) ||\n          ''\n        }`;\n      },\n    });\n  };\n\n  render() {\n    const {\n      children,\n      loading,\n      noAnimation,\n      duration,\n      lowGraphics,\n      className,\n      dispatch,\n      abbr,\n      noTitle,\n      title,\n      titleType,\n      label,\n      scaleMargin,\n      ...props\n    } = this.props;\n\n    return (\n      <span\n        className={f(className, { loading, lowGraphics, label })}\n        ref={this._ref}\n        {...props}\n      />\n    );\n  }\n}\n\nconst mapStateToProps = createSelector(\n  (state) => state.settings.ui.lowGraphics,\n  (lowGraphics) => ({ lowGraphics }),\n);\n\nexport default connect(mapStateToProps)(NumberComponent);\n","// extracted by mini-css-extract-plugin\nexport default {\"label\":\"NumberComponent_style__label___b2\",\"loading\":\"NumberComponent_style__loading___e0\",\"pulsing\":\"NumberComponent_style__pulsing___ae\",\"lowGraphics\":\"NumberComponent_style__lowGraphics___d4\"};","// @flow\nconst UNITS = ['', 'k', 'M', 'G'];\nconst UNIT_SCALE = 1000; // Jump scale every 1000 jump in magnitude\n\nexport default (value /*: number */, scaleMargin /*:: ?: number */ = 1) => {\n  let _value = value;\n  let unitIndex = 0;\n  while (_value >= UNIT_SCALE * scaleMargin) {\n    unitIndex++;\n    _value = Math.round(_value / UNIT_SCALE);\n  }\n  return `${_value.toLocaleString()}${UNITS[unitIndex]}`;\n};\n","// @flow\nimport getAbbr from '../get-abbr';\n\nexport default (\n  value /*:: ?: ?(number | string) */,\n  abbr /*:: ?: boolean */,\n  scaleMargin /*:: ?: number */,\n) => {\n  if (!value && value !== 0) return;\n  let _value = Math.round(+value);\n  if (isNaN(_value)) return 'N/A';\n  if (Number.isFinite(_value)) {\n    if (abbr) {\n      _value = getAbbr(_value, scaleMargin);\n    } else {\n      // this will print the number according to locale preference\n      // like a coma as thousand-separator in english\n      if (Number.isFinite(_value)) _value = _value.toLocaleString();\n    }\n  }\n  return _value;\n};\n","import { createSelector } from 'reselect';\nimport { format } from 'url';\n\nimport descriptionToPath from 'utils/processDescription/descriptionToPath';\n\nimport config from 'config';\nimport { getNeededCountersForSubpages } from './relatedCounters';\n\nconst MULTIPLE_SLASHES = /([^:])\\/{2,}/g;\n\nconst DBS_WITH_SETS = ['pfam', 'cdd', 'pirsf'];\n\nexport const cleanUpMultipleSlashes = (str = '') =>\n  str.replace(MULTIPLE_SLASHES, '$1/');\n\nexport const getUrlForMeta = createSelector(\n  (state) => state.settings.api,\n  ({ protocol, hostname, port, root }) =>\n    cleanUpMultipleSlashes(\n      format({\n        protocol,\n        hostname,\n        port,\n        pathname: `${root}`,\n      }),\n    ),\n);\n\nexport const getUrlForRelease = (repoKey) =>\n  createSelector(\n    () => config.github[repoKey],\n    ({ owner, repo }) =>\n      `https://api.github.com/repos/${owner}/${repo}/releases/latest`,\n  );\nexport const getReadTheDocsURL = (relativePath) =>\n  createSelector(\n    () => config.github.ReadTheDocs,\n    ({ owner, repo, branch = 'master' }) =>\n      `https://raw.githubusercontent.com/${owner}/${repo}/${branch}/docs/${relativePath}`,\n  );\n\nexport const getUrl = createSelector(\n  // this one is just to memoize it\n  (key) => key,\n  (key) =>\n    createSelector(\n      (state) => state.settings[key],\n      (state) => state.settings.navigation.pageSize,\n      (state) => state.customLocation.description,\n      (state) => state.customLocation.search,\n      (state) => state.customLocation.hash,\n      // eslint-disable-next-line\n      (\n        { protocol, hostname, port, root },\n        settingsPageSize,\n        description,\n        search,\n        hash,\n      ) => {\n        const _search =\n          description.main.key && description[description.main.key].accession\n            ? {}\n            : { ...(search || {}) };\n        if (\n          !description[description.main.key].accession ||\n          Object.values(description).find(\n            ({ isFilter, db }) => isFilter && db,\n          ) ||\n          (description.entry && description.entry.memberDB)\n        )\n          _search.page_size = _search.page_size || settingsPageSize;\n\n        if (hash === 'grid') {\n          switch (description.main.key) {\n            case 'entry':\n              _search.extra_fields =\n                'short_name,description,literature,counters:protein-ida-taxonomy-structure';\n              if (DBS_WITH_SETS.includes(description.entry.db))\n                _search.extra_fields += '-set';\n              break;\n            case 'protein':\n              _search.extra_fields = 'counters:entry-structure';\n              break;\n            case 'structure':\n              _search.extra_fields = 'counters:entry-protein-taxonomy';\n              break;\n            case 'taxonomy':\n              _search.extra_fields =\n                'lineage,counters:entry-protein-structure-proteome';\n              break;\n            case 'proteome':\n              _search.extra_fields = 'counters:entry-protein-structure';\n              break;\n            case 'set':\n              _search.extra_fields = 'counters,description';\n              break;\n            default:\n              _search.extra_fields = undefined;\n              break;\n          }\n        }\n        if (hash === 'table') {\n          switch (description.main.key) {\n            case 'entry':\n              _search.extra_fields = 'short_name';\n              break;\n            case 'taxonomy':\n            case 'proteome':\n              _search.extra_fields = 'counters:entry-protein';\n              break;\n            case 'set':\n              _search.extra_fields = 'counters:entry,description';\n              break;\n            default:\n              break;\n          }\n        }\n        if (hash === 'tree' && _search.search !== undefined) {\n          delete _search.search;\n        }\n\n        // subpages will get the reverseURL, so its base dataLoader shold only get the accession payload\n        const _description =\n          description.main.key && description[description.main.key].accession\n            ? {\n                main: description.main,\n                [description.main.key]: description[description.main.key],\n              }\n            : description;\n\n        const cursor = _search.cursor;\n        if (cursor) delete _search.cursor;\n\n        const urlTmp = cleanUpMultipleSlashes(\n          format({\n            protocol,\n            hostname,\n            port,\n            pathname: root + descriptionToPath(_description),\n            query: _search,\n          }),\n        );\n        // Cursors can have symbols that shouldn't be escaped\n        if (cursor) {\n          const sep = urlTmp.indexOf('?') === -1 ? '?' : '&';\n          return `${urlTmp}${sep}cursor=${cursor}`;\n        }\n        return urlTmp;\n      },\n    ),\n);\n\nexport const getReversedUrl = createSelector(\n  (state) => state.settings.api,\n  (state) => state.settings.navigation.pageSize,\n  (state) => state.customLocation.description,\n  (state) => state.customLocation.search,\n  (state) => state.customLocation.hash,\n  (\n    { protocol, hostname, port, root },\n    settingsPageSize,\n    description,\n    search,\n    hash,\n  ) => {\n    // copy of description, to modify it after\n    const newDesc = {};\n    const _search = { ...search };\n    if (hash === 'tree' && _search.search !== undefined) {\n      delete _search.search;\n    }\n    if (_search.model_page !== undefined) {\n      delete _search.model_page;\n    }\n\n    let newMain;\n    for (const [key, value] of Object.entries(description)) {\n      newDesc[key] = key === 'other' ? [...value] : { ...value };\n      if (value.isFilter && value.order === 1) {\n        newMain = key;\n        newDesc[key].isFilter = false;\n      }\n    }\n    newDesc[description.main.key].isFilter = true;\n    newDesc.main.key = newMain;\n    const newQuery = {\n      ..._search,\n      extra_fields: undefined,\n      page_size: search.page_size || settingsPageSize,\n    };\n    if (newMain === 'entry') {\n      newQuery.extra_fields = 'short_name';\n    }\n    const counters = getNeededCountersForSubpages(\n      description.main.key,\n      newMain,\n    );\n    if (counters) {\n      if (newQuery.extra_fields) newQuery.extra_fields += `,${counters}`;\n      else newQuery.extra_fields = counters;\n    }\n\n    let url = format({\n      protocol,\n      hostname,\n      port,\n      pathname: root + descriptionToPath(newDesc),\n      query: newQuery,\n    });\n    if (description.main.key === 'entry' && newMain === 'taxonomy') {\n      url = url.replace('/entry/', '/protein/entry/');\n    }\n    if (description.main.key === 'taxonomy' && newMain === 'proteome') {\n      url = url.replace('/taxonomy/', '/protein/taxonomy/');\n    }\n    return url;\n  },\n);\nexport const includeTaxonFocusedOnURL = (url, focused) => {\n  const hasTaxIdRegex = /taxonomy\\/uniprot\\/\\d+/gi;\n  if (focused && +focused !== 1 && !url.match(hasTaxIdRegex)) {\n    return url.replace(/taxonomy\\/uniprot\\//, `/taxonomy/uniprot/${focused}/`);\n  }\n  return url;\n};\n\nexport const getUrlForApi = (...parameters) =>\n  getUrl('api')(...parameters)\n    .replace('/entry_alignments', '/')\n    .replace('/logo', '/')\n    .replace('/alphafold', '/')\n    .replace('/domain_architecture', '/')\n    .replace('/interactions', '/')\n    .replace('/subfamilies', '/')\n    .replace('/pathways', '/')\n    .replace('/feedback', '/')\n    .replace('/sequence', '/')\n    .replace('/similar_proteins', '/')\n    .replace('/curation', '/')\n    // To simplify set calls to use a single endpoint\n    .replace(/\\/set\\/[a-zA-Z0-9]+\\/entry\\/([a-zA-Z0-9]+)\\//, '/set/$1/');\n","// @flow\nexport default (f /*: function */) => (e /*: Event */) => {\n  e.preventDefault();\n  e.stopPropagation();\n  return f(e);\n};\n","import React, { PureComponent } from 'react';\nimport { connect } from 'react-redux';\n\nimport Link from 'components/generic/Link';\nimport NumberComponent from 'components/NumberComponent';\nimport Callout from 'components/SimpleCommonComponents/Callout';\nimport { Button } from 'components/SimpleCommonComponents/Button';\n\nimport { downloadURL, downloadDelete } from 'actions/creators';\n\nimport { askNotificationPermission } from 'utils/browser-notifications';\nimport blockEvent from 'utils/block-event';\nimport { toPlural } from 'utils/pages/toPlural';\n\nimport cssBinder from 'styles/cssBinder';\n\nimport styles from './style.css';\n\nconst css = cssBinder(styles);\n\nexport const HARD_LIMIT = 50000;\nexport const SOFT_LIMIT = 10000;\n\ntype Props = {\n  url: string;\n  fileType: DownloadFileTypes;\n  subset: boolean;\n  entityType: string;\n  download?: DownloadProgress;\n  downloadURL?: typeof downloadURL;\n  downloadDelete?: typeof downloadDelete;\n  isStale?: boolean;\n  count: number;\n  interProVersion: number;\n  noData: boolean;\n};\n\nexport class Controls extends PureComponent<Props> {\n  _handleGenerateClick = blockEvent(() => {\n    // Request browser notification\n    askNotificationPermission();\n\n    this.props.downloadURL?.(\n      this.props.url,\n      this.props.fileType,\n      this.props.subset,\n      this.props.entityType,\n    );\n  });\n\n  _handleCancelClick = blockEvent(\n    () =>\n      this.props.downloadDelete?.(\n        this.props.url,\n        this.props.fileType,\n        this.props.subset,\n      ),\n  );\n\n  render() {\n    const {\n      fileType,\n      entityType,\n      download,\n      count,\n      noData,\n      isStale,\n      interProVersion,\n    } = this.props;\n    if (!download) return null;\n    const { progress, successful, blobURL, version } = download;\n    const downloading = Number.isFinite(progress) && !successful;\n    return (\n      <>\n        {count > SOFT_LIMIT && !isStale && (\n          <Callout type={count > HARD_LIMIT ? 'alert' : 'warning'}>\n            We expect this file to contain{' '}\n            <NumberComponent abbr>{count}</NumberComponent> distinct{' '}\n            {toPlural(entityType)}.{' '}\n            {count > HARD_LIMIT\n              ? 'This file will be too large to generate within your browser'\n              : 'If you encounter any problems during the creation of this file'}\n            , please check the “Code snippet” section of this page for to see\n            how to download the data directly onto your computer.\n          </Callout>\n        )}\n        {count < HARD_LIMIT ? (\n          <div className={css('text')}>\n            Please generate the file in order to download it.\n          </div>\n        ) : null}\n        {interProVersion > version && (\n          <Callout type=\"alert\">\n            <h5>The existing download is outdated.</h5>\n            <p>\n              It was obtained using InterPro version <i>{version}</i>, while the\n              current version is <i>{interProVersion}</i>. You need to remove\n              the existing file before re-generating the download.\n            </p>\n            <p>\n              <Link\n                className={css('button', 'hollow')}\n                onClick={this._handleCancelClick}\n              >\n                Remove the current download\n              </Link>\n            </p>\n          </Callout>\n        )}\n        <div className={css('container')}>\n          <Button\n            onClick={this._handleGenerateClick}\n            disabled={!!progress || count > HARD_LIMIT || isStale || noData}\n            backgroundColor={count > SOFT_LIMIT ? 'white' : undefined}\n            borderColor={count > SOFT_LIMIT ? 'orange' : undefined}\n            textColor={count > SOFT_LIMIT ? 'orange' : undefined}\n          >\n            Generate\n          </Button>\n          <Link\n            className={css({\n              warning: count >= SOFT_LIMIT,\n            })}\n            buttonType=\"primary\"\n            disabled={!successful || count > HARD_LIMIT}\n            href={blobURL}\n            download={`export.${fileType === 'accession' ? 'txt' : fileType}`}\n          >\n            Download\n          </Link>\n          {downloading && (\n            <Button type=\"tertiary\" onClick={this._handleCancelClick}>\n              Cancel\n            </Button>\n          )}\n        </div>\n      </>\n    );\n  }\n}\n\nexport default connect(undefined, { downloadURL, downloadDelete })(Controls);\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"Controls_style__container___fc\",\"text\":\"Controls_style__text___d9\",\"button\":\"Controls_style__button___e1\",\"new-callout\":\"Controls_style__new-callout___fb\",\"warning\":\"Controls_style__warning___ab\"};","const defaultSelector = item => item;\n\nexport default ({\n  selector = defaultSelector,\n  descending = false,\n} /*: {\n  selector: (any => string) | (any => number),\n  descending: boolean,\n} */ = {}) => {\n  return (a /*: any */, b /*: any */) => {\n    const _a = selector(a);\n    const _b = selector(b);\n    if (_a > _b) return descending ? -1 : 1;\n    if (_a < _b) return descending ? 1 : -1;\n    return 0;\n  };\n};\n","import React, { ReactElement } from 'react';\n\nimport cssBinder from 'styles/cssBinder';\n\nimport fonts from 'EBI-Icon-fonts/fonts.css';\nimport local from './style.css';\n\nconst css = cssBinder(local, fonts);\n\ntype Props = {\n  /**\n   * What should be the label of the component. It supports nested react element\n   */\n  label: ReactElement | string;\n  input: ReactElement;\n  button: ReactElement;\n};\nconst InputGroup = ({ label, input, button }: Props) => {\n  return (\n    <label className={css('new-input-group')}>\n      <span className={css('new-input-group-label')}>{label}</span>\n      {input}\n      <div className={css('new-input-group-button')}>{button}</div>\n    </label>\n  );\n};\n\nexport default InputGroup;\n","// extracted by mini-css-extract-plugin\nexport default {\"new-input-group\":\"InputGroup_style__new-input-group___b6\",\"new-input-group-button\":\"InputGroup_style__new-input-group-button___a0\",\"new-input-group-label\":\"InputGroup_style__new-input-group-label___f0\"};","import React from 'react';\n\nimport { createSelector } from 'reselect';\nimport { format } from 'url';\nimport { noop } from 'lodash-es';\n\nimport { toPlural } from 'utils/pages/toPlural';\nimport sortFnFor from 'utils/sort-functions/basic';\n\nimport loadData from 'higherOrder/loadData/ts';\n\nimport { cleanUpMultipleSlashes } from 'higherOrder/loadData/defaults';\n\nimport { Button } from 'components/SimpleCommonComponents/Button';\n\nimport cssBinder from 'styles/cssBinder';\nimport InputGroup from '../InputGroup';\n\nconst css = cssBinder();\nconst integrationFlags = new Set(['all', 'integrated', 'unintegrated']);\n\nconst sortFn = sortFnFor({ selector: (tuple) => tuple[0] });\n\nconst payloadToOptions = (\n  payload: Record<string, number | Record<string, number>>,\n  isIntegration = false,\n  memberDBs: DBsInfo,\n) =>\n  Object.entries(payload)\n    .filter(([key]) => integrationFlags.has(key) === isIntegration)\n    .sort(sortFn)\n    .map(([key, value]) => {\n      if (typeof value !== 'object') {\n        return (\n          <option key={key} value={key.toLowerCase()}>\n            {memberDBs && memberDBs[key]\n              ? memberDBs[key].name\n              : key.charAt(0).toUpperCase() + key.slice(1)}\n          </option>\n        );\n      }\n      return (\n        <optgroup key={key} label={key.replace('_', ' ')}>\n          {payloadToOptions(value, isIntegration, memberDBs)}\n        </optgroup>\n      );\n    });\n\ntype Props = {\n  type: string;\n  onClick: () => void;\n  isIntegration?: boolean;\n  name: string;\n  value: string;\n  valueIntegration: string;\n  databases: DBsInfo;\n};\n\ninterface LoadedProps extends Props, LoadDataProps<EndpointPayload> {}\n\nexport const DBChoiceInputWithoutData = (props: LoadedProps) => {\n  const {\n    type,\n    data,\n    onClick,\n    isIntegration = false,\n    name,\n    value,\n    valueIntegration,\n    databases,\n  } = props;\n  if (!data) return null;\n  const { loading, payload } = data;\n  let integration;\n  let _name = name;\n  let _value = value;\n  if (type === 'entry' && _value !== 'interpro') {\n    if (isIntegration) {\n      _name = name.replace('.db', '.integration');\n      _value = valueIntegration;\n    } else {\n      integration = <DBChoiceInputWithoutData {...props} isIntegration />;\n    }\n  }\n  return (\n    <>\n      <InputGroup\n        label={\n          <>\n            {type} {isIntegration ? 'integration' : 'DB'}:\n          </>\n        }\n        input={\n          <>\n            {!loading && payload ? (\n              <select\n                className={css('input-group-field')}\n                name={_name}\n                value={_value}\n                onChange={noop}\n                onBlur={noop}\n              >\n                <option value=\"\">{'< no selection >'}</option>\n                {payloadToOptions(\n                  payload[toPlural(type)],\n                  isIntegration,\n                  databases,\n                )}\n              </select>\n            ) : (\n              <input type=\"hidden\" name={_name} value={_value} />\n            )}\n          </>\n        }\n        button={\n          <Button data-key={_name} onClick={onClick}>\n            Clear\n          </Button>\n        }\n      />\n      {integration}\n    </>\n  );\n};\n\nconst mapStateToUrlFor = createSelector(\n  (state: GlobalState) => state.settings.api,\n  (_: GlobalState, props: Props) => props.type,\n  ({ protocol, hostname, port, root }, type) =>\n    cleanUpMultipleSlashes(\n      format({\n        protocol,\n        hostname,\n        port,\n        pathname: `${root}/${type}`,\n      }),\n    ),\n);\n\nexport default loadData(mapStateToUrlFor as LoadDataParameters)(\n  DBChoiceInputWithoutData,\n);\n","import React from 'react';\n\nimport Link from 'components/generic/Link';\n\ntype Props = { url: string };\n\nconst ApiLink = ({ url }: Props) => {\n  return (\n    <section>\n      <h6>Corresponding API call</h6>\n      <p>\n        <Link href={url} target=\"_blank\">\n          <code>{url}</code>\n        </Link>\n      </p>\n    </section>\n  );\n};\n\nexport default ApiLink;\n","import React from 'react';\nimport { noop } from 'lodash-es';\n\nexport const format2label = {\n  accession: 'Text (List of Accessions)',\n  fasta: 'FASTA',\n  json: 'JSON',\n  tsv: 'TSV',\n};\ntype Props = {\n  fileType: keyof typeof format2label;\n  mainEndpoint: Endpoint;\n  hasSelectedDB: boolean;\n  hasSelectedAccession: boolean;\n};\nconst FormatSelector = ({\n  fileType,\n  mainEndpoint,\n  hasSelectedDB,\n  hasSelectedAccession,\n}: Props) => (\n  <select\n    name=\"fileType\"\n    value={fileType || 'accession'}\n    aria-label=\"Download type\"\n    onChange={noop}\n    onBlur={noop}\n  >\n    <option value=\"accession\" disabled={!hasSelectedDB || hasSelectedAccession}>\n      {format2label.accession}\n    </option>\n    <option value=\"fasta\" disabled={mainEndpoint !== 'protein'}>\n      {format2label.fasta}\n    </option>\n    <option value=\"json\">{format2label.json}</option>\n    <option value=\"tsv\" disabled={!hasSelectedDB || hasSelectedAccession}>\n      {format2label.tsv}\n    </option>\n  </select>\n);\n\nexport default FormatSelector;\n","import React, { ReactNode } from 'react';\nimport { noop } from 'lodash-es';\n\nimport NumberComComponent from 'components/NumberComponent';\nimport { toPlural } from 'utils/pages/toPlural';\n\nimport { format2label } from '../FormatSelector';\n\nconst getMainFragment = (\n  description: InterProPartialDescription,\n  count: number,\n) => {\n  const main = description.main?.key;\n  if (!main) return null;\n  const { db, integration, accession } = description[\n    main as Endpoint\n  ] as EntryLocation;\n  if (accession) {\n    return (\n      <>\n        <b>metadata</b> about <b>{db}</b> <b>{main}</b> with accession{' '}\n        <b>{accession}</b>\n      </>\n    );\n  }\n  if (db && integration) {\n    return (\n      <>\n        <b>a list</b> of approximately{' '}\n        <NumberComComponent abbr>{count}</NumberComComponent>{' '}\n        {integration !== 'all' && (\n          <>\n            <b>{integration}</b>{' '}\n          </>\n        )}\n        <b>{db}</b> <b>{toPlural(main)}</b>\n      </>\n    );\n  }\n  if (db || integration) {\n    return (\n      <>\n        <b>a list</b> of approximately{' '}\n        <NumberComComponent abbr>{count}</NumberComComponent>{' '}\n        <b>{db || integration}</b> <b>{toPlural(main)}</b>\n      </>\n    );\n  }\n  return (\n    <>\n      <b>a list of counts</b> of <b>{toPlural(main)}</b> from each data source\n      in InterPro\n    </>\n  );\n};\n\nconst getFilterFragment = (type: string, location: EndpointPartialLocation) => {\n  if (!location) return null;\n  const { db, integration, accession } = location as EntryLocation;\n  if (accession) {\n    return (\n      <>\n        the <b>{db}</b> <b>{type === 'taxonomy' ? 'taxon' : type}</b> with\n        accession <b>{accession}</b>\n      </>\n    );\n  }\n  if (db && integration) {\n    return (\n      <>\n        any of the{' '}\n        {integration !== 'all' && (\n          <>\n            <b>{integration}</b>{' '}\n          </>\n        )}\n        <b>{db}</b> <b>{toPlural(type)}</b>\n      </>\n    );\n  }\n  if (db || (integration && integration !== 'all')) {\n    return (\n      <>\n        any <b>{db || integration}</b> <b>{toPlural(type)}</b>\n      </>\n    );\n  }\n  return (\n    <>\n      any <b>{type === 'taxonomy' ? 'taxon' : type}</b>\n    </>\n  );\n};\n\nconst getFilters = (description: InterProPartialDescription) =>\n  Object.entries(description)\n    .filter(([, desc]) => (desc as EndpointPartialLocation).isFilter)\n    .map(([type, desc], i, { length }) => (\n      // This logic is to have `join` between the different filters correct in\n      // english (proper use of `,`, `and`, and `, and`)\n      <React.Fragment key={type}>\n        {i > 0 && length > 2 && ', '}\n        {i === length - 1 && i > 0 && ' and '}\n        {getFilterFragment(type, desc as EndpointPartialLocation)}\n      </React.Fragment>\n    ));\n\ntype Props = {\n  fileType: keyof typeof format2label;\n  description: InterProPartialDescription;\n  subset: boolean;\n  isStale: boolean;\n  noData: boolean;\n  count: number;\n};\n\nconst TextExplanation = ({\n  fileType,\n  description,\n  subset,\n  isStale,\n  count,\n  noData,\n}: Props) => {\n  const filters = getFilters(description);\n  let filterText: ReactNode = '';\n  if (filters.length) {\n    filterText = <> which match with {filters}</>;\n  }\n\n  let explanation: ReactNode;\n  if (isStale) {\n    explanation = <p>Preparing data...</p>;\n  } else {\n    if (noData) {\n      explanation = <p>No data matches the selected set of filters</p>;\n    } else {\n      explanation = (\n        <p>\n          This <b>{format2label[fileType || 'accession']}</b> file will contain{' '}\n          {getMainFragment(description, count)} {filterText}.\n        </p>\n      );\n      fileType === 'fasta' &&\n        description?.entry?.isFilter &&\n        description?.entry?.accession && (\n          <label>\n            <input\n              name=\"subset\"\n              type=\"checkbox\"\n              checked={subset}\n              onChange={noop}\n              onBlur={noop}\n            />\n            I&apos;m only interested in the part(s) of the sequence matching (1\n            subsequence with all the fragments for every match)\n          </label>\n        );\n    }\n  }\n  return (\n    <section>\n      <h6>Explanation</h6>\n      {explanation}\n    </section>\n  );\n};\n\nexport default TextExplanation;\n","import { createSelector } from 'reselect';\n\nimport loadData from 'higherOrder/loadData/ts';\n\ntype ChildrenFnProps = {\n  data?: RequestedData<PayloadList<unknown>>;\n  download?: DownloadProgress;\n  isStale?: boolean;\n};\n\ntype Props = {\n  url: string;\n  fileType: string;\n  subset: boolean;\n  download?: DownloadProgress;\n  children: ({ data, download, isStale }: ChildrenFnProps) => React.ReactNode;\n  [otherProp: string]: unknown;\n};\n\ninterface LoadedProps extends Props, LoadDataProps<PayloadList<unknown>> {}\n\nexport const DataPreviewProviderWithoutData = ({\n  children,\n  data,\n  download,\n  isStale,\n}: LoadedProps) => {\n  return children({ data, download, isStale });\n};\n\nconst mapStateToProps = createSelector(\n  (state: GlobalState) => state.download,\n  (_: GlobalState, { url, fileType, subset }: Props) => {\n    return {\n      url,\n      fileType,\n      subset,\n    };\n  },\n  (downloads, { url, fileType, subset }) => {\n    return {\n      download:\n        downloads[\n          [url, fileType, subset && 'subset'].filter(Boolean).join('|')\n        ] || {},\n    };\n  },\n);\n\nexport default loadData({\n  getUrl: (_, { url }) => url,\n  mapStateToProps,\n} as LoadDataParameters)(DataPreviewProviderWithoutData);\n","import React from 'react';\nimport { filesize } from 'filesize';\n\nimport NumberComponent from 'components/NumberComponent';\n\nconst NO_CONTENT = 204;\n\nconst getText = (\n  {\n    loading,\n    payload,\n    ok,\n    status,\n    headers,\n  }: RequestedData<PayloadList<unknown>>,\n  isStale: boolean,\n) => {\n  if (loading || isStale) return 'Calculating estimate…';\n\n  if (!ok) return 'There was an error whilst fetching data.';\n\n  if (status === NO_CONTENT) {\n    return 'No data associated with this query.';\n  }\n\n  if (!payload) return 'An unexpected error was encountered.';\n\n  const count = payload.count;\n  if (count) {\n    return (\n      <>\n        Your file will contain <NumberComponent abbr>{count}</NumberComponent>{' '}\n        item\n        {count > 1 ? 's' : ''}.\n      </>\n    );\n  }\n\n  let size = +(headers?.get('content-length') || 0);\n  if (!size) {\n    size = JSON.stringify(payload, null, 2).length;\n  }\n  if (size && Number.isFinite(size)) {\n    const [value, suffix] = filesize(size, {\n      round: 0,\n      standard: 'iec',\n      output: 'array',\n    });\n    return (\n      <>\n        Your file size will be <NumberComponent>{value}</NumberComponent>{' '}\n        {suffix}\n      </>\n    );\n  }\n\n  return 'No estimate available.';\n};\n\ninterface LoadedProps extends LoadDataProps<PayloadList<unknown>> {}\n\nconst Estimate = ({ data, isStale }: LoadedProps) => {\n  if (!data) return null;\n  return (\n    <section>\n      <h6>Estimate</h6>\n      {getText(data, !!isStale)}\n    </section>\n  );\n};\n\nexport default Estimate;\n","export default \"#!/usr/bin/env node\\n\\n// external modules required: node-fetch, timing-functions\\nconst fetch = require('node-fetch');\\nconst sleep = require('timing-functions').sleep;\\n\\n<% if (fileType === 'fasta') { %>\\nconst DESCRIPTION_SEPARATOR = '|';\\nconst CHUNK_OF_TEXT_OF_EIGHTY_CHARACTERS = /(.{1,80})/g;\\n\\nconst processItem = function* ({\\n  metadata: { accession, source_database, name, source_organism},<% if (subset) { %>\\n  entries: [{ entry_protein_locations: matches }],<% } %>\\n  extra_fields: { sequence },\\n}) {<% if (subset) { %>\\n  for (const [index, match] of matches.entries) {\\n    // generate description line\\n    yield `>${[\\n      accession,\\n      `match:${index + 1}/${matches.length}`\\n      `subsequence:${match.fragments.map(({ start, end }) => `${start}-${end}`).join(';')}`\\n      source_database,\\n      name,\\n      `taxID:${source_organism.taxId}`\\n    ].join(DESCRIPTION_SEPARATOR)}}\\\\n`;\\n    // generate sequence\\n    yield match.fragments.map(\\n      ({ start, end }) => sequence.substring(start - 1, end)\\n    ).join('-').replace(CHUNK_OF_TEXT_OF_EIGHTY_CHARACTERS, '$1\\\\n');\\n  }<% } else { %>\\n  // generate description line\\n  yield `>${\\n    [accession, source_database, name, `taxID:${source_organism.taxId}`]\\n      .join(DESCRIPTION_SEPARATOR)\\n  }}\\\\n`;\\n  // generate sequence\\n  yield sequence.replace(CHUNK_OF_TEXT_OF_EIGHTY_CHARACTERS, '$1\\\\n');<% } %>\\n};\\n<% } else if (fileType === 'accession') { %>\\nconst processItem = function* ({ metadata: { accession } }) {\\n  yield `${accession}\\\\n`;\\n};\\n<% } else if (fileType === 'json' || fileType === 'ndjson') { %>\\nconst processItem = function* (item) {\\n  yield JSON.stringify(item);<% if (fileType === 'ndjson') { %>\\n  yield '\\\\n';<% } %>\\n<% } else if (fileType === 'tsv') { %>\\nconst isObject = o => o instanceof Object && o.constructor === Object;\\n\\nconst parseItems = items => Array.isArray(items) ? items.join() : \\\"\\\";\\n\\nconst parseMemberDatabases = dbs => isObject(dbs)\\n  ? Object.entries(dbs)\\n      .map(([db,entries]) => `${db}:${Object.keys(entries).join()}`)\\n      .join()\\n  : \\\"\\\"\\n\\nconst parseGoTerms = gos => Array.isArray(gos) ? gos.map(go=>go.identifier).join() : \\\"\\\";\\n\\nconst parseLocations = locations =>\\n  locations && Array.isArray(locations)\\n    ? locations\\n        .map(({ fragments }) =>\\n          fragments.map(({ start, end }) => `${start}..${end}`).join(','),\\n        )\\n        .join(',')\\n    : '';\\n\\nconst parseGroupColumn = (item, selector) => {\\n  const [main, selectorInGoup] = selector.split(\\\"[*]\\\");\\n  return item[main]\\n    .map(\\n      group => parseColumn(\\n        group[selectorInGoup.slice(2,-2)],\\n        selector,\\n      )\\n    ).join()\\n\\n}\\nconst parseColumn = (value, selector) => {\\n  if (value === null) \\n    return \\\"\\\"\\n  else if (selector.indexOf(\\\"member_databases\\\") !== -1)\\n    return parseMemberDatabases(value);\\n  else if (selector.indexOf(\\\"go_terms\\\") !== -1)\\n    return parseGoTerms(value);\\n  else if (selector.indexOf(\\\"children\\\") !== -1)\\n    return parseItems(value);\\n  else if (selector.indexOf(\\\"locations\\\") !== -1)\\n    return parseLocations(value);\\n  return \\\"\\\" + value;\\n};\\nconst processItem = function* (item) {\\n  let row = \\\"\\\";\\n  <% for (column of columns) {\\n       if (column.indexOf(\\\"[*]\\\") !== -1) {\\n       %>row += parseGroupColumn(item, '<%= column %>') + \\\"\\\\t\\\";\\n  <%   } else {\\n       %>row += parseColumn(<%= path2code(column, \\\"item\\\") %>, '<%= column %>') + \\\"\\\\t\\\";\\n  <%   }\\n  } %>\\n  row += \\\"\\\\n\\\";\\n  yield row;\\n};\\n\\n<% } %>\\n\\nconst main = async function* (startURL) {\\n  let next = startURL;<% if (fileType === 'json') { %>\\n  let first = true;\\n  yield `{\\\\n\\\"results\\\": [\\\\n`;<% } %>\\n  while (next) {\\n    const response = await fetch(\\n      next,\\n      { headers: { Accept: 'application/json' } }\\n    );\\n    // If the server sent a timeout response…\\n    if (response.status === 408) {\\n      // …wait a bit for the server to process the query in the background…\\n      await sleep(60000);\\n      // …then continue this loop with the same URL\\n      continue;\\n    } else if (response.status === 204) {\\n      yield '\\\\n]\\\\n}\\\\n';\\n      break;\\n    }\\n    const payload = await response.json();\\n    for (const item of payload.results) {<% if (fileType === 'json') { %>\\n      if (first) {\\n        yield '\\\\n';\\n        first = false;\\n      } else {\\n        yield ',\\\\n';\\n      }<% } %>\\n      yield* processItem(item);\\n    }\\n    next = payload.next;<% if (fileType === 'json') { %>\\n    if (!next) {\\n      yield '\\\\n]\\\\n}\\\\n';\\n    }<% } %>\\n    // Don't overload the server, give it a bit of time before asking for more\\n    if (next) await sleep(1000);\\n  }\\n};\\n\\nlet BASE_URL = '<%= url %><%= url.indexOf('?')===-1 ? '?' : '&' %>page_size=200<%= fileType === 'fasta' ? '&extra_fields=sequence' : '' %>';\\n<% if (fileType === \\\"tsv\\\" && columns.some(x => x.indexOf(\\\"extra_fields.counters\\\")>=0)) { \\n%>BASE_URL += \\\"&extra_fields=counters\\\"\\n<% } %>\\n  \\nif (require.main === module) {\\n  // If used from the command line, will write data to stdout asap\\n  const mainWriteToStdout = async () => {\\n    const process = require('process');\\n    // If pipe is interrupted, it might be normal, just exit\\n    process.stdout.on(\\n      'error',\\n      ({ code }) => process.exit(code === 'EPIPE' ? 0 : 1)\\n    );\\n    for await (const output of main(BASE_URL)) {\\n      process.stdout.write(output);\\n    }\\n  }\\n  mainWriteToStdout();\\n} else {\\n  // If used as a module, can be used as an async generator\\n  module.exports = (baseURL = BASE_URL) => main(baseURL);\\n}\\n\";","// extracted by mini-css-extract-plugin\nexport default {\"controls\":\"DownloadForm_style__controls___b4\",\"input-group-field\":\"DownloadForm_style__input-group-field___bf\",\"download-form\":\"DownloadForm_style__download-form___db\",\"button-group\":\"DownloadForm_style__button-group___e5\",\"invalid-accession\":\"DownloadForm_style__invalid-accession___cf\"};","import React, { FormEvent, PureComponent, RefObject } from 'react';\nimport { connect } from 'react-redux';\nimport { template } from 'lodash-es';\nimport ClipboardJS from 'clipboard';\n\nimport { Light as SyntaxHighlighter } from 'react-syntax-highlighter';\nimport python from 'react-syntax-highlighter/dist/esm/languages/hljs/python';\nimport js from 'react-syntax-highlighter/dist/esm/languages/hljs/javascript';\nimport perl from 'react-syntax-highlighter/dist/esm/languages/hljs/perl';\nimport docco from 'react-syntax-highlighter/dist/esm/styles/hljs/docco';\n\nimport Callout from 'components/SimpleCommonComponents/Callout';\nimport { Button } from 'components/SimpleCommonComponents/Button';\nimport blockEvent from 'utils/block-event';\nimport { addToast } from 'actions/creators';\n\nimport jsRaw from 'raw-loader!../../../snippets/template.js.tmpl';\nimport pythonRaw from 'raw-loader!../../../snippets/template.py.tmpl';\nimport perlRaw from 'raw-loader!../../../snippets/template.pl.tmpl';\n\nimport cssBinder from 'styles/cssBinder';\n\nimport style from '../style.css';\nimport fonts from 'EBI-Icon-fonts/fonts.css';\nimport ebiGlobalStyles from 'ebi-framework/css/ebi-global.css';\nimport buttonCSS from 'components/SimpleCommonComponents/Button/style.css';\n\nconst css = cssBinder(style, fonts, ebiGlobalStyles, buttonCSS);\n\nSyntaxHighlighter.registerLanguage('javascript', js);\nSyntaxHighlighter.registerLanguage('python', python);\nSyntaxHighlighter.registerLanguage('perl', perl);\n\n// Need to specify that, otherwise tries to interpolate ES2015 template strings\nconst options = { interpolate: /<%=([\\s\\S]+?)%>/g };\nconst lut = new Map([\n  [\n    'py',\n    {\n      template: template(pythonRaw, options),\n      type: 'application/x-python',\n      syntax: 'python',\n    },\n  ],\n  [\n    'pl',\n    {\n      template: template(perlRaw, options),\n      type: 'application/x-perl',\n      syntax: 'perl',\n    },\n  ],\n  [\n    'js',\n    {\n      template: template(jsRaw, options),\n      type: 'application/javascript',\n      syntax: 'javascript',\n    },\n  ],\n]);\n\nconst TTL = 3000; // keep notification about copy to clipboard for 3 seconds\n\ntype Props = {\n  addToast: typeof addToast;\n  fileType: string;\n  url: string;\n  subset: boolean;\n  columns: Array<string>;\n  path2code: (path: string, varName: string) => string;\n  path2perl: (path: string, varName: string) => string;\n};\n\ntype State = {\n  language: string;\n  code?: string | null;\n  href?: string | null;\n};\n\nexport class Snippet extends PureComponent<Props, State> {\n  _ref: RefObject<HTMLButtonElement>;\n  _clipboard?: ClipboardJS;\n\n  constructor(props: Props) {\n    super(props);\n    this.state = { language: 'py', code: null, href: null };\n    this._ref = React.createRef();\n  }\n\n  static getDerivedStateFromProps(nextProps: Props, prevState: State) {\n    const langInfo = lut.get(prevState.language);\n    if (!langInfo) return null;\n    const code = langInfo.template(nextProps).replace(/\\n{2,}/g, '\\n\\n');\n\n    if (code === prevState.code) return null;\n\n    if (prevState.href) URL.revokeObjectURL(prevState.href);\n    const href = URL.createObjectURL(new Blob([code], { type: langInfo.type }));\n\n    return { code, href };\n  }\n\n  componentDidMount() {\n    if (!this._ref.current) return;\n    this._clipboard = new ClipboardJS(this._ref.current, {\n      text: () => this.state.code || '',\n    });\n    this._clipboard.on('success', () =>\n      this.props.addToast(\n        {\n          title: 'Copy successful',\n          body: 'This snippet of code is now in your clipboard',\n          ttl: TTL,\n        },\n        'clipboard',\n      ),\n    );\n    this._clipboard.on('error', () =>\n      this.props.addToast(\n        {\n          title: 'Error while copying',\n          body: 'An error was encountered while trying to copy this snippet of code in your clipboard',\n          ttl: TTL,\n          className: css('alert'),\n        },\n        'clipboard',\n      ),\n    );\n  }\n\n  componentWillUnmount() {\n    if (this._clipboard) this._clipboard.destroy();\n  }\n\n  _handleChange = blockEvent(({ target }: FormEvent<HTMLSelectElement>) => {\n    const { value: language } = target as HTMLSelectElement;\n    this.setState({ language });\n  });\n\n  render() {\n    const { language, code, href } = this.state;\n    return (\n      <section>\n        <h6>Code snippet</h6>\n        <p>\n          We generally recommend you download the results of your queries\n          programatically rather than through the web browser. Downloading large\n          lists of results within the browser can use up a lot of memory. If you\n          notice that your browser crashes when downloading one of those\n          generated files, it is <strong>very likely</strong> to be because your\n          computer is running out of memory.\n        </p>\n        <p>\n          To help you download data programmatically, we have generated a\n          snippet of code for you below. You can select a programming language\n          from the list below, copy or download the code into a text file and\n          then run the downloaded code via the selected programming language in\n          a terminal. If you are getting started with programming we recommend\n          looking into\n          <a href=\"https://www.python.org/about/gettingstarted\"> Python.</a>\n        </p>\n        <div>\n          <label>\n            Select your language:\n            <select\n              onChange={this._handleChange}\n              onBlur={this._handleChange}\n              value={language}\n            >\n              <option value=\"py\">Python3</option>\n              <option value=\"pl\">Perl (version 5)</option>\n              <option value=\"js\">JavaScript (node, version ≥ 10)</option>\n            </select>\n          </label>\n          <Button type=\"secondary\" ref={this._ref} icon=\"icon-copy\">\n            Copy to clipboard\n          </Button>{' '}\n          <a\n            className={css(\n              'vf-button',\n              'vf-button--secondary',\n              'vf-button--sm',\n            )}\n            download={`script-InterPro.${language}`}\n            href={href || ''}\n          >\n            <span\n              className={css(\n                'icon',\n                'icon-common',\n                'ico-neutral',\n                'icon-download',\n              )}\n            ></span>{' '}\n            Download\n          </a>\n          {language === 'js' && (\n            <Callout type=\"info\">\n              This script requires the packages: <code>node-fetch</code> and{' '}\n              <code>timing-functions</code> either globally or in the local{' '}\n              <code>node_modules</code>\n            </Callout>\n          )}\n          <SyntaxHighlighter language={lut.get(language)?.syntax} style={docco}>\n            {code || ''}\n          </SyntaxHighlighter>\n        </div>\n      </section>\n    );\n  }\n}\n\nexport default connect(undefined, { addToast })(Snippet);\n","export default \"#!/usr/bin/env python3\\n\\n# standard library modules\\nimport sys, errno, re, json, ssl\\nfrom urllib import request\\nfrom urllib.error import HTTPError\\nfrom time import sleep\\n\\nBASE_URL = \\\"<%= url %><%= url.indexOf('?')===-1 ? '?' : '&' %>page_size=200<%= fileType === 'fasta' ? '&extra_fields=sequence' : '' %>\\\"\\n<% if (fileType === \\\"tsv\\\" && columns.some(x => x.indexOf(\\\"extra_fields.counters\\\")>=0)) { \\n%>BASE_URL += \\\"&extra_fields=counters\\\"<% \\n}\\nif (fileType === 'fasta') { %>\\nHEADER_SEPARATOR = \\\"|\\\"\\nLINE_LENGTH = 80\\n<% }\\n\\nif (fileType === \\\"tsv\\\") { %>\\n\\ndef parse_items(items):\\n  if type(items)==list:\\n    return \\\",\\\".join(items)\\n  return \\\"\\\"\\ndef parse_member_databases(dbs):\\n  if type(dbs)==dict:\\n    return \\\";\\\".join([f\\\"{db}:{','.join(dbs[db])}\\\" for db in dbs.keys()])\\n  return \\\"\\\"\\ndef parse_go_terms(gos):\\n  if type(gos)==list:\\n    return \\\",\\\".join([go[\\\"identifier\\\"] for go in gos])\\n  return \\\"\\\"\\ndef parse_locations(locations):\\n  if type(locations)==list:\\n    return \\\",\\\".join(\\n      [\\\",\\\".join([f\\\"{fragment['start']}..{fragment['end']}\\\" \\n                for fragment in location[\\\"fragments\\\"]\\n                ])\\n      for location in locations\\n      ])\\n  return \\\"\\\"\\ndef parse_group_column(values, selector):\\n  return \\\",\\\".join([parse_column(value, selector) for value in values])\\n\\ndef parse_column(value, selector):\\n  if value is None:\\n    return \\\"\\\"\\n  elif \\\"member_databases\\\" in selector:\\n    return parse_member_databases(value)\\n  elif \\\"go_terms\\\" in selector: \\n    return parse_go_terms(value)\\n  elif \\\"children\\\" in selector: \\n    return parse_items(value)\\n  elif \\\"locations\\\" in selector:\\n    return parse_locations(value)\\n  return str(value)\\n<% } %>\\n\\ndef output_list():\\n  #disable SSL verification to avoid config issues\\n  context = ssl._create_unverified_context()\\n\\n  next = BASE_URL\\n  last_page = False\\n\\n  <% if (fileType === \\\"json\\\") { %>\\n  #json header\\n  sys.stdout.write(\\\"{ \\\\\\\"results\\\\\\\": [\\\\n\\\")\\n  <% } %>\\n  attempts = 0\\n  while next:\\n    try:\\n      req = request.Request(next, headers={\\\"Accept\\\": \\\"application/json\\\"})\\n      res = request.urlopen(req, context=context)\\n      # If the API times out due a long running query\\n      if res.status == 408:\\n        # wait just over a minute\\n        sleep(61)\\n        # then continue this loop with the same URL\\n        continue\\n      elif res.status == 204:\\n        #no data so leave loop\\n        break\\n      payload = json.loads(res.read().decode())\\n      next = payload[\\\"next\\\"]\\n      attempts = 0\\n      if not next:\\n        last_page = True\\n    except HTTPError as e:\\n      if e.code == 408:\\n        sleep(61)\\n        continue\\n      else:\\n        # If there is a different HTTP error, it wil re-try 3 times before failing\\n        if attempts < 3:\\n          attempts += 1\\n          sleep(61)\\n          continue\\n        else:\\n          sys.stderr.write(\\\"LAST URL: \\\" + next)\\n          raise e\\n\\n    for i, item in enumerate(payload[\\\"results\\\"]):\\n      <% if (fileType === \\\"json\\\") { %>\\n      sys.stdout.write(json.dumps(item))\\n      # for indented output replace the above line with the following\\n      # sys.stdout.write(json.dumps(item, indent=4))\\n      # for 1 record per line uncomment the following line\\n      # sys.stdout.write(\\\"\\\\n\\\")\\n\\n      if last_page and i+1 == len(payload[\\\"results\\\"]):\\n        sys.stdout.write(\\\"\\\")\\n      else:\\n        sys.stdout.write(\\\",\\\\n\\\")\\n      <% } else if (fileType === \\\"tsv\\\") { \\n           for (column of columns) {\\n             if (column.indexOf(\\\"[*]\\\") !== -1) {\\n               %>sys.stdout.write(parse_group_column(<%= path2code(column, \\\"item\\\") %>, '<%= column %>') + \\\"\\\\t\\\")\\n      <% \\n             } else {\\n               %>sys.stdout.write(parse_column(<%= path2code(column, \\\"item\\\") %>, '<%= column %>') + \\\"\\\\t\\\")\\n      <%     } \\n           }%>sys.stdout.write(\\\"\\\\n\\\")\\n      <% } else if (fileType === \\\"fasta\\\") { %>\\n      entries = None\\n      elif (\\\"entries\\\" in item):\\n        entries = item[\\\"entries\\\"]\\n      \\n      if entries is not None:\\n        entries_header = \\\"-\\\".join(\\n          [entry[\\\"accession\\\"] + \\\"(\\\" + \\\";\\\".join(\\n            [\\n              \\\",\\\".join(\\n                [ str(fragment[\\\"start\\\"]) + \\\"...\\\" + str(fragment[\\\"end\\\"]) \\n                  for fragment in locations[\\\"fragments\\\"]]\\n              ) for locations in entry[\\\"entry_protein_locations\\\"]\\n            ]\\n          ) + \\\")\\\" for entry in entries]\\n        )\\n        sys.stdout.write(\\\">\\\" + item[\\\"metadata\\\"][\\\"accession\\\"] + HEADER_SEPARATOR\\n                          + entries_header + HEADER_SEPARATOR\\n                          + item[\\\"metadata\\\"][\\\"name\\\"] + \\\"\\\\n\\\")\\n      else:\\n        sys.stdout.write(\\\">\\\" + item[\\\"metadata\\\"][\\\"accession\\\"] + HEADER_SEPARATOR + item[\\\"metadata\\\"][\\\"name\\\"] + \\\"\\\\n\\\")\\n\\n      seq = item[\\\"extra_fields\\\"][\\\"sequence\\\"]\\n      fastaSeqFragments = [seq[0+i:LINE_LENGTH+i] for i in range(0, len(seq), LINE_LENGTH)]\\n      for fastaSeqFragment in fastaSeqFragments:\\n        sys.stdout.write(fastaSeqFragment + \\\"\\\\n\\\")\\n      <% } else { \\n        %>sys.stdout.write(item[\\\"metadata\\\"][\\\"accession\\\"] + \\\"\\\\n\\\")<% \\n      } %>\\n    # Don't overload the server, give it time before asking for more\\n    if next:\\n      sleep(1)\\n\\n<% if (fileType === \\\"json\\\") { %>\\n  #json footer\\n  sys.stdout.write(\\\"\\\\n] }\\\\n\\\")\\n  <% } %>\\n\\n\\nif __name__ == \\\"__main__\\\":\\n  output_list()\\n\";","export default \"#!/usr/bin/env perl\\n\\nuse strict;\\nuse warnings;\\nuse LWP::UserAgent;\\nuse JSON qw( encode_json decode_json );\\nuse Data::Dumper;\\n\\n# Switching off SSL verification\\n$ENV{'PERL_LWP_SSL_VERIFY_HOSTNAME'} = 0;\\n\\nmy $BASE_URL = \\\"<%= url %><%= url.indexOf('?')===-1 ? '?' : '&' %>page_size=200<%= fileType === 'fasta' ? '&extra_fields=sequence' : '' %>\\\";\\n<% if (fileType === \\\"tsv\\\" && columns.some(x => x.indexOf(\\\"extra_fields.counters\\\")>=0)) { %>\\n  $BASE_URL .= \\\"&extra_fields=counters\\\"\\n<% }  if (fileType === 'fasta') { %>\\n  my $HEADER_SEPARATOR = \\\"|\\\";\\n  my $LINE_LENGTH = 80;\\n<% } if (fileType === \\\"tsv\\\") { %>\\n  sub parseItems {\\n    my (@items) = @_;\\n    my $tsvValue = \\\"\\\";\\n    $tsvValue = join(\\\",\\\", @items) if (@items);\\n    return $tsvValue;\\n  }\\n\\n  sub parseMemberDatabases {\\n    my ($dbs) = @_;\\n    my $tsvValue = \\\"\\\";\\n    foreach my $db (keys %{$dbs}) {\\n      $tsvValue .= \\\"$db:\\\" . join(\\\",\\\", keys $dbs->{$db}) . \\\";\\\";\\n    }\\n    $tsvValue =~ s/\\\\;$//; #remove terminal semi-colon\\n    return $tsvValue;\\n  }\\n\\n  sub parseGoTerms {\\n    my ($terms) = @_;\\n    my $tsvValue = \\\"\\\";\\n    ($tsvValue = join \\\",\\\", map {$_->{'identifier'}} @{$terms}) if (@{$terms});\\n    return $tsvValue;\\n  }\\n\\n  sub parseLocations {\\n    my ($locations) = @_;\\n    my $tsvValue = \\\"\\\";\\n    my (@tsvValues);\\n    foreach my $location (@{$locations}) {\\n      push (@tsvValues,\\n            join \\\",\\\",\\n            map {$_->{'start'}.\\\"..\\\".$_->{'end'}}\\n            @{$location->{'fragments'}});\\n    }\\n    $tsvValue = join \\\",\\\", @tsvValues if (@tsvValues);\\n    return $tsvValue;\\n  }\\n\\n  sub parseGroupColumn {\\n    my ($key, $values, $selector) = @_;\\n    my @tsvValues;\\n    foreach my $value (@{$values}) {\\n      push(@tsvValues, parseColumn($value->{$key}, $selector));\\n    }\\n    my $tsvValue = \\\"\\\";\\n    $tsvValue = join \\\",\\\", @tsvValues if (@tsvValues);\\n    return $tsvValue;\\n  }\\n\\n  sub parseColumn {\\n    my ($value, $selector) = @_;\\n    unless ($value) {\\n      return \\\"\\\"\\n    }\\n    if ($selector =~ /member_databases/ ) {\\n      return parseMemberDatabases($value);\\n    }\\n    if ($selector =~ /go_terms/) {\\n      return parseGoTerms($value);\\n    }\\n    if ($selector =~ /children/) {\\n      return parseItems($value);\\n    }\\n    if ($selector =~ /locations/) {\\n      return parseLocations($value);\\n    }\\n    return \\\"$value\\\";\\n  }\\n<% } %>\\nsub main {\\n  my $agent = LWP::UserAgent->new();\\n\\n  my $next = $BASE_URL;\\n  my $last_page = 0;\\n  <% if (fileType === \\\"json\\\") { %>\\n  print \\\"{ \\\\\\\"results\\\\\\\": [\\\\n\\\";\\n  <% } %>\\n  while ($next) {\\n    my $req = HTTP::Request->new(\\n      GET => $next,\\n      HTTP::Headers->new(\\\"Accept\\\" => \\\"application/json\\\"),\\n      ssl_opts =>  {\\n        SSL_verify_mode => 0\\n      }\\n    );\\n    my $res = $agent->request($req);\\n    if ($res->code == 408) {\\n      #wait just over a minute\\n      sleep(61);\\n      # then continue this loop with the same URL\\n      next;\\n    } elsif ($res->code == 204) {\\n      #no data matching query\\n      last;\\n    }\\n    my $payload = decode_json($res->content);\\n    $next = $payload->{\\\"next\\\"};\\n    unless (defined $next){\\n      $last_page = 1;\\n    }\\n    my $results = $payload->{\\\"results\\\"};\\n    for (my $i=0; $i < (@{$results}); $i++) {\\n      my $item = $results->[$i];\\n      <% if (fileType === \\\"json\\\") { %>\\n      print encode_json($item);\\n      unless ($last_page && $i+1 == (@{$results})){\\n        print \\\",\\\\n\\\";\\n      }\\n      <% } else if (fileType === \\\"tsv\\\") { %>\\n      my $value;\\n      <%\\n          for (column of columns) {\\n             if (column.indexOf(\\\"[*]\\\") !== -1) {\\n      %>\\n      $value = parseGroupColumn(<%= path2perl(column, \\\"$item\\\") %>, '<%= column %>');\\n      <% } else { %> \\n      $value = parseColumn(<%= path2perl(column, \\\"$item\\\") %>, '<%= column %>');\\n      <% } %>\\n      print \\\"$value\\\\t\\\";\\n      <% } %>\\n        print \\\"\\\\n\\\";\\n      <% } else if (fileType === \\\"fasta\\\") { %>\\n      my $entries;\\n      if (defined $item->{\\\"entries\\\"}){\\n        $entries=$item->{\\\"entries\\\"};\\n      }\\n      if ($entries){\\n        print \\\">$item->{metadata}->{accession}$HEADER_SEPARATOR\\\";\\n        my $DASH=\\\"\\\";\\n        foreach my $entry (@{$entries}) {\\n          print \\\"$DASH$entry->{accession}(\\\";\\n          my $SEMICOLON = \\\"\\\";\\n          foreach my $locations  (@{$entry->{\\\"entry_protein_locations\\\"}}) {\\n            print \\\"$SEMICOLON\\\";\\n            my $COMMA = \\\"\\\";\\n            foreach my $fragment (@{$locations->{\\\"fragments\\\"}}) {\\n              my $start = $fragment->{\\\"start\\\"};\\n              my $end = $fragment->{\\\"end\\\"};\\n              print \\\"$COMMA$start...$end\\\";\\n              $COMMA=\\\",\\\";\\n            }\\n            $SEMICOLON = \\\";\\\";            \\n          }\\n          $DASH=\\\"-\\\";\\n          print \\\")\\\";\\n        }\\n        print \\\"$HEADER_SEPARATOR$item->{metadata}->{name}\\\\n\\\";\\n\\n      } else {\\n        print \\\">$item->{metadata}->{accession}$HEADER_SEPARATOR$item->{metadata}->{name}\\\\n\\\";\\n      }\\n      my $seq =  $item->{\\\"extra_fields\\\"}{\\\"sequence\\\"};\\n      foreach my $fastaSeqFragment (unpack(\\\"(A$LINE_LENGTH)*\\\", $seq)) {\\n        print \\\"$fastaSeqFragment\\\\n\\\";\\n      }\\n      <% } else { %>\\n      print $item->{'metadata'}->{'accession'}.\\\"\\\\n\\\";\\n      <% } %>\\n    }\\n    if ($next) {\\n      sleep(1);\\n    }\\n  }\\n  <% if (fileType === \\\"json\\\") { %>\\n  print \\\"] }\\\\n\\\";\\n  <% } %>\\n}\\n\\nmain();\\n\";","import React, { PureComponent } from 'react';\nimport cssBinder from 'styles/cssBinder';\n\nimport styles from './style.css';\n\nconst css = cssBinder(styles);\n\ntype Props = {\n  download?: DownloadProgress;\n};\n\nexport default class ProgressAnimation extends PureComponent<Props> {\n  render() {\n    const { download } = this.props;\n    if (!download) return null;\n    const { progress, successful } = download;\n    const downloading = Number.isFinite(progress) && !successful;\n    let visualProgress = 0;\n    if (downloading) {\n      if (progress) {\n        visualProgress = progress * 0.9 + 0.05;\n      } else {\n        visualProgress = 0.05;\n      }\n    } else if (progress === 1) {\n      visualProgress = 1.1;\n    }\n\n    return (\n      <>\n        <svg width=\"0\" height=\"0\">\n          <defs>\n            <filter id=\"gooey-filter\">\n              <feGaussianBlur\n                in=\"SourceGraphic\"\n                result=\"blurred\"\n                stdDeviation=\"10\"\n              />\n              <feColorMatrix\n                in=\"blurred\"\n                result=\"matrix\"\n                mode=\"matrix\"\n                values=\"1 0 0 0 0  0 1 0 0 0  0 0 1 0 0  0 0 0 18 -7\"\n              />\n              <feBlend in=\"SourceGraphic\" in2=\"matrix\" />\n            </filter>\n          </defs>\n        </svg>\n        <div\n          className={css('main-container')}\n          style={{ opacity: downloading ? 1 : 0 }}\n        >\n          <div className={css('filter-container', 'absolute')}>\n            <div className={css('left', 'side', 'absolute')} />\n            <div\n              className={css('moving-container', 'absolute')}\n              style={{ transform: `translateX(${visualProgress * 100}%)` }}\n            >\n              <div className={css('trail', 'absolute')} />\n              <div className={css('trail', 'ball', 'absolute')} />\n              <div className={css('progress', 'ball', 'absolute')}>\n                <span>{Math.floor((progress || 0) * 100)}%</span>\n              </div>\n            </div>\n            <div className={css('right', 'side', 'absolute')} />\n          </div>\n          <div className={css('left', 'side', 'absolute')} />\n          <div className={css('right', 'side', 'absolute')} />\n        </div>\n      </>\n    );\n  }\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"absolute\":\"ProgressAnimation_style__absolute___c9\",\"main-container\":\"ProgressAnimation_style__main-container___f2\",\"side\":\"ProgressAnimation_style__side___c8\",\"left\":\"ProgressAnimation_style__left___ac\",\"right\":\"ProgressAnimation_style__right___e6\",\"filter-container\":\"ProgressAnimation_style__filter-container___a0\",\"moving-container\":\"ProgressAnimation_style__moving-container___e8\",\"trail\":\"ProgressAnimation_style__trail___c0\",\"ball\":\"ProgressAnimation_style__ball___d8\",\"progress\":\"ProgressAnimation_style__progress___d4\"};","import React, { useRef, useEffect, useState, FormEvent } from 'react';\nimport { noop } from 'lodash-es';\n\nimport Tooltip from 'components/SimpleCommonComponents/Tooltip';\nimport { Button } from 'components/SimpleCommonComponents/Button';\n\nimport cssBinder from 'styles/cssBinder';\n\nimport fonts from 'EBI-Icon-fonts/fonts.css';\nimport local from '../../style.css';\nimport InputGroup from '../../InputGroup';\n\nconst css = cssBinder(local, fonts);\n\nexport const getTextAfterLastSlash = (text: string) =>\n  text.slice(1 + text.lastIndexOf('/'));\n\ntype Props = {\n  data?: OpenAPIParameter;\n  dataComponents?: OpenAPIComponents;\n  value?: string;\n  onRemove: () => void;\n  onChange: (event: FormEvent) => void;\n};\n\nconst SelectedParameter = ({\n  data,\n  dataComponents,\n  value,\n  onRemove,\n  onChange,\n}: Props) => {\n  const buttonEl = useRef(null);\n  useEffect(() => {\n    onChange({ target: buttonEl.current } as unknown as FormEvent);\n  }, []);\n  if (!data || !dataComponents) return null;\n  let schema = data.schema;\n  const isValid = (value?: string) => {\n    if (!value) return false;\n    const pattern = (schema as OpenAPIParameterSchema)?.pattern;\n    if (pattern) {\n      const regex = RegExp(pattern || '');\n      return regex.test(value);\n    }\n    return true;\n  };\n  const [valid, setValid] = useState(isValid(value));\n  let inputType = 'text';\n  const ref = (data.schema as OpenAPIReference).$ref;\n  if (ref) {\n    const key = getTextAfterLastSlash(ref || '');\n    schema = dataComponents.schemas[key];\n  }\n  const type = (schema as OpenAPIParameterSchema).type;\n  const options = (schema as OpenAPIParameterSchema).enum;\n  if (type === 'string' && options) {\n    inputType = options.length === 1 ? 'checkbox' : 'select';\n  }\n\n  const validatePattern = (event: FormEvent) => {\n    setValid(isValid((event.target as HTMLInputElement).value));\n  };\n\n  const name = `search.${data.name}`;\n  return (\n    <InputGroup\n      label={\n        <>\n          {data.name}{' '}\n          <Tooltip title={`<pre>${data.description}</pre>`}>\n            <span\n              className={css('small', 'icon', 'icon-common')}\n              data-icon=\"&#xf129;\"\n              aria-label={`description for attribute: ${data.name}`}\n            />\n          </Tooltip>\n        </>\n      }\n      input={\n        <>\n          {inputType === 'select' && (\n            <select\n              className={css('new-input-group-field')}\n              name={name}\n              value={value}\n              onChange={noop}\n              onBlur={noop}\n            >\n              {(schema as OpenAPIParameterSchema).enum?.map((option) => (\n                <option key={option}>{option}</option>\n              ))}\n            </select>\n          )}\n          {inputType === 'checkbox' && (\n            <input\n              name={name}\n              type=\"text\"\n              readOnly\n              className={css('new-input-group-field')}\n              value={data.name}\n            />\n          )}\n          {inputType === 'text' && (\n            <input\n              value={value}\n              onChange={validatePattern}\n              onBlur={noop}\n              name={name}\n              type=\"text\"\n              style={{\n                backgroundColor: valid ? 'inherit' : '#fa7e6e',\n              }}\n              className={css('new-input-group-field')}\n            />\n          )}\n        </>\n      }\n      button={\n        <Button onClick={onRemove} ref={buttonEl}>\n          Remove\n        </Button>\n      }\n    />\n  );\n};\n\nexport default SelectedParameter;\n","import React, { useState, useEffect, FormEvent } from 'react';\n\nimport { createSelector } from 'reselect';\nimport { format } from 'url';\n\nimport loadData from 'higherOrder/loadData/ts';\nimport { cleanUpMultipleSlashes } from 'higherOrder/loadData/defaults';\n\nimport SelectedParameter, { getTextAfterLastSlash } from './SelectedParameter';\n\nimport cssBinder from 'styles/cssBinder';\n\nimport local from '../style.css';\n\nconst css = cssBinder(local);\n\ntype Props = {\n  type: string;\n  search?: Record<string, string>;\n  onChange: (event: FormEvent) => void;\n};\ninterface LoadedProps extends Props, LoadDataProps<OpenAPIPayload> {}\n\nconst URLParameters = ({ type, data, search, onChange }: LoadedProps) => {\n  const [toAdd, setToAdd] = useState<string | null>(null);\n  const [toRemove, setToRemove] = useState<string | null>(null);\n  const payloadIsReady = !!data && !data.loading && data.ok && !!data.payload;\n  useEffect(() => {\n    if (toAdd) setToAdd(null);\n  });\n  useEffect(() => {\n    return () =>\n      payloadIsReady\n        ? onChange({ target: null } as unknown as FormEvent)\n        : undefined;\n  }, [toRemove]);\n  const selectedParameters = Object.keys(search || {});\n  if (toAdd) {\n    selectedParameters.push(toAdd);\n  }\n  if (toRemove) {\n    const pos = selectedParameters.indexOf(toRemove);\n    if (pos >= 0) {\n      selectedParameters.splice(pos, 1);\n    } else {\n      setToRemove(null);\n    }\n  }\n  if (!payloadIsReady) return null;\n  const parameters = Object.fromEntries(\n    (data.payload?.paths?.[`/${type}/{sourceDB}`]?.get?.parameters || [])\n      .filter((p) => p.$ref)\n      .map((p) => {\n        const key = getTextAfterLastSlash(p.$ref || '');\n        return [data.payload?.components.parameters?.[key]?.name, key];\n      }),\n  );\n  const parametersToChoose = Object.keys(parameters).filter(\n    (p) => p && selectedParameters.indexOf(p) === -1,\n  );\n  const handleChange = (evt: FormEvent) => {\n    setToAdd((evt.target as HTMLSelectElement).value);\n  };\n\n  return (\n    <div>\n      <label>\n        Add a modifier:\n        <select\n          name=\"add_modifier\"\n          value=\"\"\n          onChange={handleChange}\n          onBlur={handleChange}\n        >\n          <option value=\"\" disabled hidden style={{ color: 'gray' }}>\n            Please Choose...\n          </option>\n          {parametersToChoose.map((p, i) => (\n            <option key={i} value={p}>\n              {p}\n            </option>\n          ))}\n        </select>\n      </label>\n      {selectedParameters && selectedParameters.length > 0 && (\n        <fieldset className={css('fieldset')}>\n          <legend>Active Modifiers</legend>\n          {selectedParameters.map((p) => (\n            <SelectedParameter\n              key={p}\n              value={search?.[p]}\n              onChange={onChange}\n              onRemove={() => setToRemove(p)}\n              data={data.payload?.components.parameters?.[parameters[p]]}\n              dataComponents={data.payload?.components}\n            />\n          ))}\n        </fieldset>\n      )}\n    </div>\n  );\n};\n\nconst getURLforOpenAPI = createSelector(\n  (state: GlobalState) => state.settings.api,\n  ({ protocol, hostname, port, root }) =>\n    cleanUpMultipleSlashes(\n      format({\n        protocol,\n        hostname,\n        port,\n        pathname: `${root}/utils/openapi`,\n      }),\n    ),\n);\n\nexport default loadData({\n  getUrl: getURLforOpenAPI,\n  fetchOptions: {\n    responseType: 'yaml',\n  },\n} as LoadDataParameters)(URLParameters);\n","// @flow\nimport { get } from 'lodash-es';\nimport Papa from 'papaparse';\n\nconst regTag = /&lt;\\/?(p|ul|li)&gt;/gi;\nconst regtax =\n  /\\<taxon [^>]+>([^<]+)<\\/taxon>/gi; /* Remove TAG taxon and just keep the inside text part e.e <taxon tax_id=\"217897\">...</taxon> */\nconst reg =\n  /\\<[^\"].*?id=\"([^\"]+)\"\\/>/gi; /* all TAGS containing ID e.g. [<cite id=\"PUB00068465\"/>] <dbxref db=\"INTERPRO\" id=\"IPR009071\"/> */\n\nexport const decodeDescription = (\n  description /*: Array<string> */,\n) /*: string */ =>\n  description\n    .join('\\n')\n    .replace(regTag, '')\n    .replace(regtax, '$1')\n    .replace(reg, '$1')\n    .replace('[]', '')\n    .replace(/[\\n\\r]/g, '\\n')\n    .replace('()', '');\n\nconst mapToString =\n  (selector /*:: ?: string */, serializer /*:: ?: function  */) =>\n  (list /*: Array<mixed> */) =>\n    list\n      .map((item) => {\n        const value = selector ? get(item, selector) : item;\n        return serializer ? serializer(value) : value;\n      })\n      .join(';');\n\nconst locationsToString = (\n  locations /*:: ?: Array<{fragments: Array<{start:number, end:number}>}>  */,\n) =>\n  locations\n    ? locations\n        .map(({ fragments }) =>\n          fragments.map(({ start, end }) => `${start}..${end}`).join(','),\n        )\n        .join(',')\n    : '';\n\nconst domains2string = (pfam, ipro) =>\n  `${pfam.accession}{${pfam.name}}${\n    ipro ? `:${ipro.accession}{${ipro.name}}` : ''\n  }[${pfam.coordinates[0].fragments[0].start}-${\n    pfam.coordinates[0].fragments[0].end\n  }]`;\n\nconst IDADomainsToString = (domains) => {\n  if (!domains?.length) return '';\n  const pfamDomain = domains[0];\n  const iproDomain = domains?.[1];\n  if (!iproDomain) return domains2string(pfamDomain).replace(/,$/, '');\n  if (iproDomain.accession.startsWith('PF'))\n    return `${domains2string(pfamDomain)},${IDADomainsToString(\n      domains.slice(1),\n    )}`.replace(/,$/, '');\n  return `${domains2string(pfamDomain, iproDomain)},${IDADomainsToString(\n    domains.slice(2),\n  )}`.replace(/,$/, '');\n};\n\nexport const columns /*: {\n  entry: Object,\n  protein: Object,\n  structure: Object,\n  taxonomy: Object,\n  proteome: Object,\n  set: Object,\n  proteinEntry?: Object,\n  proteinStructure?: Object,\n  structureProtein?: Object,\n  structureEntry?: Object,\n  entryStructure?: Object,\n  entryProtein?: Object,\n} */ = {\n  entry: [\n    { name: 'Accession', selector: 'metadata.accession' },\n    { name: 'Name', selector: 'metadata.name' },\n    { name: 'Source Database', selector: 'metadata.source_database' },\n    { name: 'Type', selector: 'metadata.type' },\n    { name: 'Integrated Into', selector: 'metadata.integrated' },\n    {\n      name: 'Integrated Signatures',\n      selector: 'metadata.member_databases',\n      serializer: (dbs /*: Object */) =>\n        dbs\n          ? Object.keys(dbs)\n              .map((db) => Object.keys(dbs[db]).join(','))\n              .join(',')\n          : '',\n    },\n    {\n      name: 'GO Terms',\n      selector: 'metadata.go_terms',\n      serializer: (terms /*: Array<{identifier: string}> */) =>\n        terms ? terms.map((t) => t.identifier).join(',') : '',\n    },\n  ],\n  protein: [\n    { name: 'Accession', selector: 'metadata.accession' },\n    { name: 'Source Database', selector: 'metadata.source_database' },\n    { name: 'Name', selector: 'metadata.name' },\n    { name: 'Tax ID', selector: 'metadata.source_organism.taxId' },\n    { name: 'Tax Name', selector: 'metadata.source_organism.scientificName' },\n    { name: 'Length', selector: 'metadata.length' },\n  ],\n  structure: [\n    { name: 'Accession', selector: 'metadata.accession' },\n    { name: 'Source Database', selector: 'metadata.source_database' },\n    { name: 'Name', selector: 'metadata.name' },\n    { name: 'Experiment Type', selector: 'metadata.experiment_type' },\n    { name: 'Resolution', selector: 'metadata.resolution' },\n  ],\n  taxonomy: [\n    { name: 'Accession', selector: 'metadata.accession' },\n    { name: 'Source Database', selector: 'metadata.source_database' },\n    { name: 'Name', selector: 'metadata.name' },\n    { name: 'Parent', selector: 'metadata.parent' },\n    {\n      name: 'Children',\n      selector: 'metadata.children',\n      serializer: (children /*: Array<string> */) =>\n        children ? children.join(',') : '',\n    },\n    { name: 'Number of Entries', selector: 'extra_fields.counters.entries' },\n    { name: 'Number of Proteins', selector: 'extra_fields.counters.proteins' },\n  ],\n  proteome: [\n    { name: 'Accession', selector: 'metadata.accession' },\n    { name: 'Source Database', selector: 'metadata.source_database' },\n    { name: 'Name', selector: 'metadata.name' },\n    { name: 'Tax ID', selector: 'metadata.taxonomy' },\n    { name: 'Number of Entries', selector: 'extra_fields.counters.entries' },\n    { name: 'Number of Proteins', selector: 'extra_fields.counters.proteins' },\n  ],\n  set: [\n    { name: 'Accession', selector: 'metadata.accession' },\n    { name: 'Source Database', selector: 'metadata.source_database' },\n    { name: 'Name', selector: 'metadata.name' },\n    { name: 'Number of Entries', selector: 'extra_fields.counters.entries' },\n    { name: 'Number of Proteins', selector: 'extra_fields.counters.proteins' },\n  ],\n  genome3d: [\n    { name: 'Protein', selector: 'accession' },\n    { name: 'Description', selector: 'tooltipContent' },\n    { name: 'Evidence Code', selector: 'metadata.evidences.code' },\n    {\n      name: 'Evidence Source name',\n      selector: 'metadata.evidences.source.name',\n    },\n    { name: 'Evidence Source url', selector: 'metadata.evidences.source.url' },\n    {\n      name: 'Locations',\n      selector: 'locations',\n      serializer: locationsToString,\n    },\n  ],\n  ebisearch: [\n    { name: 'Accession', selector: 'id' },\n    { name: 'Name', selector: 'fields.name[0]' },\n    {\n      name: 'Description',\n      selector: 'fields.description',\n      serializer: decodeDescription,\n    },\n    { name: 'Source Database', selector: 'fields.source_database[0]' },\n  ],\n  ida: [\n    { name: 'IDA ID', selector: 'ida_id' },\n    { name: 'IDA Text', selector: 'ida' },\n    { name: 'Unique Proteins', selector: 'unique_proteins' },\n    { name: 'Representative Accession', selector: 'representative.accession' },\n    { name: 'Representative Length', selector: 'representative.length' },\n    {\n      name: 'Representative Domains',\n      selector: 'representative.domains',\n      serializer: IDADomainsToString,\n    },\n  ],\n};\ncolumns.proteinEntry = [\n  ...columns.protein,\n  { name: 'Entry Accession', selector: 'entries[0].accession' },\n  {\n    name: 'Matches',\n    selector: 'entries[0].entry_protein_locations',\n    serializer: locationsToString,\n  },\n];\ncolumns.proteinStructure = [\n  ...columns.protein,\n  {\n    name: 'Structure Accession',\n    selector: 'structures',\n    selectorInGroup: 'accession',\n    serializer: mapToString('accession'),\n  },\n  {\n    name: 'Chain',\n    selector: 'structures',\n    selectorInGroup: 'chain',\n    serializer: mapToString('chain'),\n  },\n  {\n    name: 'Structure Location',\n    selector: 'structures',\n    selectorInGroup: 'structure_protein_locations',\n    serializer: mapToString('structure_protein_locations', locationsToString),\n  },\n];\ncolumns.structureProtein = [\n  ...columns.structure,\n  {\n    name: 'Chains',\n    selector: 'proteins',\n    selectorInGroup: 'chain',\n    serializer: mapToString('chain'),\n  },\n  {\n    name: 'Proteins',\n    selector: 'proteins',\n    selectorInGroup: 'accession',\n\n    serializer: mapToString('accession'),\n  },\n  {\n    name: 'Structure Location',\n    selector: 'proteins',\n    selectorInGroup: 'structure_protein_locations',\n    serializer: mapToString('structure_protein_locations', locationsToString),\n  },\n];\ncolumns.structureEntry = [\n  ...columns.structure,\n  {\n    name: 'Chains',\n    selector: 'entries',\n    selectorInGroup: 'chain',\n    serializer: mapToString('chain'),\n  },\n  {\n    name: 'Proteins',\n    selector: 'entries',\n    selectorInGroup: 'protein',\n    serializer: mapToString('protein'),\n  },\n  {\n    name: 'Protein Length',\n    selector: 'entries',\n    selectorInGroup: 'protein_length',\n    serializer: mapToString('protein_length'),\n  },\n  {\n    name: 'Structure Location',\n    selector: 'entries',\n    selectorInGroup: 'structure_protein_locations',\n    serializer: mapToString('structure_protein_locations', locationsToString),\n  },\n  {\n    name: 'matches',\n    selector: 'entries',\n    selectorInGroup: 'entry_protein_locations',\n    serializer: mapToString('entry_protein_locations', locationsToString),\n  },\n];\ncolumns.entryStructure = [\n  ...columns.entry,\n  {\n    name: 'Chains',\n    selector: 'structures',\n    selectorInGroup: 'chain',\n    serializer: mapToString('chain'),\n  },\n  {\n    name: 'Proteins',\n    selector: 'structures',\n    selectorInGroup: 'protein',\n    serializer: mapToString('protein'),\n  },\n  {\n    name: 'Protein Length',\n    selector: 'structures',\n    selectorInGroup: 'protein_length',\n    serializer: mapToString('protein_length'),\n  },\n  {\n    name: 'Structure Location',\n    selector: 'structures',\n    selectorInGroup: 'structure_protein_locations',\n    serializer: mapToString('structure_protein_locations', locationsToString),\n  },\n  {\n    name: 'matches',\n    selector: 'structures',\n    selectorInGroup: 'entry_protein_locations',\n    serializer: mapToString('entry_protein_locations', locationsToString),\n  },\n];\ncolumns.entryProtein = [\n  ...columns.entry,\n  { name: 'Protein Accession', selector: 'proteins[0].accession' },\n  { name: 'Protein Length', selector: 'proteins[0].protein_length' },\n  {\n    name: 'Matches',\n    selector: 'proteins[0].entry_protein_locations',\n    serializer: locationsToString,\n  },\n];\n\nexport const object2TSV = (\n  object /*: Object */,\n  selectors /*: Array<{selector: string, serializer?: function}> */,\n) => {\n  const arr = selectors.map(({ selector, serializer }) => {\n    const value = get(object, selector);\n    if (typeof serializer === 'function') {\n      return serializer(value);\n    }\n    return value;\n  });\n  const text = Papa.unparse([arr], {\n    delimiter: '\\t',\n  });\n  return text;\n};\n","import React, { FormEvent, PureComponent, RefObject } from 'react';\n\nimport { createSelector } from 'reselect';\nimport { format } from 'url';\nimport { set } from 'lodash-es';\n\nimport loadData from 'higherOrder/loadData/ts';\nimport loadable from 'higherOrder/loadable';\n\nimport { getUrlForMeta } from 'higherOrder/loadData/defaults';\nimport { schemaProcessDataPageSection } from 'schema_org/processors';\nimport { goToCustomLocation } from 'actions/creators';\nimport { Button } from 'components/SimpleCommonComponents/Button';\n\nimport DBChoiceInput from './DBChoiceInput';\nimport ApiLink from './ApiLink';\nimport TextExplanation from './TextExplanation';\nimport DataPreviewAndProgressProvider from './DataPreviewAndProgressProvider';\nimport Estimate from './Estimate';\nimport Snippet from './Snippet';\nimport Controls from './Controls';\nimport ProgressAnimation from './ProgressAnimation';\nimport FormatSelector from './FormatSelector';\nimport URLParameters from './URLParameters';\n\nimport pathToDescription from 'utils/processDescription/pathToDescription';\nimport descriptionToPath from 'utils/processDescription/descriptionToPath';\nimport { toPublicAPI } from 'utils/url';\n\nimport { columns } from 'web-workers/download/object2TSV';\n\nimport cssBinder from 'styles/cssBinder';\n\nimport local from './style.css';\nimport InputGroup from './InputGroup';\n\nconst css = cssBinder(local);\n\nconst SchemaOrgData = loadable({\n  loader: () => import(/* webpackChunkName: \"schemaOrg\" */ 'schema_org'),\n  loading: () => null,\n});\n\ntype FileTypes = 'fasta' | 'json' | 'accession' | 'tsv' | '';\n\nconst extractDataFromHash = (hash: string) => {\n  const [path, fileType, subset] = hash\n    .replaceAll('%7C', '|')\n    .replaceAll('%26', '&')\n    .replaceAll('%3F', '?')\n    .split('|');\n  const validFileTypes = ['fasta', 'json', 'accession', 'tsv'];\n  if (!validFileTypes.includes(fileType))\n    throw new Error('The filetypoe in the URL is invalid');\n  const output: {\n    fileType?: FileTypes;\n    subset: boolean;\n    description?: InterProDescription;\n    search?: Record<string, string>;\n  } = { fileType: fileType as FileTypes, subset: !!subset };\n  const [href, params] = path.split('?');\n  try {\n    output.description = pathToDescription(href);\n    if (params) {\n      output.search = Object.fromEntries(\n        params.split('&').map((p) => p.split('=')),\n      );\n    }\n  } catch {\n    /**/\n  }\n  return output;\n};\n\ntype Props = {\n  matched: string;\n  api?: ParsedURLServer;\n  lowGraphics?: boolean;\n  customLocation?: InterProLocation;\n  goToCustomLocation?: typeof goToCustomLocation;\n};\n\ninterface LoadedProps extends Props, LoadDataProps<RootAPIPayload> {}\n\nexport class DownloadForm extends PureComponent<LoadedProps> {\n  _ref: RefObject<HTMLFormElement>;\n  memberDB: DBsInfo;\n\n  constructor(props: LoadedProps) {\n    super(props);\n    this._ref = React.createRef();\n    this.memberDB = {};\n  }\n\n  /**\n   * This method nadles all the changes of the form in a centralized way.\n   * The value of all the elements of the form is read, and use to create the hash of the current URL.\n   * The URL formed in the hash is the corresponding API call to the selections in the form.\n   * @param {Event} event The triggered event\n   */\n  // eslint-disable-next-line complexity, max-statements\n  _handleChange = (event?: FormEvent) => {\n    if (!this._ref.current) return;\n    const object: {\n      description: InterProPartialDescription;\n      search?: Record<string, string>;\n      subset?: boolean;\n      fileType?: string;\n    } = {\n      description: {},\n    };\n    const target = event?.target as HTMLElement;\n    // Only the add filters buttons trigger this method directly\n    if (target instanceof HTMLButtonElement) {\n      set(object, target.dataset.key || '', !!target.dataset.value);\n      // To remove a filter\n      if (!target.dataset.value) {\n        for (const input of this._ref.current.querySelectorAll(\n          `input[data-reset=\"${target.dataset.reset}\"], input[name=\"${target.dataset.key}\"], select[name=\"${target.dataset.key}\"]`,\n        )) {\n          (input as HTMLInputElement).value = '';\n        }\n      }\n    }\n    for (const element of this._ref.current.elements) {\n      const { name, value, type, checked } = element as HTMLInputElement;\n      if (name) {\n        // Form names use dot notation that correespond to the custom location.\n        // e.g description.main.key => {description: {main: {key: value}}}\n        set(object, name, type === 'checkbox' ? checked : value);\n      }\n    }\n    if ((target as HTMLSelectElement)?.name === 'description.main.key') {\n      // reset the search parameters if there is a change of main type.\n      object.search = {};\n    }\n    // Specific cases\n    if (\n      object.description.entry &&\n      object.description.entry.db === 'interpro'\n    ) {\n      // remove integration from entry if db is InterPro, because it's useless\n      object.description.entry.integration = null;\n    }\n    // The main cannot be a filter:\n    set(\n      object.description,\n      [object.description.main?.key || '', 'isFilter'],\n      null,\n    );\n    let path;\n    const classNames = css('invalid-accession').split(' ');\n    try {\n      // create a path based in the constructed object\n      path = descriptionToPath(object.description);\n      target?.classList && target.classList.remove(...classNames);\n    } catch {\n      target?.classList && target.classList.add(...classNames);\n      return;\n    }\n    if (object.search && Object.keys(object.search).length) {\n      // If there are search parameters add them to the URL\n      path += `?${Object.entries(object.search)\n        .map(([k, v]) => `${k}=${v}`)\n        .join('&')}`;\n    }\n    // More specific cases\n    // Subset only available for fasta format, for proteins filtered by an entry\n    if (\n      object.subset &&\n      !(\n        object.fileType === 'fasta' &&\n        object.description.entry?.isFilter &&\n        object.description.entry?.accession\n      )\n    ) {\n      object.subset = false;\n    }\n    if (\n      object.fileType === 'fasta' &&\n      object.description.main?.key !== 'protein'\n    ) {\n      // Since we can only have fasta type for proteins, change type to default\n      object.fileType = 'accession';\n    }\n    if (\n      (object.fileType === 'fasta' || object.fileType === 'accession') &&\n      object.description.main &&\n      !object.description[object.description.main.key as Endpoint]?.db\n    ) {\n      // Since we can only have counter objects in JSON, change type to default\n      object.fileType = 'json';\n    }\n    const nextHash = [path, object.fileType, object.subset && 'subset']\n      .filter(Boolean)\n      .join('|');\n    if (nextHash !== this.props.customLocation?.hash) {\n      this.props.goToCustomLocation?.({\n        ...this.props.customLocation!,\n        hash: nextHash,\n      });\n    }\n  };\n\n  render() {\n    const { matched, api, lowGraphics, data } = this.props;\n    if (!data || !api) return null;\n    const {\n      description,\n      search,\n      fileType: ft,\n      subset,\n    } = extractDataFromHash(matched);\n    if (!description) return null;\n\n    const fileType = ft || 'json';\n\n    const endpoint = toPublicAPI(\n      format({\n        protocol: api.protocol,\n        hostname: api.hostname,\n        port: api.port,\n        pathname: (api.root + descriptionToPath(description)).replace(\n          /\\/+/g,\n          '/',\n        ),\n        query: search,\n      }),\n    );\n\n    const typeObjects = Object.entries(description).filter(\n      ([, ep]) => (ep as EndpointLocation).isFilter !== undefined,\n    );\n\n    const filters = typeObjects.filter(\n      ([, type]) => (type as EndpointLocation).isFilter,\n    );\n\n    const main = description.main.key || 'entry';\n    const secondary = filters.length && (filters[0][0] as Endpoint);\n    const columnKey =\n      secondary && description[secondary].accession\n        ? `${main}${secondary[0].toUpperCase()}${secondary.slice(1)}`\n        : main;\n    // @ts-expect-error: Needs to be updated when the object2TSV is migrated\n    const endpointColumns = columns[columnKey] || columns[main];\n\n    const path2code = (path: string, varName: string) => {\n      const parts = path.split('[*]');\n      const selector = parts[0]\n        .split(/(\\[\\d\\])/)\n        .flatMap((part) => part.split('.'))\n        .filter(Boolean)\n        .map((part) => (part.startsWith('[') ? part : `[\"${part}\"]`))\n        .join('');\n      if (parts.length > 1) {\n        return `[x${parts[1]} for x in ${varName}${selector}]`;\n      }\n      return `${varName}${selector}`;\n    };\n    if (!data?.loading && data?.payload) {\n      this.memberDB = data.payload.databases;\n    }\n    const currentVersion = Number(\n      data?.payload?.databases?.interpro?.version || 0,\n    );\n\n    const path2perl = (path: string, varName: string) => {\n      const parts = path.split('[*]');\n      const selector = parts[0]\n        .split(/(\\[\\d\\])/)\n        .flatMap((part) => part.split('.'))\n        .filter(Boolean)\n        .map((part) => (part.startsWith('[') ? part : `->{\"${part}\"}`))\n        .join('');\n      if (parts.length > 1) {\n        return `${parts[1]}, ${varName}${selector}`.replace(/[[]]/g, '');\n      }\n      return `${varName}${selector}`;\n    };\n\n    const mainEndpoint = description[main as Endpoint];\n\n    return (\n      <form\n        onChange={this._handleChange}\n        ref={this._ref}\n        className={css('download-form')}\n      >\n        <h4>Select data</h4>\n        <SchemaOrgData\n          data={{\n            name: 'Download Web from for the InterPro API',\n            description:\n              'A Webform that allows the user to filter the InterPro dataset to create Download Jobs or scripts',\n          }}\n          processData={schemaProcessDataPageSection}\n        />\n        <fieldset className={css('fieldset')}>\n          <legend>Main data type</legend>\n          <label>\n            Choose a main data type:\n            <select name=\"description.main.key\" defaultValue={main}>\n              {typeObjects.map(([type]) => (\n                <option key={type} value={type}>\n                  {type.charAt(0).toUpperCase() + type.slice(1)}\n                </option>\n              ))}\n            </select>\n          </label>\n          <DBChoiceInput\n            type={main}\n            value={(mainEndpoint.db || '').toLowerCase()}\n            valueIntegration={(\n              (mainEndpoint as EntryLocation).integration || ''\n            ).toLowerCase()}\n            name={`description.${main}.db`}\n            onClick={this._handleChange}\n            databases={this.memberDB}\n          />\n          <URLParameters\n            type={main}\n            search={search}\n            onChange={this._handleChange}\n          />\n        </fieldset>\n        <fieldset className={css('fieldset')}>\n          <legend>Filters</legend>\n          <div>\n            Add a filter:\n            <div className={css('button-group')}>\n              {typeObjects\n                .filter(\n                  ([type]) =>\n                    type !== main && !description[type as Endpoint].isFilter,\n                )\n                .map(([type]) => (\n                  <Button\n                    key={type}\n                    value={type}\n                    data-key={`description.${type}.isFilter`}\n                    data-value\n                    onClick={this._handleChange}\n                  >\n                    {type.charAt(0).toUpperCase() + type.slice(1)}\n                  </Button>\n                ))}\n            </div>\n            <ul className={css('no-bullet')}>\n              {filters.map(([key, value]) => (\n                <li key={key}>\n                  <fieldset className={css('fieldset')}>\n                    <legend>{key}</legend>\n                    <InputGroup\n                      label=\"filter type:\"\n                      input={\n                        <input\n                          type=\"text\"\n                          readOnly\n                          value={key}\n                          name={`description.${key}.isFilter`}\n                        />\n                      }\n                      button={\n                        <Button\n                          data-key={`description.${key}.isFilter`}\n                          onClick={this._handleChange}\n                        >\n                          Remove\n                        </Button>\n                      }\n                    />\n                    <DBChoiceInput\n                      type={key}\n                      value={(\n                        (value as EndpointLocation).db || ''\n                      ).toLowerCase()}\n                      valueIntegration={(\n                        (value as EntryLocation).integration || ''\n                      ).toLowerCase()}\n                      name={`description.${key}.db`}\n                      onClick={this._handleChange}\n                      databases={this.memberDB}\n                    />\n                    <InputGroup\n                      label={`${key} accession:`}\n                      input={\n                        <input\n                          type=\"text\"\n                          disabled={!description[key as Endpoint].db}\n                          defaultValue={\n                            (value as EndpointLocation).accession || ''\n                          }\n                          name={`description.${key}.accession`}\n                          className={css('input-group-field')}\n                          data-reset={`description.${key}`}\n                        />\n                      }\n                      button={\n                        <Button\n                          data-key={`description.${key}.accession`}\n                          onClick={this._handleChange}\n                        >\n                          Remove\n                        </Button>\n                      }\n                    />\n                  </fieldset>\n                </li>\n              ))}\n            </ul>\n          </div>\n        </fieldset>\n        <h4>Select Output Format</h4>\n        <FormatSelector\n          fileType={fileType}\n          mainEndpoint={description.main.key as Endpoint}\n          hasSelectedDB={!!description?.[description.main.key as Endpoint]?.db}\n          hasSelectedAccession={\n            !!description?.[description.main.key as Endpoint]?.accession\n          }\n        />\n\n        <h4>Results</h4>\n        <ApiLink url={endpoint} />\n        <DataPreviewAndProgressProvider\n          url={endpoint}\n          fileType={fileType}\n          subset={subset}\n        >\n          {({ data, download, isStale }) => {\n            if (!data) return null;\n            const count = (data.payload && data.payload.count) || 0;\n            const { db, integration } = mainEndpoint as EntryLocation;\n            const noData = count === 0 && (db !== null || integration !== null);\n            return (\n              <>\n                <Estimate data={data} isStale={isStale} />\n                {/* Only display if the response from the API is a list of items */}\n                {mainEndpoint.db && !mainEndpoint.accession && (\n                  <Snippet\n                    fileType={fileType}\n                    url={endpoint}\n                    subset={subset}\n                    columns={endpointColumns.map(\n                      (c: { selector: string; selectorInGroup?: string }) =>\n                        `${c.selector}${\n                          c.selectorInGroup ? `[*][\"${c.selectorInGroup}\"]` : ''\n                        }`,\n                    )}\n                    path2code={path2code}\n                    path2perl={path2perl}\n                  />\n                )}\n\n                <div>\n                  <h4>Download</h4>\n                  <TextExplanation\n                    fileType={fileType}\n                    description={description}\n                    subset={subset}\n                    isStale={!!isStale}\n                    count={count}\n                    noData={noData}\n                  />\n                  <Controls\n                    fileType={fileType}\n                    subset={subset}\n                    entityType={main}\n                    url={endpoint}\n                    download={download}\n                    isStale={isStale}\n                    count={count}\n                    noData={noData}\n                    interProVersion={currentVersion}\n                  />\n                </div>\n                {lowGraphics || <ProgressAnimation download={download} />}\n              </>\n            );\n          }}\n        </DataPreviewAndProgressProvider>\n      </form>\n    );\n  }\n}\n\nconst mapStateToProps = createSelector(\n  (state: GlobalState) => state.customLocation,\n  (state: GlobalState) => state.settings.api,\n  (state: GlobalState) => state.settings.ui.lowGraphics,\n  (customLocation, api, lowGraphics) => ({ customLocation, api, lowGraphics }),\n);\n\nexport default loadData({\n  getUrl: getUrlForMeta,\n  mapStateToProps,\n  mapDispatchToProps: { goToCustomLocation },\n} as LoadDataParameters)(DownloadForm);\n","export const getNeededCountersForSubpages = (\n  mainEndpoint: Endpoint,\n  filterEndpoint: Endpoint,\n  forExporter = false,\n) => {\n  const counters = [];\n  if (forExporter) {\n    if (['taxonomy', 'proteome', 'set'].includes(filterEndpoint)) {\n      counters.push('protein');\n      counters.push('entry');\n    }\n  } else {\n    if (['entry', 'taxonomy', 'set'].includes(mainEndpoint)) {\n      if (['taxonomy', 'proteome'].includes(filterEndpoint)) {\n        counters.push('protein');\n      }\n    }\n  }\n  if (counters.length) return `counters:${counters.join('-')}`;\n  return '';\n};\n","import { noop } from 'lodash-es';\n\nimport * as defaults from '../defaults';\n\n// getUrl\nconst extractGetUrl = <Props = unknown>(\n  getUrl: string | GetUrl<Props> = defaults.getUrlForApi,\n) => {\n  if (typeof getUrl === 'string') {\n    return defaults.getUrl(getUrl);\n  }\n  return getUrl;\n};\n\nexport type ExtractedParams<Props = unknown> = {\n  getUrl: GetUrl<Props>;\n  fetchOptions: FetchOptions;\n  propNamespace: string;\n  weight: number;\n  mapStateToProps:\n    | ((state: unknown, props: unknown) => Record<string, unknown>)\n    | typeof noop;\n  mapDispatchToProps: Record<string, unknown>;\n};\n\nexport default <Props = unknown>(params?: LoadDataParameters<Props>) => {\n  const extracted: ExtractedParams<Props> = {\n    getUrl: defaults.getUrlForApi as GetUrl<Props>,\n    fetchOptions: {},\n    propNamespace: '',\n    weight: 1,\n    mapStateToProps: noop,\n    mapDispatchToProps: {},\n  };\n  if (!params) return extracted;\n  if (typeof params !== 'object') {\n    extracted.getUrl =\n      typeof params === 'string' ? defaults.getUrl(params) : params;\n    return extracted;\n  }\n  extracted.getUrl = extractGetUrl(params.getUrl);\n  extracted.fetchOptions = params.fetchOptions || extracted.fetchOptions;\n  extracted.propNamespace = params.propNamespace || extracted.propNamespace;\n  extracted.weight = params.weight || extracted.weight;\n  extracted.mapStateToProps =\n    params.mapStateToProps || extracted.mapStateToProps;\n  extracted.mapDispatchToProps =\n    params.mapDispatchToProps || extracted.mapDispatchToProps;\n  return extracted;\n};\n","import cachedFetch, {\n  cachedFetchJSON,\n  cachedFetchYAML,\n  cachedFetchText,\n  cachedFetchGZIP,\n} from 'utils/cached-fetch';\n\nexport default ({ method, responseType }: FetchOptions = {}) => {\n  if (responseType === 'text') return cachedFetchText;\n  if (responseType === 'yaml') return cachedFetchYAML;\n  if (responseType === 'gzip') return cachedFetchGZIP;\n  if (method !== 'HEAD') return cachedFetchJSON;\n  return cachedFetch;\n};\n","import React, { PureComponent } from 'react';\nimport { connect } from 'react-redux';\nimport { createSelector } from 'reselect';\nimport { Diff } from 'utility-types';\n\nimport uniqueId from 'utils/cheap-unique-id';\nimport cancelable from 'utils/cancelable';\nimport {\n  dataProgressInfo,\n  dataProgressUnload,\n  addToast,\n} from 'actions/creators';\n\nimport extractParams from '../extract-params';\nimport getFetch from '../getFetch';\n\nimport { UnconnectedErrorBoundary } from 'wrappers/ErrorBoundary';\n\nconst TIMEOUT = 408;\nconst MS = 1000;\n\nconst mapStateToState = createSelector(\n  (state: unknown) => state,\n  (appState) => ({ appState }),\n);\n\n// Props to connect to the wrapper component that are not injected in the wrapped one\ntype ConnectedProps = {\n  dataProgressInfo?: typeof dataProgressInfo;\n  dataProgressUnload?: typeof dataProgressUnload;\n  addToast?: typeof addToast;\n  appState?: GlobalState;\n};\n\nconst loadData = <Payload = unknown, Namespace extends string = ''>(\n  params?: LoadDataParameters,\n) => {\n  const {\n    getUrl,\n    fetchOptions,\n    propNamespace,\n    weight,\n    mapStateToProps,\n    mapDispatchToProps,\n  } = extractParams(params);\n  const fetchFun = getFetch(fetchOptions);\n\n  // Defining the function here to be able to use the Generic Type Payload\n  const newData = (url: string): RequestedData<Payload> => ({\n    loading: !!url,\n    progress: 0,\n    ok: true,\n    status: null,\n    payload: null,\n    url,\n  });\n\n  return <BaseProps extends LoadDataProps<Payload, Namespace>>(\n    Wrapped: React.ComponentType<BaseProps>,\n  ) => {\n    type WrapperProps = ReturnType<typeof mapStateToProps> &\n      typeof mapDispatchToProps &\n      ConnectedProps;\n\n    type WrapperState = {\n      url: string;\n      data: RequestedData<Payload>;\n      staleData?: RequestedData<Payload>;\n      retries: number;\n      progress?: number;\n      loading?: boolean;\n    };\n\n    class DataWrapper extends PureComponent<WrapperProps, WrapperState> {\n      static displayName = `loadData(${Wrapped.displayName || Wrapped.name})`;\n      #id: string;\n      #request?: CancelableRequest;\n      timeoutID = 0;\n\n      constructor(props: WrapperProps) {\n        super(props);\n\n        // Identify this specific data loader\n        this.#id = uniqueId('data-loader');\n\n        // Initialize state\n        const url = getUrl?.(props.appState || {}, props) || '';\n        this.state = {\n          url,\n          data: newData(url),\n          staleData: undefined,\n          retries: 0,\n        };\n      }\n\n      static getDerivedStateFromProps(\n        nextProps: WrapperProps,\n        prevState: WrapperState,\n      ) {\n        // get potential new url in state according to props\n        const url = getUrl?.(nextProps.appState || {}, nextProps) || '';\n        // if it's the same, don't update the state\n        if (prevState.url === url) return null;\n        // otherwise, update url in state, and create new data object in state\n        return { data: newData(url), url };\n      }\n\n      componentDidMount() {\n        // start loading data on mount\n        this._load(this.state.url);\n      }\n\n      componentDidUpdate(_prevProps: WrapperProps, prevState: WrapperState) {\n        // if the url has changed\n        if (\n          prevState.url !== this.state.url ||\n          prevState.retries !== this.state.retries\n        ) {\n          // cancel current request\n          this._cancel();\n          // and start new one\n          this._load(this.state.url);\n        }\n      }\n\n      // cancel current request on unmount\n      componentWillUnmount() {\n        this._cancel();\n        if (this.timeoutID) {\n          window.clearTimeout(this.timeoutID);\n        }\n      }\n\n      _cancel = () => {\n        if (this.#request) this.#request.cancel();\n        this.props.dataProgressUnload?.(this.#id);\n      };\n\n      _progress = (progress: number) => {\n        this.setState(({ data }) => ({ data: { ...data, progress } }));\n        this.props.dataProgressInfo?.(this.#id, progress, weight);\n      };\n\n      _load = async (url: string) => {\n        if (!url) {\n          this.setState({\n            staleData: {\n              ...this.state.data,\n            },\n          });\n          return;\n        }\n        // Progress: 0\n        this.props.dataProgressInfo?.(this.#id, 0, weight);\n        this.#request = cancelable<BasicResponse>((signal) =>\n          fetchFun(\n            url,\n            { ...fetchOptions, signal },\n            this._progress,\n            this.props.addToast,\n          ),\n        );\n        // We keep a hold on *this* request, because it might change\n        const request = this.#request;\n        try {\n          const response = await request.promise;\n          // Analytics\n          gtag('event', 'data', {\n            event_category: 'data',\n            event_response: response.status,\n            event_label: url,\n            // Custom Metric in google analytics as metrics1: From Client Cache\n            event_clientcache: response.headers.has('Client-Cache') ? 1 : 0,\n            // Custom Metric in google analytics as metrics1: From Server Cache\n            event_cache: response.headers.has('Cached') ? 1 : 0,\n          });\n          // We have a response 🎉 set it into the local state\n          this.setState(({ data }) => {\n            const nextData = {\n              ...data,\n              ...response,\n              progress: 1,\n              loading: false,\n            };\n            return { data: nextData, staleData: nextData };\n          });\n          // Progress: 1\n          this.props.dataProgressInfo?.(this.#id, 1, weight);\n\n          const msToRetry =\n            (this.props.appState?.settings.navigation.secondsToRetry || 0) * MS;\n          // Scheduling to retry because we got a 408\n          if (response.status === TIMEOUT) {\n            this.timeoutID = window.setTimeout(() => {\n              console.log('Retrying the Timed out query');\n              this.setState({ retries: this.state.retries + 1 });\n            }, msToRetry);\n          }\n        } catch (error) {\n          // If request has been canceled, it means we did it, on purpose, so\n          // just ignore, otherwise it's a real error\n          if (!request.canceled) {\n            // we have a problem, something bad happened\n            // Analytics\n            gtag('event', 'error', {\n              event_category: 'data',\n              event_status: 'fail',\n              event_label: url,\n              // Custom Metric in google analytics as metrics3: Is Client Online\n              event_online: window.navigator.onLine ? 1 : 0,\n            });\n            this.setState(({ data }) => ({\n              data: { ...data, loading: false, progress: 1, ok: false, error },\n            }));\n            // Progress: 1\n            this.props.dataProgressInfo?.(this.#id, 1, weight);\n          }\n        }\n      };\n\n      render() {\n        const {\n          // props to be removed\n          dataProgressInfo: _,\n          dataProgressUnload: __,\n          addToast: ___,\n          appState,\n          // rest of props, to be passed down\n          ...rest\n        } = this.props;\n        const datakey: DataKey = `data${propNamespace}`;\n        const stalekey: IsStaleKey = `isStale${propNamespace}`;\n        const passedProps /*: LoadDataProps<Payload> */ = {\n          [datakey]: (this.state.staleData ||\n            this.state.data) as RequestedData<Payload>,\n          [stalekey]: this.state.staleData !== this.state.data,\n        };\n        // The correction below is needed for MS Edge\n        if (\n          this.state.data &&\n          !this.state.data.loading &&\n          this.state.data.url === this.state.url\n        )\n          passedProps[`isStale${propNamespace}`] = false;\n        return (\n          <UnconnectedErrorBoundary customLocation={appState?.customLocation}>\n            <Wrapped\n              {...(rest as BaseProps)}\n              {...passedProps}\n              {...(mapStateToProps?.(appState, {\n                ...(rest as BaseProps),\n                ...passedProps,\n              }) || {})}\n            />\n          </UnconnectedErrorBoundary>\n        );\n      }\n    }\n    const dispatchProps = {\n      dataProgressInfo,\n      dataProgressUnload,\n      addToast,\n      ...mapDispatchToProps,\n    };\n    const connector = connect<\n      ReturnType<typeof mapStateToProps>,\n      typeof dispatchProps,\n      Diff<BaseProps, LoadDataProps<Payload, Namespace>>,\n      GlobalState\n    >(mapStateToState, dispatchProps);\n    return connector(DataWrapper) as React.ComponentType<BaseProps>;\n  };\n};\n\nexport default loadData;\n","type CancelableParameter<T> =\n  | Promise<unknown>\n  | ((signal: AbortSignal) => Promise<T>);\n\nexport default <T = unknown>(\n  promiseOrFunction: CancelableParameter<T> = Promise.resolve()\n) => {\n  let promise = promiseOrFunction;\n  const controller = new AbortController();\n  if (!('then' in promiseOrFunction)) {\n    // not actually a Promise\n    promise = promiseOrFunction(controller.signal);\n  }\n  const output = {\n    promise: (promise as Promise<T>).then((value) => {\n      // eslint-disable-next-line no-throw-literal\n      if (output.canceled) throw { canceled: output.canceled };\n      return value;\n    }),\n    canceled: false,\n    cancel() {\n      output.canceled = true;\n      controller.abort();\n    },\n  };\n  return output;\n};\n","import config from 'config';\n\n/**\n * List of the available pages(endpoints) in singular\n */\nexport const singular: Array<string> = Object.keys(config.pages);\n\n/**\n * List of the available pages(endpoints) in plural\n */\nexport const plural: Array<string> = Object.entries(config.pages).map(\n  ([key, v]) => {\n    const value = v as { plural?: string };\n    if (value && value.plural && typeof value.plural === 'string') {\n      return value.plural;\n    }\n    return `${key}s`;\n  }\n);\n\n/**\n * Regular expression to catch a “s” at the end of a string\n */\nconst FINAL_S = /s$/i;\n\n/**\n * Takes the text in singular of the page and returns the text in plural\n * @param {string} string text in singular\n * @param {number} [count = +Infinity] optional count to determine if need plural\n * @param {boolean} ignoreNonExisting optional count to determine if need plural\n * @returns {*} text in plural\n */\nexport const toPlural = (\n  string: string,\n  count: number = +Infinity,\n  ignoreNonExisting: boolean = false\n) => {\n  const _string = string.trim();\n  for (let i = 0; i < singular.length; i++) {\n    if (singular[i] === _string) {\n      if (count > 1) return plural[i];\n      return _string;\n    }\n  }\n  if (ignoreNonExisting) {\n    return _string.replace(FINAL_S, '') + (count > 1 ? 's' : '');\n  }\n  throw new Error('Not an existing page');\n};\n"],"names":["f","foundationPartial","NumberComponent","PureComponent","constructor","props","_this","super","this","_animate","to","from","_animation","stop","_ref","current","finalValue","numberToDisplayText","abbr","scaleMargin","noTitle","title","titleType","trim","noAnimation","lowGraphics","Number","isFinite","Tweenable","tween","value","easing","render","textContent","React","componentDidMount","children","componentDidUpdate","_ref2","componentWillUnmount","dispose","_this$props","loading","className","label","_objectWithoutPropertiesLoose","_excluded","_extends","ref","propTypes","T","duration","isRequired","dispatch","defaultProps","mapStateToProps","createSelector","state","settings","ui","connect","UNITS","_value","Math","round","isNaN","unitIndex","toLocaleString","getAbbr","MULTIPLE_SLASHES","DBS_WITH_SETS","cleanUpMultipleSlashes","str","replace","getUrlForMeta","api","protocol","hostname","port","root","format","pathname","getUrlForRelease","repoKey","config","github","owner","repo","getReadTheDocsURL","relativePath","ReadTheDocs","_ref3","branch","getUrl","key","navigation","pageSize","customLocation","description","search","hash","_ref4","settingsPageSize","_search","main","accession","Object","assign","values","find","_ref5","isFilter","db","entry","memberDB","page_size","extra_fields","includes","undefined","_description","cursor","urlTmp","descriptionToPath","query","sep","indexOf","getReversedUrl","_ref6","newMain","newDesc","model_page","entries","order","newQuery","counters","getNeededCountersForSubpages","url","includeTaxonFocusedOnURL","focused","match","getUrlForApi","arguments","e","preventDefault","stopPropagation","css","cssBinder","HARD_LIMIT","SOFT_LIMIT","Controls","_handleGenerateClick","blockEvent","askNotificationPermission","_b","_a","downloadURL","call","fileType","subset","entityType","_handleCancelClick","downloadDelete","download","count","noData","isStale","interProVersion","progress","successful","blobURL","version","downloading","Callout","type","toPlural","Link","onClick","Button","disabled","backgroundColor","borderColor","textColor","warning","buttonType","href","defaultSelector","item","fonts","input","button","integrationFlags","Set","sortFn","_temp","selector","descending","a","b","sortFnFor","tuple","payloadToOptions","payload","isIntegration","memberDBs","filter","has","sort","map","toLowerCase","name","charAt","toUpperCase","slice","DBChoiceInputWithoutData","data","valueIntegration","databases","integration","_name","InputGroup","onChange","noop","onBlur","mapStateToUrlFor","_","loadData","target","format2label","fasta","json","tsv","mainEndpoint","hasSelectedDB","hasSelectedAccession","explanation","filters","desc","i","length","getFilterFragment","location","getFilters","filterText","getMainFragment","NumberComComponent","downloads","Boolean","join","getText","ok","status","headers","size","get","JSON","stringify","suffix","filesize","standard","output","style","ebiGlobalStyles","buttonCSS","SyntaxHighlighter","registerLanguage","js","python","perl","options","interpolate","lut","Map","template","syntax","Snippet","_handleChange","language","setState","code","getDerivedStateFromProps","nextProps","prevState","langInfo","URL","revokeObjectURL","createObjectURL","Blob","_clipboard","ClipboardJS","text","on","addToast","body","ttl","destroy","icon","docco","ProgressAnimation","visualProgress","width","height","id","in","result","stdDeviation","mode","in2","opacity","transform","floor","local","getTextAfterLastSlash","lastIndexOf","dataComponents","onRemove","buttonEl","useRef","useEffect","schema","isValid","pattern","RegExp","test","valid","setValid","useState","inputType","$ref","schemas","enum","Tooltip","option","readOnly","event","getURLforOpenAPI","fetchOptions","responseType","toAdd","setToAdd","toRemove","setToRemove","payloadIsReady","selectedParameters","keys","push","pos","splice","parameters","fromEntries","_d","_c","paths","p","components","parametersToChoose","handleChange","evt","hidden","color","SelectedParameter","regTag","regtax","reg","mapToString","serializer","list","locationsToString","locations","fragments","start","end","domains2string","pfam","ipro","coordinates","IDADomainsToString","domains","pfamDomain","iproDomain","startsWith","columns","dbs","terms","t","identifier","protein","structure","taxonomy","proteome","set","genome3d","ebisearch","ida","proteinEntry","proteinStructure","selectorInGroup","structureProtein","structureEntry","entryStructure","entryProtein","SchemaOrgData","loadable","loader","DownloadForm","path","object","HTMLButtonElement","dataset","querySelectorAll","reset","element","elements","checked","classNames","split","classList","remove","_j","add","k","v","_e","nextHash","_f","_h","_g","goToCustomLocation","matched","ft","replaceAll","Error","params","pathToDescription","extractDataFromHash","endpoint","toPublicAPI","typeObjects","ep","secondary","columnKey","endpointColumns","path2code","varName","parts","flatMap","part","currentVersion","interpro","path2perl","processData","schemaProcessDataPageSection","defaultValue","DBChoiceInput","URLParameters","_ref7","FormatSelector","ApiLink","DataPreviewAndProgressProvider","_ref8","Estimate","c","TextExplanation","mapDispatchToProps","filterEndpoint","forExporter","extracted","defaults","propNamespace","weight","method","cachedFetchText","cachedFetchYAML","cachedFetchGZIP","cachedFetchJSON","cachedFetch","mapStateToState","appState","extractParams","fetchFun","getFetch","newData","Wrapped","DataWrapper","_DataWrapper_id","_DataWrapper_request","timeoutID","_cancel","__classPrivateFieldGet","cancel","dataProgressUnload","_progress","dataProgressInfo","_load","__awaiter","__classPrivateFieldSet","cancelable","signal","request","response","promise","gtag","event_category","event_response","event_label","event_clientcache","event_cache","nextData","staleData","msToRetry","secondsToRetry","window","setTimeout","console","log","retries","error","canceled","event_status","event_online","navigator","onLine","uniqueId","_prevProps","clearTimeout","__","___","rest","__rest","stalekey","passedProps","UnconnectedErrorBoundary","displayName","dispatchProps","connector","promiseOrFunction","Promise","resolve","controller","AbortController","then","abort","singular","pages","plural","FINAL_S","string","ignoreNonExisting","_string"],"sourceRoot":""}