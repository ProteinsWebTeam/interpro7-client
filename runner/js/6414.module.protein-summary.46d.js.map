{"version":3,"file":"js/6414.module.protein-summary.46d.js","mappings":"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","sources":["webpack://interpro7-client/./src/components/Protein/Length/index.tsx","webpack://interpro7-client/./src/components/Protein/ProteinEntryHierarchy/index.tsx","webpack://interpro7-client/./src/components/Protein/Sequence/DownloadButton/index.tsx","webpack://interpro7-client/./src/components/Protein/Sequence/IPScanButton/index.tsx","webpack://interpro7-client/./src/components/Protein/Species/index.tsx","webpack://interpro7-client/./src/components/Description/DescriptionReadMore/index.tsx","webpack://interpro7-client/./src/components/Protein/Isoforms/style.css?3780","webpack://interpro7-client/./src/components/Protein/Isoforms/Selector/index.tsx","webpack://interpro7-client/./src/components/Protein/Isoforms/Viewer/index.tsx","webpack://interpro7-client/./src/components/Protein/PantherGoTerms/index.tsx","webpack://interpro7-client/./src/components/Protein/PantherGoTerms/style.css?c5eb","webpack://interpro7-client/./src/components/Protein/Summary/index.tsx","webpack://interpro7-client/./src/components/Protein/Summary/style.css?a5bf","webpack://interpro7-client/./src/components/SimpleCommonComponents/FullScreenButton/index.tsx","webpack://interpro7-client/./src/utils/fullscreen/index.js","webpack://interpro7-client/./src/utils/sequence/index.ts","webpack://interpro7-client/./src/components/Protein/Sequence/style.css?2ab4","webpack://interpro7-client/./node_modules/core-js/modules/es.number.parse-int.js"],"sourcesContent":["import React from 'react';\n\nimport Link from 'components/generic/Link';\n\ntype Props = {\n  metadata: {\n    length: number;\n    fragment?: string;\n  };\n  orf?: number;\n};\n\nconst Length = ({ metadata: { length, fragment }, orf }: Props) => {\n  let fragmentText;\n  if (fragment) {\n    fragmentText = ` (${fragment === 'N' ? 'complete' : 'fragment'})`;\n  }\n  return (\n    <Link\n      to={({ description }) => ({\n        description: {\n          ...description,\n          [description.main.key]: {\n            ...description[description.main.key],\n            detail: 'sequence',\n          },\n        },\n        search: { orf },\n      })}\n    >\n      {length} amino acids\n      {fragmentText}\n    </Link>\n  );\n};\n\nexport default Length;\n","import React, { useEffect, useState, useRef } from 'react';\n\nimport { connect } from 'react-redux';\nimport { createSelector } from 'reselect';\nimport { isEqual } from 'lodash-es';\nimport { goToCustomLocation } from 'actions/creators';\n\nimport loadWebComponent from 'utils/load-web-component';\nimport pathToDescription from 'utils/processDescription/pathToDescription';\n\nimport config from 'config';\n\nconst webComponents: Promise<unknown>[] = [];\n\nconst loadInterProWebComponents = () => {\n  if (!webComponents.length) {\n    const interproComponents = () =>\n      import(\n        /* webpackChunkName: \"interpro-components\" */ 'interpro-components'\n      );\n    webComponents.push(\n      loadWebComponent(() =>\n        interproComponents().then((m) => m.InterproHierarchy),\n      ).as('interpro-hierarchy'),\n    );\n    webComponents.push(\n      loadWebComponent(() =>\n        interproComponents().then((m) => m.InterproEntry),\n      ).as('interpro-entry'),\n    );\n    webComponents.push(\n      loadWebComponent(() =>\n        interproComponents().then((m) => m.InterproType),\n      ).as('interpro-type'),\n    );\n  }\n  return Promise.all(webComponents);\n};\n\nconst getUniqueHierarchies = (hierarchies: Array<InterProHierarchyType>) =>\n  Array.from(new Map(hierarchies.map((h) => [h.accession, h])).values());\n\ntype HierarchyProps = {\n  hierarchy: InterProHierarchyType;\n  accessions: Array<string>;\n  hrefroot: string;\n  goToCustomLocation?: typeof goToCustomLocation;\n  ready: boolean;\n  includeChildren?: boolean;\n};\nconst ProteinEntryHierarchy = ({\n  hierarchy,\n  accessions,\n  hrefroot,\n  goToCustomLocation,\n  ready,\n  includeChildren = false,\n}: HierarchyProps) => {\n  const componentRef = useRef<\n    | (HTMLElement & {\n        hierarchy?: InterProHierarchyType;\n        _hierarchy?: InterProHierarchyType;\n      })\n    | null\n  >(null);\n  useEffect(() => {\n    if (componentRef.current && ready) {\n      // Making sure the same hierarchy only appears once.\n      if (isEqual(componentRef.current?._hierarchy, hierarchy)) return;\n      componentRef.current.hierarchy = hierarchy;\n      // Adding the click event so it doesn't refresh the whole page,\n      // but instead use the customLocation.\n      componentRef.current.addEventListener('click', (e) => {\n        const target = e.composedPath()[0] as HTMLElement;\n        if (target.classList.contains('link')) {\n          e.preventDefault();\n          goToCustomLocation?.({\n            description: pathToDescription(\n              (target?.getAttribute('href') || '')?.replace(\n                new RegExp(`^${config.root.website.path}`),\n                '',\n              ),\n            ),\n          });\n        }\n      });\n    }\n  });\n\n  return (\n    <interpro-hierarchy\n      accessions={accessions}\n      hrefroot={hrefroot}\n      ref={componentRef}\n      displaymode={`pruned${includeChildren ? '' : ' no-children'}`}\n    />\n  );\n};\n\ntype Props = {\n  entries: Array<EntryMetadata>;\n  goToCustomLocation?: typeof goToCustomLocation;\n  includeChildren?: boolean;\n};\n\nconst ProteinEntryHierarchies = ({\n  entries,\n  goToCustomLocation,\n  includeChildren = false,\n}: Props) => {\n  const [ready, setReady] = useState(false);\n\n  async function loadComponents() {\n    return await loadInterProWebComponents();\n  }\n\n  useEffect(() => {\n    loadComponents().then(() => {\n      setReady(true);\n    });\n  }, []);\n\n  const hierarchies = getUniqueHierarchies(\n    entries\n      .map((e) => e.hierarchy)\n      .filter(Boolean) as Array<InterProHierarchyType>,\n  );\n  if (!ready) return null;\n  return (\n    <div>\n      {hierarchies.length\n        ? hierarchies.map((h) => (\n            <ProteinEntryHierarchy\n              hierarchy={h}\n              accessions={entries.map((e) => e.accession)}\n              hrefroot={`${config.root.website.path}/entry/interpro`}\n              goToCustomLocation={goToCustomLocation}\n              key={h.accession}\n              ready={ready}\n              includeChildren={includeChildren}\n            />\n          ))\n        : null}\n    </div>\n  );\n};\n\nconst mapStateToProps = createSelector(\n  (state) => state.settings.api,\n  (api) => ({ api }),\n);\n\nexport default connect(mapStateToProps, { goToCustomLocation })(\n  React.memo(ProteinEntryHierarchies),\n);\n","import React from 'react';\n\nimport { splitSequenceByChunks } from 'utils/sequence';\n\nimport cssBinder from 'styles/cssBinder';\n\nimport fonts from 'EBI-Icon-fonts/fonts.css';\nimport summary from 'styles/summary.css';\nimport ipro from 'styles/interpro-vf.css';\nimport buttonCSS from 'components/SimpleCommonComponents/Button/style.css';\n\nconst css = cssBinder(summary, ipro, fonts, buttonCSS);\n\ntype Props = { accession: string; sequence: string };\nconst DownloadButton = ({ accession, sequence }: Props) => {\n  return (\n    <a\n      className={css('vf-button', 'vf-button--secondary', 'vf-button--sm')}\n      style={{\n        display: 'block',\n        minWidth: '200px',\n        width: '100%',\n      }}\n      download={`${accession}.fa`}\n      href={URL.createObjectURL(\n        new Blob([splitSequenceByChunks(sequence, accession, false)], {\n          type: 'text/plain',\n        }),\n      )}\n    >\n      <span\n        className={css('icon', 'icon-common', 'icon-download')}\n        data-icon=\"&#xf019;\"\n      />\n      &nbsp;Download sequence (FASTA)\n    </a>\n  );\n};\n\nexport default DownloadButton;\n","import React from 'react';\n\nimport { connect } from 'react-redux';\nimport { goToCustomLocation } from 'actions/creators';\n\nimport Link from 'components/generic/Link';\nimport cssBinder from 'styles/cssBinder';\n\nimport sequenceStyles from '../style.css';\nimport fonts from 'EBI-Icon-fonts/fonts.css';\nimport buttonCSS from 'components/SimpleCommonComponents/Button/style.css';\n\nconst css = cssBinder(sequenceStyles, fonts, buttonCSS);\n\ntype Props = {\n  goToCustomLocation: typeof goToCustomLocation;\n  sequence: string | (() => string);\n  title: string;\n  minWidth: string;\n};\n\nconst IPScanButton = ({\n  goToCustomLocation,\n  sequence,\n  title,\n  minWidth,\n}: Props) => {\n  const _handleIPSClick = (event: MouseEvent) => {\n    event.preventDefault();\n    const seq = typeof sequence === 'function' ? sequence() : sequence;\n    goToCustomLocation({\n      description: {\n        main: { key: 'search' },\n        search: { type: 'sequence', value: seq },\n      },\n    });\n  };\n\n  return (\n    <Link\n      to={{\n        description: {\n          main: { key: 'search' },\n          search: { type: 'sequence' },\n        },\n      }}\n      onClick={_handleIPSClick}\n    >\n      <div\n        className={css(\n          'sequence-link',\n          'vf-button',\n          'vf-button--secondary',\n          'vf-button--sm',\n        )}\n        data-icon=\"&#xf061;\"\n        style={{ minWidth: minWidth, marginRight: '1rem' }}\n      >\n        <div className={css('shape', 'ips', 'gray')} />\n        <div className={css('shape', 'ips', 'green')} />\n        <div className={css('shape', 'ips', 'pale-green')} />\n        <div className={css('shape', 'ips', 'red')} />\n        <div className={css('shape', 'ips', 'blue')} />\n        <span>{title}</span>\n      </div>\n    </Link>\n  );\n};\n\nexport default connect(null, { goToCustomLocation })(IPScanButton);\n","import React from 'react';\n\nimport Link from 'components/generic/Link';\n\ntype Props = {\n  taxID: string | number;\n  fullName: string;\n};\n\nconst Species = ({ taxID, fullName }: Props) => {\n  return (\n    <Link\n      to={{\n        description: {\n          main: { key: 'taxonomy' },\n          taxonomy: { db: 'uniprot', accession: `${taxID}` },\n        },\n      }}\n    >\n      {fullName}\n    </Link>\n  );\n};\n\nexport default Species;\n","import React, { PureComponent } from 'react';\n\nimport Description from '..';\nimport { Button } from 'components/SimpleCommonComponents/Button';\n\nimport cssBinder from 'styles/cssBinder';\n\nimport ipro from 'styles/interpro-vf.css';\nimport styles from '../style.css';\nimport fonts from 'EBI-Icon-fonts/fonts.css';\n\nconst css = cssBinder(styles, fonts, ipro);\n\ntype DescriptionReadMoreProps = {\n  /**\n   * Text to display\n   */\n  text: string;\n  /**\n   * The number of character to show when the description is compacted.\n   */\n  minNumberOfCharToShow: number;\n  /**\n   * A `string` or `regex` that needs to be removed on the whole document. Currently used to remove reference marks when unnecessary.\n   */\n  patternToRemove?: string;\n};\n\ntype State = { showMore: boolean };\n\nclass DescriptionReadMore extends PureComponent<\n  DescriptionReadMoreProps,\n  State\n> {\n  constructor(props: DescriptionReadMoreProps) {\n    super(props);\n    this.state = { showMore: false };\n  }\n  render() {\n    const {\n      text = '',\n      minNumberOfCharToShow = Infinity,\n      patternToRemove,\n    } = this.props;\n    const { showMore } = this.state;\n    let textToShow = text;\n    if (patternToRemove) {\n      textToShow = textToShow.replace(new RegExp(patternToRemove, 'g'), '');\n    }\n    textToShow =\n      showMore || minNumberOfCharToShow > textToShow.length\n        ? textToShow\n        : `${textToShow.slice(0, minNumberOfCharToShow)}...`;\n    return (\n      <>\n        <Description textBlocks={[textToShow]} {...this.props} />\n        {minNumberOfCharToShow < text.length && (\n          <Button\n            type=\"tertiary\"\n            onClick={() => this.setState({ showMore: !showMore })}\n          >\n            Show{' '}\n            {showMore ? (\n              <span>\n                Less{' '}\n                <i\n                  className={css('icon', 'icon-common', 'font-s')}\n                  data-icon=\"&#xf102;\"\n                />\n              </span>\n            ) : (\n              <span>\n                More{' '}\n                <i\n                  className={css('icon', 'icon-common', 'font-s')}\n                  data-icon=\"&#xf103;\"\n                />\n              </span>\n            )}\n          </Button>\n        )}\n      </>\n    );\n  }\n}\n\nexport default DescriptionReadMore;\n","// extracted by mini-css-extract-plugin\nexport default {\"placeholder\":\"Isoforms_style__placeholder___a8\",\"isoform-panel\":\"Isoforms_style__isoform-panel___a6\",\"key\":\"Isoforms_style__key___c6\",\"id\":\"Isoforms_style__id___d2\"};","import React, { FormEvent } from 'react';\n\nimport { format } from 'url';\nimport { createSelector } from 'reselect';\n\nimport loadData from 'higherOrder/loadData/ts';\n\nimport descriptionToPath from 'utils/processDescription/descriptionToPath';\nimport { goToCustomLocation } from 'actions/creators';\n\nimport Loading from 'components/SimpleCommonComponents/Loading';\n\nimport cssBinder from 'styles/cssBinder';\nimport style from '../style.css';\nconst css = cssBinder(style);\n\ntype Props = {\n  isoform?: string;\n  goToCustomLocation?: typeof goToCustomLocation;\n  customLocation?: InterProLocation;\n};\n\ninterface LoadedProps extends Props, LoadDataProps<PayloadList<string>> {}\n\nconst Selector = ({\n  data,\n  isoform = '',\n  goToCustomLocation,\n  customLocation,\n}: LoadedProps) => {\n  if (!data || data.loading || !data.payload) return <Loading />;\n  const isoforms = data.payload.results;\n\n  const onChange = (event: FormEvent) => {\n    if (!customLocation) return;\n    const newLocation: InterProLocation = {\n      ...customLocation,\n      search: {},\n    };\n    if ((event?.target as HTMLSelectElement)?.value) {\n      newLocation.search.isoform = (event.target as HTMLSelectElement).value;\n    }\n    goToCustomLocation?.(newLocation);\n  };\n  return (\n    <select\n      onChange={onChange}\n      value={isoform}\n      className={css('vf-form__select')}\n    >\n      <option className={css('placeholder')} value=\"\">\n        Select an isoform\n      </option>\n      {isoforms\n        .sort((a: string, b: string) => {\n          const i = Number.parseInt(a.split('-')[1]);\n          const j = Number.parseInt(b.split('-')[1]);\n          return i - j;\n        })\n        .map((acc) => (\n          <option value={acc} key={acc}>\n            {acc.endsWith('-1') ? 'Canonical' : acc}\n          </option>\n        ))}\n    </select>\n  );\n};\n\nconst mapStateToProps = createSelector(\n  (state: GlobalState) => state.customLocation,\n  (state: GlobalState) => state.customLocation.search,\n  (customLocation, { isoform }) => ({ customLocation, isoform }),\n);\n\nconst getIsoformURL = createSelector(\n  (state: GlobalState) => state.settings.api,\n  (state: GlobalState) => state.customLocation.description,\n  ({ protocol, hostname, port, root }, { protein: { accession } }) => {\n    const description: InterProPartialDescription = {\n      main: { key: 'protein' },\n      protein: { db: 'uniprot', accession },\n    };\n\n    return format({\n      protocol,\n      hostname,\n      port,\n      pathname: root + descriptionToPath(description),\n      query: {\n        isoforms: '',\n      },\n    });\n  },\n);\nexport default loadData({\n  getUrl: getIsoformURL,\n  mapStateToProps,\n  mapDispatchToProps: { goToCustomLocation },\n} as LoadDataParameters)(Selector);\n","import React from 'react';\n\nimport { format } from 'url';\nimport { createSelector } from 'reselect';\nimport loadData from 'higherOrder/loadData/ts';\nimport descriptionToPath from 'utils/processDescription/descriptionToPath';\n\nimport NumberComponent from 'components/NumberComponent';\nimport { groupByEntryType } from 'components/Related/DomainsOnProtein';\nimport { byEntryType } from 'components/Related/DomainsOnProtein/DomainsOnProteinLoaded';\nimport { selectRepresentativeData } from 'components/ProteinViewer/utils';\nimport Loading from 'components/SimpleCommonComponents/Loading';\n\nimport loadable from 'higherOrder/loadable';\n\nimport cssBinder from 'styles/cssBinder';\n\nimport style from '../style.css';\nconst css = cssBinder(style);\n\nconst ProteinViewer = loadable({\n  loader: () =>\n    import(/* webpackChunkName: \"protein-viewer\" */ 'components/ProteinViewer'),\n  loading: null,\n});\n\ntype InterProFeature = MinimalFeature & {\n  integrated?: string;\n  children?: Array<MinimalFeature>;\n  type: string;\n  short_name?: string;\n};\ntype FeatureMap = Record<string, InterProFeature>;\n\ntype IsoformPayload = {\n  accession: string;\n  length: number;\n  protein_acc: string;\n  sequence: string;\n  features: FeatureMap;\n};\n\nconst features2protvista = (features: FeatureMap) => {\n  const featArray = Object.values(features || {});\n  const integrated: Array<InterProFeature> = [];\n  for (const feature of featArray) {\n    if (!feature) continue;\n    if (!feature.short_name) feature.short_name = feature.name;\n    if (feature.integrated && feature.integrated in features) {\n      const parent = features[feature.integrated];\n      if (!('children' in parent)) {\n        parent.children = [];\n      }\n      if (parent.children?.indexOf(feature) === -1)\n        parent.children.push(feature);\n      integrated.push(feature);\n    }\n  }\n\n  const interpro = featArray.filter(({ accession }) =>\n    accession.toLowerCase().startsWith('ipr'),\n  );\n  const groups = groupByEntryType(interpro);\n  const unintegrated = featArray.filter(\n    (f) => interpro.indexOf(f) === -1 && integrated.indexOf(f) === -1,\n  );\n  const categories: Array<[string, unknown]> = [\n    ...(Object.entries(groups) as Array<[string, unknown]>),\n    ['unintegrated', unintegrated],\n  ];\n\n  const sortedCategories = categories.sort(byEntryType);\n  const representativeDomains = selectRepresentativeData(\n    featArray,\n    'locations',\n    'domain'\n  );\n\n  if (representativeDomains?.length) {\n    sortedCategories.splice(0, 0, [\n      'representative domains',\n      representativeDomains,\n    ]);\n  }\n\n  return sortedCategories;\n};\ntype Props = {\n  isoform?: string;\n};\ninterface LoadedProps extends Props, LoadDataProps<IsoformPayload> {}\n\ntype HeaderProps = { accession: string; length: number };\nexport const IsoformHeader = ({ accession, length }: HeaderProps) => {\n  return (\n    <header>\n      <span className={css('key')}>Isoform:</span>{' '}\n      <span className={css('id')}>{accession}</span> <br />\n      <span className={css('key')}>Length:</span>{' '}\n      <NumberComponent>{length}</NumberComponent>\n    </header>\n  );\n};\nconst Viewer = ({ isoform, data }: LoadedProps) => {\n  if (!isoform) return null;\n  if (\n    !data ||\n    data.loading ||\n    !data.payload ||\n    !data.payload.accession ||\n    isoform !== data.payload.accession\n  )\n    return <Loading />;\n\n  const { accession, length, sequence, features } = data.payload;\n  const dataProtvista = features2protvista(features);\n  return (\n    <div className={css('isoform-panel')}>\n      <IsoformHeader accession={accession} length={length} />\n      <ProteinViewer\n        protein={{ sequence, length: sequence.length }}\n        data={dataProtvista}\n        title=\"Entry matches to this isoform\"\n      />\n    </div>\n  );\n};\n\nconst mapStateToProps = createSelector(\n  (state: GlobalState) => state.customLocation.search,\n  ({ isoform }) => ({ isoform }),\n);\n\nconst getIsoformURL = createSelector(\n  (state: GlobalState) => state.settings.api,\n  (state: GlobalState) => state.customLocation.description,\n  (state: GlobalState) => state.customLocation.search,\n  (\n    { protocol, hostname, port, root },\n    { protein: { accession } },\n    { isoform },\n  ) => {\n    const description: InterProPartialDescription = {\n      main: { key: 'protein' },\n      protein: { db: 'uniprot', accession },\n    };\n\n    return format({\n      protocol,\n      hostname,\n      port,\n      pathname: root + descriptionToPath(description),\n      query: {\n        isoforms: isoform,\n      },\n    });\n  },\n);\nexport default loadData({\n  getUrl: getIsoformURL,\n  mapStateToProps,\n} as LoadDataParameters)(Viewer);\n","import React, { useEffect, useState } from 'react';\nimport { createSelector } from 'reselect';\nimport { format } from 'url';\n\nimport loadData from 'higherOrder/loadData/ts';\nimport descriptionToPath from 'utils/processDescription/descriptionToPath';\n\nimport GoTerms from 'components/GoTerms';\nimport Loading from 'components/SimpleCommonComponents/Loading';\n\nimport cssBinder from 'styles/cssBinder';\nimport local from './style.css';\nconst css = cssBinder(local);\n\ntype PropsSF = {\n  subfamily: string;\n  onFoundGOTerms: () => void;\n};\ninterface LoadedPropsSF\n  extends PropsSF,\n    LoadDataProps<{ metadata: EntryMetadata }> {}\n\nconst PantherSFGoTermsWithData = ({\n  data,\n  onFoundGOTerms = () => null,\n}: LoadedPropsSF) => {\n  const { loading, payload } = data || {};\n  useEffect(() => {\n    if (payload?.metadata?.go_terms?.length) onFoundGOTerms();\n  }, [payload?.metadata?.go_terms]);\n  if (loading) return <Loading inline={true} />;\n\n  return payload?.metadata?.go_terms?.length ? (\n    <details className={css('go-terms')}>\n      <summary>{payload.metadata.accession}</summary>\n      <GoTerms\n        terms={payload?.metadata.go_terms}\n        type=\"protein\"\n        withoutTitle={true}\n      />\n    </details>\n  ) : null;\n};\n\nconst getUrl = createSelector(\n  (state: GlobalState) => state.settings.api,\n  (_: GlobalState, props: PropsSF) => props.subfamily,\n  ({ protocol, hostname, port, root }: ParsedURLServer, subfamily) => {\n    return format({\n      protocol,\n      hostname,\n      port,\n      pathname:\n        root +\n        descriptionToPath({\n          main: { key: 'entry' },\n          entry: { db: 'panther', accession: subfamily },\n        }),\n      query: {\n        subfamily: '',\n      },\n    });\n  },\n);\n\nconst PantherSFGoTerms = loadData(getUrl as LoadDataParameters)(\n  PantherSFGoTermsWithData,\n);\n\ntype Props = {\n  subfamilies?: string[];\n};\n\nconst PantherGoTerms = ({ subfamilies }: Props) => {\n  const [hasGOTerms, setHasGOTerms] = useState(false);\n  useEffect(() => {\n    setHasGOTerms(false);\n  }, [subfamilies]);\n  if (!subfamilies?.length) return null;\n  return (\n    <section>\n      {hasGOTerms && <h5>Panther GO terms</h5>}\n      {subfamilies.map((sf) => (\n        <PantherSFGoTerms\n          key={sf}\n          subfamily={sf}\n          onFoundGOTerms={() => setHasGOTerms(true)}\n        />\n      ))}\n    </section>\n  );\n};\n\nexport default PantherGoTerms;\n","// extracted by mini-css-extract-plugin\nexport default {\"go-terms\":\"PantherGoTerms_style__go-terms___d3\"};","import React, { useRef, useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport { createSelector } from 'reselect';\nimport { isEqual } from 'lodash-es';\n\nimport GoTerms from 'components/GoTerms';\nimport Length from 'components/Protein/Length';\nimport Species from 'components/Protein/Species';\nimport Link from 'components/generic/Link';\nimport ProteinEntryHierarchy from 'components/Protein/ProteinEntryHierarchy';\n\nimport { UniProtLink } from 'components/ExtLink/patternLinkWrapper';\nimport DomainsOnProtein from 'components/Related/DomainsOnProtein';\n\nimport loadable from 'higherOrder/loadable';\nimport {\n  isTranscribedFrom,\n  isContainedInOrganism,\n} from 'schema_org/processors';\n\nimport DescriptionReadMore from 'components/Description/DescriptionReadMore';\n\nimport IsoformSelector from 'components/Protein/Isoforms/Selector';\nimport IsoformViewer, {\n  IsoformHeader,\n} from 'components/Protein/Isoforms/Viewer';\n\nimport Loading from 'components/SimpleCommonComponents/Loading';\nimport Tooltip from 'components/SimpleCommonComponents/Tooltip';\n// import HmmerButton from 'components/Protein/Sequence/HmmerButton';\nimport IPScanButton from 'components/Protein/Sequence/IPScanButton';\nimport FileExporter from 'components/Matches/FileExporter';\nimport PantherGoTerms from 'components/Protein/PantherGoTerms';\nimport FullScreenButton from 'components/SimpleCommonComponents/FullScreenButton';\n\nimport DownloadButton from '../Sequence/DownloadButton';\n\nimport { splitSequenceByChunks } from 'utils/sequence';\n\nimport cssBinder from 'styles/cssBinder';\n\nimport fonts from 'EBI-Icon-fonts/fonts.css';\nimport ipro from 'styles/interpro-vf.css';\nimport local from './style.css';\nimport summary from 'styles/summary.css';\nimport BaseLink from 'components/ExtLink/BaseLink';\n\nconst css = cssBinder(summary, fonts, ipro, local);\n\nconst SchemaOrgData = loadable({\n  loader: () => import(/* webpackChunkName: \"schemaOrg\" */ 'schema_org'),\n  loading: () => null,\n});\n\nconst MIN_WIDTH = '200px';\n\nconst FamilyHierarchy = ({\n  entriesCounter,\n  families,\n  matchesLoaded,\n}: {\n  entriesCounter: number;\n  families?: Record<string, unknown>[] | null;\n  matchesLoaded: boolean;\n}) => {\n  if (families?.length) return <ProteinEntryHierarchy entries={families} />;\n  return (\n    <div className={css('margin-bottom-medium')}>\n      {entriesCounter === 0 || matchesLoaded ? (\n        'None predicted'\n      ) : (\n        <Loading inline />\n      )}\n    </div>\n  );\n};\n\ntype Props = {\n  data: {\n    metadata: ProteinMetadata;\n  };\n  loading: boolean;\n  isoform?: string;\n};\n\nexport const SummaryProtein = ({ data, loading, isoform }: Props) => {\n  const comparisonContainerRef = useRef<HTMLElement | null>(null);\n  const [renderComparisonButton, setRenderComparisonButton] = useState(false);\n  const [comparisonMode, setComparisonMode] = useState(false);\n  const [matchesLoaded, setMatchesLoaded] = useState(false);\n  const [families, setFamilies] = useState<Array<\n    Record<string, unknown>\n  > | null>(null);\n  const [subfamilies, setSubfamilies] = useState<Array<string> | null>(null);\n  useEffect(() => {\n    setRenderComparisonButton(true);\n  }, [comparisonContainerRef]);\n  if (loading || !data || !data.metadata) return <Loading />;\n  const metadata = data.metadata;\n\n  const getSubfamiliesFromMatches = (\n    results: EndpointWithMatchesPayload<EntryMetadata, MatchI>[],\n  ) => {\n    setMatchesLoaded(true);\n    if (results?.length) {\n      setSubfamilies(\n        results\n          .filter(\n            ({ metadata: { source_database: db } }) =>\n              db?.toLowerCase() === 'panther',\n          )\n          .map(({ proteins }) => {\n            const subfamilies: Array<string | undefined> = [];\n            (proteins as EntryProteinMatch[]).forEach((p) => {\n              (p.entry_protein_locations || []).forEach(({ subfamily }) => {\n                subfamilies.push(subfamily?.accession);\n              });\n            });\n            return subfamilies.filter(Boolean) as Array<string>;\n          })\n          .flat(),\n      );\n      return;\n    }\n    setSubfamilies(null);\n  };\n  const handleInterProFamilies = (fams: Record<string, unknown>[]) => {\n    if (!isEqual(fams, families)) setFamilies(fams);\n  };\n  return (\n    <div className={css('vf-stack', 'vf-stack--400')}>\n      {metadata.gene && (\n        <SchemaOrgData\n          data={{ gene: metadata.gene }}\n          processData={isTranscribedFrom}\n        />\n      )}\n      {metadata.source_organism && (\n        <SchemaOrgData\n          data={metadata.source_organism}\n          processData={isContainedInOrganism}\n        />\n      )}\n      <section className={css('vf-grid', 'summary-grid')}>\n        <div className={css('vf-stack')}>\n          <table className={css('vf-table', 'left-headers')}>\n            <tbody>\n              <tr>\n                <td style={{ maxWidth: '50%' }}>Short name</td>\n                <td>\n                  <i\n                    className={css('shortname')}\n                    data-testid=\"protein-shortname\"\n                  >\n                    {metadata.id}\n                  </i>\n                </td>\n              </tr>\n              <tr>\n                <td>Length</td>\n                <td data-testid=\"protein-length\">\n                  <Length metadata={metadata} />\n                </td>\n              </tr>\n              <tr>\n                <td>Species</td>\n                <td data-testid=\"protein-species\">\n                  <Species\n                    fullName={metadata.source_organism.fullName}\n                    taxID={metadata.source_organism.taxId}\n                  />\n                </td>\n              </tr>\n              {metadata.proteome && metadata.proteome.length > 0 && (\n                <tr>\n                  <td>Proteome</td>\n                  <td data-testid=\"protein-proteome\">\n                    <Link\n                      to={{\n                        description: {\n                          main: { key: 'proteome' },\n                          proteome: {\n                            db: 'uniprot',\n                            accession: metadata.proteome,\n                          },\n                        },\n                      }}\n                    >\n                      {metadata.proteome}\n                    </Link>\n                  </td>\n                </tr>\n              )}\n              {metadata.gene && (\n                <tr>\n                  <td>Gene</td>\n                  <td>{metadata.gene}</td>\n                </tr>\n              )}\n              {metadata.description && metadata.description.length ? (\n                <tr>\n                  <td data-testid=\"protein-function\">\n                    Function{' '}\n                    <Tooltip title=\"Provided By UniProt\">\n                      <span\n                        className={css('small', 'icon', 'icon-common')}\n                        data-icon=\"&#xf129;\"\n                        aria-label=\"Provided By UniProt\"\n                      />\n                    </Tooltip>\n                  </td>\n                  <td>\n                    <DescriptionReadMore\n                      text={metadata.description[0]}\n                      minNumberOfCharToShow={250}\n                      patternToRemove=\"\\s?\\(PubMed:\\d+\\)\\s?\"\n                    />\n                  </td>\n                </tr>\n              ) : null}\n              <tr>\n                <td>Family membership</td>\n                <td>\n                  <FamilyHierarchy\n                    entriesCounter={metadata.counters!.entries as number}\n                    families={families}\n                    matchesLoaded={matchesLoaded}\n                  />\n                </td>\n              </tr>\n\n              {metadata?.counters?.isoforms &&\n              (metadata.counters.isoforms as number) > 0 ? (\n                <tr>\n                  <td data-testid=\"protein-function\">\n                    Isoforms{' '}\n                    <Tooltip\n                      title={`This protein has ${metadata.counters.isoforms} isoforms`}\n                    >\n                      <span\n                        className={css('small', 'icon', 'icon-common')}\n                        data-icon=\"&#xf129;\"\n                        aria-label={`This protein has ${metadata.counters.isoforms} isoforms`}\n                      />\n                    </Tooltip>\n                  </td>\n                  <td style={{ display: 'flex' }}>\n                    <IsoformSelector />\n                    {renderComparisonButton ? (\n                      <FullScreenButton\n                        element={comparisonContainerRef.current}\n                        className={css(\n                          'vf-button',\n                          'vf-button--secondary',\n                          'vf-button--sm',\n                          'comparison-button',\n                          'icon',\n                          'icon-common',\n                          { disabled: !isoform },\n                        )}\n                        disabled={!isoform}\n                        dataIcon=\"icon-columns\"\n                        tooltip=\"Compare side-by-side with canonical sequence\"\n                        onFullScreenHook={() => setComparisonMode(true)}\n                        onExitFullScreenHook={() => setComparisonMode(false)}\n                      />\n                    ) : null}\n                  </td>\n                </tr>\n              ) : null}\n            </tbody>\n          </table>\n        </div>\n        <div className={css('vf-stack')}>\n          <section>\n            <section>\n              <h5>External Links</h5>\n              <ul className={css('no-bullet')}>\n                <li>\n                  <UniProtLink id={metadata.accession} className={css('ext')}>\n                    UniProt\n                  </UniProtLink>\n                </li>\n                {metadata.in_alphafold ? (\n                  <>\n                    <li>\n                      <BaseLink\n                        id={metadata.accession}\n                        target={'_blank'}\n                        pattern=\"https://alphafold.ebi.ac.uk/entry/{id}\"\n                        className={css('ext')}\n                      >\n                        AlphaFold\n                      </BaseLink>\n                    </li>\n                    <li>\n                      <BaseLink\n                        id={metadata.accession}\n                        target={'_blank'}\n                        pattern=\"https://search.foldseek.com/search?accession={id}&source=AlphaFoldDB\"\n                        className={css('ext')}\n                      >\n                        Foldseek\n                      </BaseLink>\n                    </li>\n                  </>\n                ) : null}\n              </ul>\n            </section>\n            <hr style={{ margin: '0.8em' }} />\n            {/* <HmmerButton\n              sequence={metadata.sequence}\n              accession={metadata.accession}\n              title=\"Search protein with HMMER\"\n              minWidth={minWidth}\n            />\n            <br /> */}\n            <IPScanButton\n              sequence={splitSequenceByChunks(\n                metadata.sequence,\n                metadata.id || '',\n              )}\n              title=\"Search sequence with InterProScan\"\n              minWidth={MIN_WIDTH}\n            />\n            {/* eslint-disable-next-line jsx-a11y/label-has-associated-control */}\n            <label style={{ marginBottom: '0.4rem' }}>\n              <FileExporter\n                description={{\n                  main: { key: 'protein' },\n                  protein: {\n                    db: metadata.source_database,\n                    accession: metadata.accession,\n                  },\n                  entry: { integration: 'all' },\n                }}\n                count={metadata.counters!.entries as number}\n                fileType=\"tsv\"\n                primary=\"entry\"\n                secondary=\"protein\"\n                minWidth={MIN_WIDTH}\n                label=\"Download matches (TSV)\"\n              />\n            </label>\n            <DownloadButton\n              sequence={metadata.sequence}\n              accession={metadata.accession}\n            />\n          </section>\n        </div>\n      </section>\n      <section\n        ref={comparisonContainerRef}\n        className={css('vf-stack', 'vf-stack--200', {\n          splitfullscreen: comparisonMode,\n        })}\n      >\n        <IsoformViewer />\n        <section>\n          {isoform ? (\n            <IsoformHeader accession=\"Canonical\" length={metadata.length} />\n          ) : null}\n          <DomainsOnProtein\n            mainData={data}\n            onMatchesLoaded={getSubfamiliesFromMatches}\n            onFamiliesFound={handleInterProFamilies}\n          />\n        </section>\n      </section>\n      {metadata.go_terms && (\n        <GoTerms terms={metadata.go_terms} type=\"protein\" />\n      )}\n      <PantherGoTerms subfamilies={subfamilies || []} />\n    </div>\n  );\n};\n\nconst mapStateToProps = createSelector(\n  (state) => state.customLocation.search,\n  ({ isoform }) => ({ isoform }),\n);\n\nexport default connect(mapStateToProps)(SummaryProtein);\n","// extracted by mini-css-extract-plugin\nexport default {\"splitfullscreen\":\"Summary_style__splitfullscreen___ae\",\"comparison-button\":\"Summary_style__comparison-button___da\",\"disabled\":\"Summary_style__disabled___be\"};","import React, { useState, useEffect } from 'react';\n\nimport { noop } from 'lodash-es';\n\nimport Tooltip from 'components/SimpleCommonComponents/Tooltip';\nimport Button from 'components/SimpleCommonComponents/Button';\n\nimport { requestFullScreen, exitFullScreen } from 'utils/fullscreen';\nimport cssBinder from 'styles/cssBinder';\n\nimport fonts from 'EBI-Icon-fonts/fonts.css';\n\nconst css = cssBinder(fonts);\n\ntype Props = {\n  /**\n   * Hook that is call when the full screen action gets trigger\n   * @returns void\n   */\n  onFullScreenHook?: () => void;\n  /**\n   * Hook that is call when exiting the full screen action\n   * @returns void\n   */\n  onExitFullScreenHook?: () => void;\n  /**\n   * Either the id, or directly the DOM element to be send to full screen\n   */\n  element?: string | HTMLElement | null;\n  /**\n   * Content of the tooltip that appears when hovering this button\n   */\n  tooltip: string;\n  /**\n   * Extra CSS classes to add\n   */\n  className?: string;\n  /**\n   * Should we change the icon for one from https://www.ebi.ac.uk/style-lab/general/fonts/v1.3/\n   */\n  dataIcon?: string;\n  /**\n   * To disable the component\n   */\n  disabled?: boolean;\n};\nconst FullScreenButton = ({\n  element,\n  tooltip,\n  className,\n  dataIcon,\n  disabled = false,\n  onFullScreenHook = noop,\n  onExitFullScreenHook = noop,\n}: Props) => {\n  const [elementInDOM, setElementInDom] = useState<\n    HTMLElement | null | undefined\n  >(null);\n  const [isFull, setFull] = useState(false);\n  const onFullscreen = () => {\n    if (document.fullscreenElement === null) {\n      setFull(false);\n      onExitFullScreenHook();\n    }\n  };\n  useEffect(() => {\n    document.addEventListener('fullscreenchange', onFullscreen);\n    return () => document.removeEventListener('fullscreenchange', onFullscreen);\n  }, []);\n  useEffect(() => {\n    setElementInDom(\n      typeof element === 'string' ? document.getElementById(element) : element,\n    );\n  }, [element]);\n\n  if (!elementInDOM) return null;\n  const _handleFullScreen = () => {\n    if (isFull) {\n      exitFullScreen();\n      onExitFullScreenHook();\n    } else {\n      requestFullScreen(elementInDOM).then(() => onFullScreenHook());\n    }\n    setFull(!isFull);\n  };\n  const _className =\n    className || css('margin-bottom-none', 'icon', 'icon-common');\n  const icon =\n    dataIcon || (isFull ? 'icon-fullscreen-collapse' : 'icon-fullscreen');\n  return (\n    <Tooltip title={tooltip}>\n      <Button\n        type=\"inline\"\n        onClick={_handleFullScreen}\n        icon={icon}\n        title={tooltip}\n        className={_className}\n        disabled={disabled}\n      />\n    </Tooltip>\n  );\n};\n\nexport default FullScreenButton;\n","export const requestFullScreen = (element) => {\n  if ('requestFullscreen' in element) {\n    return element.requestFullscreen();\n  } else if ('webkitRequestFullscreen' in element) {\n    return element.webkitRequestFullscreen();\n  } else if ('mozRequestFullScreen' in element) {\n    return element.mozRequestFullScreen();\n  } else if ('msRequestFullscreen' in element) {\n    return element.msRequestFullscreen();\n  }\n};\n\nexport const exitFullScreen = () => {\n  if ('exitFullscreen' in document) {\n    return document.exitFullscreen();\n  } else if ('webkitExitFullscreen' in document) {\n    return document.webkitExitFullscreen();\n  } else if ('mozExitFullScreen' in document) {\n    return document.mozExitFullScreen();\n  } else if ('msExitFullscreen' in document) {\n    return document.msExitFullscreen();\n  }\n};\n\nexport const onFullScreenChange = (element, callback) => {\n  if ('onfullscreenchange' in element) {\n    element.onfullscreenchange = callback;\n  } else if ('onwebkitfullscreenchange' in element) {\n    element.onwebkitfullscreenchange = callback;\n  } else if ('onmozfullscreenchange' in element) {\n    element.onmozfullscreenchange = callback;\n  } else if ('onfullscreenchange' in document) {\n    document.onfullscreenchange = callback;\n  } else if ('onwebkitfullscreenchange' in document) {\n    document.onwebkitfullscreenchange = callback;\n  } else if ('onmozfullscreenchange' in document) {\n    document.onmozfullscreenchange = callback;\n  } else if ('onMSFullscreenChange' in document) {\n    document.onMSFullscreenChange = callback;\n  }\n};\n","export const splitSequenceByChunks = (\n  sequence: string,\n  id: string,\n  encode: boolean = true\n) => {\n  const start = 1;\n  const end = sequence.length;\n  // Split lines\n  const formattedSequence = sequence\n    .slice(Math.max(0, start - 1), end)\n    .replace(/(.{1,80})/g, '$1\\n');\n  const meta = `>${id} ${start}-${end}`.trim();\n  const output = `${meta}\\n${formattedSequence}`;\n  return encode ? encodeURIComponent(output) : output;\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"raw-sequence-viewer\":\"Sequence_style__raw-sequence-viewer___c9\",\"raw-sequence-header\":\"Sequence_style__raw-sequence-header___f1\",\"sequence_word\":\"Sequence_style__sequence_word___c7\",\"light-sequence\":\"Sequence_style__light-sequence___a6\",\"sequence_word_spacer\":\"Sequence_style__sequence_word_spacer___d7\",\"sequence-link\":\"Sequence_style__sequence-link___e1\",\"shape\":\"Sequence_style__shape___fb\",\"hmmer\":\"Sequence_style__hmmer___db\",\"yellow\":\"Sequence_style__yellow___a9\",\"red\":\"Sequence_style__red___e5\",\"blue\":\"Sequence_style__blue___cb\",\"ips\":\"Sequence_style__ips___d0\",\"gray\":\"Sequence_style__gray___ec\",\"green\":\"Sequence_style__green___d3\",\"pale-green\":\"Sequence_style__pale-green___ff\"};","'use strict';\nvar $ = require('../internals/export');\nvar parseInt = require('../internals/number-parse-int');\n\n// `Number.parseInt` method\n// https://tc39.es/ecma262/#sec-number.parseint\n// eslint-disable-next-line es/no-number-parseint -- required for testing\n$({ target: 'Number', stat: true, forced: Number.parseInt !== parseInt }, {\n  parseInt: parseInt\n});\n"],"names":["_ref","fragmentText","metadata","length","fragment","orf","React","Link","to","_ref2","description","Object","assign","main","key","detail","search","webComponents","ProteinEntryHierarchy","hierarchy","accessions","hrefroot","goToCustomLocation","ready","includeChildren","componentRef","useRef","useEffect","current","isEqual","_a","_hierarchy","addEventListener","e","target","composedPath","classList","contains","preventDefault","pathToDescription","getAttribute","replace","RegExp","config","root","website","path","ref","displaymode","ProteinEntryHierarchies","entries","setReady","useState","loadComponents","loadInterProWebComponents","interproComponents","push","loadWebComponent","then","m","InterproHierarchy","as","InterproEntry","InterproType","Promise","all","hierarchies","Array","from","Map","map","h","accession","values","getUniqueHierarchies","filter","Boolean","mapStateToProps","createSelector","state","settings","api","connect","css","cssBinder","summary","ipro","fonts","buttonCSS","sequence","className","style","display","minWidth","width","download","href","URL","createObjectURL","Blob","splitSequenceByChunks","type","sequenceStyles","title","onClick","event","seq","value","marginRight","taxID","fullName","taxonomy","db","styles","DescriptionReadMore","PureComponent","constructor","props","super","this","showMore","render","text","minNumberOfCharToShow","Infinity","patternToRemove","textToShow","slice","Description","textBlocks","Button","setState","customLocation","isoform","getIsoformURL","_ref3","_ref4","protocol","hostname","port","protein","format","pathname","descriptionToPath","query","isoforms","loadData","getUrl","mapDispatchToProps","data","loading","payload","Loading","results","onChange","newLocation","sort","a","b","Number","parseInt","split","acc","endsWith","ProteinViewer","loadable","loader","IsoformHeader","NumberComponent","_ref5","_ref6","_ref7","features","dataProtvista","featArray","integrated","feature","short_name","name","parent","children","indexOf","interpro","toLowerCase","startsWith","groups","groupByEntryType","unintegrated","f","sortedCategories","byEntryType","representativeDomains","selectRepresentativeData","splice","features2protvista","_","subfamily","entry","PantherSFGoTerms","onFoundGOTerms","_b","go_terms","inline","_c","GoTerms","terms","withoutTitle","subfamilies","hasGOTerms","setHasGOTerms","sf","SchemaOrgData","MIN_WIDTH","FamilyHierarchy","entriesCounter","families","matchesLoaded","SummaryProtein","comparisonContainerRef","renderComparisonButton","setRenderComparisonButton","comparisonMode","setComparisonMode","setMatchesLoaded","setFamilies","setSubfamilies","gene","processData","isTranscribedFrom","source_organism","isContainedInOrganism","maxWidth","id","Length","Species","taxId","proteome","Tooltip","counters","IsoformSelector","FullScreenButton","element","disabled","dataIcon","tooltip","onFullScreenHook","onExitFullScreenHook","UniProtLink","in_alphafold","BaseLink","pattern","margin","IPScanButton","marginBottom","FileExporter","source_database","integration","count","fileType","primary","secondary","label","DownloadButton","splitfullscreen","IsoformViewer","DomainsOnProtein","mainData","onMatchesLoaded","proteins","forEach","p","entry_protein_locations","flat","onFamiliesFound","fams","PantherGoTerms","noop","elementInDOM","setElementInDom","isFull","setFull","onFullscreen","document","fullscreenElement","removeEventListener","getElementById","_className","icon","_handleFullScreen","exitFullscreen","webkitExitFullscreen","mozExitFullScreen","msExitFullscreen","requestFullscreen","webkitRequestFullscreen","mozRequestFullScreen","msRequestFullscreen","requestFullScreen","encode","end","formattedSequence","Math","max","start","output","trim","encodeURIComponent","$","stat","forced"],"sourceRoot":""}