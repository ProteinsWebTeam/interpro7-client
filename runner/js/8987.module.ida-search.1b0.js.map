{"version":3,"file":"js/8987.module.ida-search.1b0.js","mappings":"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","sources":["webpack://interpro7-client/./src/components/SearchByIDA/style.css?63a7","webpack://interpro7-client/./src/components/SearchByIDA/DomainButton/index.tsx","webpack://interpro7-client/./src/components/SearchByIDA/IdaEntry/index.tsx","webpack://interpro7-client/./src/components/SearchByIDA/PanelIDA/index.tsx","webpack://interpro7-client/./src/components/SearchByIDA/index.tsx","webpack://interpro7-client/./src/components/ToggleSwitch/index.tsx","webpack://interpro7-client/./src/components/ToggleSwitch/style.css?e633","webpack://interpro7-client/./src/higherOrder/loadData/getFetch.ts","webpack://interpro7-client/./src/components/IPScan/Search/style.css?0fc7","webpack://interpro7-client/./src/styles/blocks.css?e075"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"ida-workspace\":\"SearchByIDA_style__ida-workspace___b9\",\"panels\":\"SearchByIDA_style__panels___da\",\"ida-panel\":\"SearchByIDA_style__ida-panel___ce\",\"ida-ignore\":\"SearchByIDA_style__ida-ignore___f5\",\"options\":\"SearchByIDA_style__options___cb\",\"switch\":\"SearchByIDA_style__switch___d6\",\"disabled\":\"SearchByIDA_style__disabled___e0\",\"ida-controls\":\"SearchByIDA_style__ida-controls___de\",\"ida-button\":\"SearchByIDA_style__ida-button___fc\",\"ida-list\":\"SearchByIDA_style__ida-list___f4\",\"ordered\":\"SearchByIDA_style__ordered___df\",\"ida-entry\":\"SearchByIDA_style__ida-entry___fe\",\"close\":\"SearchByIDA_style__close___b4\",\"drag\":\"SearchByIDA_style__drag___f8\",\"react-select-container\":\"SearchByIDA_style__react-select-container___fd\",\"react-select-labels\":\"SearchByIDA_style__react-select-labels___db\",\"react-select-label-header\":\"SearchByIDA_style__react-select-label-header___c9\",\"react-select-label-body\":\"SearchByIDA_style__react-select-label-body___e1\",\"entry-name\":\"SearchByIDA_style__entry-name___bc\",\"ignore\":\"SearchByIDA_style__ignore___bb\",\"switch-paddle\":\"SearchByIDA_style__switch-paddle___cf\",\"switch-active\":\"SearchByIDA_style__switch-active___b8\",\"ida-search\":\"SearchByIDA_style__ida-search___cd\"};","import React from 'react';\n\nimport cssBinder from 'styles/cssBinder';\n\nimport local from '../style.css';\n\nconst css = cssBinder(local);\n\nconst DEFAULT_DOMAIN_WIDTH = 30;\nconst DEFAULT_DOMAIN_HEIGHT = 18;\nconst DEFAULT_LINE_WIDTH = 7;\n\ntype Props = {\n  label: string;\n  fill?: string;\n  stroke?: string;\n  width?: number;\n  height?: number;\n  lineW?: number;\n};\n\nconst DomainButton = ({\n  label,\n  fill = '#aaa',\n  stroke = '#333',\n  width = DEFAULT_DOMAIN_WIDTH,\n  height = DEFAULT_DOMAIN_HEIGHT,\n  lineW = DEFAULT_LINE_WIDTH,\n}: Props) => {\n  const midY = height / 2;\n  return (\n    <svg\n      className={css('ida-button')}\n      width={width + 2 * lineW + 2 * midY}\n      height={height + 2}\n    >\n      <line\n        stroke={stroke}\n        strokeWidth={3}\n        x1={0}\n        y1={midY}\n        x2={width + 2 * lineW + 2 * midY}\n        y2={midY}\n      />\n      <path\n        className=\"feature\"\n        d={`M${midY},0h${width},0a${midY},${midY} 0 0 1 ${midY},${midY}v2a${midY},${midY} 0 0 1 -${midY},${midY}h-${width}a${midY},${midY} 0 0 1 -${midY},-${midY}v-2a${midY},${midY} 0 0 1 ${midY},-${midY}Z`}\n        fill={fill}\n        stroke={stroke}\n        transform={`translate(${lineW}, 0)`}\n      />\n      <text x={lineW + midY + width / 2} y={height - 2} textAnchor=\"middle\">\n        {label}\n      </text>\n    </svg>\n  );\n};\n\nexport default DomainButton;\n","import React, { PureComponent } from 'react';\n\nimport { connect } from 'react-redux';\nimport { createSelector } from 'reselect';\n\nimport Select, { CSSObjectWithLabel } from 'react-select';\n\nimport getFetch from 'higherOrder/loadData/getFetch';\nimport { format } from 'url';\nimport descriptionToPath from 'utils/processDescription/descriptionToPath';\n\nimport { getTrackColor, EntryColorMode } from 'utils/entry-color';\n\nimport cssBinder from 'styles/cssBinder';\nimport fonts from 'EBI-Icon-fonts/fonts.css';\nimport local from '../style.css';\nimport { DebouncedFunc, debounce } from 'lodash-es';\n\nconst css = cssBinder(fonts, local);\n\nexport const DEBOUNCE_RATE = 300;\n\nconst fetchFun = getFetch({ method: 'GET', responseType: 'JSON' });\n\nconst getUrlForAutocomplete = (\n  { protocol, hostname, port, root }: ParsedURLServer,\n  entryDB: string,\n  search: string,\n) => {\n  const description: InterProPartialDescription = {\n    main: { key: 'entry' },\n    entry: { db: entryDB },\n  };\n  return format({\n    protocol,\n    hostname,\n    port,\n    pathname: root + descriptionToPath(description),\n    query: { search },\n  });\n};\n\ntype Props = {\n  entry: string;\n  draggable?: boolean;\n  changeEntryHandler: (value: string) => void;\n  removeEntryHandler: (event: React.FormEvent) => void;\n  handleMoveMarker?: (delta: number | null) => void;\n  handleMoveEntry?: (delta: number) => void;\n  mergeResults: (\n    data: RequestedData<PayloadList<{ metadata: EntryMetadata }>>,\n  ) => void;\n  options: Record<string, { accession: string; name: string }>;\n  api: ParsedURLServer;\n};\ntype State = {\n  draggable: boolean;\n  loadingPfamOptions: boolean;\n  loadingInterProOptions: boolean;\n};\n\nclass IdaEntry extends PureComponent<Props, State> {\n  container: React.RefObject<HTMLDivElement>;\n  startPos: number;\n  currentWidth: number;\n  debouncedFetchOptions: DebouncedFunc<(value: string) => void>;\n\n  constructor(props: Props) {\n    super(props);\n    this.container = React.createRef();\n    this.startPos = 0;\n    this.currentWidth = 1;\n    this.debouncedFetchOptions = debounce(this.fetchOptions, DEBOUNCE_RATE);\n  }\n  state = {\n    draggable: false,\n    loadingPfamOptions: false,\n    loadingInterProOptions: false,\n  };\n  componentDidMount() {\n    if (this.props.entry) this._handleOnChange(this.props.entry);\n  }\n\n  _handleOnChange = (rawValue: unknown) => {\n    const value =\n      (rawValue as { value: string })?.value || (rawValue as string);\n    if (!value) return;\n    this.props.changeEntryHandler(value);\n  };\n\n  _handleOnInputChange = (rawValue: { value: string } | string) => {\n    const value =\n      (rawValue as { value: string })?.value || (rawValue as string);\n    if (!value) return;\n    this.debouncedFetchOptions(value);\n  };\n\n  fetchOptions = (value: string) => {\n    this.setState({\n      loadingPfamOptions: true,\n      loadingInterProOptions: true,\n    });\n    fetchFun(getUrlForAutocomplete(this.props.api, 'interpro', value)).then(\n      (data) => {\n        this.props.mergeResults(\n          data as unknown as RequestedData<\n            PayloadList<{ metadata: EntryMetadata }>\n          >,\n        );\n        this.setState({\n          loadingInterProOptions: false,\n        });\n      },\n    );\n\n    fetchFun(getUrlForAutocomplete(this.props.api, 'pfam', value)).then(\n      (data) => {\n        this.props.mergeResults(\n          data as unknown as RequestedData<\n            PayloadList<{ metadata: EntryMetadata }>\n          >,\n        );\n        this.setState({\n          loadingPfamOptions: false,\n        });\n      },\n    );\n  };\n\n  _getDeltaFromDragging = (event: React.DragEvent) => {\n    let delta = Math.floor(\n      (event.pageX - (this.startPos || 0)) / this.currentWidth,\n    );\n    if (delta <= 0) delta++;\n    return delta;\n  };\n  _handleStartDragging = (event: React.DragEvent) => {\n    this.currentWidth = this.container?.current?.offsetWidth || 1;\n    this.startPos = event.pageX;\n  };\n  _handleDragging = (event: React.DragEvent) => {\n    this.props.handleMoveMarker?.(this._getDeltaFromDragging(event));\n  };\n  _handleEndDragging = (event: React.DragEvent) => {\n    let delta = this._getDeltaFromDragging(event);\n    this.props.handleMoveMarker?.(null);\n    if (delta > 0) delta--;\n    if (delta !== 0) {\n      this.props.handleMoveEntry?.(delta);\n    }\n    this.currentWidth = 1;\n    this.startPos = 0;\n  };\n  render() {\n    const {\n      entry,\n      removeEntryHandler,\n      draggable = false,\n      options = {},\n    } = this.props;\n    const style: Record<string, { background?: string }> = options[\n      this.props.entry\n    ]\n      ? {\n          background: getTrackColor(\n            { accession: this.props.entry, source_database: '' },\n            EntryColorMode.ACCESSION,\n          ),\n        }\n      : {};\n    return (\n      <div\n        className={css('ida-entry')}\n        draggable={this.state.draggable}\n        onDragStart={this._handleStartDragging}\n        onDragEnd={this._handleEndDragging}\n        onDragCapture={this._handleDragging}\n        ref={this.container}\n        style={style}\n      >\n        <Select\n          options={Object.values(options).map(({ accession, name }) => ({\n            value: accession,\n            label: name,\n          }))}\n          isLoading={\n            this.state.loadingInterProOptions || this.state.loadingPfamOptions\n          }\n          onInputChange={this._handleOnInputChange}\n          onChange={this._handleOnChange}\n          className={css('react-select-container')}\n          value={{\n            value: entry,\n            label: options?.[entry]?.name,\n          }}\n          styles={{\n            menuList: (provided: CSSObjectWithLabel) =>\n              ({\n                ...provided,\n                background: 'white',\n              }) as CSSObjectWithLabel,\n            menu: (provided: CSSObjectWithLabel) =>\n              ({\n                ...provided,\n                top: undefined,\n                width: 'var(--entry-width)',\n                marginTop: 0,\n              }) as CSSObjectWithLabel,\n            control: (provided: CSSObjectWithLabel) =>\n              ({\n                ...provided,\n                background: 'transparent',\n                border: 0,\n                boxShadow: undefined,\n              }) as CSSObjectWithLabel,\n            input: (provided: CSSObjectWithLabel) =>\n              ({\n                ...provided,\n                color: 'white',\n              }) as CSSObjectWithLabel,\n          }}\n          formatOptionLabel={({ value, label }, { context }) => {\n            return (\n              <div\n                style={{\n                  color: context === 'menu' ? 'black' : 'white',\n                  cursor: context === 'menu' ? 'pointer' : 'text',\n                }}\n                className={css('react-select-labels')}\n                key={value}\n              >\n                <div className={css('react-select-label-header')}>{value}</div>\n                {label && (\n                  <div className={css('react-select-label-body')}>{label}</div>\n                )}\n              </div>\n            );\n          }}\n        />\n        {draggable && (\n          <button\n            className={css('drag', { nodata: !options[entry] })}\n            onMouseEnter={() => this.setState({ draggable: true })}\n            onMouseLeave={() => this.setState({ draggable: false })}\n          >\n            <i className={css('icon', 'icon-common', 'icon-ellipsis-v')}></i>\n          </button>\n        )}\n        <button className={css('close')} onClick={removeEntryHandler}>\n          ✖\n        </button>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = createSelector(\n  (state: GlobalState) => state.settings.api,\n  (api) => ({ api }),\n);\nexport default connect(mapStateToProps)(IdaEntry);\n","import React, { Fragment } from 'react';\n\nimport IdaEntry from '../IdaEntry';\n\nimport cssBinder from 'styles/cssBinder';\nimport local from '../style.css';\n\nconst css = cssBinder(local);\n\ntype Props = {\n  entryList: Array<string>;\n  ignoreList: Array<string>;\n  isOrdered: boolean;\n  removeEntryHandler: (n: number) => void;\n  changeEntryHandler: (n: number, name: string) => void;\n  changeIgnoreHandler: (n: number, name: string) => void;\n  removeIgnoreHandler: (n: number) => void;\n  mergeResults: (\n    data: RequestedData<PayloadList<{ metadata: EntryMetadata }>>,\n  ) => void;\n  options: {};\n  markerBeforeEntry?: string | null;\n  markerAfterEntry?: string | null;\n  handleMoveMarker: (n: number) => (n: number | null) => void;\n  handleMoveEntry: (n: number) => (n: number) => void;\n};\nconst PanelIDA = ({\n  entryList,\n  ignoreList,\n  isOrdered,\n  removeEntryHandler,\n  changeEntryHandler,\n  changeIgnoreHandler,\n  removeIgnoreHandler,\n  mergeResults,\n  options,\n  markerBeforeEntry = null,\n  markerAfterEntry = null,\n  handleMoveMarker,\n  handleMoveEntry,\n}: Props) => (\n  <div className={css('panels')}>\n    <div className={css('ida-panel')}>\n      <header>Architectures must include</header>\n      <div>\n        <ul className={css('ida-list', { ordered: isOrdered })}>\n          {entryList &&\n            entryList.map((e, i) => (\n              <Fragment key={i}>\n                {markerBeforeEntry === e && <div>|</div>}\n                <li>\n                  <IdaEntry\n                    // position={i}\n                    entry={e}\n                    // active={true}\n                    draggable={isOrdered}\n                    handleMoveMarker={handleMoveMarker(i)}\n                    handleMoveEntry={handleMoveEntry(i)}\n                    removeEntryHandler={() => removeEntryHandler(i)}\n                    changeEntryHandler={(name) => changeEntryHandler(i, name)}\n                    mergeResults={mergeResults}\n                    options={options}\n                  />\n                </li>\n                {markerAfterEntry === e && <div>|</div>}\n              </Fragment>\n            ))}\n        </ul>\n      </div>\n    </div>\n    <div className={css('ida-ignore')}>\n      <header>\n        Architectures must <u>not</u> include\n      </header>\n      <ul className={css('ida-list', 'ignore')}>\n        {ignoreList &&\n          ignoreList.map((e, i) => (\n            <li key={i}>\n              <IdaEntry\n                // position={i}\n                entry={e}\n                // active={true}\n                removeEntryHandler={() => removeIgnoreHandler(i)}\n                changeEntryHandler={(name) => changeIgnoreHandler(i, name)}\n                mergeResults={mergeResults}\n                options={options}\n              />\n            </li>\n          ))}\n      </ul>\n    </div>\n  </div>\n);\n\nexport default PanelIDA;\n","import React, { PureComponent } from 'react';\n\nimport { connect } from 'react-redux';\nimport { goToCustomLocation } from 'actions/creators';\nimport { createSelector } from 'reselect';\n\nimport loadable from 'higherOrder/loadable';\nimport { schemaProcessDataPageSection } from 'schema_org/processors';\n\nimport DomainButton from './DomainButton';\nimport PanelIDA from './PanelIDA';\nimport ToggleSwitch from 'components/ToggleSwitch';\nimport Button from 'components/SimpleCommonComponents/Button';\n\nimport cssBinder from 'styles/cssBinder';\n\nimport blocks from 'styles/blocks.css';\nimport local from './style.css';\nimport searchPageCss from 'pages/Search/style.css';\nimport search from 'components/IPScan/Search/style.css';\n\nconst css = cssBinder(local, blocks, search, searchPageCss);\n\nconst SchemaOrgData = loadable({\n  loader: () => import(/* webpackChunkName: \"schemaOrg\" */ 'schema_org'),\n  loading: () => null,\n});\n\ntype Props = {\n  customLocation: InterProLocation;\n  goToCustomLocation: typeof goToCustomLocation;\n};\ntype State = {\n  markerBeforeEntry: string | null;\n  markerAfterEntry: string | null;\n  options: Record<string, EntryMetadata>;\n};\n\nexport class SearchByIDA extends PureComponent<Props, State> {\n  state = {\n    markerBeforeEntry: null,\n    markerAfterEntry: null,\n    options: {},\n  };\n  _handleSubmit = ({\n    entries,\n    order,\n    exact = false,\n    ignore,\n  }: {\n    entries: Array<string>;\n    order: boolean;\n    exact?: boolean;\n    ignore: Array<string>;\n  }) => {\n    const search: InterProLocationSearch = {\n      ida_search: entries.join(','),\n    };\n    if (order) {\n      search.ordered = true;\n      if (exact) search.exact = true;\n    }\n    if (ignore && ignore.length) search.ida_ignore = ignore.join(',');\n\n    this.props.goToCustomLocation({\n      ...this.props.customLocation,\n      description: {\n        main: { key: 'search' },\n        search: { type: 'ida' },\n      },\n      search,\n    });\n  };\n  _handleMoveMarker =\n    (entries: Array<string>) => (pos: number) => (delta: number | null) => {\n      if (delta === null) {\n        this.setState({ markerBeforeEntry: null, markerAfterEntry: null });\n        return;\n      }\n      const newPos = Math.max(0, Math.min(entries.length, pos + delta));\n      if (newPos === entries.length) {\n        this.setState({\n          markerBeforeEntry: null,\n          markerAfterEntry: entries[newPos - 1],\n        });\n      } else {\n        this.setState({\n          markerBeforeEntry: entries[newPos],\n          markerAfterEntry: null,\n        });\n      }\n    };\n  _handleMoveEntry =\n    (currentEntries: Array<string>, ignore: Array<string>) =>\n    (pos: number) =>\n    (delta: number) => {\n      const newPos = Math.max(\n        0,\n        Math.min(currentEntries.length - 1, pos + delta),\n      );\n\n      const entries = [...currentEntries];\n      entries.splice(pos, 1);\n      entries.splice(newPos, 0, currentEntries[pos]);\n\n      this._handleSubmit({ entries, order: true, ignore });\n    };\n\n  _mergeResults = (\n    data: RequestedData<PayloadList<{ metadata: EntryMetadata }>>,\n  ) => {\n    if (!data || !data.ok) return;\n    const options: Record<string, EntryMetadata> = { ...this.state.options };\n    for (const e of data.payload?.results || []) {\n      if (\n        e.metadata.source_database === 'interpro' &&\n        e.metadata.type === 'domain'\n      )\n        options[e.metadata.accession] = e.metadata;\n      else if (e.metadata.source_database === 'pfam')\n        options[e.metadata.accession] = e.metadata;\n    }\n    this.setState({ options });\n  };\n\n  render() {\n    const {\n      ida_search: searchFromURL,\n      ordered,\n      exact,\n      ida_ignore: ignoreFromURL,\n    }: InterProLocationSearch = this.props.customLocation.search;\n    const entries = searchFromURL ? searchFromURL.split(',') : [];\n    if (searchFromURL !== undefined && searchFromURL.trim() === '')\n      entries.push('');\n    const order = !!ordered;\n    const _exact = !!exact;\n    const ignore = ignoreFromURL ? ignoreFromURL.split(',') : [];\n    if (ignoreFromURL !== undefined && ignoreFromURL.trim() === '')\n      ignore.push('');\n    return (\n      <section className={css('vf-stack', 'vf-stack--400')}>\n        <div className={css('simple-box')}>\n          <header>Search for proteins containing specific domains</header>\n          <SchemaOrgData\n            data={{\n              name: 'Search By Domain Architecture IDA',\n              description: 'Search proteins which match a domain architecture',\n            }}\n            processData={schemaProcessDataPageSection}\n          />\n          <div className={css('vf-stack', 'vf-stack--400')}>\n            <div className={css('search-input')}>\n              <div className={css('description')}>\n                <p>\n                  Domain architectures are derived from matches to Pfam models.\n                  You can select domains to either be included or excluded from\n                  your search results. The results will include all proteins\n                  which match the domain architecture selected below. Domains\n                  can be selected using either a Pfam accession, or an InterPro\n                  accession, where that InterPro entry includes a Pfam model.\n                </p>\n              </div>\n              <div className={css('ida-workspace')}>\n                <PanelIDA\n                  entryList={entries}\n                  ignoreList={ignore}\n                  isOrdered={order}\n                  markerBeforeEntry={this.state.markerBeforeEntry}\n                  markerAfterEntry={this.state.markerAfterEntry}\n                  handleMoveMarker={this._handleMoveMarker(entries)}\n                  handleMoveEntry={this._handleMoveEntry(entries, ignore)}\n                  mergeResults={this._mergeResults}\n                  options={this.state.options}\n                  removeEntryHandler={(n) =>\n                    this._handleSubmit({\n                      entries: entries.slice(0, n).concat(entries.slice(n + 1)),\n                      order,\n                      ignore,\n                    })\n                  }\n                  removeIgnoreHandler={(n) =>\n                    this._handleSubmit({\n                      ignore: ignore.slice(0, n).concat(ignore.slice(n + 1)),\n                      entries,\n                      order,\n                    })\n                  }\n                  changeEntryHandler={(n, name) => {\n                    const tmp = [...entries];\n                    tmp[n] = name;\n                    this._handleSubmit({\n                      entries: tmp,\n                      ignore,\n                      order,\n                    });\n                  }}\n                  changeIgnoreHandler={(n, name) => {\n                    const tmp = [...ignore];\n                    tmp[n] = name;\n                    this._handleSubmit({\n                      ignore: tmp,\n                      entries,\n                      order,\n                    });\n                  }}\n                />\n              </div>\n              <div className={css('ida-controls')}>\n                <Button\n                  className={css('ida-button')}\n                  onClick={() =>\n                    this._handleSubmit({\n                      entries: entries.concat(''),\n                      ignore,\n                      order,\n                    })\n                  }\n                >\n                  <DomainButton label=\"➕\" fill=\"#75bf40\" stroke=\"#75bf40\" />{' '}\n                  <span>Add Domain to include</span>\n                </Button>\n                <Button\n                  className={css('ida-button')}\n                  onClick={() =>\n                    this._handleSubmit({\n                      ignore: ignore.concat(''),\n                      entries,\n                      order,\n                    })\n                  }\n                >\n                  <DomainButton label=\"✖️️\" fill=\"#bf4540\" stroke=\"#bf4540\" />{' '}\n                  <span>Add Domain to exclude</span>\n                </Button>\n                <div className={css('options')}>\n                  <ToggleSwitch\n                    switchCond={order}\n                    name={'order'}\n                    id={'ordered'}\n                    size={'tiny'}\n                    label={'Order of domain matters: '}\n                    onValue={'Yes'}\n                    offValue={'No'}\n                    handleChange={(event) =>\n                      this._handleSubmit({\n                        order: (event?.target as HTMLFormElement).checked,\n                        entries,\n                        ignore,\n                      })\n                    }\n                  />\n\n                  <ToggleSwitch\n                    switchCond={_exact}\n                    name={'exact'}\n                    id={'exact'}\n                    disabled={!ordered}\n                    size={'tiny'}\n                    label={'Exact match:'}\n                    onValue={'Yes'}\n                    offValue={'No'}\n                    handleChange={(event) =>\n                      this._handleSubmit({\n                        exact: (event?.target as HTMLFormElement).checked,\n                        order: true,\n                        entries,\n                        ignore,\n                      })\n                    }\n                  />\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </section>\n    );\n  }\n}\nconst mapStateToProps = createSelector(\n  (state: GlobalState) => state.customLocation,\n  (customLocation) => ({ customLocation }),\n);\n\nexport default connect(mapStateToProps, { goToCustomLocation })(SearchByIDA);\n","import React, { useState, useEffect } from 'react';\n\nimport cssBinder from 'styles/cssBinder';\n\nimport fonts from 'EBI-Icon-fonts/fonts.css';\nimport local from './style.css';\n\nconst css = cssBinder(fonts, local);\n\ntype Props = {\n  name?: string;\n  id: string;\n  size?: 'large' | 'small' | 'tiny';\n  switchCond: boolean;\n  disabled?: boolean;\n  label?: string;\n  SRLabel?: string;\n  onValue?: string;\n  offValue?: string;\n  handleChange?: (evt?: React.ChangeEvent) => void;\n  addAccessionStyle?: boolean;\n  width?: string;\n};\n\nconst ToggleSwitch = ({\n  name = 'switch',\n  id,\n  size = 'large',\n  switchCond,\n  disabled = false,\n  label,\n  SRLabel,\n  onValue = 'On',\n  offValue = 'Off',\n  handleChange,\n  addAccessionStyle = false,\n  width,\n}: Props) => {\n  const [isOn, setIsOn] = useState(switchCond);\n  useEffect(() => {\n    setIsOn(switchCond);\n  }, [switchCond]);\n  const onInputChange = (evt?: React.ChangeEvent) => {\n    if (handleChange) {\n      handleChange(evt);\n    } else {\n      setIsOn(!isOn);\n    }\n  };\n  const paddleStyle = width ? { width } : {};\n  return (\n    <div className={css('new-switch', size)}>\n      <label htmlFor={id}>\n        <input\n          type=\"checkbox\"\n          checked={isOn}\n          className={css('switch-input')}\n          name={name}\n          id={id}\n          onChange={onInputChange}\n          disabled={disabled}\n        />\n        {label}\n        <label\n          className={css(\n            'switch-paddle',\n            addAccessionStyle ? 'accession-selector' : '',\n            disabled ? 'disabled' : '',\n          )}\n          style={{ ...paddleStyle }}\n          htmlFor={id}\n        >\n          {SRLabel ? (\n            <span className={css('show-for-sr')}>{SRLabel}:</span>\n          ) : null}\n          <span className={css('switch-active')} aria-hidden=\"true\">\n            {onValue}\n          </span>\n          <span className={css('switch-inactive')} aria-hidden=\"true\">\n            {offValue}\n          </span>\n        </label>\n      </label>\n    </div>\n  );\n};\n\nexport default ToggleSwitch;\n","// extracted by mini-css-extract-plugin\nexport default {\"new-switch\":\"ToggleSwitch_style__new-switch___f6\",\"switch-input\":\"ToggleSwitch_style__switch-input___b8\",\"switch-paddle\":\"ToggleSwitch_style__switch-paddle___c6\",\"switch-active\":\"ToggleSwitch_style__switch-active___d8\",\"switch-inactive\":\"ToggleSwitch_style__switch-inactive___d2\",\"tiny\":\"ToggleSwitch_style__tiny___a1\",\"small\":\"ToggleSwitch_style__small___d3\",\"large\":\"ToggleSwitch_style__large___e1\",\"disabled\":\"ToggleSwitch_style__disabled___fa\",\"accession-selector\":\"ToggleSwitch_style__accession-selector___cc\"};","import cachedFetch, {\n  cachedFetchJSON,\n  cachedFetchYAML,\n  cachedFetchText,\n  cachedFetchGZIP,\n} from 'utils/cached-fetch';\n\nexport default ({ method, responseType }: FetchOptions = {}) => {\n  if (responseType === 'text') return cachedFetchText;\n  if (responseType === 'yaml') return cachedFetchYAML;\n  if (responseType === 'gzip') return cachedFetchGZIP;\n  if (method !== 'HEAD') return cachedFetchJSON;\n  return cachedFetch;\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"editor\":\"Search_style__editor___bf\",\"line-with-buttons\":\"Search_style__line-with-buttons___aa\",\"file-input-label\":\"Search_style__file-input-label___e3\",\"search-form\":\"Search_style__search-form___e7\",\"dragging\":\"Search_style__dragging___e6\",\"dragging-overlay\":\"Search_style__dragging-overlay___f1\",\"ipscan-block\":\"Search_style__ipscan-block___a7\",\"description\":\"Search_style__description___b5\",\"sequence\":\"Search_style__sequence___db\",\"mono\":\"Search_style__mono___f7\",\"invalid-block\":\"Search_style__invalid-block___d9\",\"valid-block\":\"Search_style__valid-block___af\",\"comment\":\"Search_style__comment___f6\",\"fasta-header\":\"Search_style__fasta-header___f7\",\"invalid-comment\":\"Search_style__invalid-comment___f6\",\"invalid-letter\":\"Search_style__invalid-letter___fa\",\"search-input\":\"Search_style__search-input___be\",\"search-adv\":\"Search_style__search-adv___be\",\"user-select-none\":\"Search_style__user-select-none___ee\"};","// extracted by mini-css-extract-plugin\nexport default {\"card\":\"styles_blocks__card___ad\",\"grid\":\"styles_blocks__grid___b2\",\"simple-box\":\"styles_blocks__simple-box___c3\"};"],"names":["css","cssBinder","local","DEFAULT_DOMAIN_WIDTH","DEFAULT_DOMAIN_HEIGHT","DEFAULT_LINE_WIDTH","_ref","label","fill","stroke","width","height","lineW","midY","React","className","strokeWidth","x1","y1","x2","y2","d","transform","x","y","textAnchor","fonts","fetchFun","getFetch","method","responseType","getUrlForAutocomplete","entryDB","search","protocol","hostname","port","root","description","main","key","entry","db","format","pathname","descriptionToPath","query","IdaEntry","PureComponent","constructor","props","super","state","draggable","loadingPfamOptions","loadingInterProOptions","_handleOnChange","rawValue","value","this","changeEntryHandler","_handleOnInputChange","debouncedFetchOptions","fetchOptions","setState","api","then","data","mergeResults","_getDeltaFromDragging","event","delta","Math","floor","pageX","startPos","currentWidth","_handleStartDragging","_b","_a","container","current","offsetWidth","_handleDragging","handleMoveMarker","call","_handleEndDragging","_d","_c","handleMoveEntry","debounce","componentDidMount","render","removeEntryHandler","options","style","background","getTrackColor","accession","source_database","EntryColorMode","ACCESSION","onDragStart","onDragEnd","onDragCapture","ref","Select","Object","values","map","_ref2","name","isLoading","onInputChange","onChange","styles","menuList","provided","assign","menu","top","undefined","marginTop","control","border","boxShadow","input","color","formatOptionLabel","_ref3","_ref4","context","cursor","nodata","onMouseEnter","onMouseLeave","onClick","mapStateToProps","createSelector","settings","connect","entryList","ignoreList","isOrdered","changeIgnoreHandler","removeIgnoreHandler","markerBeforeEntry","markerAfterEntry","ordered","e","i","Fragment","blocks","searchPageCss","SchemaOrgData","loadable","loader","loading","SearchByIDA","_handleSubmit","entries","order","exact","ignore","ida_search","join","length","ida_ignore","goToCustomLocation","customLocation","type","_handleMoveMarker","pos","newPos","max","min","_handleMoveEntry","currentEntries","splice","_mergeResults","ok","payload","results","metadata","searchFromURL","ignoreFromURL","split","trim","push","_exact","processData","schemaProcessDataPageSection","PanelIDA","n","slice","concat","tmp","Button","DomainButton","ToggleSwitch","switchCond","id","size","onValue","offValue","handleChange","target","checked","disabled","SRLabel","addAccessionStyle","isOn","setIsOn","useState","useEffect","paddleStyle","htmlFor","evt","_temp","cachedFetchText","cachedFetchYAML","cachedFetchGZIP","cachedFetchJSON","cachedFetch"],"sourceRoot":""}