{"version":3,"file":"js/8759.module.structure-viewer.c64.js","mappings":"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","sources":["webpack://interpro7-client/./src/wrappers/ResizeObserverComponent/ResizeObserver.js","webpack://interpro7-client/./src/wrappers/ResizeObserverComponent/index.js","webpack://interpro7-client/./src/components/Structure/Viewer/style.css?d25c","webpack://interpro7-client/./src/components/Structure/Viewer/Labels/index.tsx","webpack://interpro7-client/./src/components/Structure/Viewer/ColourByResidueLddtTheme.js","webpack://interpro7-client/./src/components/Structure/Viewer/af-confidence/prop.ts","webpack://interpro7-client/./src/components/Structure/Viewer/af-confidence/color.ts","webpack://interpro7-client/./src/components/Structure/Viewer/index.tsx"],"sourcesContent":["// @flow\nimport { schedule, sleep } from 'timing-functions';\n\n/*:: type ResizeObserverEntry = {\n  target: HTMLElement,\n  contentRect: {[key: string]: number},\n}; */\n\nexport default (() => {\n  // Use native if possible\n  if ('ResizeObserver' in window) return window.ResizeObserver;\n  // or fallback, with incomplete polyfill, that should be enough for what we do\n  return class ResizeObserver {\n    /*:: _node: ?HTMLElement; */\n    /*:: _onResizeEvent: Array<ResizeObserverEntry> => any; */\n\n    constructor(onResizeEvent /*: Array<ResizeObserverEntry> => any */) {\n      if (typeof onResizeEvent !== 'function') {\n        throw new Error('missing resize handler');\n      }\n      this._onResizeEvent = onResizeEvent;\n    }\n\n    _handleResize = async () => {\n      await schedule();\n      if (!this._node) return;\n      this._onResizeEvent([\n        {\n          target: this._node,\n          // $FlowFixMe class-object-subtyping\n          contentRect: this._node.getBoundingClientRect(),\n        },\n      ]);\n    };\n\n    observe(node /*: HTMLElement */) {\n      if (!node instanceof HTMLElement) {\n        throw new Error('ResizeObserver only works on HTML elements');\n      }\n      if (this._node) {\n        throw new Error('ResizeObserver fallback only supports one node');\n      }\n      this._node = node;\n      window.addEventListener('resize', this._handleResize);\n      this._handleResize();\n      // just in case it happened too soon, just redo it after a bit\n      // eslint-disable-next-line no-magic-numbers\n      sleep(1000).then(this._handleResize);\n    }\n\n    unobserve(node /*: HTMLElement */) {\n      if (this._node && this._node !== node) {\n        throw new Error('Trying to unobserve the wrong node');\n      }\n      this._node = null;\n      window.removeEventListener('resize', this._handleResize);\n    }\n  };\n})();\n","// @flow\nimport React, { PureComponent } from 'react';\nimport T from 'prop-types';\n/*:: import type { Node } from 'react'; */\n\nimport ResizeObserver from './ResizeObserver';\n\n/*:: type Measurement =\n  'bottom' | 'height' | 'left' | 'right' | 'top' | 'width' | 'x' | 'y';\n*/\n\n/*:: type State = {\n  [Measurement]: number,\n}; */\n\n/*:: type Props = {\n  element: ?string,\n  children: State => Node,\n  measurements: Measurement | Array<Measurement>,\n  updateCallback?: ?function,\n}; */\n\nclass ResizeObserverComponent extends PureComponent /*:: <Props, State> */ {\n  /*::\n    _ref: { current: null | React$ElementRef<string | Class<React$Component<*, *>>> };\n    _resizeObserver: any;\n  */\n\n  static propTypes = {\n    element: T.string,\n    children: T.func.isRequired,\n    measurements: T.oneOfType([T.arrayOf(T.string).isRequired, T.string]),\n    updateCallback: T.func,\n  };\n\n  constructor(props /*: Props */) {\n    super(props);\n\n    this.state = {};\n    this._resizeObserver = new ResizeObserver(\n      // $FlowFixMe method-unbinding\n      this._handleResizeEvent.bind(this),\n    );\n\n    this._ref = React.createRef();\n  }\n\n  componentDidMount() {\n    this._resizeObserver.observe(this._ref.current);\n  }\n\n  componentDidUpdate() {\n    if (this.props.updateCallback) this.props.updateCallback();\n  }\n\n  componentWillUnmount() {\n    this._resizeObserver.unobserve(this._ref.current);\n  }\n\n  _handleResizeEvent(resizeObserverEntries) {\n    let finalContentRect;\n    for (const { target, contentRect } of resizeObserverEntries) {\n      if (target !== this._ref.current) continue; // shouldn't happen, but still\n      finalContentRect = contentRect;\n    }\n    if (finalContentRect) {\n      const state = {};\n      let { measurements } = this.props;\n      if (!Array.isArray(measurements)) {\n        measurements = [measurements];\n      }\n      for (const measurement of measurements) {\n        state[measurement] = finalContentRect[measurement];\n      }\n      this.setState(state);\n    }\n  }\n\n  render() {\n    const {\n      children,\n      element,\n      measurements: __,\n      updateCallback: _,\n      ...props\n    } = this.props;\n    const Element = element || 'span';\n    return (\n      // $FlowIgnore\n      <Element {...props} ref={this._ref}>\n        {children(this.state)}\n      </Element>\n    );\n  }\n}\n\nexport default ResizeObserverComponent;\n","// extracted by mini-css-extract-plugin\nexport default {\"viewer-resizer\":\"Viewer_style__viewer-resizer___d3\",\"structure-and-label\":\"Viewer_style__structure-and-label___d8\",\"structure-viewer-ref\":\"Viewer_style__structure-viewer-ref___a9\",\"structure-label\":\"Viewer_style__structure-label___ba\"};","import React, { useState, useEffect } from 'react';\nimport {\n  StructureElement,\n  StructureProperties,\n} from 'molstar/lib/mol-model/structure';\n\nimport cssBinder from 'styles/cssBinder';\n\nimport style from '../style.css';\nimport { PluginContext } from 'molstar/lib/mol-plugin/context';\nconst css = cssBinder(style);\n\nconst MAX_ACCESSION_LENGTH = 20;\n\n/**\n * Function hook for 3D model labels\n * returns information on residue highlighted on 3D structure\n * @param {Object} props - react props\n * @returns {Object} react element\n */\n\ntype Props = {\n  viewer: PluginContext | null;\n  accession: string;\n};\n\ntype LabelData = {\n  accession: string;\n  residue: string;\n  chain: string;\n  location: number;\n  seq_location: number;\n  seq_chain: string;\n};\nconst Labels = (props: Props) => {\n  const [labelData, setLabelData] = useState<LabelData>();\n\n  useEffect(() => {\n    if (props.viewer) {\n      props.viewer.behaviors.interaction.hover.subscribe((arg) => {\n        const loci = arg.current.loci;\n        if (loci.kind === 'element-loci' && loci.elements.length === 1) {\n          const stats = StructureElement.Stats.ofLoci(loci);\n          const { residueCount } = stats;\n          if (residueCount > 0) {\n            const location = stats.firstResidueLoc;\n            const data: LabelData = {\n              accession: location.unit.model.entryId,\n              residue: StructureProperties.atom.label_comp_id(location),\n              location: StructureProperties.residue.auth_seq_id(location),\n              chain: StructureProperties.chain.auth_asym_id(location),\n              seq_location: StructureProperties.residue.label_seq_id(location),\n              seq_chain: StructureProperties.chain.label_asym_id(location),\n            };\n            if (data.accession.length > MAX_ACCESSION_LENGTH) {\n              data.accession = props.accession;\n            }\n            if (\n              labelData === undefined ||\n              data.location !== labelData.location\n            ) {\n              setLabelData(data);\n            }\n          }\n        } else {\n          setLabelData(undefined);\n        }\n      });\n    }\n  }, [props.viewer]);\n\n  if (labelData && labelData.location !== undefined) {\n    return (\n      <div className={css('structure-label')}>\n        <small>{labelData.accession} </small>\n        Chain: <b>{labelData.chain} </b>\n        Residue: <b>{labelData.residue} </b>\n        {labelData.location}\n      </div>\n    );\n  }\n  return <div className={css('structure-label')} />;\n};\n\nexport default Labels;\n","import { CustomElementProperty } from 'molstar/lib/mol-model-props/common/custom-element-property';\nimport { Color, ColorScale } from 'molstar/lib/mol-util/color';\n\n// eslint-disable-next-line no-magic-numbers\nconst defaultColor = Color(0x777777);\nconst scale = ColorScale.create({\n  listOrName: 'turbo',\n  domain: [1, 0],\n});\n\nexport const ColorByResidueLddtTheme = CustomElementProperty.create({\n  label: 'Colour by Residue pLDDT score',\n  name: 'basic-wrapper-residue-striping',\n  getData: async (model) => {\n    const map = new Map();\n    const entryURL = model.entry.split('structure')[0];\n    const lddtURL = `${entryURL}lddt`;\n    const residueIndex = model.atomicHierarchy.residueAtomSegments.index;\n    const residueRowCount = model.atomicHierarchy.atoms._rowCount;\n    const response = await fetch(lddtURL);\n    const residueLDDT = await response.json();\n    for (let i = 0, _i = residueRowCount; i < _i; i++) {\n      map.set(i, residueLDDT[residueIndex[i]]);\n    }\n    return { value: map };\n  },\n  coloring: {\n    getColor: (e) => {\n      return scale.color(e);\n    },\n    defaultColor: defaultColor,\n  },\n  getLabel: function (e) {\n    return `pLDDT: ${e}`;\n  },\n});\n","/**\n * Copyright (c) 2018-2020 mol* contributors, licensed under MIT, See LICENSE file for more info.\n *\n * @author David Sehnal <david.sehnal@gmail.com>\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\n */\n\nimport { Column, Table } from 'molstar/lib/mol-data/db';\nimport { toTable } from 'molstar/lib/mol-io/reader/cif/schema';\nimport {\n  Model,\n  ResidueIndex,\n  Unit,\n  IndexedCustomProperty,\n} from 'molstar/lib/mol-model/structure';\nimport {\n  StructureElement,\n  Structure,\n} from 'molstar/lib/mol-model/structure/structure';\nimport { ParamDefinition as PD } from 'molstar/lib/mol-util/param-definition';\nimport { MmcifFormat } from 'molstar/lib/mol-model-formats/structure/mmcif';\nimport { PropertyWrapper } from 'molstar/lib/mol-model-props/common/wrapper';\nimport { CustomProperty } from 'molstar/lib/mol-model-props/common/custom-property';\nimport { CustomModelProperty } from 'molstar/lib/mol-model-props/common/custom-model-property';\nimport { CustomPropertyDescriptor } from 'molstar/lib/mol-model/custom-property';\nimport { dateToUtcString } from 'molstar/lib/mol-util/date';\nimport { arraySetAdd } from 'molstar/lib/mol-util/array';\n\nexport { AfConfidence };\n\ntype AfConfidence = PropertyWrapper<\n  | {\n      score: IndexedCustomProperty.Residue<[number, string]>;\n      category: string[];\n    }\n  | undefined\n>;\n\n// eslint-disable-next-line @typescript-eslint/no-namespace\nnamespace AfConfidence {\n  export const DefaultServerUrl = '';\n\n  export function isApplicable(model?: Model): boolean {\n    return !!model; // && Model.isFromPdbArchive(model);\n  }\n\n  export interface Info {\n    timestamp_utc: string;\n  }\n\n  export const Schema = {\n    local_metric_values: {\n      label_asym_id: Column.Schema.str,\n      label_comp_id: Column.Schema.str,\n      label_seq_id: Column.Schema.int,\n      metric_id: Column.Schema.int,\n      metric_value: Column.Schema.float,\n      model_id: Column.Schema.int,\n      ordinal_id: Column.Schema.int,\n    },\n  };\n  export type Schema = typeof Schema;\n\n  // eslint-disable-next-line no-inner-declarations\n  function tryGetInfoFromCif(\n    categoryName: string,\n    model: Model\n  ): undefined | Info {\n    if (\n      !MmcifFormat.is(model.sourceData) ||\n      !model.sourceData.data.frame.categoryNames.includes(categoryName)\n    ) {\n      return;\n    }\n\n    const timestampField =\n      model.sourceData.data.frame.categories[categoryName].getField(\n        'metric_value'\n      );\n    if (!timestampField || timestampField.rowCount === 0) return;\n\n    return {\n      timestamp_utc: timestampField.str(0) || dateToUtcString(new Date()),\n    };\n  }\n\n  export function fromCif(\n    ctx: CustomProperty.Context,\n    model: Model\n  ): AfConfidence | undefined {\n    const info = tryGetInfoFromCif('ma_qa_metric_local', model);\n    if (!info) return;\n    const data = getCifData(model);\n    const metricMap = createScoreMapFromCif(model, data.residues);\n    return { info, data: metricMap };\n  }\n\n  export async function fromCifOrServer(\n    ctx: CustomProperty.Context,\n    model: Model\n  ): Promise<unknown> {\n    const cif = fromCif(ctx, model);\n    return { value: cif };\n  }\n\n  export function getConfidenceScore(e: StructureElement.Location) {\n    if (!Unit.isAtomic(e.unit)) return [-1, 'No Score'];\n    const prop = AfConfidenceProvider.get(e.unit.model).value;\n    if (!prop || !prop.data) return [-1, 'No Score'];\n    const rI = e.unit.residueIndex[e.element];\n    return prop.data.score.has(rI) ? prop.data.score.get(rI) : [-1, 'No Score'];\n  }\n\n  const _emptyArray: string[] = [];\n  export function getCategories(structure?: Structure) {\n    if (!structure) return _emptyArray;\n    const prop = AfConfidenceProvider.get(structure.models[0]).value;\n    if (!prop || !prop.data) return _emptyArray;\n    return prop.data.category;\n  }\n\n  // eslint-disable-next-line no-inner-declarations\n  function getCifData(model: Model) {\n    if (!MmcifFormat.is(model.sourceData))\n      throw new Error('Data format must be mmCIF.');\n    return {\n      residues: toTable(\n        Schema.local_metric_values,\n        model.sourceData.data.frame.categories.ma_qa_metric_local\n      ),\n    };\n  }\n}\n\nexport const AfConfidenceParams = {\n  serverUrl: PD.Text(AfConfidence.DefaultServerUrl, {\n    description: 'JSON API Server URL',\n  }),\n};\nexport type AfConfidenceParams = typeof AfConfidenceParams;\nexport type AfConfidenceProps = PD.Values<AfConfidenceParams>;\n\nexport const AfConfidenceProvider: CustomModelProperty.Provider<\n  AfConfidenceParams,\n  AfConfidence\n> = CustomModelProperty.createProvider({\n  label: 'AF Confidence Score',\n  descriptor: CustomPropertyDescriptor({\n    name: 'af_confidence_score',\n  }),\n  type: 'static',\n  defaultParams: AfConfidenceParams,\n  getParams: (_data: Model) => AfConfidenceParams,\n  isApplicable: (data: Model) => AfConfidence.isApplicable(data),\n  //@ts-ignore\n  obtain: async (\n    ctx: CustomProperty.Context,\n    data: Model\n    // props: Partial<AfConfidenceProps>\n  ) => {\n    // const p = { ...PD.getDefaultValues(AfConfidenceParams), ...props };\n    return await AfConfidence.fromCifOrServer(ctx, data);\n  },\n});\n\nfunction createScoreMapFromCif(\n  modelData: Model,\n  residueData: Table<typeof AfConfidence.Schema.local_metric_values>\n): AfConfidence['data'] | undefined {\n  const ret = new Map<ResidueIndex, [number, string]>();\n  const { label_asym_id, label_seq_id, metric_value, _rowCount } = residueData;\n\n  const categories: string[] = [];\n\n  for (let i = 0; i < _rowCount; i++) {\n    const confidenceScore = metric_value.value(i);\n    const idx = modelData.atomicHierarchy.index.findResidue(\n      '1',\n      label_asym_id.value(i),\n      label_seq_id.value(i),\n      ''\n    );\n\n    let confidencyCategory = 'Very low';\n    if (confidenceScore > 50 && confidenceScore <= 70) {\n      confidencyCategory = 'Low';\n    } else if (confidenceScore > 70 && confidenceScore <= 90) {\n      confidencyCategory = 'Medium';\n    } else if (confidenceScore > 90) {\n      confidencyCategory = 'High';\n    }\n\n    ret.set(idx, [confidenceScore, confidencyCategory]);\n    arraySetAdd(categories, confidencyCategory);\n  }\n\n  return {\n    score: IndexedCustomProperty.fromResidueMap(ret),\n    category: categories,\n  };\n}\n","import { AfConfidence, AfConfidenceProvider } from './prop';\nimport { Location } from 'molstar/lib/mol-model/location';\nimport { StructureElement } from 'molstar/lib/mol-model/structure';\nimport { ColorTheme, LocationColor } from 'molstar/lib/mol-theme/color';\nimport { ThemeDataContext } from 'molstar/lib/mol-theme/theme';\nimport { Color } from 'molstar/lib/mol-util/color';\nimport { ParamDefinition as PD } from 'molstar/lib/mol-util/param-definition';\nimport { CustomProperty } from 'molstar/lib/mol-model-props/common/custom-property';\n\nconst ConfidenceColors = {\n  'No Score': Color.fromRgb(170, 170, 170), // not applicable\n  'Very low': Color.fromRgb(255, 125, 69), // VL\n  Low: Color.fromRgb(255, 219, 19), // L\n  Medium: Color.fromRgb(101, 203, 243), // M\n  High: Color.fromRgb(0, 83, 214), // H\n};\n\nexport const AfConfidenceColorThemeParams = {\n  type: PD.MappedStatic('score', {\n    score: PD.Group({}),\n    category: PD.Group({\n      kind: PD.Text(),\n    }),\n  }),\n};\n\ntype Params = typeof AfConfidenceColorThemeParams;\n\nexport function AfConfidenceColorTheme(\n  ctx: ThemeDataContext,\n  props: PD.Values<Params>\n): ColorTheme<Params> {\n  let color: LocationColor;\n  if (\n    ctx.structure &&\n    !ctx.structure.isEmpty &&\n    ctx.structure.models[0].customProperties.has(\n      AfConfidenceProvider.descriptor\n    )\n  ) {\n    const getConfidenceScore = AfConfidence.getConfidenceScore;\n\n    if (props.type.name === 'score') {\n      color = (location: Location) => {\n        if (StructureElement.Location.is(location)) {\n          const confidenceScore = getConfidenceScore(location);\n          const key = confidenceScore\n            ? (confidenceScore[1] as keyof typeof ConfidenceColors)\n            : 'No Score';\n          return ConfidenceColors[key];\n        }\n        return ConfidenceColors['No Score'];\n      };\n    } else {\n      const categoryProp = props.type.params.kind;\n      color = (location: Location) => {\n        if (StructureElement.Location.is(location)) {\n          const confidenceScore = getConfidenceScore(location);\n          if (confidenceScore?.[1] === categoryProp)\n            return ConfidenceColors[\n              confidenceScore[1] as keyof typeof ConfidenceColors\n            ];\n          return ConfidenceColors['No Score'];\n        }\n        return ConfidenceColors['No Score'];\n      };\n    }\n  } else {\n    color = () => ConfidenceColors['No Score'];\n  }\n\n  return {\n    factory: AfConfidenceColorTheme,\n    granularity: 'group',\n    color: color,\n    props: props,\n    description: 'Assigns residue colors according to the AF Confidence score',\n  };\n}\n\nexport const AfConfidenceColorThemeProvider: ColorTheme.Provider<\n  Params,\n  'af-confidence'\n> = {\n  name: 'af-confidence',\n  label: 'AF Confidence',\n  // category: ColorTheme.Category.Validation,\n  factory: AfConfidenceColorTheme,\n  getParams: (ctx) => {\n    const categories = AfConfidence.getCategories(ctx.structure);\n    if (categories.length === 0) {\n      return {\n        type: PD.MappedStatic('score', {\n          score: PD.Group({}),\n        }),\n      };\n    }\n\n    return {\n      type: PD.MappedStatic('score', {\n        score: PD.Group({}),\n        category: PD.Group(\n          {\n            kind: PD.Select(categories[0], PD.arrayToOptions(categories)),\n          },\n          { isFlat: true }\n        ),\n      }),\n    };\n  },\n  defaultValues: PD.getDefaultValues(AfConfidenceColorThemeParams),\n  isApplicable: (ctx: ThemeDataContext) =>\n    AfConfidence.isApplicable(ctx.structure?.models[0]),\n  ensureCustomProperties: {\n    attach: (ctx: CustomProperty.Context, data: ThemeDataContext) =>\n      data.structure\n        ? AfConfidenceProvider.attach(\n            ctx,\n            data.structure.models[0],\n            void 0,\n            true\n          )\n        : Promise.resolve(),\n    detach: (data) =>\n      data.structure &&\n      data.structure.models[0].customProperties.reference(\n        AfConfidenceProvider.descriptor,\n        false\n      ),\n  },\n  category: '',\n};\n","import React, { PureComponent, RefObject } from 'react';\n\nimport { DefaultPluginSpec, PluginSpec } from 'molstar/lib/mol-plugin/spec';\nimport { PluginConfig } from 'molstar/lib/mol-plugin/config';\nimport { PluginContext } from 'molstar/lib/mol-plugin/context';\nimport { PluginCommands } from 'molstar/lib/mol-plugin/commands';\nimport { StructureSelection } from 'molstar/lib/mol-model/structure';\nimport { ChainIdColorThemeProvider } from 'molstar/lib/mol-theme/color/chain-id';\nimport { ParamDefinition } from 'molstar/lib/mol-util/param-definition';\nimport { Script } from 'molstar/lib/mol-script/script';\nimport { Color } from 'molstar/lib/mol-util/color';\nimport { ColorNames } from 'molstar/lib/mol-util/color/names';\nimport { BuiltInTrajectoryFormat } from 'molstar/lib/mol-plugin-state/formats/trajectory';\n\nimport {\n  UniformColorThemeProvider,\n  UniformColorThemeParams,\n} from 'molstar/lib/mol-theme/color/uniform';\n\nimport ResizeObserverComponent from 'wrappers/ResizeObserverComponent';\n\nimport Labels from './Labels';\nimport { Selection } from '../ViewerAndEntries';\nimport { ColorByResidueLddtTheme } from './ColourByResidueLddtTheme';\nimport { AfConfidenceProvider } from './af-confidence/prop';\nimport { AfConfidenceColorThemeProvider } from './af-confidence/color';\n\nimport cssBinder from 'styles/cssBinder';\n\nimport style from './style.css';\nimport fonts from 'EBI-Icon-fonts/fonts.css';\nconst css = cssBinder(style, fonts);\n\nexport type Props = {\n  id: string;\n  url?: string;\n  elementId: string;\n  ext?: string;\n  name?: string;\n  theme?: string;\n  onStructureLoaded?: () => void;\n  onReset?: () => void;\n  isSpinning?: boolean;\n  shouldResetViewer?: boolean;\n  selections?: Array<Selection> | null;\n};\n\nconst DEFAULT_EXTENSION = 'mmcif';\n\nclass StructureView extends PureComponent<Props> {\n  _structureViewer: RefObject<HTMLDivElement>;\n  _structureViewerCanvas: RefObject<HTMLCanvasElement>;\n  viewer: PluginContext | null;\n  name: string;\n  highlightColour: number | null;\n  selections: null | Array<unknown>;\n\n  constructor(props: Props) {\n    super(props);\n\n    this.viewer = null;\n    this.name = `${this.props.id}`;\n    this._structureViewer = React.createRef();\n    this._structureViewerCanvas = React.createRef();\n    this.highlightColour = null;\n    this.selections = null;\n  }\n\n  async componentDidMount() {\n    if (!this.viewer) {\n      const mySpec: PluginSpec = {\n        ...DefaultPluginSpec(),\n        layout: {\n          initial: {\n            isExpanded: false,\n            showControls: true,\n          },\n        },\n        config: [[PluginConfig.VolumeStreaming.Enabled, false]],\n      };\n\n      this.viewer = new PluginContext(mySpec);\n\n      await this.viewer.init();\n      if (\n        this._structureViewerCanvas.current &&\n        this._structureViewer.current\n      ) {\n        this.viewer.initViewer(\n          this._structureViewerCanvas.current,\n          this._structureViewer.current,\n        );\n        if (ColorByResidueLddtTheme.colorThemeProvider)\n          this.viewer.representation.structure.themes.colorThemeRegistry.add(\n            ColorByResidueLddtTheme.colorThemeProvider,\n          );\n        if (ColorByResidueLddtTheme.labelProvider)\n          this.viewer.managers.lociLabels.addProvider(\n            ColorByResidueLddtTheme.labelProvider,\n          );\n        this.viewer.customModelProperties.register(\n          ColorByResidueLddtTheme.propertyProvider,\n          true,\n        );\n\n        this.viewer.customModelProperties.register(AfConfidenceProvider, true);\n        // this.viewer.managers.lociLabels.addProvider(this.labelAfConfScore);\n        this.viewer.representation.structure.themes.colorThemeRegistry.add(\n          AfConfidenceColorThemeProvider,\n        );\n      }\n      // mouseover ?????\n      // window.viewer = this.viewer;\n    }\n\n    if (this.props.url) {\n      this.loadStructureInViewer(\n        this.props.url,\n        this.props.ext || DEFAULT_EXTENSION,\n      );\n    } else {\n      this.loadStructureInViewer(\n        `https://www.ebi.ac.uk/pdbe/static/entry/${this.name}_updated.cif`,\n        'mmcif',\n      );\n    }\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    if (this.name !== `${this.props.id}` || prevProps.url !== this.props.url) {\n      this.name = `${this.props.id}`;\n      if (this.props.url) {\n        this.loadStructureInViewer(\n          this.props.url,\n          this.props.ext || DEFAULT_EXTENSION,\n        );\n      } else {\n        this.loadStructureInViewer(\n          `https://www.ebi.ac.uk/pdbe/static/entry/${this.name}_updated.cif`,\n          'mmcif',\n        );\n      }\n    }\n    if (this.viewer) {\n      this.setSpin(this.props.isSpinning);\n      if (this.props.shouldResetViewer) {\n        PluginCommands.Camera.Reset(this.viewer, {});\n        this.clearSelections();\n        this.applyChainIdTheme();\n        if (this.props.onReset) {\n          this.props.onReset();\n        }\n      }\n      if ((this.props.selections?.length || 0) > 0) {\n        this.highlightSelections(this.props.selections as Array<Selection>);\n      } else {\n        this.clearSelections();\n        this.applyChainIdTheme();\n      }\n    }\n  }\n\n  loadStructureInViewer(url: string, format: string) {\n    requestAnimationFrame(async () => {\n      try {\n        if (this.viewer) {\n          await this.viewer.clear();\n          const data = await this.viewer.builders.data.download(\n            { url: url },\n            { state: { isGhost: false } },\n          );\n          const trajectory =\n            await this.viewer.builders.structure.parseTrajectory(\n              data,\n              format as BuiltInTrajectoryFormat,\n            );\n          const outcome = this.viewer.builders.structure.hierarchy.applyPreset(\n            trajectory,\n            'default',\n            {\n              structure: {\n                name: 'model',\n                params: {},\n              },\n              showUnitcell: false,\n              representationPreset: 'auto',\n            },\n          );\n          if (outcome)\n            outcome.then(() => {\n              // populate the entry map object used for entry highlighting\n              if (this.props.onStructureLoaded) {\n                this.props.onStructureLoaded();\n              }\n              // spin/stop spinning the structure\n              this.setSpin(this.props.isSpinning);\n              this.applyChainIdTheme();\n            });\n        }\n      } catch (e) {\n        console.log('Molstar error', e);\n      }\n    });\n  }\n\n  setSpin(spinState = false) {\n    if (this.viewer && this.viewer.canvas3d) {\n      const trackball = this.viewer.canvas3d.props.trackball;\n      const newSettings = {\n        settings: { trackball: { ...trackball } },\n      };\n      if (spinState)\n        newSettings.settings.trackball.animate = { name: 'spin', params: {} };\n      PluginCommands.Canvas3D.SetSettings(this.viewer, newSettings);\n    }\n  }\n\n  highlightSelections(selections: Array<Selection>) {\n    if (!this.viewer) return;\n    const data =\n      this.viewer.managers.structure.hierarchy.current.structures[0]?.cell.obj\n        ?.data;\n    if (!data) return;\n\n    this.clearSelections();\n    this.viewer\n      .dataTransaction(async () => {\n        UniformColorThemeParams.value = ParamDefinition.Color(ColorNames.white);\n        for (const s of this.viewer?.managers.structure.hierarchy.current\n          .structures || []) {\n          await this.viewer?.managers.structure.component.updateRepresentationsTheme(\n            s.components,\n            {\n              color: UniformColorThemeProvider.name,\n            },\n          );\n        }\n      })\n      .then(() => {\n        if (!this.viewer) return;\n        const molSelection = Script.getStructureSelection((MS) => {\n          if (!this.viewer) return;\n          const atomGroups = [];\n\n          let ShouldColourChange = true;\n          for (const selection of selections) {\n            if (ShouldColourChange) {\n              // const hexColour = parseInt(selections[0].colour.substring(1), 16);\n              if (this.highlightColour !== selection.color) {\n                this.highlightColour = selection.color as number;\n                PluginCommands.Canvas3D.SetSettings(this.viewer, {\n                  settings: (props) => {\n                    props.renderer.selectColor = Color(\n                      selection.color as number,\n                    );\n                    props.renderer.selectStrength = 0.8;\n                    props.marking.enabled = false;\n                  },\n                });\n              }\n              ShouldColourChange = false;\n            }\n            const positions = [];\n            for (let i = selection.start; i <= selection.end; i++) {\n              positions.push(i);\n            }\n            atomGroups.push(\n              MS.struct.generator.atomGroups({\n                'chain-test': MS.core.rel.eq([\n                  selection.chain,\n                  MS.ammp('auth_asym_id'),\n                ]),\n                'residue-test': MS.core.set.has([\n                  MS.set(...positions),\n                  MS.ammp('auth_seq_id'),\n                ]),\n              }),\n            );\n          }\n          return MS.struct.combinator.merge(atomGroups);\n        }, data);\n        const loci = StructureSelection.toLociWithSourceUnits(molSelection);\n        this.viewer.managers.interactivity.lociSelects.select({ loci });\n      });\n  }\n\n  applyChainIdTheme() {\n    let colouringTheme: string;\n    switch (this.props.theme) {\n      case 'residue':\n        colouringTheme =\n          ColorByResidueLddtTheme.propertyProvider.descriptor.name;\n        break;\n      case 'af':\n        colouringTheme = AfConfidenceColorThemeProvider.name;\n        break;\n      default:\n        colouringTheme = ChainIdColorThemeProvider.name;\n    }\n\n    // apply colouring\n    this.viewer?.dataTransaction(async () => {\n      for (const s of this.viewer?.managers.structure.hierarchy.current\n        .structures || []) {\n        await this.viewer?.managers.structure.component.updateRepresentationsTheme(\n          s.components,\n          {\n            color: colouringTheme as typeof ChainIdColorThemeProvider.name,\n          },\n        );\n      }\n    });\n  }\n\n  clearSelections() {\n    if (!this.viewer) return;\n    const data =\n      this.viewer.managers.structure.hierarchy.current.structures[0]?.cell.obj\n        ?.data;\n    if (!data) return;\n    this.viewer.managers.interactivity.lociSelects.deselectAll();\n  }\n\n  render() {\n    return (\n      <ResizeObserverComponent\n        element=\"div\"\n        updateCallback={() => {\n          if (this.viewer) this.viewer.handleResize();\n        }}\n        measurements={['width', 'height']}\n        className={css('viewer-resizer')}\n      >\n        {() => {\n          return (\n            <div className={css('structure-and-label')}>\n              <div\n                id={this.props.elementId || 'structure-viewer'}\n                ref={this._structureViewer}\n                className={css('structure-viewer-ref')}\n              >\n                <canvas ref={this._structureViewerCanvas} />\n              </div>\n              <Labels viewer={this.viewer} accession={this.name} />\n            </div>\n          );\n        }}\n      </ResizeObserverComponent>\n    );\n  }\n}\n\nexport default StructureView;\n"],"names":["window","ResizeObserver","constructor","onResizeEvent","_this","_handleResize","_asyncToGenerator","schedule","_node","_onResizeEvent","target","contentRect","getBoundingClientRect","Error","this","observe","node","HTMLElement","addEventListener","sleep","then","unobserve","removeEventListener","ResizeObserverComponent","PureComponent","props","super","state","_resizeObserver","_handleResizeEvent","bind","_ref","React","componentDidMount","current","componentDidUpdate","updateCallback","componentWillUnmount","resizeObserverEntries","finalContentRect","measurements","measurement","Array","isArray","setState","render","_this$props","children","element","_objectWithoutPropertiesLoose","_excluded","Element","_extends","ref","propTypes","T","isRequired","css","cssBinder","style","labelData","setLabelData","useState","useEffect","viewer","behaviors","interaction","hover","subscribe","arg","loci","kind","elements","length","stats","StructureElement","ofLoci","residueCount","location","firstResidueLoc","data","accession","unit","model","entryId","residue","StructureProperties","atom","label_comp_id","auth_seq_id","chain","auth_asym_id","seq_location","label_seq_id","seq_chain","label_asym_id","undefined","className","_getData","AfConfidence","defaultColor","Color","scale","ColorScale","create","listOrName","domain","ColorByResidueLddtTheme","CustomElementProperty","label","name","getData","map","Map","lddtURL","entry","split","residueIndex","atomicHierarchy","residueAtomSegments","index","residueRowCount","atoms","_rowCount","response","fetch","residueLDDT","json","i","_i","set","value","_x","apply","arguments","coloring","getColor","e","color","getLabel","fromCif","ctx","info","categoryName","MmcifFormat","is","sourceData","frame","categoryNames","includes","timestampField","categories","getField","rowCount","timestamp_utc","str","dateToUtcString","Date","tryGetInfoFromCif","residues","toTable","Schema","local_metric_values","ma_qa_metric_local","getCifData","modelData","residueData","ret","metric_value","confidenceScore","idx","findResidue","confidencyCategory","arraySetAdd","score","IndexedCustomProperty","fromResidueMap","category","createScoreMapFromCif","DefaultServerUrl","isApplicable","Column","int","metric_id","float","model_id","ordinal_id","fromCifOrServer","getConfidenceScore","Unit","isAtomic","prop","AfConfidenceProvider","get","rI","has","_emptyArray","getCategories","structure","models","AfConfidenceParams","serverUrl","PD","Text","description","CustomModelProperty","createProvider","descriptor","CustomPropertyDescriptor","type","defaultParams","getParams","_data","obtain","__awaiter","ConfidenceColors","fromRgb","Low","Medium","High","AfConfidenceColorThemeParams","MappedStatic","Group","AfConfidenceColorThemeProvider","factory","AfConfidenceColorTheme","isEmpty","customProperties","key","categoryProp","params","granularity","Select","arrayToOptions","isFlat","defaultValues","getDefaultValues","_a","ensureCustomProperties","attach","Promise","resolve","detach","reference","fonts","DEFAULT_EXTENSION","StructureView","id","_structureViewer","_structureViewerCanvas","highlightColour","selections","mySpec","Object","assign","DefaultPluginSpec","layout","initial","isExpanded","showControls","config","PluginConfig","VolumeStreaming","Enabled","PluginContext","init","initViewer","colorThemeProvider","representation","themes","colorThemeRegistry","add","labelProvider","managers","lociLabels","addProvider","customModelProperties","register","propertyProvider","url","loadStructureInViewer","ext","prevProps","setSpin","isSpinning","shouldResetViewer","PluginCommands","Camera","Reset","clearSelections","applyChainIdTheme","onReset","highlightSelections","format","requestAnimationFrame","clear","builders","download","isGhost","trajectory","parseTrajectory","outcome","hierarchy","applyPreset","showUnitcell","representationPreset","onStructureLoaded","console","log","spinState","canvas3d","trackball","newSettings","settings","animate","Canvas3D","SetSettings","_b","structures","cell","obj","dataTransaction","s","UniformColorThemeParams","ParamDefinition","ColorNames","white","_c","_d","component","updateRepresentationsTheme","components","UniformColorThemeProvider","molSelection","Script","getStructureSelection","MS","atomGroups","ShouldColourChange","_loop","selection","renderer","selectColor","selectStrength","marking","enabled","positions","start","end","push","struct","generator","core","rel","eq","ammp","combinator","merge","StructureSelection","toLociWithSourceUnits","interactivity","lociSelects","select","colouringTheme","theme","ChainIdColorThemeProvider","deselectAll","handleResize","elementId","Labels"],"sourceRoot":""}