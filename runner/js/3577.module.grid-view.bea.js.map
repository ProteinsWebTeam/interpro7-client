{"version":3,"file":"js/3577.module.grid-view.bea.js","mappings":"2hBAmBO,MAAMA,UAAsBC,EAAAA,cA2BjCC,WAAAA,CAAYC,GACVC,MAAMD,GAENE,KAAKC,KAAOC,EAAAA,WACd,CAEAC,iBAAAA,GACE,IACEH,KAAKF,MAAMM,aACVJ,KAAKC,KAAKI,SACVL,KAAKC,KAAKI,QAAQC,QAHrB,CAMA,IAAM,UAAEC,EAAS,MAAEC,EAAK,UAAEC,EAAS,SAAEC,EAAQ,YAAEC,GAAgBX,KAAKF,MAC9Dc,EAAYC,MAAMC,KACtBH,EAAc,CAACX,KAAKC,KAAKI,SAAWL,KAAKC,KAAKI,QAAQU,UAExDf,KAAKgB,YAAcJ,EAAUK,KAAI,CAACC,EAAoBC,IACpDD,EAAQZ,QAAQC,EAAW,CACzBG,WACAF,MAAOA,EAAQC,GAAaU,EAAI,GAChCC,OAAQ,cACRC,KAAM,UAVF,CAaV,CAEAC,oBAAAA,GACE,IAAK,IAAMC,KAAavB,KAAKgB,aAAe,GACd,aAAxBO,EAAUC,WAA0BD,EAAUE,QAEtD,CAEAC,MAAAA,GACE,IAAAC,EAWI3B,KAAKF,OAVPoB,QAASU,GAUVD,EADI7B,E,oIAAK+B,CAAAF,EAAAG,GAEV,OAAO5B,EAAAA,cAAC0B,EAAOG,EAAA,GAAKjC,EAAK,CAAEkC,IAAKhC,KAAKC,OACvC,EA1EWN,EAKJsC,UAAY,CACjBf,QAASgB,IAAAA,UAAY,CAACA,IAAAA,OAAUA,IAAAA,UAChC3B,UAAW2B,IAAAA,UAAY,CAACA,IAAAA,MAASA,IAAAA,SACjC1B,MAAO0B,IAAAA,OACPzB,UAAWyB,IAAAA,OACXxB,SAAUwB,IAAAA,OACVvB,YAAauB,IAAAA,KACb9B,YAAa8B,IAAAA,KAAOC,WACpBC,SAAUF,IAAAA,KACVG,UAAWH,IAAAA,OACXnB,SAAUmB,IAAAA,KAfDvC,EAkBJ2C,aAAe,CACpBpB,QAAS,KACTX,UAAW,CAAEgC,QAAS,CAAC,EAAG,IAC1B/B,MAAO,EACPC,UApCuB,GAqCvBC,SApCqB,IAqCrBC,aAAa,GAqDjB,IAAM6B,GAAkBC,EAAAA,EAAAA,KACrBC,GAAUA,EAAMC,SAASC,GAAGxC,cAC5BA,IAAW,CAAQA,kBAGtB,SAAeyC,EAAAA,EAAAA,IAAQL,OAAiBM,EAAxC,CAAmDnD,E,+FC3F7CoD,GAAMC,E,SAAAA,GCTZ,CAAgB,QAAU,2BAA2B,YAAY,+BDmBjE,MAAMC,UAAyCrD,EAAAA,cAC7C8B,MAAAA,GACE,IAAM,UAAEwB,EAAS,KAAEC,EAAI,OAAEC,GAAWpD,KAAKF,MACnCuD,GAAUC,EAAAA,EAAAA,IAAiBF,GACjC,GAAIC,EAAS,OAAOA,EACpB,IAAME,EAAkCJ,GAAQ,KAAO,MACvD,OAAIA,EAEAjD,EAAAA,cAACP,EAAAA,EAAa,CACZ0C,UAAWU,EAAI,WACf7B,QAAQ,MAAK,cACD,aAEXgC,EAAUjC,KAAI,CAACuC,EAAMrC,K,MAAM,OAC1BjB,EAAAA,cAACuD,EAAAA,EAAa,CACZC,KAC2D,QAAzDC,EAACH,aAAI,EAAJA,EAAgDI,gBAAQ,IAAAD,OAAA,EAAAA,EACrDE,YAAa1C,GAGlBoC,EAASC,IAAS,GACL,KAKjB,IACT,EAGF,S","sources":["webpack://interpro7-client/./src/components/AnimatedEntry/index.js","webpack://interpro7-client/./src/components/Table/views/Grid/index.tsx","webpack://interpro7-client/./src/components/Table/views/Grid/style.css?720e"],"sourcesContent":["import React, { PureComponent } from 'react';\nimport T from 'prop-types';\nimport { connect } from 'react-redux';\nimport { createSelector } from 'reselect';\n\nconst DEFAULT_ITEM_DELAY = 25;\nconst DEFAULT_DURATION = 250;\n\n/*:: type Props = {\n  element: HTMLElement | string,\n  keyframes: ?Array<Object> | Object,\n  delay: number,\n  itemDelay: number,\n  duration: number,\n  animateSelf: boolean,\n  lowGraphics: boolean,\n  dispatch: function,\n} */\n\nexport class AnimatedEntry extends PureComponent /*:: <Props> */ {\n  /*::\n    _ref: { current: null | React$ElementRef<'div'> };\n    _animations: ?Array<any>;\n  */\n  static propTypes = {\n    element: T.oneOfType([T.string, T.element]),\n    keyframes: T.oneOfType([T.array, T.object]),\n    delay: T.number,\n    itemDelay: T.number,\n    duration: T.number,\n    animateSelf: T.bool,\n    lowGraphics: T.bool.isRequired,\n    dispatch: T.func,\n    className: T.string,\n    children: T.any,\n  };\n\n  static defaultProps = {\n    element: 'ul',\n    keyframes: { opacity: [0, 1] },\n    delay: 0,\n    itemDelay: DEFAULT_ITEM_DELAY,\n    duration: DEFAULT_DURATION,\n    animateSelf: false,\n  };\n\n  constructor(props /*: Props */) {\n    super(props);\n\n    this._ref = React.createRef();\n  }\n\n  componentDidMount() {\n    if (\n      this.props.lowGraphics ||\n      !this._ref.current ||\n      !this._ref.current.animate\n    )\n      return;\n    const { keyframes, delay, itemDelay, duration, animateSelf } = this.props;\n    const toAnimate = Array.from(\n      animateSelf ? [this._ref.current] : this._ref.current.children,\n    );\n    this._animations = toAnimate.map((element /*: any */, i) =>\n      element.animate(keyframes, {\n        duration,\n        delay: delay + itemDelay * (i + 1),\n        easing: 'ease-in-out',\n        fill: 'both',\n      }),\n    );\n  }\n\n  componentWillUnmount() {\n    for (const animation of this._animations || []) {\n      if (animation.playState !== 'finished') animation.cancel();\n    }\n  }\n\n  render() {\n    const {\n      element: Element,\n      // remove those in next lines from props passed\n      keyframes,\n      delay,\n      itemDelay,\n      duration,\n      animateSelf,\n      lowGraphics,\n      dispatch,\n      ...props\n    } = this.props;\n    return <Element {...props} ref={this._ref} />;\n  }\n}\n\nconst mapStateToProps = createSelector(\n  (state) => state.settings.ui.lowGraphics,\n  (lowGraphics) => ({ lowGraphics }),\n);\n\nexport default connect(mapStateToProps, undefined)(AnimatedEntry);\n","import React, { PureComponent, ReactNode } from 'react';\n\nimport AnimatedEntry from 'components/AnimatedEntry';\nimport ErrorBoundary from 'wrappers/ErrorBoundary';\n\nimport getStatusMessage from 'utils/server-message';\n\nimport cssBinder from 'styles/cssBinder';\n\nimport local from './style.css';\nconst css = cssBinder(local);\n\nexport type CardRenderer<RowData extends object> = (data: RowData) => ReactNode;\n\ntype Props<RowData extends object> = {\n  dataTable: Array<RowData & {}>;\n  card?: CardRenderer<RowData>;\n  status: number;\n};\n\nclass GridView<RowData extends object> extends PureComponent<Props<RowData>> {\n  render() {\n    const { dataTable, card, status } = this.props;\n    const message = getStatusMessage(status);\n    if (message) return message;\n    const renderer: CardRenderer<RowData> = card || (() => null);\n    if (card) {\n      return (\n        <AnimatedEntry\n          className={css('wrapper')}\n          element=\"div\"\n          data-testid=\"data-grid\"\n        >\n          {dataTable.map((data, i) => (\n            <ErrorBoundary\n              key={\n                (data as { metadata?: { accession?: string } })?.metadata\n                  ?.accession || i\n              }\n            >\n              {renderer(data) || ''}\n            </ErrorBoundary>\n          ))}\n        </AnimatedEntry>\n      );\n    }\n    return null;\n  }\n}\n\nexport default GridView;\n","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"Grid_style__wrapper___a7\",\"grid-card\":\"Grid_style__grid-card___b1\"};"],"names":["AnimatedEntry","PureComponent","constructor","props","super","this","_ref","React","componentDidMount","lowGraphics","current","animate","keyframes","delay","itemDelay","duration","animateSelf","toAnimate","Array","from","children","_animations","map","element","i","easing","fill","componentWillUnmount","animation","playState","cancel","render","_this$props","Element","_objectWithoutPropertiesLoose","_excluded","_extends","ref","propTypes","T","isRequired","dispatch","className","defaultProps","opacity","mapStateToProps","createSelector","state","settings","ui","connect","undefined","css","cssBinder","GridView","dataTable","card","status","message","getStatusMessage","renderer","data","ErrorBoundary","key","_a","metadata","accession"],"sourceRoot":""}