{"version":3,"file":"js/7371.module.taxonomy-list.7e3.js","mappings":"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","sources":["webpack://interpro7-client/./src/utils/taxonomy/get-color/index.js","webpack://interpro7-client/./src/components/Organism/SpeciesIcon/index.tsx","webpack://interpro7-client/./src/utils/taxonomy/get-icon/index.js","webpack://interpro7-client/./src/components/SimpleCommonComponents/Card/CounterIcon/index.tsx","webpack://interpro7-client/./src/components/SimpleCommonComponents/Card/index.tsx","webpack://interpro7-client/./src/components/Taxonomy/SummaryCounterOrg/index.tsx","webpack://interpro7-client/./src/components/Taxonomy/Card/index.tsx","webpack://interpro7-client/./src/utils/taxonomy/get-super-kingdom/index.js","webpack://interpro7-client/./src/utils/taxonomy/get-node-spotlight/index.js","webpack://interpro7-client/./src/components/Taxonomy/List/style.css?a8dc","webpack://interpro7-client/./src/components/Taxonomy/List/AllTaxDownload/index.tsx","webpack://interpro7-client/./src/components/Taxonomy/List/index.tsx","webpack://interpro7-client/./src/components/SimpleCommonComponents/Card/CounterIcon/styles.css?9f8e","webpack://interpro7-client/./src/components/SimpleCommonComponents/Card/styles.css?fb5f","webpack://interpro7-client/./src/styles/blocks.css?e075","webpack://interpro7-client/./node_modules/lodash-es/cloneDeep.js"],"sourcesContent":["// @flow\n\nconst blueIcon = / (4932|4894|2157|2|10239|4751) /;\nconst greenIcon = / (3702|4527|4575|49274|4512|3700|3603|1462606|33090) /;\n\nexport default (lineage /*: string */) => {\n  if (blueIcon.test(lineage)) return '#5bc0de';\n  if (greenIcon.test(lineage)) return '#5cb85c';\n};\n","import React from 'react';\nimport getColor from 'utils/taxonomy/get-color';\nimport getIcon from 'utils/taxonomy/get-icon';\n\nimport cssBinder from 'styles/cssBinder';\n\nimport fonts from 'EBI-Icon-fonts/fonts.css';\n\nconst css = cssBinder(fonts);\n\ntype Props = {\n  lineage: string;\n  fontSize?: string;\n};\n\nexport const SpeciesIcon = ({ lineage, fontSize = '1rem' }: Props) => {\n  let icon = '.';\n  let color;\n  if (lineage) {\n    icon = getIcon(lineage) || '.';\n    color = getColor(lineage);\n  }\n  return (\n    <span\n      style={{ color, fontSize }}\n      className={css('small', 'icon', 'icon-species')}\n      data-icon={icon}\n    />\n  );\n};\n\nexport default SpeciesIcon;\n","// @flow\n\n// eslint-disable-next-line\nexport default (lineage /*: string */) => {\n  /* Node Pediculidae (body lice, includes 121224 Pediculus humanus subsp. corporis (louse) */\n  if (lineage.includes(' 121221 ')) return '4';\n  /* Node Apoidea (bees) */\n  if (lineage.includes(' 34735 ')) return '$';\n  /* Node Scorpiones (Scorpion) */\n  if (lineage.includes(' 6855 ')) return 's';\n  /* Node Ixodida (Ticks) */\n  if (lineage.includes(' 6935 ')) return '&';\n  /* Node Gastropoda (Snail) */\n  if (lineage.includes(' 6448 ')) return \"'\";\n  /* Node anolis */\n  if (lineage.includes(' 28376 ')) return '7';\n  /* Node felidae (includes 9685 Felis catus) */\n  if (lineage.includes(' 9681 ')) return 'A';\n  /* homo */\n  if (lineage.includes(' 9606 ')) return 'H';\n  /* Mouse-ear cress */\n  if (lineage.includes(' 3702 ')) return 'B';\n  /* Node Nematoda (includes 6239 Caenorhabditis elegans) */\n  if (lineage.includes(' 6231 ')) return 'W';\n  /* Gallus gallus (Chicken) */\n  if (lineage.includes(' 9031 ')) return 'k';\n  /* Node Capra (includes 9925 Capra hircus goat) */\n  if (lineage.includes(' 9922 ')) return 'm';\n  /* Node Sciuridae (Squirrels) */\n  if (lineage.includes(' 55153 ')) return 'I';\n  /* Node Platanistidae (Dolphin) */\n  if (lineage.includes(' 9723 ')) return 'D';\n  /* Node Amphibia */\n  if (lineage.includes(' 8292 ')) return 'f';\n  /* Node Bird (Finch) */\n  if (lineage.includes(' 8782 ')) return 'n';\n  /* subNode Culicidae (Mosquito) */\n  if (lineage.includes(' 7157 ')) return '1';\n  /* Node Diptera (includes 7227 drosophila melanogaster)- WARNING HAS TO BE AFTER Mosquitoe node */\n  if (lineage.includes(' 7147 ')) return 'F';\n  /* Node Arthropoda (Spider) */\n  if (lineage.includes(' 6656 ')) return 'S';\n  /* Node Plasmodium (Plasmodiidae) */\n  if (lineage.includes(' 1639119 ')) return '@';\n  /* Zebrafish */\n  if (lineage.includes(' 7955 ')) return 'Z';\n  /* Node Tetraodontidae (puffers) (includes 31033 Takifugu rubripes) */\n  if (lineage.includes(' 31031 ')) return 'E';\n  /* Node Fish (7898 Actinopterygii NOT 7776 Gnathostomata includes mammals -  NOT 7777 Chondrichthyes) */\n  if (lineage.includes(' 7898 ')) return 'Z';\n  /* Node Mouse (includes 10090 Mus musculus) */\n  if (lineage.includes(' 10088 ')) return 'M';\n  /* Node Erinaceidae (Hedgehog) */\n  if (lineage.includes(' 9368 ')) return 'o';\n  /* Node Rattus (includes 10116 Rattus norvegicus) */\n  if (lineage.includes(' 10114 ')) return 'R';\n  /* Canis lupus familiaris (Dog) */\n  if (lineage.includes(' 9615 ')) return 'd';\n  /* Node Bovinae (includes Bos taurus (Bovine) 9913) */\n  if (lineage.includes(' 27592 ')) return 'C';\n  /* Node Proboscidea (elephants) (inludes 9783 Indian Elephant) */\n  if (lineage.includes(' 9779 ')) return 'e';\n  /* Node Ovis (includes 9940 Sheep) */\n  if (lineage.includes(' 9935 ')) return 'x';\n  /* Node Leporidae (includes Oryctolagus cuniculus (Rabbit) 9986 */\n  if (lineage.includes(' 9979 ')) return 't';\n  /*  Suidae (Pig) */\n  if (lineage.includes(' 9821 ')) return 'p';\n  /* Node Cavia (includes 10141 Cavia porcellus (Guinea pig)) */\n  if (lineage.includes(' 10140 ')) return 'g';\n  /*  Node Didelphidae (opossums) (icnludes 126299 Monodelphis emiliae (Emilia's short-tailed opossum) */\n  if (lineage.includes(' 9265 ')) return '9';\n  /* Node Papio (includes 9555 Papio anubis (Olive baboon)) */\n  if (lineage.includes(' 9554 ')) return '8';\n  /* Node Pan (chimpanzees) (includes 9598 Pan troglodytes) */\n  if (lineage.includes(' 9596 ')) return 'i';\n  /* Node Macaca (includes 9544 Macaca mulatta (Rhesus macaque) */\n  if (lineage.includes(' 9539 ')) return 'r';\n  /* Node Chiroptera (bats) (includes 9430 Desmodus rotundus (Vampire bat) */\n  if (lineage.includes(' 9397 ')) return '(';\n  /* Node Pongo (orangutan) */\n  if (lineage.includes(' 9599 ')) return '*';\n  /* Node Gorilla */\n  if (lineage.includes(' 9592 ')) return 'G';\n  /* Saccharomyces cerevisiae (Baker's yeast) or Schizosaccharomycetaceae (fission yeasts) */\n  if (lineage.includes(' 4932 ') || lineage.includes('4894')) return 'Y';\n  /* Archaea */\n  if (lineage.includes(' 2157 ')) return 'L';\n  /* Node Bacteria (Ecoli) */\n  if (lineage.includes(' 2 ')) return 'L';\n  /* Node Virus */\n  if (lineage.includes(' 10239 ')) return 'v';\n  /* Node Fungus */\n  if (lineage.includes(' 4751 ')) return 'u';\n  /* Node Oryza (includes 4530 (Oriza sativa)) */\n  if (lineage.includes(' 4527 ')) return '6';\n  /* Node Zea (Corn) (includes 4577 Zea mays (Maize)) */\n  if (lineage.includes(' 4575 ')) return 'c';\n  /* Node Lycopersicon (Tomatoes) */\n  if (lineage.includes(' 49274 ')) return ')';\n  /* Node Hordeum (Barley) */\n  if (lineage.includes(' 4512 ')) return '5';\n  /* Node Brassicaceae (mustard family) */\n  if (lineage.includes(' 3700 ')) return 'B';\n  /* Node Vitis (grape) */\n  if (lineage.includes(' 3603 ')) return 'O';\n  /* Node Soja (includes 3847 Glycine max (Soybean)) */\n  if (lineage.includes(' 1462606 ')) return '^';\n  /* Node viridiplantae */\n  if (lineage.includes(' 33090 ')) return '.';\n};\n","import React from 'react';\n\nimport Tooltip from 'components/SimpleCommonComponents/Tooltip';\nimport Link from 'components/generic/Link';\nimport NumberComponent from 'components/NumberComponent';\nimport MemberSymbol from 'components/Entry/MemberSymbol';\n\nimport { toPlural } from 'utils/pages/toPlural';\n\nimport cssBinder from 'styles/cssBinder';\n\nimport local from './styles.css';\nimport fonts from 'EBI-Icon-fonts/fonts.css';\n\nconst css = cssBinder(local, fonts);\n\ntype Props = {\n  /** How many of this entity */\n  count: number;\n  /** One of the InterPro endpoints */\n  endpoint: Endpoint | 'domain architecture';\n  /** name of the entity */\n  name: string;\n  /** New location to add as link. If not added the ocon will appear disabled */\n  to?: InterProPartialLocation;\n  /** The database of the entity */\n  db?: MemberDB | 'interpro';\n  /**\n   * In case it is used to represent a signature of an entry.\n   * In this case the counter won't be showed as it will represent a single signature\n   * Currently iused in the EntryCard that are in the New entreies of the home page\n   * */\n  signature?: string;\n};\n\nconst icon: Record<Endpoint | 'domain architecture', string> = {\n  entry: 'icon-entries',\n  protein: 'icon-proteins',\n  proteome: 'icon-count-proteome',\n  taxonomy: 'icon-count-species',\n  structure: 'icon-structures',\n  set: 'icon-count-set',\n  'domain architecture': 'icon-count-ida',\n};\n\nconst CounterIcon = ({ count, endpoint, name, to, db, signature }: Props) => {\n  return (\n    <Tooltip\n      title={\n        signature\n          ? `${db} signature: ${signature}`\n          : `${count} ${toPlural(endpoint, count, true)} matching ${name}`\n      }\n      className={css('icon-link')}\n      style={{ display: 'flex' }}\n    >\n      <Link\n        to={to}\n        className={css(count ? null : 'ico-disabled')}\n        disabled={!count || !to}\n      >\n        <div\n          className={css(\n            'icon',\n            'icon-conceptual',\n            'icon-wrapper',\n            icon[endpoint],\n          )}\n        >\n          {endpoint === 'entry' && (\n            <div\n              style={{\n                // UGLY hack be better Gustavo\n                position: 'relative',\n                top: '7px',\n                left: '-2px',\n              }}\n            >\n              <MemberSymbol type={db || 'all'} className={css('md-small')} />\n            </div>\n          )}\n          {count !== 0 && <div className={css('icon-over-animation')} />}\n        </div>\n        {!signature && <NumberComponent abbr>{count}</NumberComponent>}\n      </Link>\n    </Tooltip>\n  );\n};\n\nexport default CounterIcon;\n","import React, { PropsWithChildren, ReactElement } from 'react';\n\nimport Link from 'components/generic/Link';\n\nimport cssBinder from 'styles/cssBinder';\n\nimport local from './styles.css';\nimport fonts from 'EBI-Icon-fonts/fonts.css';\n\nconst css = cssBinder(local, fonts);\n\ntype Props = PropsWithChildren<{\n  title?: ReactElement | string;\n  imageIconClass?: string;\n  imageComponent?: ReactElement;\n  subHeader?: ReactElement | string;\n  footer?: ReactElement | string;\n  linkForMore?: string;\n  labelForMore?: string;\n  className?: string;\n  compact?: boolean;\n}>;\n\nexport const Card = ({\n  title,\n  imageComponent,\n  imageIconClass,\n  subHeader,\n  footer,\n  linkForMore,\n  labelForMore,\n  compact = false,\n  className = '',\n  children,\n}: Props) => {\n  return (\n    <div className={css('new-card', className, { compact })}>\n      {(imageComponent || imageIconClass || title || subHeader) && (\n        <header>\n          {(imageComponent || imageIconClass) && (\n            <div\n              className={css('image', imageIconClass, {\n                icon: !!imageIconClass,\n              })}\n            >\n              {imageComponent}\n            </div>\n          )}\n          {title && <div className={css('title')}>{title}</div>}\n          {subHeader && <div className={css('subheader')}>{subHeader}</div>}\n        </header>\n      )}\n      <section className={css('content')}>{children}</section>\n      {(footer || linkForMore) && (\n        <>\n          <div className={css('footer')}>\n            {footer}\n            {linkForMore && (\n              <div className={css('card-more')}>\n                <Link href={linkForMore} target=\"_blank\" buttonType=\"tertiary\">\n                  <span\n                    className={css('icon', 'icon-common', 'icon-right')}\n                    data-icon=\"&#xf061;\"\n                  ></span>{' '}\n                  {labelForMore || 'See more'}\n                </Link>\n              </div>\n            )}{' '}\n          </div>\n        </>\n      )}\n    </div>\n  );\n};\nexport default Card;\n","import React from 'react';\nimport CounterIcon from 'components/SimpleCommonComponents/Card/CounterIcon';\n\ntype Props = {\n  entryDB: MemberDB | 'interpro';\n  taxName: string;\n  taxAccession: string;\n  counters: MetadataCounters;\n};\n\nimport cssBinder from 'styles/cssBinder';\n\nimport cardStyle from 'components/SimpleCommonComponents/Card/CounterIcon/styles.css';\n\nconst css = cssBinder(cardStyle);\n\nconst SummaryCounterOrg = ({\n  entryDB,\n  taxName,\n  taxAccession,\n  counters,\n}: Props) => {\n  const { entries, proteins, structures, proteomes } = counters;\n\n  return (\n    <div className={css('card-counter-block')}>\n      <CounterIcon\n        endpoint=\"entry\"\n        count={entries as number}\n        name={taxName}\n        db={entryDB}\n        to={{\n          description: {\n            main: { key: 'taxonomy' },\n            taxonomy: {\n              db: 'uniprot',\n              accession: taxAccession,\n            },\n            entry: { isFilter: true, db: entryDB || 'all' },\n          },\n        }}\n      />\n      <CounterIcon\n        endpoint=\"protein\"\n        count={proteins as number}\n        name={taxName}\n        to={{\n          description: {\n            main: { key: 'taxonomy' },\n            taxonomy: {\n              db: 'uniprot',\n              accession: taxAccession,\n            },\n            protein: { isFilter: true, db: 'UniProt' },\n          },\n        }}\n      />\n\n      <CounterIcon\n        endpoint=\"structure\"\n        count={structures as number}\n        name={taxName}\n        to={{\n          description: {\n            main: { key: 'taxonomy' },\n            taxonomy: {\n              db: 'uniprot',\n              accession: taxAccession,\n            },\n            structure: { isFilter: true, db: 'PDB' },\n          },\n        }}\n      />\n      <CounterIcon\n        endpoint=\"proteome\"\n        count={proteomes as number}\n        name={taxName}\n        to={{\n          description: {\n            main: { key: 'taxonomy' },\n            taxonomy: {\n              db: 'uniprot',\n              accession: taxAccession,\n            },\n            proteome: { isFilter: true, db: 'uniprot' },\n          },\n        }}\n      />\n    </div>\n  );\n};\n\nexport default SummaryCounterOrg;\n","import React from 'react';\n\nimport getNodeSpotlight from 'utils/taxonomy/get-node-spotlight';\nimport getSuperKingdom from 'utils/taxonomy/get-super-kingdom';\n\nimport Link from 'components/generic/Link';\nimport Card from 'components/SimpleCommonComponents/Card';\nimport HighlightedText from 'components/SimpleCommonComponents/HighlightedText';\nimport Tooltip from 'components/SimpleCommonComponents/Tooltip';\nimport SpeciesIcon from 'components/Organism/SpeciesIcon';\nimport SummaryCounterOrg from '../SummaryCounterOrg';\n\nconst Lineage = ({ lineage }: { lineage: string }) => {\n  const superkingdom = getSuperKingdom(lineage) || 'N/A';\n  const nodespot = getNodeSpotlight(lineage);\n  return (\n    <Tooltip title={`Lineage: ${lineage}`}>\n      {superkingdom} {nodespot && `(${nodespot})`}\n    </Tooltip>\n  );\n};\n\ntype Props = {\n  data: {\n    metadata: TaxonomyMetadata;\n    extra_fields?: {\n      counters: MetadataCounters;\n      lineage?: string;\n    };\n  };\n  search: string;\n  entryDB: MemberDB | 'interpro';\n};\nconst TaxonomyCard = ({ data, search, entryDB }: Props) => {\n  const name =\n    typeof data.metadata.name === 'string'\n      ? data.metadata.name\n      : data.metadata.name.name;\n  return (\n    <Card\n      imageComponent={\n        data.extra_fields?.lineage ? (\n          <SpeciesIcon lineage={data.extra_fields.lineage} fontSize=\"3rem\" />\n        ) : undefined\n      }\n      title={\n        <Link\n          to={{\n            description: {\n              main: { key: 'taxonomy' },\n              taxonomy: {\n                db: data.metadata.source_database,\n                accession: `${data.metadata.accession}`,\n              },\n            },\n          }}\n        >\n          <HighlightedText text={name} textToHighlight={search} />\n        </Link>\n      }\n      footer={\n        <>\n          {data?.extra_fields?.lineage && (\n            <Lineage lineage={data.extra_fields.lineage} />\n          )}\n          <div>\n            Tax ID:{' '}\n            <HighlightedText\n              text={data.metadata.accession}\n              textToHighlight={search}\n            />\n          </div>\n        </>\n      }\n    >\n      <SummaryCounterOrg\n        entryDB={entryDB}\n        taxName={name}\n        taxAccession={data.metadata.accession}\n        counters={data?.extra_fields?.counters || {}}\n      />\n    </Card>\n  );\n};\n\nexport default TaxonomyCard;\n","// @flow\n\nexport default (lineage /*: string */) => {\n  if (lineage.includes(' 2759 ')) return 'Eukaryota';\n  if (lineage.includes(' 2157 ')) return 'Archaea';\n  if (lineage.includes(' 10239 ')) return 'Viruses';\n  if (lineage.includes(' 12884 ')) return 'Viroids';\n  if (lineage.includes(' 2 ')) return 'Bacteria';\n};\n","// @flow\n\nexport default (lineage /*: string */) => {\n  if (lineage.includes(' 1224 ')) return 'Proteobacteria';\n  if (lineage.includes(' 201174 ')) return 'Actinobacteria';\n  if (lineage.includes(' 203691 ')) return 'Spirochaetes';\n  if (lineage.includes(' 203682 ')) return 'Planctomycetes';\n  if (lineage.includes(' 1239 ')) return 'Firmicutes';\n  if (lineage.includes(' 976 ')) return 'Bacteroidetes';\n  if (lineage.includes(' 40674 ')) return 'Mammalia';\n  if (lineage.includes(' 6656 ')) return 'Arthropoda';\n  if (lineage.includes(' 33090 ')) return 'Viridiplantae';\n  if (lineage.includes(' 6231 ')) return 'Nematoda';\n  if (lineage.includes(' 8782 ')) return 'Birds';\n  if (lineage.includes(' 4751 ')) return 'Fungi';\n  if (lineage.includes(' 32561 ')) return 'Sauria';\n  if (lineage.includes(' 7898 ')) return 'Fish';\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"exactMatch\":\"List_style__exactMatch___ea\"};","import React from 'react';\nimport { cloneDeep } from 'lodash-es';\nimport { SupportedExtensions } from 'components/File/FileButton';\n\nimport File from 'components/File';\n\ntype Props = {\n  description: InterProDescription;\n  search: InterProLocationSearch;\n  count: number;\n  focused?: string | null;\n  fileType: SupportedExtensions;\n  name?: string;\n};\n\nconst AllTaxDownload = ({\n  description,\n  search,\n  count,\n  focused,\n  fileType,\n  name,\n}: Props) => {\n  const newDescription = cloneDeep(description);\n  if (focused) {\n    newDescription.taxonomy.accession = focused;\n  }\n  return (\n    <File\n      fileType={fileType}\n      name={name || `taxon.${fileType}`}\n      count={count}\n      customLocationDescription={newDescription}\n      search={{ ...search, extra_fields: 'counters:entry-protein' }}\n      endpoint={'taxonomy'}\n    />\n  );\n};\n\nexport default AllTaxDownload;\n","import React, { useState } from 'react';\n\nimport { includeTaxonFocusedOnURL } from 'higherOrder/loadData/defaults';\n\nimport Link from 'components/generic/Link';\nimport MemberDBSelector from 'components/MemberDBSelector';\nimport TaxonomyCard from 'components/Taxonomy/Card';\nimport Table, {\n  Column,\n  Card,\n  SearchBox,\n  PageSizeSelector,\n  Exporter,\n  HighlightToggler,\n} from 'components/Table';\nimport File from 'components/File';\n\nimport ExternalExportButton from 'components/Table/Exporter/ExternalExportButton';\nimport Tooltip from 'components/SimpleCommonComponents/Tooltip';\nimport HighlightedText from 'components/SimpleCommonComponents/HighlightedText';\nimport NumberComponent from 'components/NumberComponent';\n\nimport loadable from 'higherOrder/loadable';\n\nimport {\n  schemaProcessDataTable,\n  schemaProcessDataTableRow,\n} from 'schema_org/processors';\n\nimport cssBinder from 'styles/cssBinder';\n\nimport pageStyle from 'pages/style.css';\nimport styles from 'styles/blocks.css';\nimport fonts from 'EBI-Icon-fonts/fonts.css';\nimport exporterStyle from 'components/Table/Exporter/style.css';\nimport local from './style.css';\nimport filtersAndTable from 'components/FiltersPanel/filters-and-table.css';\nimport AllTaxDownload from './AllTaxDownload';\n\nimport descriptionToPath from 'utils/processDescription/descriptionToPath';\nimport { toPublicAPI } from 'utils/url';\n\nconst css = cssBinder(\n  pageStyle,\n  styles,\n  fonts,\n  exporterStyle,\n  local,\n  filtersAndTable,\n);\n\ntype ExtraCounters = { counters?: TaxonomyCounters };\n\nconst SchemaOrgData = loadable({\n  loader: () => import(/* webpackChunkName: \"schemaOrg\" */ 'schema_org'),\n  loading: () => null,\n});\n\nconst EntryAccessionsRenderer =\n  (entryDB: MemberDB | 'interpro') =>\n  (taxId: string, _row: unknown, extra?: ExtraCounters) => (\n    <File\n      fileType=\"accession\"\n      endpoint={'taxonomy'}\n      name={`${entryDB || 'all'}-entry-accessions-for-${taxId}.txt`}\n      count={extra?.counters?.entries || 0}\n      customLocationDescription={{\n        main: { key: 'entry' },\n        entry: { db: entryDB || 'all' },\n        taxonomy: { isFilter: true, db: 'UniProt', accession: `${taxId}` },\n      }}\n    />\n  );\n\nconst ProteinFastasRenderer =\n  (entryDB: MemberDB | 'interpro') =>\n  (taxId: string, _row: unknown, extra?: ExtraCounters) => (\n    <File\n      fileType=\"fasta\"\n      endpoint={'taxonomy'}\n      name={`protein-sequences${\n        entryDB ? `-matching-${entryDB}` : ''\n      }-for-${taxId}.fasta`}\n      count={extra?.counters?.proteins || 0}\n      customLocationDescription={{\n        main: { key: 'protein' },\n        protein: { db: 'UniProt' },\n        entry: { isFilter: true, db: entryDB || 'all' },\n        taxonomy: { isFilter: true, db: 'UniProt', accession: `${taxId}` },\n      }}\n    />\n  );\n\ntype Props = {\n  customLocation?: InterProLocation;\n  exactMatch?: TaxonommyTreePayload;\n};\n\ntype TaxItem = {\n  metadata: TaxonomyMetadata;\n  extra_fields?: {\n    counters: TaxonomyCounters;\n    lineage?: string;\n  };\n  className?: string;\n};\n\ninterface LoadedProps\n  extends Props,\n    LoadDataProps<PayloadList<TaxItem>>,\n    LoadDataProps<RootAPIPayload, 'Base'> {}\n\nconst List = ({\n  data,\n  isStale,\n  customLocation,\n  dataBase,\n  exactMatch,\n}: LoadedProps) => {\n  const [focused, setFocused] = useState<string | null>(null);\n  if (!data || !customLocation) return null;\n  const { payload, loading, ok, url, status } = data;\n  const { description, search } = customLocation;\n  let _payload = payload;\n  let _status = status;\n  const entryDB = description.entry.db as MemberDB | 'interpro';\n\n  const HTTP_OK = 200;\n  let notFound = !loading && status !== HTTP_OK;\n  const databases = dataBase?.payload?.databases;\n  if (loading || notFound) {\n    _payload = {\n      results: [],\n      count: 0,\n      next: null,\n      previous: null,\n    };\n  }\n  const results = [...(_payload?.results || [])];\n  let size = _payload?.count || 0;\n  if (exactMatch) {\n    const indexInPayload = results.findIndex(\n      ({ metadata: { accession } }) =>\n        accession === exactMatch.metadata.accession,\n    );\n    if (indexInPayload >= 0) {\n      results.splice(indexInPayload, 1);\n      size--;\n    }\n\n    results.splice(0, 1, {\n      ...exactMatch,\n      extra_fields: {\n        counters: exactMatch.metadata.counters,\n      },\n      metadata: {\n        ...exactMatch.metadata,\n        name:\n          (exactMatch.metadata.name as NameObject).short ||\n          (exactMatch.metadata.name as NameObject).name ||\n          (exactMatch.metadata.name as string),\n        exact_match: true,\n      },\n      className: css(local.exactMatch),\n    });\n    size++;\n    notFound = false;\n    _status = HTTP_OK;\n  }\n  const urlToExport = includeTaxonFocusedOnURL(url);\n\n  return (\n    <div className={css('filters-and-table')}>\n      <nav>\n        <div className={css('browse-side-panel')}>\n          <div className={css('selector-container')}>\n            <MemberDBSelector\n              contentType=\"taxonomy\"\n              className=\"pp-left-side-db-selector\"\n            />\n          </div>\n          <hr style={{ paddingTop: '0.5rem' }} />\n        </div>\n      </nav>\n      <section>\n        {databases && (\n          <SchemaOrgData\n            data={{\n              data: { db: databases.uniprot },\n              location: window.location,\n            }}\n            processData={schemaProcessDataTable}\n          />\n        )}\n        <Table\n          dataTable={results}\n          contentType=\"taxonomy\"\n          loading={loading}\n          ok={ok}\n          status={_status}\n          isStale={isStale}\n          actualSize={size}\n          query={search}\n          notFound={notFound}\n          withTree={true}\n          withGrid={true}\n          databases={databases}\n          nextAPICall={_payload?.next}\n          previousAPICall={_payload?.previous}\n          currentAPICall={url}\n          onFocusChanged={setFocused}\n        >\n          <Exporter>\n            <div className={css('menu-grid')}>\n              <AllTaxDownload\n                description={description}\n                search={search}\n                count={size}\n                focused={focused}\n                fileType=\"json\"\n              />\n              <AllTaxDownload\n                description={description}\n                search={search}\n                count={size}\n                focused={focused}\n                fileType=\"tsv\"\n              />\n              <ExternalExportButton\n                type={'api'}\n                url={toPublicAPI(urlToExport)}\n              />\n              <ExternalExportButton\n                search={search}\n                type={'scriptgen'}\n                subpath={descriptionToPath(description)}\n              />\n            </div>\n          </Exporter>\n          <PageSizeSelector />\n          <Card>\n            {(data: TaxItem) => (\n              <TaxonomyCard\n                data={data}\n                search={search.search as string}\n                entryDB={entryDB}\n              />\n            )}\n          </Card>\n          <SearchBox loading={isStale}>Search taxonomy</SearchBox>\n          <HighlightToggler />\n          <Column\n            dataKey=\"accession\"\n            renderer={(accession: string, row) => (\n              <Link\n                to={(customLocation) => ({\n                  description: {\n                    main: { key: 'taxonomy' },\n                    taxonomy: {\n                      ...customLocation.description.taxonomy,\n                      accession,\n                    },\n                  },\n                })}\n              >\n                <SchemaOrgData\n                  data={{\n                    data: { row, endpoint: 'taxonomy' },\n                    location: window.location,\n                  }}\n                  processData={schemaProcessDataTableRow}\n                />\n                <HighlightedText\n                  text={accession}\n                  textToHighlight={search.search as string}\n                />\n              </Link>\n            )}\n          >\n            Taxon ID\n          </Column>\n          <Column\n            dataKey=\"name\"\n            renderer={(name: string, { accession }: TaxonomyMetadata) => (\n              <Link\n                to={(customLocation) => ({\n                  description: {\n                    main: { key: 'taxonomy' },\n                    taxonomy: {\n                      ...customLocation.description.taxonomy,\n                      accession: accession,\n                    },\n                  },\n                })}\n              >\n                <HighlightedText\n                  text={name}\n                  textToHighlight={search.search as string}\n                />\n              </Link>\n            )}\n          >\n            Name\n          </Column>\n          <Column\n            dataKey=\"accession\"\n            headerClassName={css('table-center')}\n            cellClassName={css('table-center')}\n            defaultKey=\"entry-count\"\n            renderer={(\n              accession: string,\n              _row: unknown,\n              extra?: ExtraCounters,\n            ) => {\n              const count = extra?.counters?.entries || '-';\n              return (\n                <Link\n                  className={css('no-decoration')}\n                  to={{\n                    description: {\n                      main: { key: 'taxonomy' },\n                      taxonomy: {\n                        db: 'uniprot',\n                        accession: `${accession}`,\n                      },\n                      entry: { isFilter: true, db: entryDB || 'all' },\n                    },\n                  }}\n                >\n                  <NumberComponent loading={loading} abbr>\n                    {count}\n                  </NumberComponent>\n                </Link>\n              );\n            }}\n          >\n            Entry count\n          </Column>\n          <Column\n            dataKey=\"accession\"\n            headerClassName={css('table-center')}\n            cellClassName={css('table-center')}\n            defaultKey=\"entryAccessions\"\n            renderer={EntryAccessionsRenderer(entryDB)}\n          >\n            Entry accessions\n          </Column>\n          <Column\n            dataKey=\"accession\"\n            headerClassName={css('table-center')}\n            cellClassName={css('table-center')}\n            defaultKey=\"protein-count\"\n            renderer={(accession: string, _row, extra?: ExtraCounters) => {\n              const count = extra?.counters?.proteins || '-';\n              return (\n                <Link\n                  to={{\n                    description: {\n                      main: { key: 'taxonomy' },\n                      taxonomy: {\n                        db: 'uniprot',\n                        accession: `${accession}`,\n                      },\n                      protein: { isFilter: true, db: 'UniProt', order: 1 },\n                      entry: entryDB\n                        ? { isFilter: true, db: entryDB, order: 2 }\n                        : null,\n                    },\n                  }}\n                >\n                  <NumberComponent loading={loading} abbr>\n                    {count}\n                  </NumberComponent>\n                </Link>\n              );\n            }}\n          >\n            <Tooltip title=\"All the proteins for this taxonomy containing an entry from the selected database\">\n              Protein count\n            </Tooltip>\n          </Column>\n          <Column\n            dataKey=\"accession\"\n            defaultKey=\"proteinFastas\"\n            headerClassName={css('table-center')}\n            cellClassName={css('table-center')}\n            renderer={ProteinFastasRenderer(entryDB)}\n          >\n            Protein sequences\n          </Column>\n        </Table>\n      </section>\n    </div>\n  );\n};\n\nexport default List;\n","// extracted by mini-css-extract-plugin\nexport default {\"icon-link\":\"CounterIcon_styles__icon-link___c3\",\"icon-over-animation\":\"CounterIcon_styles__icon-over-animation___ef\",\"icon-wrapper\":\"CounterIcon_styles__icon-wrapper___b8\",\"md-small\":\"CounterIcon_styles__md-small___a8\",\"mod-img-pos\":\"CounterIcon_styles__mod-img-pos___c0\",\"icon\":\"CounterIcon_styles__icon___e4\",\"icon-count-species\":\"CounterIcon_styles__icon-count-species___e0\",\"icon-count-ida\":\"CounterIcon_styles__icon-count-ida___ce\",\"icon-count-set\":\"CounterIcon_styles__icon-count-set___de\",\"icon-count-hmm\":\"CounterIcon_styles__icon-count-hmm___c7\",\"icon-count-proteome\":\"CounterIcon_styles__icon-count-proteome___ad\",\"card-counter-block\":\"CounterIcon_styles__card-counter-block___de\"};","// extracted by mini-css-extract-plugin\nexport default {\"new-card\":\"Card_styles__new-card___df\",\"image\":\"Card_styles__image___b8\",\"card-tag\":\"Card_styles__card-tag___bf\",\"icon\":\"Card_styles__icon___d1\",\"title\":\"Card_styles__title___fb\",\"subheader\":\"Card_styles__subheader___ca\",\"content\":\"Card_styles__content___f0\",\"footer\":\"Card_styles__footer___fe\",\"card-more\":\"Card_styles__card-more___c3\",\"button-more\":\"Card_styles__button-more___f8\",\"compact\":\"Card_styles__compact___e9\",\"tag-publi\":\"Card_styles__tag-publi___f0\",\"tag-tuto\":\"Card_styles__tag-tuto___b1\",\"tag-tool\":\"Card_styles__tag-tool___dd\",\"tag-focus\":\"Card_styles__tag-focus___e5\",\"tag-blog\":\"Card_styles__tag-blog___a7\",\"white-link\":\"Card_styles__white-link___a2\",\"card-info-author\":\"Card_styles__card-info-author___e9\",\"button\":\"Card_styles__button___ee\",\"hollow\":\"Card_styles__hollow___d5\",\"secondary\":\"Card_styles__secondary___d8\",\"margin-bottom-large\":\"Card_styles__margin-bottom-large___d8\"};","// extracted by mini-css-extract-plugin\nexport default {\"card\":\"styles_blocks__card___ad\",\"grid\":\"styles_blocks__grid___b2\",\"simple-box\":\"styles_blocks__simple-box___c3\"};","import baseClone from './_baseClone.js';\n\n/** Used to compose bitmasks for cloning. */\nvar CLONE_DEEP_FLAG = 1,\n    CLONE_SYMBOLS_FLAG = 4;\n\n/**\n * This method is like `_.clone` except that it recursively clones `value`.\n *\n * @static\n * @memberOf _\n * @since 1.0.0\n * @category Lang\n * @param {*} value The value to recursively clone.\n * @returns {*} Returns the deep cloned value.\n * @see _.clone\n * @example\n *\n * var objects = [{ 'a': 1 }, { 'b': 2 }];\n *\n * var deep = _.cloneDeep(objects);\n * console.log(deep[0] === objects[0]);\n * // => false\n */\nfunction cloneDeep(value) {\n  return baseClone(value, CLONE_DEEP_FLAG | CLONE_SYMBOLS_FLAG);\n}\n\nexport default cloneDeep;\n"],"names":["blueIcon","greenIcon","css","cssBinder","fonts","_ref","color","lineage","fontSize","icon","includes","getIcon","test","getColor","React","style","className","local","entry","protein","proteome","taxonomy","structure","set","count","endpoint","name","to","db","signature","Tooltip","title","toPlural","display","Link","disabled","position","top","left","MemberSymbol","type","NumberComponent","abbr","imageComponent","imageIconClass","subHeader","footer","linkForMore","labelForMore","compact","children","href","target","buttonType","cardStyle","entryDB","taxName","taxAccession","counters","entries","proteins","structures","proteomes","CounterIcon","description","main","key","accession","isFilter","Lineage","superkingdom","getSuperKingdom","nodespot","getNodeSpotlight","_ref2","data","search","metadata","Card","_a","extra_fields","SpeciesIcon","undefined","source_database","HighlightedText","text","textToHighlight","_b","SummaryCounterOrg","_c","focused","fileType","newDescription","cloneDeep","File","customLocationDescription","Object","assign","pageStyle","styles","exporterStyle","filtersAndTable","SchemaOrgData","loadable","loader","loading","EntryAccessionsRenderer","taxId","_row","extra","ProteinFastasRenderer","isStale","customLocation","dataBase","exactMatch","setFocused","useState","payload","ok","url","status","_payload","_status","notFound","databases","results","next","previous","size","indexInPayload","findIndex","splice","short","exact_match","urlToExport","includeTaxonFocusedOnURL","MemberDBSelector","contentType","paddingTop","uniprot","location","window","processData","schemaProcessDataTable","Table","dataTable","actualSize","query","withTree","withGrid","nextAPICall","previousAPICall","currentAPICall","onFocusChanged","Exporter","AllTaxDownload","ExternalExportButton","toPublicAPI","subpath","descriptionToPath","PageSizeSelector","TaxonomyCard","SearchBox","HighlightToggler","Column","dataKey","renderer","row","schemaProcessDataTableRow","_ref3","headerClassName","cellClassName","defaultKey","order","value","baseClone","CLONE_DEEP_FLAG"],"sourceRoot":""}