{"version":3,"file":"js/7789.module.protein-page.80e.js","mappings":"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","sources":["webpack://interpro7-client/./src/wrappers/ResizeObserverComponent/ResizeObserver.js","webpack://interpro7-client/./src/components/SimpleCommonComponents/Card/CounterIcon/index.tsx","webpack://interpro7-client/./src/components/SimpleCommonComponents/Card/index.tsx","webpack://interpro7-client/./src/components/SimpleCommonComponents/SpaceFiller/index.js","webpack://interpro7-client/./src/components/Protein/SummaryCounterProteins/index.tsx","webpack://interpro7-client/./src/components/Protein/Card/index.tsx","webpack://interpro7-client/./src/components/Protein/ProteinListFilters/TaxonomyFilter/TaxonomyOption/index.tsx","webpack://interpro7-client/./src/components/Protein/ProteinListFilters/TaxonomyFilter/ExtraTaxonomyOption/index.tsx","webpack://interpro7-client/./src/components/Protein/ProteinListFilters/TaxonomyFilter/index.tsx","webpack://interpro7-client/./src/components/Protein/ProteinListFilters/FragmentFilter/index.tsx","webpack://interpro7-client/./src/components/Protein/ProteinListFilters/MatchPresenceFilter/index.tsx","webpack://interpro7-client/./src/components/Protein/ProteinListFilters/index.tsx","webpack://interpro7-client/./src/pages/Protein/index.tsx","webpack://interpro7-client/./src/components/SimpleCommonComponents/Card/CounterIcon/styles.css?9f8e","webpack://interpro7-client/./src/components/SimpleCommonComponents/Card/styles.css?fb5f"],"sourcesContent":["// @flow\nimport { schedule, sleep } from 'timing-functions';\n\n/*:: type ResizeObserverEntry = {\n  target: HTMLElement,\n  contentRect: {[key: string]: number},\n}; */\n\nexport default (() => {\n  // Use native if possible\n  if ('ResizeObserver' in window) return window.ResizeObserver;\n  // or fallback, with incomplete polyfill, that should be enough for what we do\n  return class ResizeObserver {\n    /*:: _node: ?HTMLElement; */\n    /*:: _onResizeEvent: Array<ResizeObserverEntry> => any; */\n\n    constructor(onResizeEvent /*: Array<ResizeObserverEntry> => any */) {\n      if (typeof onResizeEvent !== 'function') {\n        throw new Error('missing resize handler');\n      }\n      this._onResizeEvent = onResizeEvent;\n    }\n\n    _handleResize = async () => {\n      await schedule();\n      if (!this._node) return;\n      this._onResizeEvent([\n        {\n          target: this._node,\n          // $FlowFixMe class-object-subtyping\n          contentRect: this._node.getBoundingClientRect(),\n        },\n      ]);\n    };\n\n    observe(node /*: HTMLElement */) {\n      if (!node instanceof HTMLElement) {\n        throw new Error('ResizeObserver only works on HTML elements');\n      }\n      if (this._node) {\n        throw new Error('ResizeObserver fallback only supports one node');\n      }\n      this._node = node;\n      window.addEventListener('resize', this._handleResize);\n      this._handleResize();\n      // just in case it happened too soon, just redo it after a bit\n      // eslint-disable-next-line no-magic-numbers\n      sleep(1000).then(this._handleResize);\n    }\n\n    unobserve(node /*: HTMLElement */) {\n      if (this._node && this._node !== node) {\n        throw new Error('Trying to unobserve the wrong node');\n      }\n      this._node = null;\n      window.removeEventListener('resize', this._handleResize);\n    }\n  };\n})();\n","import React from 'react';\n\nimport Tooltip from 'components/SimpleCommonComponents/Tooltip';\nimport Link from 'components/generic/Link';\nimport NumberComponent from 'components/NumberComponent';\nimport MemberSymbol from 'components/Entry/MemberSymbol';\n\nimport { toPlural } from 'utils/pages/toPlural';\n\nimport cssBinder from 'styles/cssBinder';\n\nimport local from './styles.css';\nimport fonts from 'EBI-Icon-fonts/fonts.css';\n\nconst css = cssBinder(local, fonts);\n\ntype Props = {\n  /** How many of this entity */\n  count: number;\n  /** One of the InterPro endpoints */\n  endpoint: Endpoint | 'domain architecture';\n  /** name of the entity */\n  name: string;\n  /** New location to add as link. If not added the ocon will appear disabled */\n  to?: InterProPartialLocation;\n  /** The database of the entity */\n  db?: MemberDB | 'interpro';\n  /**\n   * In case it is used to represent a signature of an entry.\n   * In this case the counter won't be showed as it will represent a single signature\n   * Currently iused in the EntryCard that are in the New entreies of the home page\n   * */\n  signature?: string;\n};\n\nconst icon: Record<Endpoint | 'domain architecture', string> = {\n  entry: 'icon-entries',\n  protein: 'icon-proteins',\n  proteome: 'icon-count-proteome',\n  taxonomy: 'icon-count-species',\n  structure: 'icon-structures',\n  set: 'icon-count-set',\n  'domain architecture': 'icon-count-ida',\n};\n\nconst CounterIcon = ({ count, endpoint, name, to, db, signature }: Props) => {\n  return (\n    <Tooltip\n      title={\n        signature\n          ? `${db} signature: ${signature}`\n          : `${count} ${toPlural(endpoint, count, true)} matching ${name}`\n      }\n      className={css('icon-link')}\n      style={{ display: 'flex' }}\n    >\n      <Link\n        to={to}\n        className={css(count ? null : 'ico-disabled')}\n        disabled={!count || !to}\n      >\n        <div\n          className={css(\n            'icon',\n            'icon-conceptual',\n            'icon-wrapper',\n            icon[endpoint],\n          )}\n        >\n          {endpoint === 'entry' && (\n            <div\n              style={{\n                // UGLY hack be better Gustavo\n                position: 'relative',\n                top: '7px',\n                left: '-2px',\n              }}\n            >\n              <MemberSymbol type={db || 'all'} className={css('md-small')} />\n            </div>\n          )}\n          {count !== 0 && <div className={css('icon-over-animation')} />}\n        </div>\n        {!signature && <NumberComponent abbr>{count}</NumberComponent>}\n      </Link>\n    </Tooltip>\n  );\n};\n\nexport default CounterIcon;\n","import React, { PropsWithChildren, ReactElement } from 'react';\n\nimport Link from 'components/generic/Link';\n\nimport cssBinder from 'styles/cssBinder';\n\nimport local from './styles.css';\nimport fonts from 'EBI-Icon-fonts/fonts.css';\n\nconst css = cssBinder(local, fonts);\n\ntype Props = PropsWithChildren<{\n  title?: ReactElement | string;\n  imageIconClass?: string;\n  imageComponent?: ReactElement;\n  subHeader?: ReactElement | string;\n  footer?: ReactElement | string;\n  linkForMore?: string;\n  labelForMore?: string;\n  className?: string;\n  compact?: boolean;\n}>;\n\nexport const Card = ({\n  title,\n  imageComponent,\n  imageIconClass,\n  subHeader,\n  footer,\n  linkForMore,\n  labelForMore,\n  compact = false,\n  className = '',\n  children,\n}: Props) => {\n  return (\n    <div className={css('new-card', className, { compact })}>\n      {(imageComponent || imageIconClass || title || subHeader) && (\n        <header>\n          {(imageComponent || imageIconClass) && (\n            <div\n              className={css('image', imageIconClass, {\n                icon: !!imageIconClass,\n              })}\n            >\n              {imageComponent}\n            </div>\n          )}\n          {title && <div className={css('title')}>{title}</div>}\n          {subHeader && <div className={css('subheader')}>{subHeader}</div>}\n        </header>\n      )}\n      <section className={css('content')}>{children}</section>\n      {(footer || linkForMore) && (\n        <>\n          <div className={css('footer')}>\n            {footer}\n            {linkForMore && (\n              <div className={css('card-more')}>\n                <Link href={linkForMore} target=\"_blank\" buttonType=\"tertiary\">\n                  <span\n                    className={css('icon', 'icon-common', 'icon-right')}\n                    data-icon=\"&#xf061;\"\n                  ></span>{' '}\n                  {labelForMore || 'See more'}\n                </Link>\n              </div>\n            )}{' '}\n          </div>\n        </>\n      )}\n    </div>\n  );\n};\nexport default Card;\n","// @flow\nimport React, { useState, useEffect } from 'react';\nimport T from 'prop-types';\n\nimport ResizeObserver from 'wrappers/ResizeObserverComponent/ResizeObserver';\nimport { sleep } from 'timing-functions';\n\n/*:: type Props = {\n  element: ?HTMLElement,\n  dimension?: 'height' | 'width',\n  refresh?: boolean,\n}\n\n  */\nconst ONE_SEC = 1000;\n\nconst SpaceFiller = (\n  { element, dimension = 'height', refresh } /*: Props */,\n) => {\n  const [fillerSpace, setFillerSpace] = useState(0);\n  const updateDimension = () => {\n    if (element) {\n      const assigned =\n        dimension === 'height'\n          ? element?.getBoundingClientRect()?.height || 0\n          : element?.getBoundingClientRect()?.width || 0;\n      let actual = 0;\n      for (const child of element?.children) {\n        actual +=\n          dimension === 'height'\n            ? child?.getBoundingClientRect()?.height || 0\n            : child?.getBoundingClientRect()?.width || 0;\n      }\n      setFillerSpace(actual - assigned);\n    }\n  };\n  const observer = new ResizeObserver(updateDimension);\n  useEffect(() => {\n    if (element) observer.observe(element);\n    return () => {\n      if (element) observer.unobserve(element);\n    };\n  }, [element]);\n\n  useEffect(() => {\n    // Forced refresh\n    if (refresh)\n      // Give time for all the children of the given element to load first to set the filler space right\n      sleep(ONE_SEC).then(updateDimension);\n  }, [refresh]);\n\n  return <div style={{ [(dimension /*: string */)]: fillerSpace }} />;\n};\nSpaceFiller.propTypes = {\n  element: T.any,\n  dimension: T.string,\n  refresh: T.bool,\n};\n\nexport default SpaceFiller;\n","import React from 'react';\nimport CounterIcon from 'components/SimpleCommonComponents/Card/CounterIcon';\n\ntype Props = {\n  entryDB: MemberDB | 'interpro';\n  proteinName: string;\n  proteinAccession: string;\n  counters: MetadataCounters;\n};\n\nimport cssBinder from 'styles/cssBinder';\n\nimport cardStyle from 'components/SimpleCommonComponents/Card/CounterIcon/styles.css';\n\nconst css = cssBinder(cardStyle);\n\nconst SummaryCounterProteins = ({\n  entryDB,\n  proteinName,\n  proteinAccession,\n  counters,\n}: Props) => {\n  const { entries, structures } = counters;\n\n  return (\n    <div className={css('card-counter-block')}>\n      <CounterIcon\n        endpoint=\"entry\"\n        count={entries as number}\n        name={proteinName}\n        db={entryDB}\n        to={{\n          description: {\n            main: { key: 'protein' },\n            protein: {\n              db: 'uniprot',\n              accession: proteinAccession,\n            },\n            entry: { isFilter: true, db: entryDB || 'all' },\n          },\n        }}\n      />\n      <CounterIcon\n        endpoint=\"structure\"\n        count={structures as number}\n        name={proteinName}\n        to={{\n          description: {\n            main: { key: 'protein' },\n            protein: {\n              db: 'uniprot',\n              accession: proteinAccession,\n            },\n            structure: { isFilter: true, db: 'PDB' },\n          },\n        }}\n      />\n    </div>\n  );\n};\nexport default SummaryCounterProteins;\n","import React from 'react';\n\nimport Link from 'components/generic/Link';\nimport Card from 'components/SimpleCommonComponents/Card';\nimport HighlightedText from 'components/SimpleCommonComponents/HighlightedText';\nimport Tooltip from 'components/SimpleCommonComponents/Tooltip';\nimport Loading from 'components/SimpleCommonComponents/Loading';\nimport SummaryCounterProteins from '../SummaryCounterProteins';\n\nimport cssBinder from 'styles/cssBinder';\n\nimport fonts from 'EBI-Icon-fonts/fonts.css';\n\nconst css = cssBinder(fonts);\n\ntype Props = {\n  data: {\n    metadata: ProteinMetadata;\n    extra_fields?: {\n      counters: MetadataCounters;\n    };\n  };\n  search: string;\n  entryDB: MemberDB | 'interpro';\n};\nconst ProteinCard = ({ data, search, entryDB }: Props) => {\n  return (\n    <Card\n      title={\n        <>\n          {data.metadata.source_database === 'reviewed' ? (\n            <Tooltip title=\"Reviewed by UniProtKB curators\">\n              <span\n                className={css('icon', 'icon-common')}\n                data-icon=\"&#xf2f0;\"\n                aria-label=\"reviewed\"\n              />{' '}\n            </Tooltip>\n          ) : null}\n          <Link\n            to={{\n              description: {\n                main: { key: 'protein' },\n                protein: {\n                  db: data.metadata.source_database,\n                  accession: data.metadata.accession,\n                },\n              },\n            }}\n          >\n            <HighlightedText\n              text={data.metadata.name}\n              textToHighlight={search}\n            />\n          </Link>\n        </>\n      }\n      subHeader={<span>{data.metadata.length} AA</span>}\n      footer={\n        <>\n          <Tooltip\n            title={`${data.metadata.source_organism.fullName} (Tax ID: ${data.metadata.source_organism.taxId})`}\n          >\n            <Link\n              to={{\n                description: {\n                  main: { key: 'taxonomy' },\n                  taxonomy: {\n                    db: 'uniprot',\n                    accession: data.metadata.source_organism.taxId,\n                  },\n                },\n              }}\n            >\n              {data.metadata.source_organism.fullName}\n            </Link>\n          </Tooltip>\n          <div>\n            <HighlightedText\n              text={data.metadata.accession || ''}\n              textToHighlight={search}\n            />\n          </div>\n        </>\n      }\n    >\n      {data.extra_fields ? (\n        <SummaryCounterProteins\n          proteinName={data.metadata.name}\n          proteinAccession={data.metadata.accession}\n          counters={data.extra_fields.counters}\n          entryDB={entryDB}\n        />\n      ) : (\n        <Loading />\n      )}\n    </Card>\n  );\n};\n\nexport default ProteinCard;\n","import React, { FormEvent } from 'react';\n\nimport NumberComponent from 'components/NumberComponent';\n\nimport cssBinder from 'styles/cssBinder';\n\nimport style from 'components/FiltersPanel/style.css';\n\nconst css = cssBinder(style);\n\ntype Props = {\n  checked: boolean;\n  taxId: string;\n  count?: number;\n  title: string;\n  isStale: boolean;\n  onChange: (event: FormEvent) => void;\n  loading: boolean;\n};\n\nconst TaxonomyOption = ({\n  checked,\n  taxId,\n  count,\n  title,\n  isStale,\n  onChange,\n  loading,\n}: Props) => (\n  <label className={css('radio-btn-label', { checked })}>\n    <input\n      type=\"radio\"\n      name=\"entry_type\"\n      value={taxId}\n      disabled={isStale}\n      className={css('radio-btn')}\n      onChange={onChange}\n      checked={checked}\n      style={{ margin: '0.25em' }}\n    />\n    <span>{taxId === 'ALL' ? 'All' : title}</span>\n    {typeof count === 'undefined' || isNaN(count) ? null : (\n      <NumberComponent\n        label\n        loading={loading}\n        className={css('filter-label')}\n        abbr\n      >\n        {count}\n      </NumberComponent>\n    )}\n  </label>\n);\n\nexport default TaxonomyOption;\n","import React, { FormEvent } from 'react';\n\nimport { createSelector } from 'reselect';\nimport { format } from 'url';\n\nimport loadData from 'higherOrder/loadData/ts';\nimport descriptionToPath from 'utils/processDescription/descriptionToPath';\n\nimport TaxonomyOption from '../TaxonomyOption';\n\ntype OptionProps = {\n  taxId: string;\n  checked?: boolean;\n  onChange: (event: FormEvent) => void;\n};\ninterface OptionsLoadedProps\n  extends OptionProps,\n    LoadDataProps<MetadataPayload<TaxonomyMetadata>> {}\n\nconst ExtraTaxonomyOption = ({\n  taxId,\n  checked,\n  data,\n  isStale,\n  onChange,\n}: OptionsLoadedProps) => (\n  <TaxonomyOption\n    taxId={taxId}\n    checked={!!checked}\n    title={\n      (typeof data?.payload?.metadata?.name === 'string'\n        ? data?.payload?.metadata?.name\n        : data?.payload?.metadata?.name?.name) || taxId\n    }\n    onChange={onChange}\n    isStale={!!isStale}\n    loading={data!.loading}\n  />\n);\n\nconst getUrlForMetadata = createSelector(\n  (state: GlobalState) => state.settings.api,\n  (_, props) => props.taxId,\n  ({ protocol, hostname, port, root }, accession) =>\n    format({\n      protocol,\n      hostname,\n      port,\n      pathname:\n        root +\n        descriptionToPath({\n          main: { key: 'taxonomy' },\n          taxonomy: { db: 'uniprot', accession },\n        }),\n    }),\n);\nexport default loadData<MetadataPayload<TaxonomyMetadata>>(getUrlForMetadata)(\n  ExtraTaxonomyOption,\n);\n","import React, { FormEvent, PureComponent } from 'react';\n\nimport { createSelector } from 'reselect';\nimport { format } from 'url';\n\nimport Loading from 'components/SimpleCommonComponents/Loading';\nimport { getPayloadOrEmpty } from 'components/FiltersPanel';\n\nimport loadData from 'higherOrder/loadData/ts';\nimport descriptionToPath from 'utils/processDescription/descriptionToPath';\n\nimport { goToCustomLocation } from 'actions/creators';\n\nimport cssBinder from 'styles/cssBinder';\n\nimport style from 'components/FiltersPanel/style.css';\nimport TaxonomyOption from './TaxonomyOption';\nimport ExtraTaxonomyOption from './ExtraTaxonomyOption';\n\nconst css = cssBinder(style);\n\ntype Props = {\n  label?: string;\n  goToCustomLocation?: typeof goToCustomLocation;\n  customLocation?: InterProLocation;\n};\ntype TaxGroup = {\n  value: number;\n  title: string;\n};\ntype State = {\n  taxes: Array<[string, TaxGroup]>;\n  extraFeature: string | null;\n};\ninterface LoadedProps extends Props, LoadDataProps<GroupByPayload<TaxGroup>> {}\n\nclass TaxonomyFilter extends PureComponent<LoadedProps, State> {\n  state: State = {\n    taxes: [],\n    extraFeature: null,\n  };\n\n  static getDerivedStateFromProps(nextProps: LoadedProps, prevState: State) {\n    if (\n      !nextProps.data ||\n      nextProps.data.loading ||\n      !nextProps.customLocation?.description\n    )\n      return prevState;\n    const {\n      data: { loading, payload },\n      isStale,\n      customLocation: {\n        description: {\n          taxonomy: { accession: acc, isFilter },\n        },\n      },\n    } = nextProps;\n    const taxes = Object.entries(\n      getPayloadOrEmpty<GroupByPayload<TaxGroup>, TaxGroup>(\n        payload,\n        loading,\n        isStale,\n      ),\n    ).sort(([, { value: a }], [, { value: b }]) => b - a);\n    const accession = isFilter ? acc : null;\n    if (!loading) {\n      taxes.unshift(['ALL', { title: 'ALL', value: NaN }]);\n    }\n    const isMissingInTaxes =\n      accession !== null && !taxes.find(([tax]) => tax === accession);\n    return {\n      taxes,\n      extraFeature: isMissingInTaxes ? accession : prevState.extraFeature,\n    };\n  }\n  _handleSelection = ({ target }: FormEvent) => {\n    if (!this.props.customLocation) return null;\n    const value = (target as HTMLInputElement).value;\n    const { page, cursor, ...search } = this.props.customLocation.search;\n    this.props.goToCustomLocation?.({\n      ...this.props.customLocation,\n      description: {\n        ...this.props.customLocation.description,\n        taxonomy: {\n          isFilter: value !== 'ALL',\n          db: value === 'ALL' ? null : 'uniprot',\n          accession: value === 'ALL' ? null : value,\n        },\n      },\n      search,\n    });\n  };\n\n  render() {\n    if (!this.props.data || !this.props.customLocation) return null;\n    if (this.props.data.loading) return <Loading />;\n    const {\n      data: { loading },\n      isStale,\n      customLocation: {\n        description: {\n          taxonomy: { accession: acc, isFilter },\n        },\n      },\n    } = this.props;\n    const accession = isFilter ? acc : null;\n    return (\n      <div\n        style={{ overflowX: 'hidden' }}\n        className={css('list-taxonomy', 'filter', { stale: isStale })}\n      >\n        {this.state.extraFeature && (\n          <ExtraTaxonomyOption\n            taxId={this.state.extraFeature}\n            checked={this.state.extraFeature === accession}\n            onChange={this._handleSelection}\n          />\n        )}\n        <div>\n          {this.state.taxes.map(([taxId, { value: count, title }]) => (\n            <TaxonomyOption\n              key={taxId}\n              taxId={taxId}\n              checked={(!accession && taxId === 'ALL') || accession === taxId}\n              loading={loading}\n              count={count}\n              title={title}\n              isStale={!!isStale}\n              onChange={this._handleSelection}\n            />\n          ))}\n        </div>\n      </div>\n    );\n  }\n}\n\nconst getUrlFor = createSelector(\n  (state: GlobalState) => state.settings.api,\n  (state: GlobalState) => state.customLocation.description,\n  (state: GlobalState) => state.customLocation.search,\n  ({ protocol, hostname, port, root }, description, search) => {\n    // omit from search\n    // eslint-disable-next-line camelcase\n    const { tax_id, search: _, cursor: __, ..._search } = search;\n    // add to search\n    _search.group_by = 'tax_id';\n    // build URL\n    const desc = {\n      ...description,\n      taxonomy: {\n        ...description.taxonomy,\n        accession: null,\n      },\n    };\n    return format({\n      protocol,\n      hostname,\n      port,\n      pathname: root + descriptionToPath(desc),\n      query: _search,\n    });\n  },\n);\n\nconst mapStateToProps = createSelector(\n  (state: GlobalState) => state.customLocation,\n  (customLocation) => ({ customLocation }),\n);\n\nexport default loadData({\n  getUrl: getUrlFor,\n  mapStateToProps,\n  mapDispatchToProps: { goToCustomLocation },\n} as LoadDataParameters)(TaxonomyFilter);\n","import React, { FormEvent } from 'react';\n\nimport { createSelector } from 'reselect';\nimport { format } from 'url';\n\nimport NumberComponent from 'components/NumberComponent';\nimport { getPayloadOrEmpty } from 'components/FiltersPanel';\n\nimport loadData from 'higherOrder/loadData/ts';\nimport descriptionToPath from 'utils/processDescription/descriptionToPath';\n\nimport { goToCustomLocation } from 'actions/creators';\n\nimport cssBinder from 'styles/cssBinder';\nimport style from 'components/FiltersPanel/style.css';\n\nconst css = cssBinder(style);\n\ntype Props = {\n  label?: string;\n  goToCustomLocation?: typeof goToCustomLocation;\n  customLocation?: InterProLocation;\n};\ninterface LoadedProps extends Props, LoadDataProps<GroupByPayload> {}\n\nconst FragmentFilter = ({\n  data,\n  isStale,\n  customLocation,\n  goToCustomLocation,\n}: LoadedProps) => {\n  if (!data) return null;\n  const { loading, payload } = data;\n\n  const groupsPayload = getPayloadOrEmpty(\n    payload?.is_fragment,\n    loading,\n    isStale,\n  );\n  const names = new Map([\n    ['true', 'Fragment'],\n    ['false', 'Complete Sequence'],\n    ['both', 'Both/All'],\n  ]);\n  const groups: Record<string, number> = {\n    true: groupsPayload.true || 0,\n    false: groupsPayload.false || 0,\n  };\n  if (!loading) {\n    groups.both = groups ? (groups.true || 0) + (groups.false || 0) : 0;\n  }\n  const currentValue = (\n    (customLocation?.search.is_fragment as string) || 'both'\n  ).toLowerCase();\n  const _handleSelection = ({ target }: FormEvent) => {\n    if (!customLocation) return;\n    const value = (target as HTMLInputElement).value;\n    const { page, cursor, ...search } = customLocation.search || {};\n    const _search: InterProLocationSearch = { ...search, is_fragment: value };\n    if (value === 'both') {\n      delete _search.is_fragment;\n    }\n    goToCustomLocation?.({\n      ...customLocation,\n      description: {\n        ...customLocation.description,\n      },\n      search: _search,\n    });\n  };\n  return (\n    <div className={css('list-curation', { stale: isStale })}>\n      <div>\n        {Object.entries(groups)\n          .sort(([x], [y]) => {\n            if (x === 'both') return -1;\n            if (y === 'both') return 1;\n            return x > y ? 1 : -1;\n          })\n          .map(([isFragment, value]) => (\n            <label\n              key={isFragment}\n              className={css('radio-btn-label', {\n                checked: currentValue === isFragment,\n              })}\n            >\n              <input\n                type=\"radio\"\n                name=\"fragment_filter\"\n                className={css('radio-btn')}\n                value={isFragment}\n                disabled={isStale}\n                onChange={_handleSelection}\n                checked={currentValue === isFragment}\n                style={{ margin: '0.25em' }}\n              />\n              <span>{names.get(isFragment)}</span>\n              <NumberComponent\n                label\n                loading={loading}\n                className={css('filter-label')}\n                abbr\n              >\n                {value}\n              </NumberComponent>\n            </label>\n          ))}\n      </div>\n    </div>\n  );\n};\n\nconst getUrl = createSelector(\n  (state: GlobalState) => state.settings.api,\n  (state: GlobalState) => state.customLocation.description,\n  (state: GlobalState) => state.customLocation.search,\n  ({ protocol, hostname, port, root }, description, search) => {\n    // transform description\n    const _description: InterProPartialDescription = {\n      ...description,\n      protein: { db: description.protein.db || 'UniProt' },\n    };\n    // For Subpages\n    if (description.main.key !== 'protein') {\n      _description.main = { key: 'protein' };\n      _description[description.main.key as Endpoint] = {\n        ...description[description.main.key as Endpoint],\n        isFilter: true,\n      };\n    }\n\n    // omit from search\n    const { search: _, cursor: __, ..._search } = search;\n    if ('is_fragment' in _search) delete _search.is_fragment;\n    // add to search\n    _search.group_by = 'is_fragment';\n    // build URL\n    return format({\n      protocol,\n      hostname,\n      port,\n      pathname: root + descriptionToPath(_description),\n      query: _search,\n    });\n  },\n);\n\nconst mapStateToProps = createSelector(\n  (state: GlobalState) => state.customLocation,\n  (customLocation) => ({ customLocation }),\n);\n\nexport default loadData({\n  getUrl,\n  mapStateToProps,\n  mapDispatchToProps: { goToCustomLocation },\n} as LoadDataParameters)(FragmentFilter);\n","import React, { FormEvent } from 'react';\n\nimport { createSelector } from 'reselect';\nimport { format } from 'url';\n\nimport loadData from 'higherOrder/loadData/ts';\nimport descriptionToPath from 'utils/processDescription/descriptionToPath';\nimport NumberComponent from 'components/NumberComponent';\nimport { getPayloadOrEmpty } from 'components/FiltersPanel';\n\nimport { goToCustomLocation } from 'actions/creators';\n\nimport cssBinder from 'styles/cssBinder';\nimport style from 'components/FiltersPanel/style.css';\n\nconst css = cssBinder(style);\n\nconst labels = new Map([\n  ['both', 'All'],\n  ['true', 'With Matches'],\n  ['false', 'Without Matches'],\n]);\n\ntype Props = {\n  label?: string;\n  goToCustomLocation?: typeof goToCustomLocation;\n  customLocation?: InterProLocation;\n};\n\ninterface LoadedProps extends Props, LoadDataProps<GroupByPayload> {}\n\nconst MatchPresenceFilter = ({\n  data,\n  isStale,\n  goToCustomLocation,\n  customLocation,\n}: LoadedProps) => {\n  if (!data || !customLocation) return null;\n  const { loading, payload } = data;\n  const { search } = customLocation;\n\n  const hasMatches = new Map(\n    Object.entries(\n      getPayloadOrEmpty(payload?.match_presence, loading, isStale),\n    ),\n  );\n\n  if (!loading) {\n    let totalCount = 0;\n    hasMatches.forEach((value) => {\n      if (typeof value === 'number') totalCount += value;\n    });\n    hasMatches.set('both', totalCount);\n  }\n  const selectedValue = search.match_presence || 'both';\n\n  const _handleSelection = ({ target }: FormEvent) => {\n    const value = (target as HTMLInputElement).value;\n    const {\n      page,\n      match_presence: _,\n      cursor,\n      ...search\n    } = customLocation.search;\n    if (labels.has(value) && value.toLowerCase() !== 'both')\n      search.match_presence = value;\n    goToCustomLocation?.({ ...customLocation, search });\n  };\n\n  return (\n    <div className={css('list-match-presence', 'filter', { stale: isStale })}>\n      {[...labels.entries()].map(([key, label]) => {\n        const checked = key === selectedValue;\n        return (\n          <div key={key}>\n            <label className={css('radio-btn-label', { checked })}>\n              <input\n                type=\"radio\"\n                name=\"match_presence_filter\"\n                className={css('radio-btn')}\n                value={key}\n                disabled={isStale}\n                checked={checked}\n                onChange={_handleSelection}\n                style={{ margin: '0.25em' }}\n              />\n              <span>{label}</span>\n              <NumberComponent\n                label\n                loading={loading}\n                className={css('filter-label')}\n                abbr\n              >\n                {hasMatches.get(key) || 0}\n              </NumberComponent>\n            </label>\n          </div>\n        );\n      })}\n    </div>\n  );\n};\n\nconst getUrl = createSelector(\n  (state: GlobalState) => state.settings.api,\n  (state: GlobalState) => state.customLocation.description,\n  (state: GlobalState) => state.customLocation.search,\n  ({ protocol, hostname, port, root }, description, search) => {\n    // transform description\n    const _description = {\n      ...description,\n      protein: { db: description.protein.db || 'UniProt' },\n    };\n    // omit from search\n    const { search: _, match_presence: __, cursor, ..._search } = search;\n    // add to search\n    _search.group_by = 'match_presence';\n    // build URL\n    return format({\n      protocol,\n      hostname,\n      port,\n      pathname: root + descriptionToPath(_description),\n      query: _search,\n    });\n  },\n);\nconst mapStateToProps = createSelector(\n  (state: GlobalState) => state.customLocation,\n  (customLocation) => ({ customLocation }),\n);\n\nexport default loadData({\n  getUrl,\n  mapStateToProps,\n  mapDispatchToProps: { goToCustomLocation },\n} as LoadDataParameters)(MatchPresenceFilter);\n","import React from 'react';\n\nimport { createSelector } from 'reselect';\nimport { connect } from 'react-redux';\n\nimport FiltersPanel from 'components/FiltersPanel';\nimport CurationFilter from './CurationFilter';\nimport TaxonomyFilter from './TaxonomyFilter';\nimport FragmentFilter from './FragmentFilter';\nimport MatchPresenceFilter from './MatchPresenceFilter';\n\nexport const ProteinListFilters = ({\n  hasEntryFilter,\n}: {\n  hasEntryFilter?: boolean;\n}) => (\n  <FiltersPanel>\n    {!hasEntryFilter && <MatchPresenceFilter label=\"Matching Entries\" />}\n    <CurationFilter label=\"UniProt Curation\" />\n    <TaxonomyFilter label=\"Taxonomy\" />\n    <FragmentFilter label=\"Sequence Status\" />\n  </FiltersPanel>\n);\n\nconst mapStateToProps = createSelector(\n  (state: GlobalState) => !!state.customLocation.description.entry.isFilter,\n  (hasEntryFilter) => ({ hasEntryFilter }),\n);\n\nexport default connect(mapStateToProps)(ProteinListFilters);\n","import React, { useRef } from 'react';\nimport { createSelector } from 'reselect';\nimport { goToCustomLocation } from 'actions/creators';\n\nimport Tooltip from 'components/SimpleCommonComponents/Tooltip';\nimport SpaceFiller from 'components/SimpleCommonComponents/SpaceFiller';\nimport Link from 'components/generic/Link';\n\nimport MemberDBSelector from 'components/MemberDBSelector';\n\nimport ProteinCard from 'components/Protein/Card';\n\nimport ExternalExportButton from 'components/Table/Exporter/ExternalExportButton';\n\nimport ProteinListFilters from 'components/Protein/ProteinListFilters';\nimport Table, {\n  Column,\n  Card,\n  SearchBox,\n  PageSizeSelector,\n  Exporter,\n  HighlightToggler,\n} from 'components/Table';\n\nimport HighlightedText from 'components/SimpleCommonComponents/HighlightedText';\n\nimport File from 'components/File';\n\nimport loadData from 'higherOrder/loadData';\nimport loadable from 'higherOrder/loadable';\nimport { getUrlForApi } from 'higherOrder/loadData/defaults';\n\nimport EndPointPage from '../endpoint-page';\nimport subPages from 'subPages';\nimport config from 'config';\n\nimport ebiStyles from 'ebi-framework/css/ebi-global.css';\nimport pageStyle from '../style.css';\nimport fonts from 'EBI-Icon-fonts/fonts.css';\nimport ipro from 'styles/interpro-new.css';\nimport exporterStyle from 'components/Table/Exporter/style.css';\nimport filtersAndTable from 'components/FiltersPanel/filters-and-table.css';\n\nimport descriptionToPath from 'utils/processDescription/descriptionToPath';\nimport cssBinder from 'styles/cssBinder';\n\nimport { toPublicAPI } from 'utils/url';\n\nconst css = cssBinder(\n  fonts,\n  pageStyle,\n  ebiStyles,\n  ipro,\n  exporterStyle,\n  filtersAndTable,\n);\n\nimport {\n  schemaProcessDataTable,\n  schemaProcessDataTableRow,\n} from 'schema_org/processors';\n\n/*const propTypes = {\n  data: dataPropType.isRequired,\n  isStale: T.bool.isRequired,\n  customLocation: T.shape({\n    description: T.object.isRequired,\n    search: T.object.isRequired,\n  }).isRequired,\n  match: T.string,\n  dataBase: dataPropType.isRequired,\n};*/\n\ntype AllProteinDownloadProps = {\n  description: InterProDescription;\n  search: InterProLocationSearch;\n  count: number;\n  fileType: DownloadFileTypes;\n  name: string;\n};\n\nconst AllProteinDownload = ({\n  description,\n  search,\n  count,\n  fileType,\n  name,\n}: AllProteinDownloadProps) => (\n  <File\n    fileType={fileType}\n    name={`protein-sequences.${fileType}`}\n    count={count}\n    customLocationDescription={description}\n    endpoint=\"protein\"\n    search={search}\n  />\n);\n\ntype ProteinItem = {\n  metadata: ProteinMetadata;\n  extra_fields?: {\n    counters: MetadataCounters;\n  };\n};\n\ntype Props = {\n  customLocation?: InterProLocation;\n};\n\ninterface LoadedProps\n  extends Props,\n    LoadDataProps<PayloadList<ProteinItem>>,\n    LoadDataProps<RootAPIPayload, 'Base'> {}\n\nconst List = ({ data, customLocation, isStale, dataBase }: LoadedProps) => {\n  const filterPanel = useRef(null);\n\n  if (!data || !customLocation) return null;\n\n  const { payload, loading, ok, url, status } = data;\n  const { description, search } = customLocation;\n  let _payload = payload;\n  const entryDB = description.entry.db as MemberDB | 'interpro';\n\n  const HTTP_OK = 200;\n  const notFound = !loading && status !== HTTP_OK;\n  const databases = dataBase?.payload?.databases;\n  if (loading || notFound) {\n    _payload = {\n      results: [],\n      count: 0,\n      next: null,\n      previous: null,\n    };\n  }\n\n  const size = _payload?.count || 0;\n\n  return (\n    <div className={css('row', 'filters-and-table')}>\n      <nav>\n        <div className={css('browse-side-panel')} ref={filterPanel}>\n          <div className={css('selector-container')}>\n            <MemberDBSelector\n              contentType=\"protein\"\n              className=\"pp-left-side-db-selector\"\n            />\n          </div>\n          <hr style={{ paddingTop: '0.5rem' }} />\n          {!search.ida && <ProteinListFilters />}\n        </div>\n        <SpaceFiller\n          element={filterPanel?.current}\n          refresh={entryDB === null}\n        />\n      </nav>\n      <section>\n        {databases && entryDB && databases[entryDB.toLowerCase()] && (\n          <SchemaOrgData\n            data={{\n              data: { db: databases[entryDB.toLowerCase()] },\n              location: window.location,\n            }}\n            processData={schemaProcessDataTable}\n          />\n        )}\n        <Table\n          dataTable={_payload?.results}\n          contentType=\"protein\"\n          isStale={isStale}\n          loading={loading}\n          ok={ok}\n          status={status}\n          actualSize={size}\n          query={search}\n          notFound={notFound}\n          databases={databases}\n          nextAPICall={_payload?.next}\n          previousAPICall={_payload?.previous}\n          currentAPICall={url}\n        >\n          <Exporter>\n            <div className={css('menu-grid')}>\n              <AllProteinDownload\n                description={description}\n                search={search}\n                count={size}\n                fileType=\"fasta\"\n                name=\"fasta\"\n              />\n              <AllProteinDownload\n                name=\"json\"\n                description={description}\n                search={search}\n                count={size}\n                fileType=\"json\"\n              />\n              <AllProteinDownload\n                name=\"tsv\"\n                description={description}\n                search={search}\n                count={size}\n                fileType=\"tsv\"\n              />\n              <ExternalExportButton type={'api'} url={toPublicAPI(url)} />\n              <ExternalExportButton\n                search={search}\n                type={'scriptgen'}\n                subpath={descriptionToPath(description)}\n              />\n            </div>\n          </Exporter>\n          <Card>\n            {(data: ProteinItem) => (\n              <ProteinCard\n                data={data}\n                search={search.search as string}\n                entryDB={entryDB}\n              />\n            )}\n          </Card>\n          <PageSizeSelector />\n          <SearchBox loading={isStale}>Search proteins</SearchBox>\n          <HighlightToggler />\n          <Column\n            dataKey=\"accession\"\n            cellClassName={'nowrap'}\n            renderer={(accession: string, row) => (\n              <>\n                <SchemaOrgData\n                  data={{\n                    data: { row, endpoint: 'protein' },\n                    location: window.location,\n                  }}\n                  processData={schemaProcessDataTableRow}\n                />\n                <Link\n                  to={(customLocation) => ({\n                    ...customLocation,\n                    description: {\n                      main: { key: 'protein' },\n                      protein: {\n                        db: customLocation.description.protein.db,\n                        accession,\n                      },\n                    },\n                    search: {},\n                  })}\n                  className={css('acc-row')}\n                >\n                  <HighlightedText\n                    text={accession || ''}\n                    textToHighlight={search.search as string}\n                  />\n                </Link>\n                {row.source_database === 'reviewed' ? (\n                  <>\n                    {'\\u00A0' /* non-breakable space */}\n                    <Tooltip title=\"Reviewed by UniProtKB curators\">\n                      <span\n                        className={css('icon', 'icon-common')}\n                        data-icon=\"&#xf2f0;\"\n                        aria-label=\"reviewed\"\n                      />\n                    </Tooltip>\n                  </>\n                ) : null}\n              </>\n            )}\n          />\n          <Column\n            dataKey=\"name\"\n            renderer={(name: string, { accession }: ProteinMetadata) => (\n              <Link\n                to={(customLocation) => ({\n                  ...customLocation,\n                  description: {\n                    main: { key: 'protein' },\n                    protein: {\n                      db: customLocation.description.protein.db,\n                      accession,\n                    },\n                  },\n                  search: {},\n                })}\n              >\n                <HighlightedText\n                  text={name}\n                  textToHighlight={search.search as string}\n                />\n              </Link>\n            )}\n          >\n            Name\n          </Column>\n          <Column\n            dataKey=\"source_organism\"\n            renderer={({ fullName, taxId }: SourceOrganism) => (\n              <Link\n                to={{\n                  description: {\n                    main: { key: 'taxonomy' },\n                    taxonomy: {\n                      db: 'uniprot',\n                      accession: `${taxId}`,\n                    },\n                  },\n                }}\n              >\n                {fullName}\n              </Link>\n            )}\n          >\n            Species\n          </Column>\n          <Column\n            dataKey=\"gene\"\n            renderer={(gene: string) => <span aria-label=\"gene\">{gene}</span>}\n          >\n            Gene\n          </Column>\n          <Column\n            dataKey=\"length\"\n            headerClassName={css('text-right')}\n            cellClassName={css('text-right')}\n            renderer={(length: number) => (\n              <Tooltip title={`${length.toLocaleString()} amino acids`}>\n                <span aria-label=\"amino acids length\">\n                  {length.toLocaleString()}\n                </span>\n              </Tooltip>\n            )}\n          >\n            Length\n          </Column>\n          <Column\n            dataKey=\"in_alphafold\"\n            renderer={(inAlphafold, { accession }) =>\n              inAlphafold ? (\n                <Link\n                  to={{\n                    description: {\n                      main: { key: 'protein' },\n                      protein: {\n                        db: 'uniprot',\n                        accession,\n                        detail: 'alphafold',\n                      },\n                    },\n                  }}\n                >\n                  AlphaFold\n                </Link>\n              ) : null\n            }\n          >\n            Predicted structure\n          </Column>{' '}\n        </Table>\n      </section>\n    </div>\n  );\n};\n\nconst SummaryAsync = loadable({\n  loader: () =>\n    import(\n      /* webpackChunkName: \"protein-summary\" */ 'components/Protein/Summary'\n    ),\n  loading: () => null,\n});\n\nconst SchemaOrgData = loadable({\n  loader: () => import(/* webpackChunkName: \"schemaOrg\" */ 'schema_org'),\n  loading: () => null,\n});\n\nconst subPagesForProtein = new Map();\nfor (const subPage of config.pages.protein.subPages) {\n  subPagesForProtein.set(subPage, subPages.get(subPage));\n}\n\nconst childRoutesReg =\n  /[OPQ][0-9][A-Z0-9]{3}[0-9]|[A-NR-Z][0-9]([A-Z][A-Z0-9]{2}[0-9]){1,2}/i;\n\nconst Protein = () => (\n  <EndPointPage\n    subpagesRoutes={childRoutesReg}\n    listOfEndpointEntities={List}\n    SummaryAsync={SummaryAsync}\n    subPagesForEndpoint={subPagesForProtein}\n  />\n);\n\nconst mapStateToProps = createSelector(\n  (state: GlobalState) => state.customLocation,\n  (state: GlobalState) => state.settings.api,\n  (state: GlobalState) => state.settings.ui.lowGraphics,\n  (customLocation, api, lowGraphics) => ({ customLocation, api, lowGraphics }),\n);\n\nexport default loadData({\n  getUrl: getUrlForApi,\n  mapStateToProps,\n  mapDispatchToProps: { goToCustomLocation },\n} as LoadDataParameters)(Protein);\n","// extracted by mini-css-extract-plugin\nexport default {\"icon-link\":\"CounterIcon_styles__icon-link___c3\",\"icon-over-animation\":\"CounterIcon_styles__icon-over-animation___ef\",\"icon-wrapper\":\"CounterIcon_styles__icon-wrapper___b8\",\"md-small\":\"CounterIcon_styles__md-small___a8\",\"mod-img-pos\":\"CounterIcon_styles__mod-img-pos___c0\",\"icon\":\"CounterIcon_styles__icon___e4\",\"icon-count-species\":\"CounterIcon_styles__icon-count-species___e0\",\"icon-count-ida\":\"CounterIcon_styles__icon-count-ida___ce\",\"icon-count-set\":\"CounterIcon_styles__icon-count-set___de\",\"icon-count-hmm\":\"CounterIcon_styles__icon-count-hmm___c7\",\"icon-count-proteome\":\"CounterIcon_styles__icon-count-proteome___ad\",\"card-counter-block\":\"CounterIcon_styles__card-counter-block___de\"};","// extracted by mini-css-extract-plugin\nexport default {\"new-card\":\"Card_styles__new-card___df\",\"image\":\"Card_styles__image___b8\",\"card-tag\":\"Card_styles__card-tag___bf\",\"icon\":\"Card_styles__icon___d1\",\"title\":\"Card_styles__title___fb\",\"subheader\":\"Card_styles__subheader___ca\",\"content\":\"Card_styles__content___f0\",\"footer\":\"Card_styles__footer___fe\",\"card-more\":\"Card_styles__card-more___c3\",\"button-more\":\"Card_styles__button-more___f8\",\"compact\":\"Card_styles__compact___e9\",\"tag-publi\":\"Card_styles__tag-publi___f0\",\"tag-tuto\":\"Card_styles__tag-tuto___b1\",\"tag-tool\":\"Card_styles__tag-tool___dd\",\"tag-focus\":\"Card_styles__tag-focus___e5\",\"tag-blog\":\"Card_styles__tag-blog___a7\",\"white-link\":\"Card_styles__white-link___a2\",\"card-info-author\":\"Card_styles__card-info-author___e9\",\"button\":\"Card_styles__button___ee\",\"hollow\":\"Card_styles__hollow___d5\",\"secondary\":\"Card_styles__secondary___d8\",\"margin-bottom-large\":\"Card_styles__margin-bottom-large___d8\"};"],"names":["window","ResizeObserver","constructor","onResizeEvent","_this","_handleResize","_asyncToGenerator","schedule","_node","_onResizeEvent","target","contentRect","getBoundingClientRect","Error","this","observe","node","HTMLElement","addEventListener","sleep","then","unobserve","removeEventListener","css","cssBinder","local","fonts","icon","entry","protein","proteome","taxonomy","structure","set","_ref","count","endpoint","name","to","db","signature","React","Tooltip","title","toPlural","className","style","display","Link","disabled","position","top","left","MemberSymbol","type","NumberComponent","abbr","imageComponent","imageIconClass","subHeader","footer","linkForMore","labelForMore","compact","children","href","buttonType","SpaceFiller","element","dimension","refresh","fillerSpace","setFillerSpace","useState","updateDimension","_element$getBoundingC","_element$getBoundingC2","assigned","height","width","actual","child","_child$getBoundingCli","_child$getBoundingCli2","observer","useEffect","propTypes","T","cardStyle","entryDB","proteinName","proteinAccession","counters","entries","structures","CounterIcon","description","main","key","accession","isFilter","data","search","Card","metadata","source_database","HighlightedText","text","textToHighlight","length","source_organism","fullName","taxId","extra_fields","SummaryCounterProteins","Loading","checked","isStale","onChange","loading","value","margin","isNaN","label","getUrlForMetadata","createSelector","state","settings","api","_","props","_ref2","protocol","hostname","port","root","format","pathname","descriptionToPath","loadData","TaxonomyOption","_b","_a","payload","_d","_c","_g","_f","_e","TaxonomyFilter","PureComponent","taxes","extraFeature","_handleSelection","customLocation","page","cursor","__rest","goToCustomLocation","call","Object","assign","getDerivedStateFromProps","nextProps","prevState","acc","getPayloadOrEmpty","sort","_ref3","a","b","unshift","NaN","isMissingInTaxes","find","_ref4","tax","render","overflowX","stale","ExtraTaxonomyOption","map","_ref5","getUrlFor","_ref6","tax_id","__","_search","group_by","desc","query","mapStateToProps","getUrl","mapDispatchToProps","_description","is_fragment","groupsPayload","names","Map","groups","true","false","both","currentValue","toLowerCase","x","y","isFragment","get","labels","match_presence","hasMatches","totalCount","forEach","selectedValue","has","hasEntryFilter","connect","FiltersPanel","MatchPresenceFilter","CurationFilter","FragmentFilter","pageStyle","ebiStyles","ipro","exporterStyle","filtersAndTable","AllProteinDownload","fileType","File","customLocationDescription","List","dataBase","filterPanel","useRef","ok","url","status","_payload","notFound","databases","results","next","previous","size","ref","MemberDBSelector","contentType","paddingTop","ida","ProteinListFilters","current","SchemaOrgData","location","processData","schemaProcessDataTable","Table","dataTable","actualSize","nextAPICall","previousAPICall","currentAPICall","Exporter","ExternalExportButton","toPublicAPI","subpath","ProteinCard","PageSizeSelector","SearchBox","HighlightToggler","Column","dataKey","cellClassName","renderer","row","schemaProcessDataTableRow","gene","headerClassName","toLocaleString","inAlphafold","detail","SummaryAsync","loadable","loader","subPagesForProtein","subPage","config","pages","subPages","childRoutesReg","ui","lowGraphics","getUrlForApi","Protein","EndPointPage","subpagesRoutes","listOfEndpointEntities","subPagesForEndpoint"],"sourceRoot":""}