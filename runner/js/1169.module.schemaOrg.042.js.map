{"version":3,"file":"js/1169.module.schemaOrg.042.js","mappings":"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","sources":["webpack://interpro7-client/./src/schema_org/merger.js","webpack://interpro7-client/./src/schema_org/index.js"],"sourcesContent":["import { schedule } from 'timing-functions';\n\nconst DEFAULT_ROOT_DATA = {\n  '@context': 'http://schema.org',\n  '@type': 'WebSite',\n  mainEntityOfPage: '@mainEntity',\n};\n\nconst DEFAULT_MAX_DELAY = 250;\n\nconst checkDeadline = async (deadline, dev /*:: ?: boolean */) => {\n  let _deadline = deadline;\n  if (!deadline.timeRemaining()) {\n    if (dev) {\n      console.log('âŒ› No more time remaining! Re-schedule work for later');\n    }\n    _deadline = await schedule(DEFAULT_MAX_DELAY);\n  }\n  return _deadline;\n};\n\nconst merger = async (\n  dataMap,\n  deadline,\n  toBeProcessed = DEFAULT_ROOT_DATA,\n  dev /*:: ?: boolean */,\n) => {\n  const _deadline = await checkDeadline(deadline, dev);\n  const schema = {};\n  for (const [key, value] of Object.entries(toBeProcessed)) {\n    if (value && value[0] === '@') {\n      const data = Array.from(dataMap.get(value) || []);\n      // we have data, add it\n      if (data.length) {\n        if (data.length === 1) {\n          // if one piece of data, pass the piece\n          schema[key] = await merger(dataMap, deadline, data[0]);\n        } else {\n          // if multiple data, pass as array\n          schema[key] = await Promise.all(\n            data.map((datum) => merger(dataMap, deadline, datum)),\n          );\n        }\n      } // else don't add\n    } else {\n      if (value !== null) schema[key] = value;\n    }\n  }\n  return schema;\n};\n\nexport default merger;\n","import { PureComponent } from 'react';\nimport T from 'prop-types';\n\nimport { schedule } from 'timing-functions';\n\nimport merger from './merger';\n\nlet manager;\n\nconst DEFAULT_MAX_DELAY = 1000;\n\n/*:: type Payload = {\n  subscriber: any,\n  data: any,\n  processData: any => Object,\n};*/\n\nexport class Manager {\n  /* ::\n    _node: Element\n    _maxDelay: number\n    _subscriptions: Map<any, boolean | string>\n    _dataMap: Map<string, Object>\n    _plannedRender: boolean\n  */\n  constructor({\n    maxDelay = DEFAULT_MAX_DELAY,\n    dev,\n    root,\n  } /*: {maxDelay: number, dev: ?boolean} */ = {}) {\n    // Skip if no document present\n    if (!document) return;\n    // Create container script node\n    this._node = document.createElement('script');\n    this._node.type = 'application/ld+json';\n    // Define instance values\n    this._maxDelay = maxDelay;\n    this._dev = dev;\n    this._rootData = root;\n    this._subscriptions = new Map();\n    this._dataMap = new Map();\n    this._plannedRender = false;\n    // Skip if document head not present\n    if (!document.head) return;\n    // Kick off render\n    this._planRender();\n    // expose instance to React component\n    // eslint-disable-next-line consistent-this\n    manager = this;\n  }\n\n  disconnect() {\n    this.parentNode.removeChild(this._node);\n    this._node = null;\n  }\n\n  _render(mergedData) {\n    if (!this._node) return;\n    // const stringified = JSON.stringify(mergedData, null, this._dev ? 2 : 0);\n    const stringified = JSON.stringify(mergedData, null, 2);\n    this._node.textContent = stringified;\n    // This should happen the first time it is rendered\n    if (!this._node.parentNode && document.head) {\n      // Add to the DOM\n      document.head.appendChild(this._node);\n    }\n    return stringified;\n  }\n\n  // eslint-disable-next-line complexity, max-statements\n  async _planRender() {\n    if (this._plannedRender) return;\n    this._plannedRender = true;\n    const deadline = await schedule(this._maxDelay);\n    if (this._dev) console.groupCollapsed('Schema.org rendering');\n    if (this._dev) console.time('schema.org rendering took');\n    if (this._dev) console.groupCollapsed('data maps');\n    if (this._dev) {\n      console.group('@@root');\n      console.log(this._rootData);\n      console.groupEnd();\n      for (const [id, values] of this._dataMap) {\n        console.group(id);\n        for (const value of values) console.log(value);\n        console.groupEnd();\n      }\n    }\n    if (this._dev) console.groupEnd();\n    if (this._dev) console.time('Schema.org merger');\n    const mergedData = await merger(\n      this._dataMap,\n      deadline,\n      this._rootData,\n      this._dev,\n    );\n    if (this._dev) console.timeEnd('Schema.org merger');\n    this._plannedRender = false;\n    if (this._dev) console.time('Schema.org stringify to DOM');\n    const stringified = this._render(mergedData);\n    if (this._dev) console.timeEnd('Schema.org stringify to DOM');\n    if (this._dev) console.group('Stringified schema');\n    if (this._dev) console.log(stringified);\n    if (this._dev) console.groupEnd();\n    if (this._dev) console.groupEnd();\n    if (this._dev) console.timeEnd('schema.org rendering took');\n  }\n\n  async _process(subscriptionPayload /*: Payload */) {\n    await schedule(this._maxDelay);\n    if (!this._subscriptions.has(subscriptionPayload.subscriber)) return;\n    const { ['@id']: id, ...processed } = subscriptionPayload.processData(\n      subscriptionPayload.data,\n    );\n    if (!id) throw new Error('no \"@id\" found');\n    const dataSet = this._dataMap.get(id) || new Set();\n    dataSet.add(processed);\n    this._dataMap.set(id, dataSet);\n    this._subscriptions.set(subscriptionPayload.subscriber, id);\n    this._planRender();\n  }\n\n  subscribe(subscriptionPayload /*: Payload */) {\n    this._subscriptions.set(subscriptionPayload.subscriber, true);\n    this._process(subscriptionPayload);\n  }\n\n  unsubscribe(subscriber) {\n    const id = this._subscriptions.get(subscriber);\n    this._subscriptions.delete(subscriber);\n    if (id) {\n      this._dataMap.delete(id);\n      this._planRender();\n    }\n  }\n}\nconst shallowEquals = (obj1, obj2) =>\n  Object.keys(obj1).every((key) => {\n    if (\n      obj1[key] !== null &&\n      typeof obj1[key] === 'object' &&\n      typeof obj2[key] === 'object'\n    )\n      return Object.keys(obj1[key]).every(\n        (k2) => obj1[key][k2] === obj2[key][k2],\n      );\n    return obj1[key] === obj2[key];\n  });\n/*:: type Props = {\n  data: any,\n  processData: function,\n  chidren: Node\n};*/\nexport default class SchemaOrgData extends PureComponent /*:: <Props> */ {\n  static propTypes = {\n    data: T.any,\n    processData: T.func.isRequired,\n    children: T.node,\n  };\n\n  static defaultProps = {\n    processData: (d) => d,\n  };\n\n  componentDidMount() {\n    if (!manager) return;\n    const { data, processData } = this.props;\n    manager.subscribe({ subscriber: this, data, processData });\n  }\n\n  componentDidUpdate({ data }) {\n    if (\n      data &&\n      data.data &&\n      this.props.data &&\n      this.props.data.data &&\n      !shallowEquals(data.data, this.props.data.data)\n    ) {\n      manager.unsubscribe(this);\n      manager.subscribe({\n        subscriber: this,\n        data: this.props.data,\n        processData: this.props.processData,\n      });\n    }\n  }\n\n  componentWillUnmount() {\n    if (!manager) return;\n    manager.unsubscribe(this);\n  }\n\n  render() {\n    const { children } = this.props;\n    return children || null;\n  }\n}\n"],"names":["DEFAULT_ROOT_DATA","mainEntityOfPage","checkDeadline","_ref","_asyncToGenerator","deadline","dev","_deadline","timeRemaining","console","log","schedule","_x","_x2","apply","arguments","merger","_ref2","dataMap","toBeProcessed","schema","key","value","Object","entries","data","Array","from","get","length","Promise","all","map","datum","_x3","_x4","_x5","_x6","manager","DEFAULT_MAX_DELAY","Manager","constructor","_temp","maxDelay","root","document","this","_node","createElement","type","_maxDelay","_dev","_rootData","_subscriptions","Map","_dataMap","_plannedRender","head","_planRender","disconnect","parentNode","removeChild","_render","mergedData","stringified","JSON","stringify","textContent","appendChild","_this","groupCollapsed","time","id","values","group","groupEnd","timeEnd","_process","subscriptionPayload","_this2","has","subscriber","_subscriptionPayload$","processData","processed","_objectWithoutPropertiesLoose","_excluded","Error","dataSet","Set","add","set","subscribe","unsubscribe","delete","SchemaOrgData","PureComponent","componentDidMount","props","componentDidUpdate","obj1","obj2","keys","every","k2","componentWillUnmount","render","children","propTypes","T","isRequired","defaultProps","d"],"sourceRoot":""}