{"version":3,"file":"js/5855.module.set-list.f08.js","mappings":"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","sources":["webpack://interpro7-client/./src/components/Set/SummaryCounterSet/index.tsx","webpack://interpro7-client/./src/components/Set/Card/index.tsx","webpack://interpro7-client/./src/components/Set/List/AllSetDownload/index.tsx","webpack://interpro7-client/./src/components/Set/List/index.tsx","webpack://interpro7-client/./src/components/SimpleCommonComponents/Card/CounterIcon/index.tsx","webpack://interpro7-client/./src/components/SimpleCommonComponents/Card/index.tsx","webpack://interpro7-client/./src/components/SimpleCommonComponents/Card/CounterIcon/styles.css?9f8e","webpack://interpro7-client/./src/components/SimpleCommonComponents/Card/styles.css?fb5f"],"sourcesContent":["import React from 'react';\nimport CounterIcon from 'components/SimpleCommonComponents/Card/CounterIcon';\n\ntype Props = {\n  entryDB: MemberDB | 'interpro';\n  setName: string;\n  setDB: string;\n  setAccession: string;\n  counters: MetadataCounters;\n};\n\nimport cssBinder from 'styles/cssBinder';\n\nimport cardStyle from 'components/SimpleCommonComponents/Card/CounterIcon/styles.css';\n\nconst css = cssBinder(cardStyle);\n\nconst SummaryCounterSets = ({\n  entryDB,\n  setDB,\n  setName,\n  setAccession,\n  counters,\n}: Props) => {\n  const { entries, proteins, taxa, structures, proteomes } = counters;\n\n  return (\n    <div className={css('card-counter-block')}>\n      <CounterIcon\n        endpoint=\"entry\"\n        count={\n          typeof entries === 'object' ? entries.total : (entries as number)\n        }\n        name={setName}\n        db={entryDB}\n        to={{\n          description: {\n            main: { key: 'set' },\n            set: {\n              db: setDB,\n              accession: setAccession,\n            },\n            entry: { isFilter: true, db: entryDB && 'all' },\n          },\n        }}\n      />\n      <CounterIcon\n        endpoint=\"protein\"\n        count={proteins as number}\n        name={setName}\n        to={{\n          description: {\n            main: { key: 'set' },\n            set: {\n              db: setDB,\n              accession: setAccession,\n            },\n            protein: { isFilter: true, db: 'UniProt' },\n          },\n        }}\n      />\n\n      <CounterIcon\n        endpoint=\"structure\"\n        count={structures as number}\n        name={setName}\n        to={{\n          description: {\n            main: { key: 'set' },\n            set: {\n              db: setDB,\n              accession: setAccession,\n            },\n            structure: { isFilter: true, db: 'PDB' },\n          },\n        }}\n      />\n      <CounterIcon\n        endpoint=\"taxonomy\"\n        count={taxa as number}\n        name={setName}\n        to={{\n          description: {\n            main: { key: 'set' },\n            set: {\n              db: setDB,\n              accession: setAccession,\n            },\n            taxonomy: { isFilter: true, db: 'uniprot' },\n          },\n        }}\n      />\n\n      <CounterIcon\n        endpoint=\"proteome\"\n        count={proteomes as number}\n        name={setName}\n        to={{\n          description: {\n            main: { key: 'set' },\n            set: {\n              db: setDB,\n              accession: setAccession,\n            },\n            proteome: { isFilter: true, db: 'uniprot' },\n          },\n        }}\n      />\n    </div>\n  );\n};\n\nexport default SummaryCounterSets;\n","import React from 'react';\n\nimport Link from 'components/generic/Link';\nimport Card from 'components/SimpleCommonComponents/Card';\nimport HighlightedText from 'components/SimpleCommonComponents/HighlightedText';\nimport SummaryCounterSet from '../SummaryCounterSet';\n\ntype Props = {\n  data: {\n    metadata: SetMetadata;\n    extra_fields?: {\n      counters: MetadataCounters;\n    };\n  };\n  search: string;\n  entryDB: MemberDB | 'interpro';\n};\nconst SetCard = ({ data, search, entryDB }: Props) => {\n  const name =\n    typeof data.metadata.name === 'string'\n      ? data.metadata.name\n      : data.metadata.name.name;\n  return (\n    <Card\n      title={\n        <Link\n          to={{\n            description: {\n              main: { key: 'set' },\n              set: {\n                db: data.metadata.source_database,\n                accession: `${data.metadata.accession}`,\n              },\n            },\n          }}\n        >\n          <HighlightedText text={name} textToHighlight={search} />\n        </Link>\n      }\n      footer={\n        <HighlightedText\n          text={data.metadata.accession || ''}\n          textToHighlight={search}\n        />\n      }\n    >\n      <SummaryCounterSet\n        entryDB={entryDB}\n        setName={name}\n        setDB={data.metadata.source_database}\n        setAccession={data.metadata.accession}\n        counters={\n          (data && data.extra_fields && data.extra_fields.counters) || {}\n        }\n      />\n    </Card>\n  );\n};\n\nexport default SetCard;\n","import React from 'react';\n\nimport File from 'components/File';\nimport { SupportedExtensions } from 'components/File/FileButton';\n\ntype AllSetDownloadProps = {\n  description: InterProDescription;\n  search: InterProLocationSearch;\n  count: number;\n  fileType: SupportedExtensions;\n  name?: string;\n};\n\nconst AllSetDownload = ({\n  description,\n  search,\n  count,\n  fileType,\n  name,\n}: AllSetDownloadProps) => (\n  <>\n    <File\n      fileType={fileType}\n      name={name || `sets.${fileType}`}\n      count={count}\n      customLocationDescription={description}\n      search={{ ...search, extra_fields: 'counters:entry-protein' }}\n      endpoint={'set'}\n    />\n  </>\n);\n\nexport default AllSetDownload;\n","import React from 'react';\n\nimport Link from 'components/generic/Link';\nimport MemberDBSelector from 'components/MemberDBSelector';\nimport Table, {\n  Column,\n  SearchBox,\n  PageSizeSelector,\n  Exporter,\n  Card,\n  HighlightToggler,\n} from 'components/Table';\nimport HighlightedText from 'components/SimpleCommonComponents/HighlightedText';\nimport SetCard from 'components/Set/Card';\nimport NumberComponent from 'components/NumberComponent';\n\nimport ExternalExportButton from 'components/Table/Exporter/ExternalExportButton';\n\nimport AllSetDownload from './AllSetDownload';\n\nimport loadable from 'higherOrder/loadable';\n\nimport {\n  schemaProcessDataTable,\n  schemaProcessDataTableRow,\n} from 'schema_org/processors';\n\nimport cssBinder from 'styles/cssBinder';\n\nimport pageStyle from 'pages/style.css';\nimport fonts from 'EBI-Icon-fonts/fonts.css';\nimport exporterStyle from 'components/Table/Exporter/style.css';\nimport filtersAndTable from 'components/FiltersPanel/filters-and-table.css';\n\nconst css = cssBinder(fonts, pageStyle, exporterStyle, filtersAndTable);\n\nimport descriptionToPath from 'utils/processDescription/descriptionToPath';\n\nconst SchemaOrgData = loadable({\n  loader: () => import(/* webpackChunkName: \"schemaOrg\" */ 'schema_org'),\n  loading: () => null,\n});\n\ntype Props = {\n  customLocation?: InterProLocation;\n};\n\ntype SetItem = { metadata: SetMetadata };\ninterface LoadedProps\n  extends Props,\n    LoadDataProps<PayloadList<SetItem>>,\n    LoadDataProps<RootAPIPayload, 'Base'> {}\n\nconst List = ({ data, isStale, customLocation, dataBase }: LoadedProps) => {\n  if (!data || !customLocation) return null;\n  const { payload, loading, ok, url, status } = data;\n  const { description, search } = customLocation;\n  let _payload = payload;\n  const {\n    set: { db: dbS },\n    entry: { db: dbE },\n  } = description;\n\n  const HTTP_OK = 200;\n  const notFound = !loading && status !== HTTP_OK;\n  const databases = dataBase?.payload?.databases;\n  const db = (dbE || dbS || '').toLowerCase();\n  const dbAll = { canonical: 'ALL', name: 'All', version: 'N/A' };\n  if (loading || notFound) {\n    _payload = {\n      results: [],\n      count: 0,\n      next: null,\n      previous: null,\n    };\n  }\n  return (\n    <div className={css('filters-and-table')}>\n      <nav>\n        <div className={css('browse-side-panel')}>\n          <div className={css('selector-container')}>\n            <MemberDBSelector\n              contentType=\"set\"\n              className=\"pp-left-side-db-selector\"\n            />\n          </div>\n          <hr style={{ paddingTop: '0.5rem' }} />\n        </div>\n      </nav>\n      <section>\n        {databases && (\n          <SchemaOrgData\n            data={{\n              data: {\n                db: db.toLowerCase() === 'all' ? dbAll : databases[db],\n              },\n              location: window.location,\n            }}\n            processData={schemaProcessDataTable}\n          />\n        )}\n\n        <Table<SetItem>\n          dataTable={_payload!.results}\n          contentType=\"set\"\n          loading={loading}\n          ok={ok}\n          status={status}\n          isStale={isStale}\n          actualSize={_payload!.count}\n          query={search}\n          notFound={notFound}\n          databases={databases}\n          nextAPICall={_payload!.next}\n          previousAPICall={_payload!.previous}\n          currentAPICall={url}\n        >\n          <Exporter>\n            <div className={css('menu-grid')}>\n              <AllSetDownload\n                name=\"json\"\n                description={description}\n                search={search}\n                count={_payload!.count}\n                fileType=\"json\"\n              />\n              <AllSetDownload\n                name=\"tsv\"\n                description={description}\n                search={search}\n                count={_payload!.count}\n                fileType=\"tsv\"\n              />\n              <ExternalExportButton type={'api'} url={url} />\n              <ExternalExportButton\n                search={search}\n                type={'scriptgen'}\n                subpath={descriptionToPath(description)}\n              />\n            </div>\n          </Exporter>\n          <PageSizeSelector />\n          <Card>\n            {(data: SetItem) => (\n              <SetCard\n                data={data}\n                search={search.search as string}\n                entryDB={dbE as MemberDB | 'interpro'}\n              />\n            )}\n          </Card>\n          <SearchBox loading={isStale}>Search entry sets</SearchBox>\n          <HighlightToggler />\n          <Column\n            dataKey=\"accession\"\n            isSortable={true}\n            // eslint-disable-next-line camelcase\n            renderer={(accession: string, row) => (\n              <Link\n                to={(customLocation) => ({\n                  ...customLocation,\n                  description: {\n                    main: { key: 'set' },\n                    set: {\n                      db: row.source_database,\n                      accession,\n                    },\n                  },\n                })}\n              >\n                <span className={css('acc-row')}>\n                  <SchemaOrgData\n                    data={{\n                      data: { row, endpoint: 'set' },\n                      location: window.location,\n                    }}\n                    processData={schemaProcessDataTableRow}\n                  />\n                  <HighlightedText\n                    text={accession}\n                    textToHighlight={search.search as string}\n                  />\n                </span>\n              </Link>\n            )}\n          >\n            Accession\n          </Column>\n          <Column\n            dataKey=\"name\"\n            renderer={(\n              name: string,\n              {\n                accession,\n                // eslint-disable-next-line camelcase\n                source_database: db,\n              } /*: {accession: string, source_database: string} */,\n            ) => (\n              <Link\n                to={(customLocation) => ({\n                  ...customLocation,\n                  description: {\n                    main: { key: 'set' },\n                    set: {\n                      db,\n                      accession,\n                    },\n                  },\n                })}\n              >\n                <HighlightedText\n                  text={name}\n                  textToHighlight={search.search as string}\n                />\n              </Link>\n            )}\n          >\n            Name\n          </Column>\n          <Column\n            dataKey=\"accession\"\n            defaultKey=\"entry-count\"\n            renderer={(\n              accession: string,\n              { source_database: sourceDB },\n              extra?: { counters?: { entries?: number | { total?: number } } },\n            ) => {\n              const count =\n                (typeof extra?.counters?.entries === 'number'\n                  ? extra.counters.entries\n                  : extra?.counters?.entries?.total) || '-';\n              return (\n                <Link\n                  to={(customLocation) => ({\n                    ...customLocation,\n                    description: {\n                      main: { key: 'set' },\n                      set: {\n                        db: sourceDB,\n                        accession,\n                      },\n                      entry: {\n                        isFilter: true,\n                        db: sourceDB,\n                      },\n                    },\n                  })}\n                >\n                  <NumberComponent loading={loading} abbr>\n                    {count}\n                  </NumberComponent>\n                </Link>\n              );\n            }}\n          >\n            Number of Entries\n          </Column>\n          <Column\n            dataKey=\"source_database\"\n            renderer={(\n              _accession: string,\n              { source_database: sourceDB }: SetMetadata,\n            ) => {\n              return <div>{databases?.[sourceDB]?.name}</div>;\n            }}\n          >\n            Source Database\n          </Column>\n        </Table>\n      </section>\n    </div>\n  );\n};\n\nexport default List;\n","import React from 'react';\n\nimport Tooltip from 'components/SimpleCommonComponents/Tooltip';\nimport Link from 'components/generic/Link';\nimport NumberComponent from 'components/NumberComponent';\nimport MemberSymbol from 'components/Entry/MemberSymbol';\n\nimport { toPlural } from 'utils/pages/toPlural';\n\nimport cssBinder from 'styles/cssBinder';\n\nimport local from './styles.css';\nimport fonts from 'EBI-Icon-fonts/fonts.css';\n\nconst css = cssBinder(local, fonts);\n\ntype Props = {\n  /** How many of this entity */\n  count: number;\n  /** One of the InterPro endpoints */\n  endpoint: Endpoint | 'domain architecture';\n  /** name of the entity */\n  name: string;\n  /** New location to add as link. If not added the ocon will appear disabled */\n  to?: InterProPartialLocation;\n  /** The database of the entity */\n  db?: MemberDB | 'interpro';\n  /**\n   * In case it is used to represent a signature of an entry.\n   * In this case the counter won't be showed as it will represent a single signature\n   * Currently iused in the EntryCard that are in the New entreies of the home page\n   * */\n  signature?: string;\n};\n\nconst icon: Record<Endpoint | 'domain architecture', string> = {\n  entry: 'icon-entries',\n  protein: 'icon-proteins',\n  proteome: 'icon-count-proteome',\n  taxonomy: 'icon-count-species',\n  structure: 'icon-structures',\n  set: 'icon-count-set',\n  'domain architecture': 'icon-count-ida',\n};\n\nconst CounterIcon = ({ count, endpoint, name, to, db, signature }: Props) => {\n  return (\n    <Tooltip\n      title={\n        signature\n          ? `${db} signature: ${signature}`\n          : `${count} ${toPlural(endpoint, count, true)} matching ${name}`\n      }\n      className={css('icon-link')}\n      style={{ display: 'flex' }}\n    >\n      <Link\n        to={to}\n        className={css(count ? null : 'ico-disabled')}\n        disabled={!count || !to}\n      >\n        <div\n          className={css(\n            'icon',\n            'icon-conceptual',\n            'icon-wrapper',\n            icon[endpoint],\n          )}\n        >\n          {endpoint === 'entry' && (\n            <div\n              style={{\n                // UGLY hack be better Gustavo\n                position: 'relative',\n                top: '7px',\n                left: '-2px',\n              }}\n            >\n              <MemberSymbol type={db || 'all'} className={css('md-small')} />\n            </div>\n          )}\n          {count !== 0 && <div className={css('icon-over-animation')} />}\n        </div>\n        {!signature && <NumberComponent abbr>{count}</NumberComponent>}\n      </Link>\n    </Tooltip>\n  );\n};\n\nexport default CounterIcon;\n","import React, { PropsWithChildren, ReactElement } from 'react';\n\nimport Link from 'components/generic/Link';\n\nimport cssBinder from 'styles/cssBinder';\n\nimport local from './styles.css';\nimport fonts from 'EBI-Icon-fonts/fonts.css';\n\nconst css = cssBinder(local, fonts);\n\ntype Props = PropsWithChildren<{\n  title?: ReactElement | string;\n  imageIconClass?: string;\n  imageComponent?: ReactElement;\n  subHeader?: ReactElement | string;\n  footer?: ReactElement | string;\n  linkForMore?: string;\n  labelForMore?: string;\n  className?: string;\n  compact?: boolean;\n}>;\n\nexport const Card = ({\n  title,\n  imageComponent,\n  imageIconClass,\n  subHeader,\n  footer,\n  linkForMore,\n  labelForMore,\n  compact = false,\n  className = '',\n  children,\n}: Props) => {\n  return (\n    <div className={css('new-card', className, { compact })}>\n      {(imageComponent || imageIconClass || title || subHeader) && (\n        <header>\n          {(imageComponent || imageIconClass) && (\n            <div\n              className={css('image', imageIconClass, {\n                icon: !!imageIconClass,\n              })}\n            >\n              {imageComponent}\n            </div>\n          )}\n          {title && <div className={css('title')}>{title}</div>}\n          {subHeader && <div className={css('subheader')}>{subHeader}</div>}\n        </header>\n      )}\n      <section className={css('content')}>{children}</section>\n      {(footer || linkForMore) && (\n        <>\n          <div className={css('footer')}>\n            {footer}\n            {linkForMore && (\n              <div className={css('card-more')}>\n                <Link href={linkForMore} target=\"_blank\" buttonType=\"tertiary\">\n                  <span\n                    className={css('icon', 'icon-common', 'icon-right')}\n                    data-icon=\"&#xf061;\"\n                  ></span>{' '}\n                  {labelForMore || 'See more'}\n                </Link>\n              </div>\n            )}{' '}\n          </div>\n        </>\n      )}\n    </div>\n  );\n};\nexport default Card;\n","// extracted by mini-css-extract-plugin\nexport default {\"icon-link\":\"CounterIcon_styles__icon-link___c3\",\"icon-over-animation\":\"CounterIcon_styles__icon-over-animation___ef\",\"icon-wrapper\":\"CounterIcon_styles__icon-wrapper___b8\",\"md-small\":\"CounterIcon_styles__md-small___a8\",\"mod-img-pos\":\"CounterIcon_styles__mod-img-pos___c0\",\"icon\":\"CounterIcon_styles__icon___e4\",\"icon-count-species\":\"CounterIcon_styles__icon-count-species___e0\",\"icon-count-ida\":\"CounterIcon_styles__icon-count-ida___ce\",\"icon-count-set\":\"CounterIcon_styles__icon-count-set___de\",\"icon-count-hmm\":\"CounterIcon_styles__icon-count-hmm___c7\",\"icon-count-proteome\":\"CounterIcon_styles__icon-count-proteome___ad\",\"card-counter-block\":\"CounterIcon_styles__card-counter-block___de\"};","// extracted by mini-css-extract-plugin\nexport default {\"new-card\":\"Card_styles__new-card___df\",\"image\":\"Card_styles__image___b8\",\"card-tag\":\"Card_styles__card-tag___bf\",\"icon\":\"Card_styles__icon___d1\",\"title\":\"Card_styles__title___fb\",\"subheader\":\"Card_styles__subheader___ca\",\"content\":\"Card_styles__content___f0\",\"footer\":\"Card_styles__footer___fe\",\"card-more\":\"Card_styles__card-more___c3\",\"button-more\":\"Card_styles__button-more___f8\",\"compact\":\"Card_styles__compact___e9\",\"tag-publi\":\"Card_styles__tag-publi___f0\",\"tag-tuto\":\"Card_styles__tag-tuto___b1\",\"tag-tool\":\"Card_styles__tag-tool___dd\",\"tag-focus\":\"Card_styles__tag-focus___e5\",\"tag-blog\":\"Card_styles__tag-blog___a7\",\"white-link\":\"Card_styles__white-link___a2\",\"card-info-author\":\"Card_styles__card-info-author___e9\",\"button\":\"Card_styles__button___ee\",\"hollow\":\"Card_styles__hollow___d5\",\"secondary\":\"Card_styles__secondary___d8\",\"margin-bottom-large\":\"Card_styles__margin-bottom-large___d8\"};"],"names":["css","cssBinder","cardStyle","_ref","entryDB","setDB","setName","setAccession","counters","entries","proteins","taxa","structures","proteomes","React","className","CounterIcon","endpoint","count","total","name","db","to","description","main","key","set","accession","entry","isFilter","protein","structure","taxonomy","proteome","data","search","metadata","Card","title","Link","source_database","HighlightedText","text","textToHighlight","footer","SummaryCounterSet","extra_fields","fileType","File","customLocationDescription","Object","assign","fonts","pageStyle","exporterStyle","filtersAndTable","SchemaOrgData","loadable","loader","loading","isStale","customLocation","dataBase","payload","ok","url","status","_payload","dbS","dbE","notFound","databases","_a","toLowerCase","results","next","previous","MemberDBSelector","contentType","style","paddingTop","canonical","version","location","window","processData","schemaProcessDataTable","Table","dataTable","actualSize","query","nextAPICall","previousAPICall","currentAPICall","Exporter","AllSetDownload","ExternalExportButton","type","subpath","descriptionToPath","PageSizeSelector","SetCard","SearchBox","HighlightToggler","Column","dataKey","isSortable","renderer","row","schemaProcessDataTableRow","_ref2","defaultKey","_ref3","extra","sourceDB","_c","_b","NumberComponent","abbr","_accession","_ref4","local","icon","signature","Tooltip","toPlural","display","disabled","position","top","left","MemberSymbol","imageComponent","imageIconClass","subHeader","linkForMore","labelForMore","compact","children","href","target","buttonType"],"sourceRoot":""}