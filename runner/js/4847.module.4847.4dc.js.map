{"version":3,"file":"js/4847.module.4847.4dc.js","mappings":"mOA0BMA,EAAqBC,IAAoD,IAAAC,EAAAC,GAAnD,KAAEC,EAAI,cAAEC,EAAa,SAAEC,GAAUL,EACrDM,EAAqB,MAAJH,GAAa,OAATF,EAAJE,EAAMI,UAAkB,OAAXN,EAAbA,EAAeO,YAAmB,OAAVP,EAAxBA,EAA0BQ,eAAQ,EAAlCR,EAAoCS,QACrDC,EAA4B,IAAIC,MAChC,MAAJT,GAAa,OAATD,EAAJC,EAAMI,UAAkB,OAAXL,EAAbA,EAAeM,YAAmB,OAAVN,EAAxBA,EAA0BO,eAAQ,EAAlCP,EAAoCW,cAAe,IAE9CC,EAAGC,IAAeX,GAAiB,IAAIY,MAAM,KAKpD,IAJAC,EAAAA,EAAAA,YAAU,KACJZ,GAAUA,EAASC,IAAmBS,EAAW,GACpD,CAACT,EAAgBS,EAAYV,KAE3BF,GAAQA,EAAKe,UAAYd,EAAe,OAAOe,EAAAA,cAACC,EAAAA,EAAO,CAACC,QAAQ,IAGrE,IACMC,EAAmBC,KAAKC,QAC3B,IAAIZ,MAAOa,UAAYd,EAA0Bc,WAFnC,OAIjB,OAAInB,IAAmBS,EAEnBI,EAAAA,cAACO,EAAAA,EAAO,CAACC,KAAK,QACZR,EAAAA,cAAA,UAAI,sBACJA,EAAAA,cAAA,SAAG,yBACqBA,EAAAA,cAAA,YAAOf,GAAqB,KAEpDe,EAAAA,cAAA,SAAG,oFAEYJ,EAAaI,EAAAA,cAAA,YAAOJ,GAAqB,KAAK,kFACW,IACtEI,EAAAA,cAAA,YAAOb,GAAsB,KAE9BgB,EA9CqB,EA+CpBH,EAAAA,cAAA,SACEA,EAAAA,cAAA,SAAG,SAAS,oBACKA,EAAAA,cAAA,YAAOb,GAAsB,wBAAsB,IACpEa,EAAAA,cAAA,SAAIR,EAA0BiB,sBAAyB,2KAKvD,MAIH,IAAI,EAEb7B,EAAmB8B,UAAY,CAC7B1B,KAAM2B,IAAAA,MAAQ,CACZZ,QAASY,IAAAA,KACTvB,QAASuB,IAAAA,SAEX1B,cAAe0B,IAAAA,OACfzB,SAAUyB,IAAAA,MAEZ,SAAeC,EAAAA,EAAAA,GAASC,EAAAA,GAAxB,CAAuCjC,E,oICjEjCkC,EAAkBjC,IAA2C,IAA1C,WAAEkC,EAAU,YAAEC,EAAW,SAAEC,GAAUpC,EACtDqC,GAASC,EAAAA,EAAAA,QAAO,MAgBtB,OAdArB,EAAAA,EAAAA,YAAU,KACK,IAAIsB,IAAJ,CAAgBF,EAAOG,QAAS,CAC3CC,KAAMA,IAAMP,IAEHQ,GAAG,WAAW,IACvBN,EACE,CACEO,MAAO,kBACPC,IAbE,KAeJ,cAEH,IAGDzB,EAAAA,cAAC0B,EAAAA,EAAO,CAACF,MAAOR,GACdhB,EAAAA,cAAC2B,EAAAA,EAAM,CAACnB,KAAK,SAASoB,IAAKV,EAAQW,KAAK,cAChC,EAGdf,EAAgBJ,UAAY,CAC1BK,WAAYJ,IAAAA,OACZK,YAAaL,IAAAA,OACbM,SAAUN,IAAAA,MAEZ,SAAemB,EAAAA,EAAAA,SAAQC,EAAW,CAAEd,SAAQA,EAAAA,IAA5C,CAAgDH,E,kDCrC1CkB,GAAIC,E,QAAAA,GCJV,CAAgB,OAAS,oCAAoC,eAAe,4CDQ5E,QAFuBC,IAAMlC,EAAAA,cAAA,OAAKmC,UAAWH,EAAE,SAAU,iB,mkBEazD,IAGMI,GAAkBC,EAAAA,EAAAA,KACrBC,GAAUA,IACVC,IAAQ,CAAQA,eAGbC,EAAWC,IAAG,CAClB1C,UAAW0C,EACXC,SAAU,EACVC,IAAI,EACJC,OAAQ,KACRxD,QAAS,KACTqD,QA4MF,QAzMkBI,IAChB,IAAM,OACJC,EAAM,aACNC,EAAY,cACZC,EAAa,OACbC,EAAM,gBACNC,EAAe,mBACfC,IACEC,EAAAA,EAAAA,GAAcP,GACZQ,GAAWC,EAAAA,EAAAA,GAASP,GAE1B,OAAQQ,IACN,MAAMC,UAAoBC,EAAAA,cAUxBC,WAAAA,CAAYC,GAAO,IAAAC,EACjBC,MAAMF,GAAMC,EAAAE,KAAA,KAkDdC,QAAU,KACJD,KAAKE,UAAUF,KAAKE,SAASC,SACjCH,KAAKH,MAAMO,mBAAmBJ,KAAKK,IAAI,EACxC,KAEDC,UAAa1B,IACXoB,KAAKO,UAASxF,IAAA,IAAC,KAAEG,GAAMH,EAAA,MAAM,CAAEG,KAAIsF,OAAAC,OAAA,GAAOvF,EAAM,CAAA0D,aAAY,IAC5DoB,KAAKH,MAAMa,iBAAiBV,KAAKK,IAAKzB,EAAUO,EAAO,EACxD,KAEDwB,MAAK,e,EAAAC,G,EAAG,UAAOjC,GACb,GAAKA,EAAL,CASAmB,EAAKD,MAAMa,iBAAiBZ,EAAKO,IAAK,EAAGlB,GACzCW,EAAKI,UAAWW,EAAAA,EAAAA,IAAYC,GAC1BvB,EACEZ,EAAG6B,OAAAC,OAAA,GACExB,EAAc,CAAA6B,WACnBhB,EAAKQ,UACLR,EAAKD,MAAM1C,YAIf,IAAM4D,EAAUjB,EAAKI,SACrB,IACE,IAAMc,QAAiBD,EAAQE,QAE/BC,KAAK,QAAS,OAAQ,CACpBC,eAAgB,OAChBC,eAAgBJ,EAASlC,OACzBuC,YAAa1C,EAEb2C,kBAAmBN,EAASO,QAAQC,IAAI,gBAAkB,EAAI,EAE9DC,YAAaT,EAASO,QAAQC,IAAI,UAAY,EAAI,IAGpD1B,EAAKS,UAASmB,IAAc,IAAb,KAAExG,GAAMwG,EACfC,EAAQnB,OAAAC,OAAA,GACTvF,EACA8F,EAAQ,CACXpC,SAAU,EACV3C,SAAS,IAEX,MAAO,CAAEf,KAAMyG,EAAUC,UAAWD,EAAU,IAGhD7B,EAAKD,MAAMa,iBAAiBZ,EAAKO,IAAK,EAAGlB,GAEzC,IAAM0C,EAjJL,IAkJC/B,EAAKD,MAAMpB,SAASqD,SAASC,WAAWC,eAnJpC,MAqJFhB,EAASlC,SACXgB,EAAKmC,UAAYC,YAAW,KAC1BC,QAAQC,IAAI,gCACZtC,EAAKS,SAAS,CAAE8B,QAASvC,EAAKtB,MAAM6D,QAAU,GAAI,GACjDR,GAEP,CAAE,MAAOS,GAGFvB,EAAQwB,WAGXrB,KAAK,QAAS,QAAS,CACrBC,eAAgB,OAChBqB,aAAc,OACdnB,YAAa1C,EAEb8D,aAAcC,OAAOC,UAAUC,OAAS,EAAI,IAE9C9C,EAAKS,UAASsC,IAAA,IAAC,KAAE3H,GAAM2H,EAAA,MAAM,CAC3B3H,KAAIsF,OAAAC,OAAA,GAAOvF,EAAM,CAAAe,SAAS,EAAO2C,SAAU,EAAGC,IAAI,EAAOyD,UAC1D,IAEDxC,EAAKD,MAAMa,iBAAiBZ,EAAKO,IAAK,EAAGlB,GAE7C,CAlEA,MANEW,EAAKS,SAAS,CACZqB,UAASpB,OAAAC,OAAA,GACJX,EAAKtB,MAAMtD,OAuEtB,E,+KAAC,gBAAA4H,GAAA,OAAAlC,EAAAmC,MAAA,KAAAC,UAAA,EA3EI,GAzDHhD,KAAKK,KAAM4C,EAAAA,EAAAA,GAAS,eAGpB,IAAMtE,EAAMK,EAAOa,EAAMpB,SAAUoB,GACnCG,KAAKxB,MAAQ,CACXG,IAAAA,EACAzD,KAAMwD,EAAQC,GACdiD,UAAW,KACXS,QAAS,EAEb,CAEA,+BAAOa,CAAyBC,EAAWC,GAEzC,IAAMzE,EAAMK,EAAOmE,EAAU1E,SAAU0E,GAEvC,OAAIC,EAAUzE,MAAQA,EAAY,KAE3B,CAAEzD,KAAMwD,EAAQC,GAAMA,MAC/B,CAEA0E,iBAAAA,GAEErD,KAAKW,MAAMX,KAAKxB,MAAMG,IACxB,CAEA2E,kBAAAA,CAAmBC,EAAWH,GAG1BA,EAAUzE,MAAQqB,KAAKxB,MAAMG,KAC7ByE,EAAUf,UAAYrC,KAAKxB,MAAM6D,UAGjCrC,KAAKC,UAELD,KAAKW,MAAMX,KAAKxB,MAAMG,KAE1B,CAGA6E,oBAAAA,GACExD,KAAKC,UACDD,KAAKiC,WACPwB,aAAazD,KAAKiC,UAEtB,CAyFAyB,MAAAA,GACE,IAAAC,EAOI3D,KAAKH,OAPH,SAIJpB,GAGDkF,EADIC,E,oIAAIC,CAAAF,EAAAG,GAEHC,EAAWvD,OAAAC,OAAA,GACZmD,EAAI,CACP,CAAC,OAAO1E,GAAkBc,KAAKxB,MAAMoD,WAAa5B,KAAKxB,MAAMtD,KAC7D,CAAC,UAAUgE,GAAkBc,KAAKxB,MAAMoD,YAAc5B,KAAKxB,MAAMtD,OASnE,OALE8E,KAAKxB,MAAMtD,OACV8E,KAAKxB,MAAMtD,KAAKe,SACjB+D,KAAKxB,MAAMtD,KAAKyD,MAAQqB,KAAKxB,MAAMG,MAEnCoF,EAAY,UAAU7E,IAAmB,GAEzChD,EAAAA,cAAC8H,EAAAA,EAAwB,CAACC,eAAgBxF,EAASwF,gBACjD/H,EAAAA,cAACuD,EAAOyE,EAAA,GACFH,EACC3E,EAAgBX,EAAUsF,IAAgB,CAAC,IAIxD,EAGF,OApLMrE,EACGyE,YAAc,aAAY1E,EAAQ0E,aAAe1E,EAAQ2E,MAAI,IADhE1E,EAGG9C,UAAY,CACjB8D,iBAAkB7D,IAAAA,KAAOwH,WACzBjE,mBAAoBvD,IAAAA,KAAOwH,WAC3BlH,SAAUN,IAAAA,KAAOwH,WACjB5F,SAAU5B,IAAAA,OAASwH,aA6KhBrG,EAAAA,EAAAA,IAAQM,EAAekC,OAAAC,OAAA,CAC5BC,iBAAgB,KAChBN,mBAAkB,KAClBjD,SAAQA,EAAAA,IACLkC,GAJErB,CAKJ0B,EAAY,CAChB,C,mCC1OH,QAAgBxB,GAAuBoG,IACrCA,EAAEC,iBACFD,EAAEE,kBACKtG,EAAEoG,G,kDCCLpG,GAAIuG,E,SAAAA,GCJV,CAAgB,UAAU,kCDyB1B,QAbkB1J,IAA2C,IAA1C,UAAE2J,EAAS,UAAEC,EAAS,MAAEjH,GAAc3C,EACvD,OACEmB,EAAAA,cAAA,WACa,KAAVwB,GAAgBgH,EAAYxI,EAAAA,cAAA,gBAAQwB,GAAS,YAAW,KAAY,KAC1D,WAAVA,EACCxB,EAAAA,cAAA,QAAMmC,UAAWH,EAAE,YAAU,IAAIyG,GAEjCA,EAEE,C,+IELJC,GAAMH,EAAAA,EAAAA,GAAUI,EAAAA,EAAOC,EAAAA,GAgI7B,SAAe9G,EAAAA,EAAAA,SAAQC,EAAW,CAChC8G,UAAS,KACTC,UAAS,KACTC,mBAAkB,KAClBC,eAAcA,EAAAA,IAJhB,EA5GuBnK,IAYX,IAZY,UACtB2J,EAAS,UACTS,EAAS,OACTrG,EAAM,QACNsG,EAAO,UACPJ,EAAS,mBACTC,EAAkB,eAClBC,EAAc,gBACdG,EAAe,WACfC,EAAU,SACVC,EAAQ,YACRC,GACMzK,EA+BN,OACEmB,EAAAA,cAAA,OAAKmC,UAAWuG,EAAI,UAAW,CAAEa,SAAUN,KACxCT,GAAa,YACdxI,EAAAA,cAAC0B,EAAAA,EAAO,CACNF,MACExB,EAAAA,cAAA,WACEA,EAAAA,cAAA,uBAAiB,mIAMrBA,EAAAA,cAAC2B,EAAAA,EAAM,CACLnB,KAAMyI,EAAY,SAAW,YAC7BpH,KAAK,aACL2H,QAzBcC,KACpBX,SAAAA,EAAY,CAAEY,SAAU,CAAER,aAC1BH,SAAAA,EAAqB,CACnBY,YAAa,CACXC,KAAM,CAAEC,IAAK,UACbC,OAAQ,CAAEtJ,KAAM,kBAElB,EAkB0B,aACX,mBAETyI,GAAajJ,EAAAA,cAAA,gCAGP,aAAX4C,GACC5C,EAAAA,cAAC0B,EAAAA,EAAO,CACNF,MACExB,EAAAA,cAAA,WACEA,EAAAA,cAAA,oCAA8B,kKAMlCA,EAAAA,cAAC2B,EAAAA,EAAM,CACLnB,KAAMyI,EAAY,SAAW,YAC7BpH,KAAK,YACL2H,QAASA,IAAMR,aAAc,EAAdA,EAAiBE,GAAQ,aAC7B,4BAETD,GAAajJ,EAAAA,cAAA,yCAIpBmJ,GACCnJ,EAAAA,cAAC0B,EAAAA,EAAO,CACNF,MACExB,EAAAA,cAAA,WACEA,EAAAA,cAAA,kCAA4B,mKAMhCA,EAAAA,cAAC2B,EAAAA,EAAM,CACLnB,KAAK,SACLqB,KAAK,eACL2H,QApFWO,KACnB,IAAMC,EAAiC,CAAC,GACpCZ,aAAU,EAAVA,EAAYa,gBACdD,EAAOC,aAC8B,iBAA5Bb,EAAWa,aACd,CAACb,EAAWa,cACZb,EAAWa,cAEnBlB,SAAAA,EAAqB,CACnBY,YAAa,CACXC,KAAM,CAAEC,IAAK,UACbG,OAAQ,CACNxJ,KAAM,WACN0J,QAASb,GAAY,IAAIc,MAAM,eAAiB,IAAIC,KAAK,QAG7DJ,UACA,EAmE2B,aACV,wBACXK,UAAU,6BAIff,GAA4B,KACzB,G,qYChIJZ,GAAMH,EAAAA,EAAAA,GAAUI,EAAAA,ECZtB,CAAgB,KAAO,mCDcjB2B,EAAQ,mCA+Bd,SAAexI,EAAAA,EAAAA,SAAQC,EAAW,CAAEwI,gBAAeA,EAAAA,IAAnD,EAzB6B7F,IAA+B,IAA9B,gBAAE6F,GAAwB7F,EAChD7F,GAAOsC,EAAAA,EAAAA,QAAwB,MAWrC,OACEnB,EAAAA,cAAC2B,EAAAA,EAAM,cAAa2I,EAAOd,QAXRgB,KACd3L,EAAKwC,UACNxC,EAAKwC,QAAQoJ,SACf5L,EAAKwC,QAAQoJ,QACX,CAAEC,UAAW,CAAC,YAAa,mBAC3B,CAAEC,SAAU,IAAKC,WAAY,IAGjCL,IAAiB,GAIfvK,EAAAA,cAAC0B,EAAAA,EAAO,CAACF,MAAO8I,GACdtK,EAAAA,cAAA,QACEmC,UAAWuG,EAAI,OAAQ,eAAc,YAC3B,IACV9G,IAAK/C,KAGF,I,8EEtCPgM,EAAYC,SAASC,eAAe,cAQpC/I,GAAIC,EAAAA,EAAAA,GAAkB+I,EAAAA,EAAeC,EAAAA,ECX3C,CAAgB,WAAW,6BAA6B,MAAQ,0BAA0B,cAAc,kCDalGC,EAAQrM,IAAmD,IAAlD,KAAEsM,GAAO,EAAK,SAAEC,EAAQ,WAAEC,EAAaC,EAAAA,GAAMzM,EAC1D,IAAKsM,EAAM,OAAO,KAElB,IAAMI,EACJvL,EAAAA,cAAAA,EAAAA,SAAA,KACEA,EAAAA,cAAA,OAAKmC,UAAWH,EAAE,cAClBhC,EAAAA,cAAA,OACEmC,UAAWH,EAAE,SACb,iBACA,kBAAgB,aAChBwJ,KAAK,UAEJJ,EACDpL,EAAAA,cAAA,UACEmC,UAAWH,EAAE,eACb,aAAW,QACXwH,QAAS6B,GACV,OAMP,OAAOI,EAAAA,EAAAA,cAAaF,EAAMV,EAAU,EAEtCK,EAAMxK,UAAY,CAChByK,KAAMxK,IAAAA,KACNyK,SAAUzK,IAAAA,IACV0K,WAAY1K,IAAAA,MAEd,UECA,GAAemB,EAAAA,EAAAA,SAAQC,EAAW,CAAE+G,UAASA,EAAAA,IAA7C,EA3BuBjK,IAAuD,IAAtD,KAAEsM,EAAI,WAAEE,EAAU,KAAEK,EAAI,KAAEC,EAAI,UAAE7C,GAAkBjK,EAOxE,OACEmB,EAAAA,cAACkL,EAAK,CAACC,KAAMA,EAAME,WAAYA,GAC7BrL,EAAAA,cAAA,MAAI4L,GAAG,cAAY,+BAClBF,GAAQA,EAAKG,OACZ7L,EAAAA,cAAAA,EAAAA,SAAA,KACEA,EAAAA,cAAA,gDACuC0L,EAAKG,OAAM,4CACzBF,EAAI,KAE7B3L,EAAAA,cAAA,OAAK8L,MAAO,CAAEC,UAAW,UACvB/L,EAAAA,cAAC2B,EAAAA,EAAM,CAAC6H,QAhBCwC,KACjB,IAAK,IAAMC,KAAOP,EAChB5C,EAAU,CAAEY,SAAU,CAAER,QAAS+C,EAAI/C,WAEvCmC,GAAY,GAYuB,YAI/BrL,EAAAA,cAAA,2CAAmC2L,EAAI,eAEnC,I,sECdZ,QAhBwB9M,IAA2B,IAA1B,YAAEqN,GAAoBrN,EAC7C,OAAKqN,EAP0BA,K,QAC/B,2BAA0C,QAApBC,EAAAD,aAAW,EAAXA,EAAaE,eAAO,IAAAD,OAAA,EAAAA,EAAG,KAAM,CAAC,IACpD,uBAA4C,QAApBE,EAAAH,aAAW,EAAXA,EAAaE,eAAO,IAAAC,OAAA,EAAAA,EAAG,KAAM,CAAC,EAAE,EAMpDC,CAAiBJ,GAEjBlM,EAAAA,cAACO,EAAAA,EAAO,CAACC,KAAK,OAAO+L,UAAQ,EAAC1K,KAAK,YACjC7B,EAAAA,cAAA,gCACAA,EAAAA,cAAA,4FAEcA,EAAAA,cAAA,wBAAkB,MAK/B,KAZkBA,EAAAA,cAACC,EAAAA,EAAO,CAACC,QAAQ,GAY/B,ECoFb,GAAe4B,EAAAA,EAAAA,SAAQC,EAAW,CAAEyK,kBAAiBA,EAAAA,IAArD,EApDyB3N,IAMb,IAnDK4N,GA6CS,KACxBtB,EAAI,WACJE,EAAU,YACVa,EAAW,SACXQ,EAAQ,kBACRF,GACM3N,EACF8N,EAA0C,KAiB9C,OAhBIT,GAnDiB,iBAFNO,EAqDYP,IAlDzB,YAAaO,GACb,yBAA0BA,IAkD1BE,EAAmBT,GAgBnBlM,EAAAA,cAACkL,EAAK,CAACC,KAAMA,EAAME,WAAYA,GAC7BrL,EAAAA,cAAA,MAAI4L,GAAG,cAAY,qBAClBe,EACC3M,EAAAA,cAAAA,EAAAA,SAAA,KACEA,EAAAA,cAAA,0BACgBA,EAAAA,cAAA,YAAO0M,IAEvB1M,EAAAA,cAAA,iDACwC,IACtCA,EAAAA,cAAA,SAAI2M,EAAiBP,QAAQP,OAAM,cAAe,8BACzCc,EAAiB,yBAE5B3M,EAAAA,cAACpB,EAAAA,EAAkB,CACjBK,cAAeiN,EAAY,0BAE7BlM,EAAAA,cAAC4M,EAAe,CAACV,YAAaS,IAC9B3M,EAAAA,cAAA,OAAK8L,MAAO,CAAEC,UAAW,UACvB/L,EAAAA,cAAC2B,EAAAA,EAAM,CAAC6H,QA/BQqD,KAhDPC,IACnBV,EACAW,EAEA9N,EACAgL,EAGMf,EAyCCyD,IAhDPP,EAmDIO,EAAiBP,QAlDrBW,EAkD4B,iBACPL,EACjB,KAlDJzN,EAmDI0N,EAAiB,wBAlDrB1C,EAmDI0C,EAAiB1C,aACjBuC,EAlCe,CACjB9C,SAfe,CACfR,QAFIA,GAAU0C,EAAAA,EAAAA,GAAG,YAAYnM,KAAKuN,OAGlCC,WA2CE,KA1CFzM,KAAM,eACNuM,WACAG,WAAYd,EAAQe,MAAMrD,IAAU,IAAAqC,EAAC,OAAe,QAAfA,EAAArC,aAAM,EAANA,EAAQsD,eAAO,IAAAjB,OAAA,EAAAA,EAAEN,QAAS,CAAC,IAChEwB,QAASjB,EAAQP,QAUjB7M,KAR2B,CAC3BkK,UACA,uBAAwBjK,EACxBmN,UACAnC,kBAsCAoB,IAAY,GAoB8B,QAItCrL,EAAAA,cAAA,uEAEI,I,eCvFN0I,GAAMH,EAAAA,EAAAA,GAAUI,EAAAA,EChBtB,CAAgB,gBAAgB,+CAA+C,eAAe,8CAA8C,SAAW,0CAA0C,mBAAmB,mDDgBhL2E,EAAAA,GAE9BhD,EAAQ,gBAiJd,SAAexI,EAAAA,EAAAA,SAAQC,EAAW,CAAEgH,mBAAkBA,EAAAA,IAAtD,EA5I2BlK,IAAkC,IAAjC,mBAAEkK,GAA2BlK,GAChD+M,EAAI2B,IAASC,EAAAA,EAAAA,UAAS,KACtBC,EAASC,IAAYF,EAAAA,EAAAA,WAAS,IAC9BG,EAAYC,IAAeJ,EAAAA,EAAAA,WAAS,IACpCK,EAAWC,IAAgBN,EAAAA,EAAAA,WAAS,IACpCtB,EAAa6B,IAAkBP,EAAAA,EAAAA,UAAkC,CAAC,IAClEd,EAAUsB,IAAeR,EAAAA,EAAAA,UAAwB,MAElDS,EAAeA,KACnBlF,EAAmB,CACjBY,YAAa,CACXC,KAAM,CAAEC,IAAK,UACbC,OAAQ,CACNtJ,KAAM,eACNyL,IAAKL,KAGT,EAqCEsC,EAAeC,IACnB,GAAKA,EAAL,CACAJ,EAAe,CAAC,GAChBC,EAAYG,EAAKjG,MACjB,IAAMkG,EAAK,IAAIC,WACfD,EAAGE,OAAS,KAhBUhN,KACtB,IACE,IAAMwI,EAASyE,KAAKC,MAAMlN,GAC1ByM,EAAejE,EACjB,CAAE,MAAAqC,GACA6B,EAAY,MACZ/H,QAAQG,MAAM,kCAChB,CACA0H,GAAa,EAAK,EAShBW,CAAeL,EAAGtE,OAAiB,EAErCsE,EAAGM,WAAWP,EAPG,CAOE,EAUfQ,GAAkBC,EAAAA,EAAAA,IAAW,IAAMhB,GAAY,KAE/CiB,GAAoBD,EAAAA,EAAAA,IAAW,IAAMhB,GAAY,KAEjDkB,GAAsBF,EAAAA,EAAAA,IAAWpJ,IAAgC,IAA/B,aAAEuJ,GAAyBvJ,EACjE,GAAKuJ,EAAL,CACA,IACEC,OAAQb,IACNY,EACJb,EAAYC,GACZP,GAAY,EALa,CAKP,IAGpB,OACE5N,EAAAA,cAAA,OACEmC,UAAWuG,EAAI,gBAAiB,CAAEuG,SAAUtB,IAC5CuB,OAAQJ,EACRK,OAAQR,EACRS,YAAaT,EACbU,UAAWR,EACXS,WAAYX,EACZY,YAAaZ,EACba,WAAYX,EACZY,YAAaZ,GAEb7O,EAAAA,cAAA,SAAOmC,UAAWuG,EAAI,gBAAiBgH,QAAQ,kBAAgB,WAG/D1P,EAAAA,cAAA,SACEkI,KAAK,iBACL1H,KAAK,OACLmP,YAAY,kBACZzF,MAAO0B,EACPgE,SArFgBC,IACpB,IAAM3F,EAAS2F,EAAMC,OAA4B5F,MACjD,KACE6F,EAAAA,EAAAA,GAAyB,CACvBnG,KAAM,CAAEC,IAAK,UACbC,OAAQ,CACNtJ,KAAM,eACNyL,IAAK/B,KAGTwD,GAAS,EACX,CAAE,MAAOtH,GACPsH,GAAS,EACX,CACAH,EAAMrD,EAAM,EAwER8F,QArEkBH,IACJ,UAAdA,EAAMhG,KACJ4D,GAASQ,GACf,IAoEEjO,EAAAA,cAAC2B,EAAAA,EAAM,CACLsO,UAAWxC,EAAO,aACHnD,EAAK,uBACpBd,QAASyE,EACTpM,KAAK,4BAGP7B,EAAAA,cAAA,sBACiBsK,EAAK,aACpBnI,UAAS,aAAeuG,EACtB,OACA,cACA,YACA,qBACA,iBACC,YACO,KAET,IACD1I,EAAAA,cAAA,SAAOQ,KAAK,OAAOoP,SA9DClL,IAEgB,I,GAFf,OACzBoL,GACoCpL,EACpCwJ,EAAwB,QAAZ/B,EAAA2D,EAAOd,aAAK,IAAA7C,OAAA,EAAAA,EAAG,IAC3B2D,EAAO5F,MAAQ,EAAE,EA0DmCgG,QAAM,EAACC,OAAO,WAEhEnQ,EAAAA,cAAA,OAAKmC,UAAWuG,EAAI,qBAAmB,uBACvC1I,EAAAA,cAACoQ,EAAgB,CACfjF,KAAM0C,EACN3B,YAAaA,EACbQ,SAAUA,GAAY,GACtBrB,WAAYA,IAAMyC,GAAa,KAE7B,I,iDEvHJpF,IAAMH,EAAAA,EAAAA,GAAUI,EAAAA,EAAOC,EAAAA,EAAOyH,GAAAA,GAE9BC,IAAgBC,EAAAA,EAAAA,GAAS,CAC7BC,OAAQA,IAAM,gCACdzQ,QAASA,IAAM,OAGJ0Q,GAAkBhI,IAC7B,IAAM,SAAEiI,EAAQ,SAAEC,EAAQ,KAAEC,EAAI,SAAEC,GAAaC,EAAAA,QAAOC,KAAKC,QAa3D,OAZYC,EAAAA,EAAAA,QAAO,CACjBP,WACAC,WACAC,OACAC,SACEA,GACAK,EAAAA,EAAAA,GAAkB,CAChBtH,KAAM,CAAEC,IAAK,UACbC,OAAQ,CAAEtJ,KAAM,eAAgBiI,gBAI5B,EAGN0I,GAAgBA,IACpBnR,EAAAA,cAACoR,EAAAA,EAAI,CACHC,GAAI,CACF1H,YAAa,CACXC,KAAM,CAAEC,IAAK,UACbG,OAAQ,CAAExJ,KAAM,cAGpB8Q,WAAW,WAAS,uBAmBlB,MAAOC,WAAqB9N,EAAAA,cAAlCC,WAAAA,GAAA,IAAAE,E,2BACE,KAAAtB,MAAe,CAAE6I,MAAM,EAAOqG,aAAc,GAAI7F,KAAM,MAEtD,KAAA8F,UAAY,SAAC9F,QAAA,IAAAA,IAAAA,EAAuB,QAClC,IAAM,KAAED,GAAS9H,EAAKD,MACtBC,EAAKS,SAAS,CACZ8G,MAAM,EACNQ,OACA6F,aAAc9F,EAAKgG,QAChBzF,GACW,SAATN,GAAkC,kBAAfM,EAAIrJ,QACd,WAAT+I,IAAsBM,EAAIc,UAAY,IAAI4E,WAAW,eAG9D,CAoOF,CAlOEnK,MAAAA,GACE,IAAM,KAAEkE,EAAI,OAAE1B,EAAM,gBAAE4H,GAAoB9N,KAAKH,MACzCkO,EAAO,CAAC,UAAW,aAAc,QAAS,WAC5CC,EAAgB,IAAIpG,IACxBqG,EAAAA,EAAAA,IAAiCD,EAAe9H,EAAQ6H,EAAM,CAC5D3I,QAASA,CAACA,EAAS8I,IAAQA,EAAKjF,UAAa7D,EAC7C+D,WAAYA,CAACA,EAAY+E,IACtB/E,IAAyB+E,aAAG,EAAHA,EAAKjF,YAAYiF,aAAG,EAAHA,EAAK9I,UAAW,GAC7D+I,MAAQA,IACN,IAAM,QAAEC,EAAO,UAAEC,EAAS,WAAEC,GAAeH,EAC3C,OAAO,IAAIxS,KACRyS,GAAWC,GAAaC,GACzBC,aAAa,IAGnBP,GAAgBQ,EAAAA,EAAAA,IAAaR,EAAe9H,EAAQ6H,EAAM,CACxD3I,QAASA,CAACA,EAAS8I,IAAQA,EAAKjF,UAAa7D,EAC7C+D,WAAYA,CAACA,EAAY+E,IACtB/E,IAAyB+E,aAAG,EAAHA,EAAKjF,YAAYiF,aAAG,EAAHA,EAAK9I,UAAW,GAC7D+I,MAAQA,IACN,IAAM,QAAEC,EAAO,UAAEC,EAAS,WAAEC,GAAeH,EAC3C,OAAOM,EAAAA,EAAAA,IAAW,IAAI9S,KAAKyS,GAAWC,GAAaC,GAAY,IAGnE,IAAMI,EAAWxI,EAAOyI,WAAab,EAKrC,OAJAE,EAAgBA,EAAcY,SAC1BC,OAAO3I,EAAO4I,OAAS,GAAK,GAAKD,OAAOH,GAC1CG,OAAOH,IAGPxS,EAAAA,cAAA,OAAKmC,UAAWuG,GAAI,aAClB1I,EAAAA,cAAA,MAAImC,UAAWuG,GAAI,UAAQ,mCACQ,IACjC1I,EAAAA,cAAC6S,EAAAA,EAAiB,CAACC,QAAQ,6CAE7B9S,EAAAA,cAAA,KAAGmC,UAAWuG,GAAI,SAAO,8OAMzB1I,EAAAA,cAAA,KAAGmC,UAAWuG,GAAI,SAAO,wJAKzB1I,EAAAA,cAACsQ,GAAa,CACZtR,KAAM,CACJkJ,KAAM,6BACNyB,YACE,yDAEJoJ,YAAaC,EAAAA,KAEfhT,EAAAA,cAAA,OAAKmC,UAAWuG,GAAI,eAClB1I,EAAAA,cAAA,OAAKmC,UAAWuG,GAAI,iBAClB1I,EAAAA,cAACmR,GAAa,MACdnR,EAAAA,cAACiT,EAAa,OAEhBjT,EAAAA,cAACkT,EAAkB,OAErBlT,EAAAA,cAACmT,EAAAA,GAAK,CACJC,UAAWtB,EACXuB,OAAO,UACPC,YAAY,SACZC,WAAY7H,EAAKG,OACjB2H,MAAOxJ,EACPyJ,eAAe,GAGfzT,EAAAA,cAAC0T,EAAAA,GAAY,KACX1T,EAAAA,cAAC2T,EAAAA,EAAc,CAACC,MAAM,YAAY/R,KAAK,cACrC7B,EAAAA,cAAA,UACEA,EAAAA,cAAA,UACEA,EAAAA,cAAC2B,EAAAA,EAAM,CAACnB,KAAK,SAASgJ,QAASA,IAAM1F,KAAK2N,UAAU,SAAO,qBAI7DzR,EAAAA,cAAA,UACEA,EAAAA,cAAC2B,EAAAA,EAAM,CACLnB,KAAK,SACLgJ,QAASA,IAAM1F,KAAK2N,UAAU,WAAS,2BAQjDzR,EAAAA,cAAC6T,EAAAA,GAAM,CACLC,QAAQ,aACRC,cAAc,EACdC,YAAY,EACZC,SAAUA,CAAChH,EAAoB+E,IAC7BhS,EAAAA,cAAAA,EAAAA,SAAA,KACEA,EAAAA,cAAA,QAAM8L,MAAO,CAAEoI,YAAa,QAC1BlU,EAAAA,cAACoR,EAAAA,EAAI,CACHC,GAAI,CACF1H,YAAa,CACXC,KAAM,CAAEC,IAAK,UACbC,OAAQ,CACNtJ,KAAM,eACNyL,IAAK+F,EAAIjF,UAAYiF,EAAI9I,aAKd,MAAf+D,EAAqB,KAAOA,IAC5B+E,EAAIjF,UACJiF,EAAI9I,UAGT8I,EAAIjF,WAAaiF,EAAIjF,SAAS4E,WAAW,aACxC3R,EAAAA,cAACc,EAAAA,EAAe,CACdC,WAAY0P,GAAeuB,EAAIjF,UAC/B/L,YAAY,eAInB,WAIHhB,EAAAA,cAAC6T,EAAAA,GAAM,CAACC,QAAQ,UAAUC,cAAc,EAAMC,YAAY,GAAI,aAG9DhU,EAAAA,cAAC6T,EAAAA,GAAM,CACLC,QAAQ,QACRC,cAAc,EACdC,YAAY,EACZC,SAAUpV,IAAiD,IAAhD,QAAEqT,EAAO,UAAEC,EAAS,WAAEC,GAAsBvT,EAC/CsV,EAAS,IAAI1U,KAAKyS,GAAWC,GAAaC,GAChD,OACEpS,EAAAA,cAAC0B,EAAAA,EAAO,CACNF,OACE0Q,EAAU,UAAY,YACxB,OAAOiC,EAAO1T,qBAAoB,OAAO0T,EAAOC,sBAEhDpU,EAAAA,cAACqU,EAAAA,EAAO,CAACC,KAAMH,EAAQI,SAAO,IACtB,GAEb,WAIHvU,EAAAA,cAAC6T,EAAAA,GAAM,CACLC,QAAQ,SACRU,gBAAiB9L,GAAI,uBACrB+L,cAAe/L,GAAI,gBACnBuL,SAAUA,CAACrR,EAAgBoP,IACzBhS,EAAAA,cAAC0B,EAAAA,EAAO,CAACF,MAAK,OAASoB,IACR,YAAXA,GACW,YAAXA,GACW,WAAXA,GACW,cAAXA,IACA5C,EAAAA,cAAA,WACEA,EAAAA,cAACkC,EAAAA,EAAc,MACflC,EAAAA,cAAA,yBAIQ,cAAX4C,GACU,WAAXA,GACW,YAAXA,GACW,UAAXA,EACE5C,EAAAA,cAAA,QACE8L,MAAO,CAAE4I,SAAU,QACnBvS,UAAWuG,GAAI,OAAQ,cAAe,gBAAe,YAC3C,IAAQ,aACP,4BAEX,KACH,CAAC,WAAY,gBAAiB,oBAAoBiM,SACjD/R,IAEA5C,EAAAA,cAACoR,EAAAA,EAAI,CACHC,GAAI,CACF1H,YAAa,CACXC,KAAM,CAAEC,IAAK,UACbC,OAAQ,CACNtJ,KAAM,eACNiI,UAAWuJ,EAAIjF,aAKrB/M,EAAAA,cAAA,QACE8L,MAAO,CAAE4I,SAAU,QACnBvS,UAAWuG,GACT,OACA,cACW,aAAX9F,EACI,gBACA,sBACL,YACS,IAAU,aACT,iBAKpB,UAIH5C,EAAAA,cAAC6T,EAAAA,GAAM,CACLC,QAAQ,UACRc,WAAW,UACXJ,gBAAiB9L,GAAI,uBACrB+L,cAAe/L,GAAI,eAAgB,WACnCuL,SAAUA,CAAC/K,EAAiB8I,IAC1BhS,EAAAA,cAAC6U,EAAAA,EAAO,CAAC3L,QAASA,EAASD,WAAW,EAAMrG,OAAQoP,EAAIpP,UACzD,WAKL5C,EAAAA,cAAC8U,EAAc,CACb3J,KAAMrH,KAAKxB,MAAM6I,KACjBE,WAAYA,IAAMvH,KAAKO,SAAS,CAAE8G,MAAM,IACxCO,KAAM5H,KAAKxB,MAAMkP,aACjB7F,KAAM7H,KAAKxB,MAAMqJ,OAIzB,EAGF,IAAMoJ,GAAUA,CAACC,EAAuBC,IAClCA,EAAElI,UAAYiI,EAAEjI,SAAiBkI,EAAElI,SAAWiI,EAAEjI,SAAW,GAAK,EAC7D,EAGHmI,IAAmB7S,EAAAA,EAAAA,KACtBC,GACCgC,OAAO6Q,OAAO7S,EAAMoJ,MAAQ,CAAC,GAC1B0J,KAAKC,GAAMA,EAAE3L,WACb4L,KAAKP,MACTzS,GAAuBA,EAAMyF,eAAeiC,SAC5C1H,GAAuBA,EAAMsD,SAASC,WAAW2M,WAClD,CAAC9G,EAAM1B,EAAQ4H,KAAoB,CACjClG,OACA1B,SACA4H,sBAIJ,UAAe9P,EAAAA,EAAAA,IAAQoT,GAAkB,CAAE3K,gBAAeA,EAAAA,IAA1D,CAA8DgH,G,sJCtVxD7I,GAAMH,EAAAA,EAAAA,GAAUgN,EAAAA,EAAS5M,EAAAA,EAAOmD,EAAAA,GAuFtC,SAAehK,EAAAA,EAAAA,SAAQC,EAAW,CAAEyT,uBAAsB,KAAEC,eAAcA,EAAAA,IAA1E,EA1EoB5W,IASR,IATS,KACnB2B,EAAI,UACJiI,EAAS,WACTwE,EAAU,QACV7N,EAAO,uBACPoW,EAAsB,eACtBC,EAAc,OACd7S,EAAM,SACN8S,GAAW,GACL7W,GACC2C,EAAOmU,IAAYnI,EAAAA,EAAAA,UAASP,GAAc,KAC1C2I,EAAUC,IAAerI,EAAAA,EAAAA,WAAS,GACnCsI,GAAgB3U,EAAAA,EAAAA,QAAyB,OAC/CrB,EAAAA,EAAAA,YAAU,K,MACR6V,EAAS1I,IAA8C,QAAhCd,EAAC/M,EAA2B2W,YAAI,IAAA5J,OAAA,EAAAA,EAAG,GAAGjE,OAAQ,GAAG,GACvE,CAAC9I,EAAS6N,IAEb,IAAM+I,EAAcA,KAClB,GAAKF,EAAczU,QAAnB,CACA,GAAIyU,EAAczU,QAAQ4U,SACxBH,EAAczU,QAAQ6U,aAEtB,GAAoC,KAAhCJ,EAAczU,QAAQ6I,MAAc,CACtC,IAAMA,EAAQ4L,EAAczU,QAAQ6I,MACvB,aAAT1J,IACDpB,EAA2B2W,KAAK,GAAG7N,KAAOgC,EAC3CsL,SAAAA,EAAyB/M,EAAWyB,IAEzB,QAAT1J,IACDpB,EAA2B6N,WAAa/C,EACzCuL,SAAAA,EAAiBhN,EAAWyB,IAE9ByL,EAASzL,EACX,CAEF2L,GAAaC,EAAczU,QAAQ4U,SAjBD,CAiBU,EAQ9C,OACEjW,EAAAA,cAAA,WAASmC,UAAWuG,EAAI,gBACtB1I,EAAAA,cAAA,uBACAA,EAAAA,cAAA,eACEA,EAAAA,cAAA,SACE4B,IAAKkU,EACL3T,UAAWuG,EAAI,SACfwB,MAAO1I,EACPyU,SAAUL,IAAaF,EACvB5J,MAAO,CAAEqK,MAAU/V,KAAKgW,IAAI5U,aAAK,EAALA,EAAOqK,OAAQ,IAAG,MAC9C+D,SAAWC,GAAU8F,EAAS9F,EAAMC,OAAO5F,OAC3CmM,cAAeA,IAAMR,GAAsBH,GAC3C1F,QAlBgBH,IACJ,UAAdA,EAAMhG,KACRmM,GACF,EAgBMrG,YAAY,MAEb+F,GACD,CAAC,WAAY,gBAAiB,oBAAoBf,SAChD/R,GAAU,IAEV5C,EAAAA,cAAC2B,EAAAA,EAAM,CACLnB,KAAK,SACLgJ,QAASwM,EACTnU,KAAM+T,EAAW,kBAAoB,YACrCpU,MAAOoU,EAAW,SAAW,SAE7B,MAEE,G,iHCvFRlN,GAAMH,EAAAA,EAAAA,GAAUI,EAAAA,EAAOmD,EAAAA,GAGvBwK,EAAiBzX,IAAA,IAAC,OAAE+D,GAAe/D,EAAA,OACvCmB,EAAAA,cAAC0B,EAAAA,EAAO,CAACF,MAAK,OAASoB,IACR,YAAXA,GACW,WAAXA,GACW,YAAXA,GACW,cAAXA,GACW,cAAXA,IACA5C,EAAAA,cAAAA,EAAAA,SAAA,KACEA,EAAAA,cAACkC,EAAAA,EAAc,MACflC,EAAAA,cAAA,OAAKmC,UAAWuG,EAAI,WAAS,cAIrB,cAAX9F,GAAqC,YAAXA,GAAmC,UAAXA,EACjD5C,EAAAA,cAAAA,EAAAA,SAAA,KACEA,EAAAA,cAAA,QACEmC,UAAWuG,EAAI,OAAQ,cAAe,gBAAe,YAC3C,IAAQ,aACP,4BACV,IACF9F,GAED,KACH,CAAC,WAAY,gBAAiB,oBAAoB+R,SACjD/R,GAAU,KAEV5C,EAAAA,cAAAA,EAAAA,SAAA,KACEA,EAAAA,cAAA,QACEmC,UAAWuG,EAAI,OAAQ,cAAe,iBAAgB,YAC5C,IAAU,aACT,iBACV,IACF9F,GAGG,EAGN2T,EAAgBvW,EAAAA,KAAWsW,GACjCC,EAActO,YAAc,gBAE5B,S,0JC7Ca8J,EAAe,SAC1ByE,EACAxM,EACA6H,EACA4E,QAAA,IAAAA,IAAAA,EAAmE,CAAC,GAAC,IAAAC,EAAA,SAAA7M,GAGnE,IAAM8M,EAAMF,EAAe5M,IAAQ,CAAE+M,GAAC,GAAQA,IAC1C5M,aAAM,EAANA,EAAQ6M,WAAYhN,GACtB2M,EAAOlB,MAAK,CAACN,EAAGC,IAAO0B,EAAI3B,EAAEnL,IAAQ8M,EAAI1B,EAAEpL,IAAQ,GAAK,KAEtDG,aAAM,EAANA,EAAQ6M,WAAO,IAAShN,GAC1B2M,EAAOlB,MAAK,CAACN,EAAGC,IAAO0B,EAAI3B,EAAEnL,IAAQ8M,EAAI1B,EAAEpL,KAAS,EAAI,GAE5D,EARA,IAAK,IAAMA,KAAOgI,EAAI6E,EAAA7M,EASxB,EAEayI,EAAe,SAC1BkE,EACAxM,EACA6H,EACA4E,QAAA,IAAAA,IAAAA,EAAmE,CAAC,GAEpE,IAAIK,EAAiB,IAAIN,GAAQO,EAAA,SAAAlN,GAE/B,GAAIG,aAAM,EAANA,EAASH,GAAM,CACjB,IAAM8M,EACJF,EAAe5M,IAAQ,CAAE+M,GAAMrI,KAAKyI,UAAUJ,GAAGK,eACnDH,EAAiBA,EAAepF,QAC7BM,IAGwD,IAFvDkF,OAAOP,EAAI3E,EAAInI,GAAMmI,IAClBiF,cACAE,QAASnN,EAAOH,GAAgBoN,gBAEzC,CACF,EAXA,IAAK,IAAMpN,KAAOgI,EAAIkF,EAAAlN,GAYtB,OAAOiN,CACT,EAEM5T,GAAkBb,EAAAA,EAAAA,KACrBC,GAAuBA,EAAMyF,eAAeiC,SAC5C1H,GAAuBA,EAAMsD,SAASC,WAAW2M,WAClD,CAACxI,EAAQwI,KAAa,CAAGxI,SAAQwI,eAG7B4E,GAAYtV,EAAAA,EAAAA,IAAQoB,GAsBbmU,EAAmBxY,IAWR,IAXkD,KACxEG,EAAI,UACJsY,EAAY,CAAC,EAAC,eACdb,EAAiB,CAAC,EAAC,YACnBc,EAAc,CAAC,EAAC,UAChBC,EAAY,CAAC,EAAC,cACdC,EAAgB,CAAC,EAAC,gBAClBjD,EAAkB,CAAC,EAAC,cACpBC,EAAgB,CAAC,EAAC,OAClBzK,EAAM,SACNwI,GACkB3T,EACZgT,EAAOvN,OAAOuN,MAAK7S,aAAI,EAAJA,EAAO,KAAM,CAAC,GACnCwX,EAASxX,EACbwX,EAASlE,EAAakE,EAAQxM,EAAQ6H,GACtCE,EAAayE,EAAQxM,EAAQ6H,EAAM4E,GACnC,IAAMiB,EAAO/E,OAAO3I,aAAM,EAANA,EAAQyI,YAAcD,GAAY,GAChDI,EAAOD,OAAO3I,aAAM,EAANA,EAAQ4I,OAAS,EAErC,OADA4D,EAASA,EAAOmB,OAAO/E,EAAO,GAAK8E,EAAM9E,EAAO8E,GAE9C1X,EAAAA,cAACmT,EAAAA,GAAK,CAACI,WAAYvU,EAAK6M,OAAQuH,UAAWoD,EAAQhD,MAAOxJ,GACxDhK,EAAAA,cAAC4X,EAAAA,GAAgB,MAChB/F,EAAKuD,KAAKvL,GACT7J,EAAAA,cAAC6T,EAAAA,GAAM,CACLhK,IAAKA,EACLiK,QAASjK,EACToK,SAAUqD,EAAUzN,IAAQ,CAAEgO,GAAMA,GACpC9D,cAAc,EACdC,YAAY,EACZuD,YAAWjT,OAAAC,OAAAD,OAAAC,OAAA,GACLgT,EAAY,MAAQ,CAAC,GACrBA,EAAY1N,IAAQ,CAAC,GAE3B2N,UAASlT,OAAAC,OAAAD,OAAAC,OAAA,GACHiT,EAAU,MAAQ,CAAC,GACnBA,EAAU3N,IAAQ,CAAC,GAEzB2K,iBAAoBA,EAAgB,MAAQ,IAAE,KAC5CA,EAAgB3K,IAAQ,IAE1B4K,eAAkBA,EAAc,MAAQ,IAAE,KACxCA,EAAc5K,IAAQ,KAGvB4N,EAAc5N,IAAQA,KAGrB,EAcZ,QARElG,IAEA,IAAMmU,EAAiBV,EACrBC,GAEF,OAAOrX,EAAAA,cAAC8X,EAAcxT,OAAAC,OAAA,GAAKZ,GAAS,C,gaCrHtC,MAAM0Q,UAAgB5Q,EAAAA,cAIpBC,WAAAA,CAAYC,GACVE,MAAMF,GAHRoU,EAAAC,IAAA,KAAS,GAIPlU,KAAKjF,KAAOmB,EAAAA,WACd,CAEMmH,iBAAAA,G,qCACJ,IAAIrD,KAAKH,MAAMsU,SAIf,UAHMC,EAAAA,EAAAA,IAAMpU,KAAKqU,cACXC,EAAAA,EAAAA,MAECtU,KAAKjF,KAAKwC,SAEfyC,KAAKjF,KAAKwC,QAAQgX,aAAcpH,EAAAA,EAAAA,IAAOnN,KAAKH,MAAM2Q,YAC5C4D,EAAAA,EAAAA,IAAMpU,KAAKqU,cACXC,EAAAA,EAAAA,KAEV,E,+RAGA,UAAID,GAEF,O,+VADAG,CAAAxU,KAAIiU,GAAWQ,EAAAzU,KAAIiU,EAAA,MAAW,GCvClC,SACEpM,EACA0F,EACAmH,QAFK,IAAL7M,IAAAA,EAAqB,QAClB,IAAH0F,IAAAA,EAAmB,GAGnB,IAAMnH,EAAQ9J,KAAKqY,UAAYpH,EAAK1F,GAAQA,EAC5C,OAAgCzB,CAEjC,CD+BsCuO,CAAO,EAjC3B,KAiCyC,KACjDF,EAAAzU,KAAIiU,EAAA,IACb,CAEAvQ,MAAAA,GACE,IACIkR,GADE,KAAEpE,EAAI,MAAE9S,EAAK,QAAE+S,GAAYzQ,KAAKH,MAKtC,OAHK4Q,IACHmE,EAASlX,IAASmX,EAAAA,EAAAA,IAAgBrE,IAGlCtU,EAAAA,cAAA,QAAM4Y,UAAUC,EAAAA,EAAAA,IAAmBvE,GAAO9S,MAAOkX,EAAQ9W,IAAKkC,KAAKjF,OAChEoS,EAAAA,EAAAA,IAAOqD,GAGd,E,cAGF,S,+DEzDA,IAAMwE,EAAa,CACjB,UACA,WACA,QACA,QACA,MACA,OACA,OACA,SACA,YACA,UACA,WACA,YAiBWC,EAAiBzE,IAC5B,IAAMuD,EAAI,IAAIpY,KAAK6U,GACnB,MAhBmBuD,KACnB,GAAIA,EAAI,GAAKA,EAAI,GAAI,OAAUA,EAAC,KAChC,OAAQA,EAAI,IACV,KAAK,EACH,OAAUA,EAAC,KACb,KAAK,EACH,OAAUA,EAAC,KACb,KAAK,EACH,OAAUA,EAAC,KACb,QACE,OAAUA,EAAC,KACf,EAKUmB,CAAYnB,EAAEoB,WAAU,IAChCH,EAAWjB,EAAEqB,YACf,IAAIrB,EAAEsB,aAAa,EAGRC,EAAkBvB,GAC1BA,EAAEoB,UAAS,IAAIH,EAAWjB,EAAEqB,YAAW,IAAIrB,EAAEsB,cAErCR,EAAmBd,IAC1BA,EAAEoB,UAAY,GAAK,IAAM,IAAMpB,EAAEoB,UAAS,KAC3CpB,EAAEqB,WAAa,EAAI,GAAK,IAAM,KAAOrB,EAAEqB,WAAa,GACvD,IAAIrB,EAAEsB,cAEKN,EAAsBhB,IAC7BA,EAAEoB,UAAY,GAAK,IAAM,IAAMpB,EAAEoB,UAAS,KAC3CpB,EAAEqB,WAAa,EAAI,GAAK,IAAM,KAAOrB,EAAEqB,WAAa,GACvD,IAAIrB,EAAEsB,cAAa,KAAKtB,EAAEwB,WAAa,GAAK,IAAM,IAAMxB,EAAEwB,WAAU,KACjExB,EAAEyB,aAAe,GAAK,IAAM,IAAMzB,EAAEyB,aACvC,KAAKzB,EAAE0B,aAAe,GAAK,IAAM,IAAM1B,EAAE0B,Y,mCCjD3C,SAAgB,OAAS,6BAA6B,QAAU,8BAA8B,SAAW,+BAA+B,MAAQ,4BAA4B,KAAO,2BAA2B,kBAAkB,sC,mCCAhO,SAAgB,aAAa,gCAAgC,eAAe,kCAAkC,KAAO,0B,mCCArH,SAAgB,MAAQ,4BAA4B,OAAS,6B,kCCA7D,SAAgB,cAAc,mCAAmC,eAAe,oC,mCCAhF,SAAgB,MAAQ,oCAAoC,QAAU,sCAAsC,OAAS,qCAAqC,QAAU,sCAAsC,KAAO,mCAAmC,OAAS,qCAAqC,IAAM,kCAAkC,SAAW,uCAAuC,QAAU,sCAAsC,iBAAiB,6CAA6C,gBAAgB,4CAA4C,cAAc,0C","sources":["webpack://interpro7-client/./src/components/IPScan/IPScanVersionCheck/index.js","webpack://interpro7-client/./src/components/SimpleCommonComponents/CopyToClipboard/index.js","webpack://interpro7-client/./src/components/SimpleCommonComponents/Loading/spinningCircle/index.js","webpack://interpro7-client/./src/components/SimpleCommonComponents/Loading/spinningCircle/style.css?c349","webpack://interpro7-client/./src/higherOrder/loadData/index.js","webpack://interpro7-client/./src/utils/block-event/index.js","webpack://interpro7-client/./src/components/Accession/index.tsx","webpack://interpro7-client/./src/components/Accession/style.css?1419","webpack://interpro7-client/./src/components/IPScan/Actions/index.tsx","webpack://interpro7-client/./src/components/IPScan/RefreshButton/index.tsx","webpack://interpro7-client/./src/components/IPScan/RefreshButton/style.css?4936","webpack://interpro7-client/./src/components/SimpleCommonComponents/Modal/index.js","webpack://interpro7-client/./src/components/SimpleCommonComponents/Modal/style.css?0792","webpack://interpro7-client/./src/components/IPScan/ClearAllDialog/index.tsx","webpack://interpro7-client/./src/components/IPScan/NucleotideCheck/index.tsx","webpack://interpro7-client/./src/components/IPScan/ImportResultSearch/LoadedFileDialog/index.tsx","webpack://interpro7-client/./src/components/IPScan/ImportResultSearch/index.tsx","webpack://interpro7-client/./src/components/IPScan/ImportResultSearch/style.css?79c6","webpack://interpro7-client/./src/components/IPScan/Status/index.tsx","webpack://interpro7-client/./src/components/IPScan/Summary/IPScanTitle/index.tsx","webpack://interpro7-client/./src/components/IPScan/Summary/StatusTooltip/index.tsx","webpack://interpro7-client/./src/components/Table/FullyLoadedTable/index.tsx","webpack://interpro7-client/./src/components/TimeAgo/index.tsx","webpack://interpro7-client/./src/utils/random/index.js","webpack://interpro7-client/./src/utils/date/index.ts","webpack://interpro7-client/./src/components/IPScan/Actions/style.css?91f2","webpack://interpro7-client/./src/components/IPScan/Status/style.css?f235","webpack://interpro7-client/./src/components/IPScan/Summary/style.css?e826","webpack://interpro7-client/./src/styles/summary.css?f42a","webpack://interpro7-client/./src/styles/theme-interpro.css?9472"],"sourcesContent":["// @flow\nimport React, { useEffect } from 'react';\nimport T from 'prop-types';\n\nimport loadData from 'higherOrder/loadData';\nimport { getUrlForMeta } from 'higherOrder/loadData/defaults';\nimport Loading from 'components/SimpleCommonComponents/Loading';\n// $FlowFixMe\nimport Callout from 'components/SimpleCommonComponents/Callout';\n\nconst DAYS_TO_UPDATE_IPSCAN = 5;\n/*::\n  type Props = {\n    data?: {\n      loading:Boolean,\n      payload: ?{databases: {\n        [string]: {\n          [string]: any,\n        }\n      }}\n    },\n    ipScanVersion?: string,\n    callback: boolean => void\n  }\n*/\n\nconst IPScanVersionCheck = ({ data, ipScanVersion, callback } /*: Props */) => {\n  const currentVersion = data?.payload?.databases?.interpro?.version;\n  const currentVersionReleaseDate = new Date(\n    data?.payload?.databases?.interpro?.releaseDate || 0,\n  );\n  const [_, jobVersion] = (ipScanVersion || '').split('-');\n  useEffect(() => {\n    if (callback) callback(currentVersion !== jobVersion);\n  }, [currentVersion, jobVersion, callback]);\n\n  if (!data || data.loading || !ipScanVersion) return <Loading inline={true} />;\n\n  // eslint-disable-next-line no-magic-numbers\n  const msPerDay = 24 * 60 * 60 * 1000; // Number of milliseconds per day\n  const daysSinceRelease = Math.round(\n    (new Date().getTime() - currentVersionReleaseDate.getTime()) / msPerDay,\n  );\n  if (currentVersion !== jobVersion) {\n    return (\n      <Callout type=\"info\">\n        <h4>Mismatched Version</h4>\n        <p>\n          InterProScan version: <code>{ipScanVersion}</code>.\n        </p>\n        <p>\n          Some links might not work as the results are from a previous release\n          of InterPro {jobVersion ? <code>{jobVersion}</code> : null} and some\n          of the data might have been deleted or changed in the current version{' '}\n          <code>{currentVersion}</code>.\n        </p>\n        {daysSinceRelease < DAYS_TO_UPDATE_IPSCAN ? (\n          <p>\n            <b>Note:</b>\n            InterPro version <code>{currentVersion}</code> has been released on{' '}\n            <i>{currentVersionReleaseDate.toLocaleDateString()}</i>. We are\n            still in the process of updating the InterProScan web service which\n            might take up to 5 days. This might explain version mismatches of\n            recently submitted jobs.\n          </p>\n        ) : null}\n      </Callout>\n    );\n  }\n  return null;\n};\nIPScanVersionCheck.propTypes = {\n  data: T.shape({\n    loading: T.bool,\n    payload: T.object,\n  }),\n  ipScanVersion: T.string,\n  callback: T.func,\n};\nexport default loadData(getUrlForMeta)(IPScanVersionCheck);\n","import React, { useRef, useEffect } from 'react';\nimport T from 'prop-types';\nimport { connect } from 'react-redux';\n\nimport ClipboardJS from 'clipboard';\n// $FlowFixMe\nimport Tooltip from 'components/SimpleCommonComponents/Tooltip';\nimport { addToast } from 'actions/creators';\n\n// $FlowFixMe\nimport Button from 'components/SimpleCommonComponents/Button';\n\nconst TTL = 1000;\n\nconst CopyToClipboard = ({ textToCopy, tooltipText, addToast }) => {\n  const button = useRef(null);\n  let _clipboard = null;\n  useEffect(() => {\n    _clipboard = new ClipboardJS(button.current, {\n      text: () => textToCopy,\n    });\n    _clipboard.on('success', () =>\n      addToast(\n        {\n          title: 'Copy successful',\n          ttl: TTL,\n        },\n        'clipboard',\n      ),\n    );\n  });\n  return (\n    <Tooltip title={tooltipText}>\n      <Button type=\"inline\" ref={button} icon=\"icon-copy\" />\n    </Tooltip>\n  );\n};\nCopyToClipboard.propTypes = {\n  textToCopy: T.string,\n  tooltipText: T.string,\n  addToast: T.func,\n};\nexport default connect(undefined, { addToast })(CopyToClipboard);\n","// @flow\nimport React from 'react';\nimport { foundationPartial } from 'styles/foundation';\nimport style from './style.css';\n\nconst f = foundationPartial(style);\n\nconst SpinningCircle = () => <div className={f('loader', 'awesome-spin')} />;\n\nexport default SpinningCircle;\n","// extracted by mini-css-extract-plugin\nexport default {\"loader\":\"spinningCircle_style__loader___cf\",\"awesome-spin\":\"spinningCircle_style__awesome-spin___f9\"};","/* global gtag: false */\n\nimport React, { PureComponent } from 'react';\nimport T from 'prop-types';\nimport { connect } from 'react-redux';\nimport { createSelector } from 'reselect';\n\nimport uniqueId from 'utils/cheap-unique-id';\nimport cancelable from 'utils/cancelable';\nimport {\n  dataProgressInfo,\n  dataProgressUnload,\n  addToast,\n} from 'actions/creators';\n\nimport extractParams from './extract-params';\nimport getFetch from './getFetch';\n\nimport { UnconnectedErrorBoundary } from 'wrappers/ErrorBoundary';\n\nconst TIMEOUT = 408;\nconst MS = 1000;\n\nconst mapStateToState = createSelector(\n  (state) => state,\n  (appState) => ({ appState }),\n);\n\nconst newData = (url) => ({\n  loading: !!url,\n  progress: 0,\n  ok: true,\n  status: null,\n  payload: null,\n  url,\n});\n\nconst loadData = (params) => {\n  const {\n    getUrl,\n    fetchOptions,\n    propNamespace,\n    weight,\n    mapStateToProps,\n    mapDispatchToProps,\n  } = extractParams(params);\n  const fetchFun = getFetch(fetchOptions);\n\n  return (Wrapped) => {\n    class DataWrapper extends PureComponent {\n      static displayName = `loadData(${Wrapped.displayName || Wrapped.name})`;\n\n      static propTypes = {\n        dataProgressInfo: T.func.isRequired,\n        dataProgressUnload: T.func.isRequired,\n        addToast: T.func.isRequired,\n        appState: T.object.isRequired,\n      };\n\n      constructor(props) {\n        super(props);\n\n        // Identify this specific data loader\n        this._id = uniqueId('data-loader');\n\n        // Initialize state\n        const url = getUrl(props.appState, props);\n        this.state = {\n          url,\n          data: newData(url),\n          staleData: null,\n          retries: 0,\n        };\n      }\n\n      static getDerivedStateFromProps(nextProps, prevState) {\n        // get potential new url in state according to props\n        const url = getUrl(nextProps.appState, nextProps);\n        // if it's the same, don't update the state\n        if (prevState.url === url) return null;\n        // otherwise, update url in state, and create new data object in state\n        return { data: newData(url), url };\n      }\n\n      componentDidMount() {\n        // start loading data on mount\n        this._load(this.state.url);\n      }\n\n      componentDidUpdate(prevProps, prevState) {\n        // if the url has changed\n        if (\n          prevState.url !== this.state.url ||\n          prevState.retries !== this.state.retries\n        ) {\n          // cancel current request\n          this._cancel();\n          // and start new one\n          this._load(this.state.url);\n        }\n      }\n\n      // cancel current request on unmount\n      componentWillUnmount() {\n        this._cancel();\n        if (this.timeoutID) {\n          clearTimeout(this.timeoutID);\n        }\n      }\n\n      _cancel = () => {\n        if (this._request) this._request.cancel();\n        this.props.dataProgressUnload(this._id);\n      };\n\n      _progress = (progress /*: number */) => {\n        this.setState(({ data }) => ({ data: { ...data, progress } }));\n        this.props.dataProgressInfo(this._id, progress, weight);\n      };\n\n      _load = async (url /*: ?string */) => {\n        if (!url) {\n          this.setState({\n            staleData: {\n              ...this.state.data,\n            },\n          });\n          return;\n        }\n        // Progress: 0\n        this.props.dataProgressInfo(this._id, 0, weight);\n        this._request = cancelable((signal) =>\n          fetchFun(\n            url,\n            { ...fetchOptions, signal },\n            this._progress,\n            this.props.addToast,\n          ),\n        );\n        // We keep a hold on *this* request, because it might change\n        const request = this._request;\n        try {\n          const response = await request.promise;\n          // Analytics\n          gtag('event', 'data', {\n            event_category: 'data',\n            event_response: response.status,\n            event_label: url,\n            // Custom Metric in google analytics as metrics1: From Client Cache\n            event_clientcache: response.headers.has('Client-Cache') ? 1 : 0,\n            // Custom Metric in google analytics as metrics1: From Server Cache\n            event_cache: response.headers.has('Cached') ? 1 : 0,\n          });\n          // We have a response 🎉 set it into the local state\n          this.setState(({ data }) => {\n            const nextData = {\n              ...data,\n              ...response,\n              progress: 1,\n              loading: false,\n            };\n            return { data: nextData, staleData: nextData };\n          });\n          // Progress: 1\n          this.props.dataProgressInfo(this._id, 1, weight);\n\n          const msToRetry =\n            this.props.appState.settings.navigation.secondsToRetry * MS;\n          // Schedulling to retry because we got a 408\n          if (response.status === TIMEOUT) {\n            this.timeoutID = setTimeout(() => {\n              console.log('Retrying the Timed out query');\n              this.setState({ retries: this.state.retries + 1 });\n            }, msToRetry);\n          }\n        } catch (error) {\n          // If request has been canceled, it means we did it, on purpose, so\n          // just ignore, otherwise it's a real error\n          if (!request.canceled) {\n            // we have a problem, something bad happened\n            // Analytics\n            gtag('event', 'error', {\n              event_category: 'data',\n              event_status: 'fail',\n              event_label: url,\n              // Custom Metric in google analytics as metrics3: Is Client Online\n              event_online: window.navigator.onLine ? 1 : 0,\n            });\n            this.setState(({ data }) => ({\n              data: { ...data, loading: false, progress: 1, ok: false, error },\n            }));\n            // Progress: 1\n            this.props.dataProgressInfo(this._id, 1, weight);\n          }\n        }\n      };\n\n      render() {\n        const {\n          // props to be removed\n          dataProgressInfo,\n          dataProgressUnload,\n          appState,\n          // rest of props, to be passed down\n          ...rest\n        } = this.props;\n        const passedProps = {\n          ...rest,\n          [`data${propNamespace}`]: this.state.staleData || this.state.data,\n          [`isStale${propNamespace}`]: this.state.staleData !== this.state.data,\n        };\n        // The correction below is needed for MS Edge\n        if (\n          this.state.data &&\n          !this.state.data.loading &&\n          this.state.data.url === this.state.url\n        )\n          passedProps[`isStale${propNamespace}`] = false;\n        return (\n          <UnconnectedErrorBoundary customLocation={appState.customLocation}>\n            <Wrapped\n              {...passedProps}\n              {...(mapStateToProps(appState, passedProps) || {})}\n            />\n          </UnconnectedErrorBoundary>\n        );\n      }\n    }\n\n    return connect(mapStateToState, {\n      dataProgressInfo,\n      dataProgressUnload,\n      addToast,\n      ...mapDispatchToProps,\n    })(DataWrapper);\n  };\n};\n\nexport default loadData;\n","// @flow\nexport default (f /*: function */) => (e /*: Event */) => {\n  e.preventDefault();\n  e.stopPropagation();\n  return f(e);\n};\n","import React from 'react';\n\nimport cssBinder from 'styles/cssBinder';\nimport local from './style.css';\n\nconst f = cssBinder(local);\n\ntype Props = {\n  accession: string | number;\n  withTitle?: boolean;\n  title?: string;\n};\n\nconst Accession = ({ withTitle, accession, title }: Props) => {\n  return (\n    <div>\n      {title !== '' && withTitle ? <span> {title || 'Accession'}:</span> : null}\n      {title === 'Job ID' ? (\n        <span className={f('tag-sqc')}> {accession}</span>\n      ) : (\n        accession\n      )}\n    </div>\n  );\n};\n\nexport default Accession;\n","// extracted by mini-css-extract-plugin\nexport default {\"tag-sqc\":\"Accession_style__tag-sqc___bf\"};","import React from 'react';\nimport { connect } from 'react-redux';\n\nimport Tooltip from 'components/SimpleCommonComponents/Tooltip';\nimport Button from 'components/SimpleCommonComponents/Button';\nimport {\n  updateJob,\n  deleteJob,\n  goToCustomLocation,\n  keepJobAsLocal,\n} from 'actions/creators';\n\nimport cssBinder from 'styles/cssBinder';\n\nimport fonts from 'EBI-Icon-fonts/fonts.css';\nimport local from './style.css';\n\nconst css = cssBinder(fonts, local);\n\ntype Props = {\n  localID: string;\n  status: string;\n  withTitle?: boolean;\n  forStatus?: boolean;\n  versionMismatch?: boolean;\n  deleteJob?: typeof deleteJob;\n  goToCustomLocation?: typeof goToCustomLocation;\n  keepJobAsLocal?: typeof keepJobAsLocal;\n  sequence?: string;\n  attributes?: {\n    applications?: string[] | null;\n    goterms?: string[] | null;\n    pathways?: string[] | null;\n  };\n  MoreActions?: React.ReactNode;\n};\n\nexport const Actions = ({\n  withTitle,\n  forStatus,\n  status,\n  localID,\n  deleteJob,\n  goToCustomLocation,\n  keepJobAsLocal,\n  versionMismatch,\n  attributes,\n  sequence,\n  MoreActions,\n}: Props) => {\n  const _handleReRun = () => {\n    const search: InterProLocationSearch = {};\n    if (attributes?.applications) {\n      search.applications =\n        typeof attributes.applications === 'string'\n          ? [attributes.applications]\n          : attributes.applications;\n    }\n    goToCustomLocation?.({\n      description: {\n        main: { key: 'search' },\n        search: {\n          type: 'sequence',\n          value: ((sequence || '').match(/(.{1,60})/g) || []).join('\\n'),\n        },\n      },\n      search,\n    });\n  };\n\n  const _handleDelete = () => {\n    deleteJob?.({ metadata: { localID } });\n    goToCustomLocation?.({\n      description: {\n        main: { key: 'result' },\n        result: { type: 'InterProScan' },\n      },\n    });\n  };\n\n  return (\n    <nav className={css('buttons', { centered: forStatus })}>\n      {withTitle && 'Actions: '}\n      <Tooltip\n        title={\n          <div>\n            <b>Delete job</b>: This will remove the stored data from your\n            browser. Remember that search results are only retained on our\n            servers for 7 days\n          </div>\n        }\n      >\n        <Button\n          type={forStatus ? 'inline' : 'secondary'}\n          icon=\"icon-trash\"\n          onClick={_handleDelete}\n          aria-label=\"Delete Results\"\n        >\n          {!forStatus && <span>Delete Results</span>}\n        </Button>\n      </Tooltip>\n      {status === 'finished' && (\n        <Tooltip\n          title={\n            <div>\n              <b>Save results in Browser</b>: If you save the results of this\n              search in your browser, you will be able to view it here even\n              after it is deleted from our servers or when you are offline.\n            </div>\n          }\n        >\n          <Button\n            type={forStatus ? 'inline' : 'secondary'}\n            icon=\"icon-save\"\n            onClick={() => keepJobAsLocal?.(localID)}\n            aria-label=\"Save results in Browser\"\n          >\n            {!forStatus && <span>Save results in Browser</span>}\n          </Button>\n        </Tooltip>\n      )}\n      {versionMismatch && (\n        <Tooltip\n          title={\n            <div>\n              <b>Execute the job again</b>: We detected the current results were\n              executed with a previous version of InterProScan. Click in the\n              button to create a new job with the most recent version.\n            </div>\n          }\n        >\n          <Button\n            type=\"hollow\"\n            icon=\"icon-history\"\n            onClick={_handleReRun}\n            aria-label=\"Execute the job again\"\n            textColor=\"var(--colors-light-txt)\"\n          />\n        </Tooltip>\n      )}\n      {MoreActions ? MoreActions : null}\n    </nav>\n  );\n};\n\nexport default connect(undefined, {\n  updateJob,\n  deleteJob,\n  goToCustomLocation,\n  keepJobAsLocal,\n})(Actions);\n","import React, { useRef } from 'react';\nimport { connect } from 'react-redux';\n\nimport Tooltip from 'components/SimpleCommonComponents/Tooltip';\nimport Button from 'components/SimpleCommonComponents/Button';\n\nimport { updateJobStatus } from 'actions/creators';\n\nimport cssBinder from 'styles/cssBinder';\n\nimport fonts from 'EBI-Icon-fonts/fonts.css';\nimport local from './style.css';\n\nconst css = cssBinder(fonts, local);\n\nconst TITLE = 'Manually refresh job information';\n\ntype Props = {\n  updateJobStatus: typeof updateJobStatus;\n};\n\nexport const RefreshButton = ({ updateJobStatus }: Props) => {\n  const _ref = useRef<HTMLSpanElement>(null);\n  const _handleClick = () => {\n    if (!_ref.current) return;\n    if (_ref.current.animate) {\n      _ref.current.animate(\n        { transform: ['rotate(0)', 'rotate(360deg)'] },\n        { duration: 500, iterations: 2 },\n      );\n    }\n    updateJobStatus();\n  };\n  return (\n    <Button aria-label={TITLE} onClick={_handleClick}>\n      <Tooltip title={TITLE}>\n        <span\n          className={css('icon', 'icon-common')}\n          data-icon=\"&#xf2f9;\"\n          ref={_ref}\n        />\n      </Tooltip>\n    </Button>\n  );\n};\n\nexport default connect(undefined, { updateJobStatus })(RefreshButton);\n","// extracted by mini-css-extract-plugin\nexport default {\"icon\":\"RefreshButton_style__icon___a3\"};","import React from 'react';\nimport { createPortal } from 'react-dom';\nimport T from 'prop-types';\n\nconst modalRoot = document.getElementById('modal-root');\n\nimport { foundationPartial } from 'styles/foundation';\n\nimport ipro from 'styles/interpro-new.css';\nimport interproTheme from 'styles/theme-interpro.css'; /* needed for custom button color*/\nimport local from './style.css';\nimport { noop } from 'lodash-es';\nconst f = foundationPartial(interproTheme, ipro, local);\n\nconst Modal = ({ show = false, children, closeModal = noop }) => {\n  if (!show) return null;\n\n  const Wrap = (\n    <>\n      <div className={f('modal-bg')} />\n      <div\n        className={f('modal')}\n        data-reveal\n        aria-labelledby=\"modalTitle\"\n        role=\"dialog\"\n      >\n        {children}\n        <button\n          className={f('close-modal')}\n          aria-label=\"Close\"\n          onClick={closeModal}\n        >\n          &#215;\n        </button>\n      </div>\n    </>\n  );\n  return createPortal(Wrap, modalRoot);\n};\nModal.propTypes = {\n  show: T.bool,\n  children: T.any,\n  closeModal: T.func,\n};\nexport default Modal;\n","// extracted by mini-css-extract-plugin\nexport default {\"modal-bg\":\"Modal_style__modal-bg___ea\",\"modal\":\"Modal_style__modal___ce\",\"close-modal\":\"Modal_style__close-modal___c2\"};","import React from 'react';\n\nimport { connect } from 'react-redux';\nimport { deleteJob } from 'actions/creators';\n\nimport Modal from 'components/SimpleCommonComponents/Modal';\nimport Button from 'components/SimpleCommonComponents/Button';\n\nexport type SourceToRemove = null | 'file' | 'server';\n\ntype Props = {\n  show: boolean;\n  closeModal: () => void;\n  jobs: Array<MinimalJobMetadata>;\n  from: SourceToRemove;\n  deleteJob: typeof deleteJob;\n};\n\nconst ClearAllDialog = ({ show, closeModal, jobs, from, deleteJob }: Props) => {\n  const deleteJobs = () => {\n    for (const job of jobs) {\n      deleteJob({ metadata: { localID: job.localID } });\n    }\n    closeModal();\n  };\n  return (\n    <Modal show={show} closeModal={closeModal}>\n      <h2 id=\"modalTitle\">Clear all InterProScan jobs</h2>\n      {jobs && jobs.length ? (\n        <>\n          <p>\n            You are about to permanently remove {jobs.length} InterProScan jobs\n            that were loaded from {from}.\n          </p>\n          <div style={{ textAlign: 'right' }}>\n            <Button onClick={deleteJobs}>Delete</Button>\n          </div>\n        </>\n      ) : (\n        <p>There are not jobs loaded from {from} to delete.</p>\n      )}\n    </Modal>\n  );\n};\n\nexport default connect(undefined, { deleteJob })(ClearAllDialog);\n","import React from 'react';\n\nimport Loading from 'components/SimpleCommonComponents/Loading';\nimport Callout from 'components/SimpleCommonComponents/Callout';\n\nexport const isNucleotideFile = (fileContent: IprscanDataIDB | null) =>\n  'crossReferences' in (fileContent?.results?.[0] || {}) &&\n  'openReadingFrames' in (fileContent?.results?.[0] || {});\n\ntype Props = { fileContent: IprscanDataIDB };\n\nconst NucleotideCheck = ({ fileContent }: Props) => {\n  if (!fileContent) return <Loading inline={true} />;\n  if (isNucleotideFile(fileContent)) {\n    return (\n      <Callout type=\"info\" showIcon icon=\"icon-dna\">\n        <b>Nucleotide Sequence</b>\n        <p>\n          We have detected this file as an InterProScan search result using a\n          sequence of <b>nucleotides</b>.\n        </p>\n      </Callout>\n    );\n  }\n  return null;\n};\n\nexport default NucleotideCheck;\n","import React from 'react';\n\nimport { connect } from 'react-redux';\nimport { importJobFromData } from 'actions/creators';\nimport id from 'utils/cheap-unique-id';\n\nimport Modal from 'components/SimpleCommonComponents/Modal';\nimport IPScanVersionCheck from 'components/IPScan/IPScanVersionCheck';\nimport NucleotideCheck from 'components/IPScan/NucleotideCheck';\nimport Button from 'components/SimpleCommonComponents/Button';\n\nconst isValid = (fileObj: Record<string, unknown>) => {\n  return (\n    typeof fileObj === 'object' &&\n    'results' in fileObj &&\n    'interproscan-version' in fileObj\n  );\n};\n\nconst saveJobInIDB = (\n  results: Array<Iprscan5Result>,\n  remoteID: string,\n  localTitle: string | null,\n  ipScanVersion: string,\n  applications: Array<string> | string,\n  importJobFromDataD: typeof importJobFromData,\n) => {\n  const localID = id(`internal-${Date.now()}`);\n  const metadata = {\n    localID,\n    localTitle,\n    type: 'InterProScan',\n    remoteID,\n    hasResults: results.some((result) => result?.matches?.length > 0),\n    entries: results.length, // countInterProFromMatches(result.matches),\n  };\n  const data: IprscanDataIDB = {\n    localID,\n    'interproscan-version': ipScanVersion,\n    results,\n    applications,\n  };\n  importJobFromDataD({\n    metadata,\n    data,\n  });\n};\n\ntype Props = {\n  show: boolean;\n  closeModal: () => void;\n  fileContent: Record<string, unknown>; // ProteinFile | NucleotideFile,\n  fileName: string;\n  importJobFromData: typeof importJobFromData;\n};\n\nconst LoadedFileDialog = ({\n  show,\n  closeModal,\n  fileContent,\n  fileName,\n  importJobFromData,\n}: Props) => {\n  let validFileContent: IprscanDataIDB | null = null;\n  if (fileContent && isValid(fileContent))\n    validFileContent = fileContent as IprscanDataIDB;\n\n  const saveFileInIndexDB = () => {\n    if (!validFileContent) return;\n\n    saveJobInIDB(\n      validFileContent.results,\n      `imported_file-${fileName}`,\n      null,\n      validFileContent['interproscan-version'],\n      validFileContent.applications,\n      importJobFromData,\n    );\n    closeModal();\n  };\n  return (\n    <Modal show={show} closeModal={closeModal}>\n      <h2 id=\"modalTitle\">InterProScan File</h2>\n      {validFileContent ? (\n        <>\n          <p>\n            Loading file: <code>{fileName}</code>\n          </p>\n          <p>\n            You are about to load the analysis of{' '}\n            <b>{validFileContent.results.length} sequences</b> with InterProScan\n            version {validFileContent['interproscan-version']}\n          </p>\n          <IPScanVersionCheck\n            ipScanVersion={fileContent['interproscan-version']}\n          />\n          <NucleotideCheck fileContent={validFileContent} />\n          <div style={{ textAlign: 'right' }}>\n            <Button onClick={saveFileInIndexDB}>OK</Button>\n          </div>\n        </>\n      ) : (\n        <p>We couldn&apos;t load the file. Check its format and try again.</p>\n      )}\n    </Modal>\n  );\n};\n\nexport default connect(undefined, { importJobFromData })(LoadedFileDialog);\n","import React, { FormEvent, KeyboardEvent, useState } from 'react';\nimport { connect } from 'react-redux';\n\nimport descriptionToDescription from 'utils/processDescription/descriptionToDescription';\nimport { goToCustomLocation } from 'actions/creators';\nimport blockEvent from 'utils/block-event';\n\nimport Button from 'components/SimpleCommonComponents/Button';\n\nimport LoadedFileDialog from './LoadedFileDialog';\n\nimport cssBinder from 'styles/cssBinder';\n\nimport fonts from 'EBI-Icon-fonts/fonts.css';\nimport local from './style.css';\nimport buttonCSS from 'components/SimpleCommonComponents/Button/style.css';\n\nconst css = cssBinder(fonts, local, buttonCSS);\n\nconst TITLE = 'Import Result';\ntype Props = {\n  goToCustomLocation: typeof goToCustomLocation;\n};\n\nconst ImportResultSearch = ({ goToCustomLocation }: Props) => {\n  const [id, setId] = useState('');\n  const [isValid, setValid] = useState(false);\n  const [isDragging, setDragging] = useState(false);\n  const [showModal, setShowModal] = useState(false);\n  const [fileContent, setFileContent] = useState<Record<string, unknown>>({});\n  const [fileName, setFileName] = useState<string | null>(null);\n\n  const handleImport = () => {\n    goToCustomLocation({\n      description: {\n        main: { key: 'result' },\n        result: {\n          type: 'InterProScan',\n          job: id,\n        },\n      },\n    });\n  };\n\n  const handleChange = (event: FormEvent) => {\n    const value = (event.target as HTMLInputElement).value;\n    try {\n      descriptionToDescription({\n        main: { key: 'result' },\n        result: {\n          type: 'InterProScan',\n          job: value,\n        },\n      });\n      setValid(true);\n    } catch (error) {\n      setValid(false);\n    }\n    setId(value);\n  };\n\n  const handleKeyPress = (event: KeyboardEvent<HTMLInputElement>) => {\n    if (event.key === 'Enter') {\n      if (isValid) handleImport();\n    }\n  };\n\n  const _handleContent = (text: string) => {\n    try {\n      const result = JSON.parse(text);\n      setFileContent(result);\n    } catch {\n      setFileName(null);\n      console.error(\"File couldn't be parsed as JSON\");\n    }\n    setShowModal(true);\n  };\n\n  const _handleFile = (file?: File) => {\n    if (!file) return; // Maybe raise an exemption???\n    setFileContent({});\n    setFileName(file.name);\n    const fr = new FileReader();\n    fr.onload = () => {\n      _handleContent(fr.result as string);\n    };\n    fr.readAsText(file);\n  };\n\n  const _handleFileChange = ({\n    target,\n  }: React.ChangeEvent<HTMLInputElement>) => {\n    _handleFile(target.files?.[0]);\n    target.value = '';\n  };\n\n  const _handleDragging = blockEvent(() => setDragging(true));\n\n  const _handleUndragging = blockEvent(() => setDragging(false));\n\n  const _handleDroppedFiles = blockEvent(({ dataTransfer }: DragEvent) => {\n    if (!dataTransfer) return;\n    const {\n      files: [file],\n    } = dataTransfer;\n    _handleFile(file);\n    setDragging(false);\n  });\n\n  return (\n    <div\n      className={css('import-result', { dragging: isDragging })}\n      onDrop={_handleDroppedFiles}\n      onDrag={_handleDragging}\n      onDragStart={_handleDragging}\n      onDragEnd={_handleUndragging}\n      onDragOver={_handleDragging}\n      onDragEnter={_handleDragging}\n      onDragExit={_handleUndragging}\n      onDragLeave={_handleUndragging}\n    >\n      <label className={css('import-label')} htmlFor=\"interproScanId\">\n        Import:\n      </label>\n      <input\n        name=\"interproScanId\"\n        type=\"text\"\n        placeholder=\"InterProScan ID\"\n        value={id}\n        onChange={handleChange}\n        onKeyUp={handleKeyPress}\n      />\n      <Button\n        disabled={!isValid}\n        aria-label={`${TITLE} from server with ID`}\n        onClick={handleImport}\n        icon=\"icon-cloud-download-alt\"\n      />\n\n      <label\n        aria-label={`${TITLE} from file`}\n        className={`vf-button ${css(\n          'icon',\n          'icon-common',\n          'vf-button',\n          'vf-button--primary',\n          'vf-button--sm',\n        )}`}\n        data-icon=\"&#xf093;\"\n      >\n        {' '}\n        <input type=\"file\" onChange={_handleFileChange} hidden accept=\".json\" />\n      </label>\n      <div className={css('dragging-overlay')}>Drop your file here</div>\n      <LoadedFileDialog\n        show={showModal}\n        fileContent={fileContent}\n        fileName={fileName || ''}\n        closeModal={() => setShowModal(false)}\n      />\n    </div>\n  );\n};\n\nexport default connect(undefined, { goToCustomLocation })(ImportResultSearch);\n","// extracted by mini-css-extract-plugin\nexport default {\"import-result\":\"ImportResultSearch_style__import-result___d2\",\"import-label\":\"ImportResultSearch_style__import-label___f4\",\"dragging\":\"ImportResultSearch_style__dragging___aa\",\"dragging-overlay\":\"ImportResultSearch_style__dragging-overlay___cd\"};","import React, { PureComponent } from 'react';\nimport { format } from 'url';\nimport descriptionToPath from 'utils/processDescription/descriptionToPath';\n\nimport loadable from 'higherOrder/loadable';\nimport { schemaProcessDataPageSection } from 'schema_org/processors';\n\nimport { updateJobStatus } from 'actions/creators';\n\nimport { connect } from 'react-redux';\nimport { createSelector } from 'reselect';\nimport { format as formatTime } from 'timeago.js';\n\nimport Link from 'components/generic/Link';\n\nimport { filterSubset, sortSubsetBy } from 'components/Table/FullyLoadedTable';\nimport Table, { Column, ExtraOptions } from 'components/Table';\nimport TimeAgo from 'components/TimeAgo';\nimport Tooltip from 'components/SimpleCommonComponents/Tooltip';\n\nimport TooltipAndRTDLink from 'components/Help/TooltipAndRTDLink';\nimport CopyToClipboard from 'components/SimpleCommonComponents/CopyToClipboard';\nimport DropDownButton from 'components/SimpleCommonComponents/DropDownButton';\nimport Button from 'components/SimpleCommonComponents/Button';\nimport SpinningCircle from 'components/SimpleCommonComponents/Loading/spinningCircle';\n\nimport RefreshButton from 'components/IPScan/RefreshButton';\nimport ClearAllDialog, {\n  SourceToRemove,\n} from 'components/IPScan/ClearAllDialog';\nimport ImportResultSearch from 'components/IPScan/ImportResultSearch';\nimport Actions from 'components/IPScan/Actions';\n\nimport config from 'config';\n\nimport cssBinder from 'styles/cssBinder';\n\nimport fonts from 'EBI-Icon-fonts/fonts.css';\nimport local from './style.css';\nimport tableStyles from 'components/Table/style.css';\n\nconst css = cssBinder(fonts, local, tableStyles);\n\nconst SchemaOrgData = loadable({\n  loader: () => import(/* webpackChunkName: \"schemaOrg\" */ 'schema_org'),\n  loading: () => null,\n});\n\nexport const getIProScanURL = (accession: string) => {\n  const { protocol, hostname, port, pathname } = config.root.website;\n  const url = format({\n    protocol,\n    hostname,\n    port,\n    pathname:\n      pathname +\n      descriptionToPath({\n        main: { key: 'result' },\n        result: { type: 'InterProScan', accession },\n      }),\n  });\n\n  return url;\n};\n\nconst GoToNewSearch = () => (\n  <Link\n    to={{\n      description: {\n        main: { key: 'search' },\n        search: { type: 'sequence' },\n      },\n    }}\n    buttonType=\"primary\"\n  >\n    Submit a new search\n  </Link>\n);\n\ntype Props = {\n  jobs: Array<MinimalJobMetadata>;\n  search: InterProLocationSearch;\n  defaultPageSize: number;\n  updateJobStatus: typeof updateJobStatus;\n};\n\ntype State = {\n  show: boolean;\n  jobsToRemove: Array<MinimalJobMetadata>;\n  from: SourceToRemove;\n};\n\nexport class IPScanStatus extends PureComponent<Props, State> {\n  state: State = { show: false, jobsToRemove: [], from: null };\n\n  deleteAll = (from: SourceToRemove = 'file') => {\n    const { jobs } = this.props;\n    this.setState({\n      show: true,\n      from,\n      jobsToRemove: jobs.filter(\n        (job) =>\n          (from === 'file' && job.status === 'imported file') ||\n          (from === 'server' && (job.remoteID || '').startsWith('iprscan5')),\n      ),\n    });\n  };\n\n  render() {\n    const { jobs, search, defaultPageSize } = this.props;\n    const keys = ['localID', 'localTitle', 'times', 'entries'];\n    let paginatedJobs = [...jobs];\n    sortSubsetBy<MinimalJobMetadata>(paginatedJobs, search, keys, {\n      localID: (localID, row) => row!.remoteID || (localID as string),\n      localTitle: (localTitle, row) =>\n        (localTitle as string) || row?.remoteID || row?.localID || '',\n      times: (times) => {\n        const { created, importing, lastUpdate } = times as JobTimes;\n        return new Date(\n          (created || importing || lastUpdate) as number,\n        ).toISOString();\n      },\n    });\n    paginatedJobs = filterSubset(paginatedJobs, search, keys, {\n      localID: (localID, row) => row!.remoteID || (localID as string),\n      localTitle: (localTitle, row) =>\n        (localTitle as string) || row?.remoteID || row?.localID || '',\n      times: (times) => {\n        const { created, importing, lastUpdate } = times as JobTimes;\n        return formatTime(new Date(created || importing || lastUpdate));\n      },\n    });\n    const pageSize = search.page_size || defaultPageSize;\n    paginatedJobs = paginatedJobs.splice(\n      ((Number(search.page) || 1) - 1) * Number(pageSize),\n      Number(pageSize),\n    );\n    return (\n      <div className={css('vf-stack')}>\n        <h3 className={css('light')}>\n          Your InterProScan Search Results{' '}\n          <TooltipAndRTDLink rtdPage=\"searchways.html#sequence-search-results\" />\n        </h3>\n        <p className={css('info')}>\n          Your InterProScan search results are shown below. Searches may take\n          varying times to complete. You can navigate to other pages and once\n          the search is finished, you will receive a notification. The results\n          will be available for 7 days.\n        </p>\n        <p className={css('info')}>\n          Alternatively, you can import the results of an InterProScan run (in\n          JSON format) into this page in order to view your search results\n          interactively.\n        </p>\n        <SchemaOrgData\n          data={{\n            name: 'Your InterProScan searches',\n            description:\n              'The status of all the requested InterProScan searches',\n          }}\n          processData={schemaProcessDataPageSection}\n        />\n        <div className={css('button-bar')}>\n          <div className={css('button-group')}>\n            <GoToNewSearch />\n            <RefreshButton />\n          </div>\n          <ImportResultSearch />\n        </div>\n        <Table\n          dataTable={paginatedJobs}\n          rowKey=\"localID\"\n          contentType=\"result\"\n          actualSize={jobs.length}\n          query={search}\n          showTableIcon={false}\n          // groupActions={GroupActions}\n        >\n          <ExtraOptions>\n            <DropDownButton label=\"Clear All\" icon=\"icon-trash\">\n              <ul>\n                <li>\n                  <Button type=\"hollow\" onClick={() => this.deleteAll('file')}>\n                    Loaded from File\n                  </Button>\n                </li>\n                <li>\n                  <Button\n                    type=\"hollow\"\n                    onClick={() => this.deleteAll('server')}\n                  >\n                    Loaded from Servers\n                  </Button>\n                </li>\n              </ul>\n            </DropDownButton>\n          </ExtraOptions>\n          <Column\n            dataKey=\"localTitle\"\n            isSearchable={true}\n            isSortable={true}\n            renderer={(localTitle: string, row: IprscanMetaIDB) => (\n              <>\n                <span style={{ marginRight: '1em' }}>\n                  <Link\n                    to={{\n                      description: {\n                        main: { key: 'result' },\n                        result: {\n                          type: 'InterProScan',\n                          job: row.remoteID || row.localID,\n                        },\n                      },\n                    }}\n                  >\n                    {(localTitle === '∅' ? null : localTitle) ||\n                      row.remoteID ||\n                      row.localID}\n                  </Link>\n                </span>\n                {row.remoteID && !row.remoteID.startsWith('imported') && (\n                  <CopyToClipboard\n                    textToCopy={getIProScanURL(row.remoteID)}\n                    tooltipText=\"Copy URL\"\n                  />\n                )}\n              </>\n            )}\n          >\n            Results\n          </Column>\n          <Column dataKey=\"entries\" isSearchable={true} isSortable={true}>\n            Sequences\n          </Column>\n          <Column\n            dataKey=\"times\"\n            isSearchable={true}\n            isSortable={true}\n            renderer={({ created, importing, lastUpdate }: JobTimes) => {\n              const parsed = new Date(created || importing || lastUpdate);\n              return (\n                <Tooltip\n                  title={`${\n                    created ? 'Created' : 'Imported'\n                  } on ${parsed.toLocaleDateString()} at ${parsed.toLocaleTimeString()}`}\n                >\n                  <TimeAgo date={parsed} noTitle />\n                </Tooltip>\n              );\n            }}\n          >\n            Created\n          </Column>\n          <Column\n            dataKey=\"status\"\n            headerClassName={css('table-header-center')}\n            cellClassName={css('table-center')}\n            renderer={(status: string, row: IprscanMetaIDB) => (\n              <Tooltip title={`Job ${status}`}>\n                {(status === 'running' ||\n                  status === 'created' ||\n                  status === 'queued' ||\n                  status === 'submitted') && (\n                  <div>\n                    <SpinningCircle />\n                    <div>Searching</div>\n                  </div>\n                )}\n\n                {status === 'not found' ||\n                status === 'failed' ||\n                status === 'failure' ||\n                status === 'error' ? (\n                  <span\n                    style={{ fontSize: '160%' }}\n                    className={css('icon', 'icon-common', 'ico-notfound')}\n                    data-icon=\"&#x78;\"\n                    aria-label=\"Job failed or not found\"\n                  />\n                ) : null}\n                {['finished', 'imported file', 'saved in browser'].includes(\n                  status,\n                ) && (\n                  <Link\n                    to={{\n                      description: {\n                        main: { key: 'result' },\n                        result: {\n                          type: 'InterProScan',\n                          accession: row.remoteID,\n                        },\n                      },\n                    }}\n                  >\n                    <span\n                      style={{ fontSize: '160%' }}\n                      className={css(\n                        'icon',\n                        'icon-common',\n                        status === 'finished'\n                          ? 'ico-confirmed'\n                          : 'icon-reviewed-data',\n                      )}\n                      data-icon=\"&#xf00c;\"\n                      aria-label=\"Job ready\"\n                    />\n                  </Link>\n                )}\n              </Tooltip>\n            )}\n          >\n            Status\n          </Column>\n          <Column\n            dataKey=\"localID\"\n            defaultKey=\"actions\"\n            headerClassName={css('table-header-center')}\n            cellClassName={css('table-center', 'font-ml')}\n            renderer={(localID: string, row: IprscanMetaIDB) => (\n              <Actions localID={localID} forStatus={true} status={row.status} />\n            )}\n          >\n            Action\n          </Column>\n        </Table>\n        <ClearAllDialog\n          show={this.state.show}\n          closeModal={() => this.setState({ show: false })}\n          jobs={this.state.jobsToRemove}\n          from={this.state.from}\n        />\n      </div>\n    );\n  }\n}\n\nconst compare = (a: MinimalJobMetadata, b: MinimalJobMetadata) => {\n  if (b.remoteID && a.remoteID) return b.remoteID > a.remoteID ? 1 : -1;\n  return 1;\n};\n\nconst mapsStateToProps = createSelector(\n  (state: GlobalState) =>\n    Object.values(state.jobs || {})\n      .map((j) => j.metadata)\n      .sort(compare),\n  (state: GlobalState) => state.customLocation.search,\n  (state: GlobalState) => state.settings.navigation.pageSize,\n  (jobs, search, defaultPageSize) => ({\n    jobs,\n    search,\n    defaultPageSize,\n  }),\n);\n\nexport default connect(mapsStateToProps, { updateJobStatus })(IPScanStatus);\n","import React, { useEffect, useRef, useState, KeyboardEvent } from 'react';\n\nimport { connect } from 'react-redux';\nimport { updateSequenceJobTitle, updateJobTitle } from 'actions/creators';\n\nimport Button from 'components/SimpleCommonComponents/Button';\n\nimport cssBinder from 'styles/cssBinder';\n\nimport fonts from 'EBI-Icon-fonts/fonts.css';\nimport style from '../style.css';\nimport summary from 'styles/summary.css';\n\nconst css = cssBinder(summary, fonts, style);\n\ntype Props = {\n  type: 'sequence' | 'job';\n  accession: string;\n  localTitle?: string;\n  payload: Iprscan5Result | MinimalJobMetadata;\n  updateSequenceJobTitle?: typeof updateSequenceJobTitle;\n  updateJobTitle?: typeof updateJobTitle;\n  status?: string;\n  editable?: boolean;\n};\n\nconst IPScanTitle = ({\n  type,\n  accession,\n  localTitle,\n  payload,\n  updateSequenceJobTitle,\n  updateJobTitle,\n  status,\n  editable = true,\n}: Props) => {\n  const [title, setTitle] = useState(localTitle || '');\n  const [readable, setReadable] = useState(true);\n  const titleInputRef = useRef<HTMLInputElement>(null);\n  useEffect(() => {\n    setTitle(localTitle || (payload as Iprscan5Result).xref?.[0].name || '');\n  }, [payload, localTitle]);\n\n  const changeTitle = () => {\n    if (!titleInputRef.current) return;\n    if (titleInputRef.current.readOnly) {\n      titleInputRef.current.focus();\n    } else {\n      if (titleInputRef.current.value !== '') {\n        const value = titleInputRef.current.value;\n        if (type === 'sequence') {\n          (payload as Iprscan5Result).xref[0].name = value;\n          updateSequenceJobTitle?.(accession, value);\n        }\n        if (type === 'job') {\n          (payload as IprscanMetaIDB).localTitle = value;\n          updateJobTitle?.(accession, value);\n        }\n        setTitle(value);\n      }\n    }\n    setReadable(!titleInputRef.current.readOnly);\n  };\n  const handleKeyPress = (event: KeyboardEvent<HTMLInputElement>) => {\n    if (event.key === 'Enter') {\n      changeTitle();\n    }\n  };\n\n  return (\n    <section className={css('summary-row')}>\n      <header>Title</header>\n      <section>\n        <input\n          ref={titleInputRef}\n          className={css('title')}\n          value={title}\n          readOnly={readable || !editable}\n          style={{ width: `${Math.max(title?.length, 10)}ch` }}\n          onChange={(event) => setTitle(event.target.value)}\n          onDoubleClick={() => setReadable(false || !editable)}\n          onKeyUp={handleKeyPress}\n          placeholder=\"ø\"\n        />\n        {editable &&\n        ['finished', 'imported file', 'saved in browser'].includes(\n          status || '',\n        ) ? (\n          <Button\n            type=\"inline\"\n            onClick={changeTitle}\n            icon={readable ? 'icon-pencil-alt' : 'icon-save'}\n            title={readable ? 'Rename' : 'Save'}\n          />\n        ) : null}\n      </section>\n    </section>\n  );\n};\n\nexport default connect(undefined, { updateSequenceJobTitle, updateJobTitle })(\n  IPScanTitle,\n);\n","import React from 'react';\n\nimport Tooltip from 'components/SimpleCommonComponents/Tooltip';\nimport SpinningCircle from 'components/SimpleCommonComponents/Loading/spinningCircle';\n\nimport cssBinder from 'styles/cssBinder';\nimport fonts from 'EBI-Icon-fonts/fonts.css';\nimport style from '../style.css';\n\nconst css = cssBinder(fonts, style);\n\ntype Props = { status?: string };\nconst _StatusTooltip = ({ status }: Props) => (\n  <Tooltip title={`Job ${status}`}>\n    {(status === 'running' ||\n      status === 'queued' ||\n      status === 'created' ||\n      status === 'importing' ||\n      status === 'submitted') && (\n      <>\n        <SpinningCircle />\n        <div className={css('status')}>Searching</div>\n      </>\n    )}\n\n    {status === 'not found' || status === 'failure' || status === 'error' ? (\n      <>\n        <span\n          className={css('icon', 'icon-common', 'ico-notfound')}\n          data-icon=\"&#x78;\"\n          aria-label=\"Job failed or not found\"\n        />{' '}\n        {status}\n      </>\n    ) : null}\n    {['finished', 'imported file', 'saved in browser'].includes(\n      status || '',\n    ) && (\n      <>\n        <span\n          className={css('icon', 'icon-common', 'ico-confirmed')}\n          data-icon=\"&#xf00c;\"\n          aria-label=\"Job finished\"\n        />{' '}\n        {status}\n      </>\n    )}\n  </Tooltip>\n);\n\nconst StatusTooltip = React.memo(_StatusTooltip);\nStatusTooltip.displayName = 'StatusTooltip';\n\nexport default StatusTooltip;\n","import React from 'react';\n\nimport { connect, ConnectedProps } from 'react-redux';\nimport { createSelector } from 'reselect';\n\nimport Table, { Column, PageSizeSelector } from 'components/Table';\nimport { Renderer } from '../Column';\n\nexport const sortSubsetBy = <RowData extends Record<string, unknown>>(\n  subset: Array<RowData>,\n  search: InterProLocationSearch | undefined,\n  keys: Array<string>,\n  columnToString: Record<string, Column2StringOrNumberFn<RowData>> = {},\n) => {\n  for (const key of keys) {\n    const str = columnToString[key] || ((x) => `${x}`);\n    if (search?.sort_by === key) {\n      subset.sort((a, b) => (str(a[key]) > str(b[key]) ? 1 : -1));\n    }\n    if (search?.sort_by === `-${key}`) {\n      subset.sort((a, b) => (str(a[key]) > str(b[key]) ? -1 : 1));\n    }\n  }\n};\n\nexport const filterSubset = <RowData extends Record<string, unknown>>(\n  subset: Array<RowData>,\n  search: InterProLocationSearch | undefined,\n  keys: Array<string>,\n  columnToString: Record<string, Column2StringOrNumberFn<RowData>> = {},\n) => {\n  let filteredSubset = [...subset];\n  for (const key of keys) {\n    if (search?.[key]) {\n      const str =\n        columnToString[key] || ((x) => JSON.stringify(x).toLowerCase());\n      filteredSubset = filteredSubset.filter(\n        (row) =>\n          String(str(row[key], row))\n            .toLowerCase()\n            .indexOf((search[key] as string).toLowerCase()) !== -1,\n      );\n    }\n  }\n  return filteredSubset;\n};\n\nconst mapStateToProps = createSelector(\n  (state: GlobalState) => state.customLocation.search,\n  (state: GlobalState) => state.settings.navigation.pageSize,\n  (search, pageSize) => ({ search, pageSize }),\n);\n\nconst connector = connect(mapStateToProps);\n\ntype PropsFromRedux = ConnectedProps<typeof connector>;\n\nexport type Column2StringOrNumberFn<RowData = unknown> = (\n  cellValue: unknown,\n  row?: RowData,\n) => string | number;\n\ntype Props<RowData extends Record<string, unknown>> = {\n  data: Array<RowData>;\n  renderers?: Record<string, Renderer<unknown, RowData>>;\n  columnToString?: Record<string, Column2StringOrNumberFn<RowData>>;\n  headerStyle?: Record<string, React.CSSProperties>;\n  cellStyle?: Record<string, React.CSSProperties>;\n  headerColumns?: Record<string, string>;\n  headerClassName?: Record<string, string>;\n  cellClassName?: Record<string, string>;\n};\ntype AllProps<RowData extends Record<string, unknown>> = Props<RowData> &\n  PropsFromRedux;\n\nexport const FullyLoadedTable = <RowData extends Record<string, unknown>>({\n  data,\n  renderers = {},\n  columnToString = {},\n  headerStyle = {},\n  cellStyle = {},\n  headerColumns = {},\n  headerClassName = {},\n  cellClassName = {},\n  search,\n  pageSize,\n}: AllProps<RowData>) => {\n  const keys = Object.keys(data?.[0] || {});\n  let subset = data;\n  subset = filterSubset(subset, search, keys);\n  sortSubsetBy(subset, search, keys, columnToString);\n  const size = Number(search?.page_size) || pageSize || 20;\n  const page = Number(search?.page) || 1;\n  subset = subset.slice((page - 1) * size, page * size);\n  return (\n    <Table actualSize={data.length} dataTable={subset} query={search}>\n      <PageSizeSelector />\n      {keys.map((key) => (\n        <Column\n          key={key}\n          dataKey={key}\n          renderer={renderers[key] || ((d) => d)}\n          isSearchable={true}\n          isSortable={true}\n          headerStyle={{\n            ...(headerStyle['*'] || {}),\n            ...(headerStyle[key] || {}),\n          }}\n          cellStyle={{\n            ...(cellStyle['*'] || {}),\n            ...(cellStyle[key] || {}),\n          }}\n          headerClassName={`${headerClassName['*'] || ''} ${\n            headerClassName[key] || ''\n          }`}\n          cellClassName={`${cellClassName['*'] || ''} ${\n            cellClassName[key] || ''\n          }`}\n        >\n          {headerColumns[key] || key}\n        </Column>\n      ))}\n    </Table>\n  );\n};\n\n// Define a generic connected component\nconst ConnectedFullyLoadedTable = <RowData extends Record<string, unknown>>(\n  props: Props<RowData>,\n) => {\n  const ConnectedTable = connector(\n    FullyLoadedTable as React.ComponentType<AllProps<RowData>>,\n  );\n  return <ConnectedTable {...props} />;\n};\n\nexport default ConnectedFullyLoadedTable;\n","import React, { PureComponent, RefObject } from 'react';\nimport { format } from 'timeago.js';\nimport { sleep, schedule } from 'timing-functions';\nimport { formatShortDate, formatLongDateTime } from 'utils/date';\n\nimport random from 'utils/random';\n\nconst ONE_MINUTE = 60000;\n\ntype Props = {\n  date: Date;\n  title?: string;\n  noTitle?: boolean;\n  noUpdate?: boolean;\n};\n\nclass TimeAgo extends PureComponent<Props> {\n  _ref: RefObject<HTMLTimeElement>;\n  #delay = 0;\n\n  constructor(props: Props) {\n    super(props);\n    this._ref = React.createRef();\n  }\n\n  async componentDidMount() {\n    if (this.props.noUpdate) return;\n    await sleep(this._delay);\n    await schedule();\n    // infinite loop while mounted\n    while (this._ref.current) {\n      // $FlowIgnore\n      this._ref.current.textContent = format(this.props.date);\n      await sleep(this._delay);\n      await schedule();\n    }\n  }\n\n  // delay before re-rendering will slowly grow everytime by up to 1 minute\n  get _delay() {\n    this.#delay = (this.#delay || 0) + random(0, ONE_MINUTE);\n    return this.#delay;\n  }\n\n  render() {\n    const { date, title, noTitle } = this.props;\n    let _title;\n    if (!noTitle) {\n      _title = title || formatShortDate(date);\n    }\n    return (\n      <time dateTime={formatLongDateTime(date)} title={_title} ref={this._ref}>\n        {format(date)}\n      </time>\n    );\n  }\n}\n\nexport default TimeAgo;\n","// @flow\nexport default (\n  from /*: number */ = 0,\n  to /*: number */ = 1,\n  doYouWantAnInteger /*:: ?: boolean */,\n) => {\n  const value = Math.random() * (to - from) + from;\n  if (!doYouWantAnInteger) return value;\n  return Math.round(value);\n};\n","/* eslint-disable no-magic-numbers */\nconst monthNames = [\n  'January',\n  'February',\n  'March',\n  'April',\n  'May',\n  'June',\n  'July',\n  'August',\n  'September',\n  'October',\n  'November',\n  'December',\n];\n\nconst _getOrdinal = (d: number) => {\n  if (d > 3 && d < 21) return `${d}th`;\n  switch (d % 10) {\n    case 1:\n      return `${d}st`;\n    case 2:\n      return `${d}nd`;\n    case 3:\n      return `${d}rd`;\n    default:\n      return `${d}th`;\n  }\n};\n\nexport const formatISODate = (date: string) => {\n  const d = new Date(date);\n  return `${_getOrdinal(d.getDate())} ${\n    monthNames[d.getMonth()]\n  } ${d.getFullYear()}`;\n};\n\nexport const formatLongDate = (d: Date) =>\n  `${d.getDate()} ${monthNames[d.getMonth()]} ${d.getFullYear()}`;\n\nexport const formatShortDate = (d: Date) =>\n  `${(d.getDate() < 10 ? '0' : '') + d.getDate()}/${\n    (d.getMonth() + 1 < 10 ? '0' : '') + (d.getMonth() + 1)\n  }/${d.getFullYear()}`;\n\nexport const formatLongDateTime = (d: Date) =>\n  `${(d.getDate() < 10 ? '0' : '') + d.getDate()}-${\n    (d.getMonth() + 1 < 10 ? '0' : '') + (d.getMonth() + 1)\n  }-${d.getFullYear()} ${(d.getHours() < 10 ? '0' : '') + d.getHours()}:${\n    (d.getMinutes() < 10 ? '0' : '') + d.getMinutes()\n  }:${(d.getSeconds() < 10 ? '0' : '') + d.getSeconds()}`;\n","// extracted by mini-css-extract-plugin\nexport default {\"button\":\"Actions_style__button___bc\",\"buttons\":\"Actions_style__buttons___aa\",\"centered\":\"Actions_style__centered___c3\",\"group\":\"Actions_style__group___a8\",\"icon\":\"Actions_style__icon___bf\",\"download-option\":\"Actions_style__download-option___d0\"};","// extracted by mini-css-extract-plugin\nexport default {\"button-bar\":\"Status_style__button-bar___d2\",\"button-group\":\"Status_style__button-group___bf\",\"info\":\"Status_style__info___fd\"};","// extracted by mini-css-extract-plugin\nexport default {\"title\":\"Summary_style__title___a9\",\"status\":\"Summary_style__status___e9\"};","// extracted by mini-css-extract-plugin\nexport default {\"summary-row\":\"styles_summary__summary-row___b3\",\"summary-grid\":\"styles_summary__summary-grid___b5\"};","// extracted by mini-css-extract-plugin\nexport default {\"label\":\"styles_theme-interpro__label___ce\",\"special\":\"styles_theme-interpro__special___ed\",\"button\":\"styles_theme-interpro__button___ca\",\"primary\":\"styles_theme-interpro__primary___ba\",\"menu\":\"styles_theme-interpro__menu___a8\",\"active\":\"styles_theme-interpro__active___fc\",\"tag\":\"styles_theme-interpro__tag___e6\",\"disabled\":\"styles_theme-interpro__disabled___b8\",\"warning\":\"styles_theme-interpro__warning___aa\",\"local-masthead\":\"styles_theme-interpro__local-masthead___fd\",\"switch-paddle\":\"styles_theme-interpro__switch-paddle___ac\",\"white-color\":\"styles_theme-interpro__white-color___b3\"};"],"names":["IPScanVersionCheck","_ref","_data$payload","_data$payload2","data","ipScanVersion","callback","currentVersion","payload","databases","interpro","version","currentVersionReleaseDate","Date","releaseDate","_","jobVersion","split","useEffect","loading","React","Loading","inline","daysSinceRelease","Math","round","getTime","Callout","type","toLocaleDateString","propTypes","T","loadData","getUrlForMeta","CopyToClipboard","textToCopy","tooltipText","addToast","button","useRef","ClipboardJS","current","text","on","title","ttl","Tooltip","Button","ref","icon","connect","undefined","f","foundationPartial","SpinningCircle","className","mapStateToState","createSelector","state","appState","newData","url","progress","ok","status","params","getUrl","fetchOptions","propNamespace","weight","mapStateToProps","mapDispatchToProps","extractParams","fetchFun","getFetch","Wrapped","DataWrapper","PureComponent","constructor","props","_this","super","this","_cancel","_request","cancel","dataProgressUnload","_id","_progress","setState","Object","assign","dataProgressInfo","_load","_ref2","cancelable","signal","request","response","promise","gtag","event_category","event_response","event_label","event_clientcache","headers","has","event_cache","_ref3","nextData","staleData","msToRetry","settings","navigation","secondsToRetry","timeoutID","setTimeout","console","log","retries","error","canceled","event_status","event_online","window","navigator","onLine","_ref4","_x","apply","arguments","uniqueId","getDerivedStateFromProps","nextProps","prevState","componentDidMount","componentDidUpdate","prevProps","componentWillUnmount","clearTimeout","render","_this$props","rest","_objectWithoutPropertiesLoose","_excluded","passedProps","UnconnectedErrorBoundary","customLocation","_extends","displayName","name","isRequired","e","preventDefault","stopPropagation","cssBinder","withTitle","accession","css","fonts","local","updateJob","deleteJob","goToCustomLocation","keepJobAsLocal","forStatus","localID","versionMismatch","attributes","sequence","MoreActions","centered","onClick","_handleDelete","metadata","description","main","key","result","_handleReRun","search","applications","value","match","join","textColor","TITLE","updateJobStatus","_handleClick","animate","transform","duration","iterations","modalRoot","document","getElementById","interproTheme","ipro","Modal","show","children","closeModal","noop","Wrap","role","createPortal","jobs","from","id","length","style","textAlign","deleteJobs","job","fileContent","_a","results","_b","isNucleotideFile","showIcon","importJobFromData","fileObj","fileName","validFileContent","NucleotideCheck","saveFileInIndexDB","saveJobInIDB","remoteID","now","localTitle","hasResults","some","matches","entries","buttonCSS","setId","useState","isValid","setValid","isDragging","setDragging","showModal","setShowModal","setFileContent","setFileName","handleImport","_handleFile","file","fr","FileReader","onload","JSON","parse","_handleContent","readAsText","_handleDragging","blockEvent","_handleUndragging","_handleDroppedFiles","dataTransfer","files","dragging","onDrop","onDrag","onDragStart","onDragEnd","onDragOver","onDragEnter","onDragExit","onDragLeave","htmlFor","placeholder","onChange","event","target","descriptionToDescription","onKeyUp","disabled","hidden","accept","LoadedFileDialog","tableStyles","SchemaOrgData","loadable","loader","getIProScanURL","protocol","hostname","port","pathname","config","root","website","format","descriptionToPath","GoToNewSearch","Link","to","buttonType","IPScanStatus","jobsToRemove","deleteAll","filter","startsWith","defaultPageSize","keys","paginatedJobs","sortSubsetBy","row","times","created","importing","lastUpdate","toISOString","filterSubset","formatTime","pageSize","page_size","splice","Number","page","TooltipAndRTDLink","rtdPage","processData","schemaProcessDataPageSection","RefreshButton","ImportResultSearch","Table","dataTable","rowKey","contentType","actualSize","query","showTableIcon","ExtraOptions","DropDownButton","label","Column","dataKey","isSearchable","isSortable","renderer","marginRight","parsed","toLocaleTimeString","TimeAgo","date","noTitle","headerClassName","cellClassName","fontSize","includes","defaultKey","Actions","ClearAllDialog","compare","a","b","mapsStateToProps","values","map","j","sort","summary","updateSequenceJobTitle","updateJobTitle","editable","setTitle","readable","setReadable","titleInputRef","xref","changeTitle","readOnly","focus","width","max","onDoubleClick","_StatusTooltip","StatusTooltip","subset","columnToString","_loop","str","x","sort_by","filteredSubset","_loop2","stringify","toLowerCase","String","indexOf","connector","FullyLoadedTable","renderers","headerStyle","cellStyle","headerColumns","size","slice","PageSizeSelector","d","ConnectedTable","_TimeAgo_delay","set","noUpdate","sleep","_delay","schedule","textContent","__classPrivateFieldSet","__classPrivateFieldGet","doYouWantAnInteger","random","_title","formatShortDate","dateTime","formatLongDateTime","monthNames","formatISODate","_getOrdinal","getDate","getMonth","getFullYear","formatLongDate","getHours","getMinutes","getSeconds"],"sourceRoot":""}