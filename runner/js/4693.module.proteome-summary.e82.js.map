{"version":3,"file":"js/4693.module.proteome-summary.e82.js","mappings":"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","sources":["webpack://interpro7-client/./src/components/Accession/index.tsx","webpack://interpro7-client/./src/components/Accession/style.css?1419","webpack://interpro7-client/./src/components/Protein/Species/index.tsx","webpack://interpro7-client/./src/components/ExtLink/ProteomeLink/index.tsx","webpack://interpro7-client/./src/components/Proteome/Summary/UniProtDescription/index.tsx","webpack://interpro7-client/./src/components/Proteome/Summary/RfamLink/index.tsx","webpack://interpro7-client/./src/components/Proteome/Summary/index.tsx"],"sourcesContent":["import React from 'react';\n\nimport cssBinder from 'styles/cssBinder';\nimport local from './style.css';\n\nconst f = cssBinder(local);\n\ntype Props = {\n  accession: string | number;\n  withTitle?: boolean;\n  title?: string;\n};\n\nconst Accession = ({ withTitle, accession, title }: Props) => {\n  return (\n    <div>\n      {title !== '' && withTitle ? <span> {title || 'Accession'}:</span> : null}\n      {title === 'Job ID' ? (\n        <span className={f('tag-sqc')}> {accession}</span>\n      ) : (\n        accession\n      )}\n    </div>\n  );\n};\n\nexport default Accession;\n","// extracted by mini-css-extract-plugin\nexport default {\"tag-sqc\":\"Accession_style__tag-sqc___bf\"};","import React from 'react';\n\nimport Link from 'components/generic/Link';\n\ntype Props = {\n  taxID: string | number;\n  fullName: string;\n};\n\nconst Species = ({ taxID, fullName }: Props) => {\n  return (\n    <Link\n      to={{\n        description: {\n          main: { key: 'taxonomy' },\n          taxonomy: { db: 'uniprot', accession: `${taxID}` },\n        },\n      }}\n    >\n      {fullName}\n    </Link>\n  );\n};\n\nexport default Species;\n","import React from 'react';\n\nimport BaseLink from '../BaseLink';\n\nconst ProteomeLink = ({ id, target, children, ...props }: BaseLinkProps) => (\n  <BaseLink\n    id={id}\n    target={target || '_blank'}\n    pattern=\"http://www.uniprot.org/proteomes/{id}\"\n    {...props}\n  >\n    {children || `ProteomeID ${id}`}\n  </BaseLink>\n);\nProteomeLink.displayName = 'ProteomeLink';\n\nexport default ProteomeLink;\n","import React from 'react';\n\nimport { createSelector } from 'reselect';\n\nimport loadData from 'higherOrder/loadData/ts';\n\nimport Loading from 'components/SimpleCommonComponents/Loading';\n\nimport config from 'config';\n\ninterface LoadedProps extends LoadDataProps<UniProtProteomesPayload> {}\n\nconst UniProtDescription = ({ data }: LoadedProps) => {\n  if (!data) return null;\n  const { loading, payload } = data;\n  if (loading || !payload) return <Loading />;\n  return data.payload?.description ? (\n    <>\n      <h4>Description</h4>\n      <p>{data.payload?.description}</p>\n    </>\n  ) : null;\n};\n\nconst getProteomeUrl = createSelector(\n  (state: GlobalState) => state.customLocation.description.proteome.accession,\n  (accession) => {\n    if (!accession) return null;\n    return `${config.root.UniProt.href}/proteomes/${accession}`;\n  },\n);\nexport default loadData(getProteomeUrl as LoadDataParameters)(\n  UniProtDescription,\n);\n","import React from 'react';\n\nimport { createSelector } from 'reselect';\n\nimport loadData from 'higherOrder/loadData/ts';\n\nimport config from 'config';\n\nimport BaseLink from 'components/ExtLink/BaseLink';\n\ntype Props = {\n  accession: string;\n  className?: string;\n};\ninterface LoadedProps extends Props, LoadDataProps<RfamPayload> {}\n\nconst RFamLink = ({ data, accession, className }: LoadedProps) => {\n  if (!data) return null;\n  const { loading, payload } = data;\n  if (loading || !payload || payload.hitCount === 0) return null;\n\n  return (\n    <li>\n      <BaseLink\n        id={accession}\n        target={'_blank'}\n        pattern=\"https://rfam.org/genome/{id}\"\n        className={className}\n      >\n        Rfam\n      </BaseLink>\n    </li>\n  );\n};\n\nconst getRfamUrl = createSelector(\n  (_state: GlobalState, props: Props) => props.accession,\n  (accession) => {\n    if (!accession) return null;\n    return `${config.root.Rfam.href}?query=entry_type:Genome%20AND%20id:${accession}&format=json`;\n  },\n);\n\nexport default loadData(getRfamUrl as LoadDataParameters)(RFamLink);\n","import React from 'react';\n\nimport Accession from 'components/Accession';\nimport Species from 'components/Protein/Species';\nimport ProteomeLink from 'components/ExtLink/ProteomeLink';\nimport Loading from 'components/SimpleCommonComponents/Loading';\n\nimport UniProtDescription from './UniProtDescription';\nimport RFamLink from './RfamLink';\n\nimport cssBinder from 'styles/cssBinder';\n\nimport memberSelectorStyle from 'components/Table/TotalNb/style.css';\nimport summary from 'styles/summary.css';\nimport ipro from 'styles/interpro-vf.css';\n\nconst css = cssBinder(summary, memberSelectorStyle, ipro);\n\ntype Props = {\n  data: {\n    metadata: ProteomeMetadata;\n  };\n  loading: boolean;\n};\n\nconst SummaryProteome = ({ data, loading }: Props) => {\n  if (loading || !data.metadata) return <Loading />;\n  const { metadata } = data;\n  return (\n    <div className={css('vf-stack', 'vf-stack--400')}>\n      <section className={css('vf-grid', 'summary-grid')}>\n        <div className={css('vf-stack')}>\n          <table className={css('vf-table', 'left-headers')}>\n            <tbody>\n              <tr>\n                <td style={{ maxWidth: '50%' }}>Proteome ID</td>\n                <td>\n                  <Accession\n                    accession={metadata.proteomeAccession || metadata.accession}\n                    title=\"Proteome ID\"\n                  />\n                </td>\n              </tr>\n              {metadata.strain && (\n                <tr>\n                  <td>Strain</td>\n                  <td>{metadata.strain}</td>\n                </tr>\n              )}\n              <tr>\n                <td>Taxonomy</td>\n                <td data-testid=\"proteome-species\">\n                  <Species\n                    fullName={\n                      typeof metadata.name === 'string'\n                        ? metadata.name\n                        : metadata.name.name\n                    }\n                    taxID={metadata.taxonomy}\n                  />\n                </td>\n              </tr>\n            </tbody>\n          </table>\n          <UniProtDescription />\n        </div>\n        <div className={css('vf-stack')}>\n          <section>\n            <h5>External Links</h5>\n            <ul className={css('no-bullet')}>\n              <li>\n                <ProteomeLink id={metadata.accession} className={css('ext')}>\n                  UniProt\n                </ProteomeLink>\n              </li>\n              <RFamLink accession={metadata.accession} className={css('ext')} />\n            </ul>\n          </section>\n        </div>\n      </section>\n    </div>\n  );\n};\n\nexport default SummaryProteome;\n"],"names":["f","cssBinder","_ref","withTitle","accession","title","React","className","taxID","fullName","Link","to","description","main","key","taxonomy","db","ProteomeLink","_a","id","target","children","props","__rest","BaseLink","Object","assign","pattern","displayName","getProteomeUrl","createSelector","state","customLocation","proteome","config","root","UniProt","href","loadData","data","loading","payload","Loading","_b","getRfamUrl","_state","Rfam","hitCount","css","summary","memberSelectorStyle","ipro","metadata","style","maxWidth","Accession","proteomeAccession","strain","Species","name","UniProtDescription","RFamLink"],"sourceRoot":""}