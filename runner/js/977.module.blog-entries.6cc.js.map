{"version":3,"file":"js/977.module.blog-entries.6cc.js","mappings":"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","sources":["webpack://interpro7-client/./src/components/home/BlogEntries/index.tsx","webpack://interpro7-client/./src/components/home/BlogEntries/styles.css?27a6","webpack://interpro7-client/./src/higherOrder/loadData/ts/index.tsx"],"sourcesContent":["import React from 'react';\n\nimport loadData from 'higherOrder/loadData/ts';\n\nimport Link from 'components/generic/Link';\nimport Tooltip from 'components/SimpleCommonComponents/Tooltip';\nimport Card from 'components/SimpleCommonComponents/Card';\nimport ResizeObserverComponent from 'wrappers/ResizeObserverComponent';\n\nimport { unescape } from 'utils/text';\n\nimport cssBinder from 'styles/cssBinder';\n\nimport fonts from 'EBI-Icon-fonts/fonts.css';\nimport local from './styles.css';\nimport cards from 'components/SimpleCommonComponents/Card/styles.css';\nimport buttonCSS from 'components/SimpleCommonComponents/Button/style.css';\n\nconst css = cssBinder(fonts, local, cards, buttonCSS);\n\nconst BLOG_ROOT = 'https://proteinswebteam.github.io/interpro-blog';\n\ntype BlogEntryProps = {\n  category: string;\n  author?: string;\n  excerpt: string;\n  title: string;\n  url: string;\n  published?: string;\n  image_category:\n    | 'default'\n    | 'biology'\n    | 'protein'\n    | 'technical'\n    | 'website'\n    | 'newweb'\n    | 'newskin'\n    | 'iceberg'\n    | 'type';\n};\n\nexport const BlogEntry = ({\n  category,\n  author,\n  excerpt,\n  title,\n  url,\n  published,\n  image_category: imageCategory,\n}: BlogEntryProps) => {\n  const maxString = 10;\n  return (\n    <Card\n      imageIconClass={css(`image-blog-${imageCategory || 'default'}`)}\n      imageComponent={\n        <div\n          className={css(\n            'card-tag',\n            `tag-${category === 'focus' ? 'focus' : 'blog'}`,\n          )}\n        >\n          <Tooltip\n            title={`View all ${\n              category === 'focus' ? 'Protein focus' : 'Blog articles'\n            }`}\n          >\n            <Link\n              href={`${BLOG_ROOT}/categories/${category}/`}\n              target=\"_blank\"\n              className={css('white-link')}\n            >\n              {category === 'focus' ? 'Protein focus' : 'Blog'}\n            </Link>\n          </Tooltip>\n        </div>\n      }\n      title={\n        <Link href={url} target=\"_blank\">\n          {title}\n        </Link>\n      }\n      subHeader={\n        <>\n          {author && (\n            <div className={css('card-info-author')}>\n              <em className={css('icon', 'icon-common')} data-icon=\"&#xf007;\" />{' '}\n              {author && ` ${author}`}{' '}\n            </div>\n          )}\n\n          {published && (\n            <div\n              className={css('icon', 'icon-common')}\n              data-icon=\"&#xf073;\"\n              aria-label=\"Date\"\n            >\n              {' '}\n              {published.substring(0, maxString)}\n            </div>\n          )}\n        </>\n      }\n      linkForMore={url}\n    >\n      <div\n        className={css('description')}\n        // eslint-disable-next-line react/no-danger\n        dangerouslySetInnerHTML={{ __html: unescape(excerpt) }}\n      />\n    </Card>\n  );\n};\n\ninterface LoadedProps\n  extends LoadDataProps<{\n    [key: string]: BlogEntryProps;\n  }> {}\n\nexport const BlogEntries = ({ data }: LoadedProps) => {\n  if (!data) return null;\n  const { loading, payload } = data;\n  if (loading) return 'Loadingâ€¦';\n  if (!payload) return null;\n  const minWidth = 300;\n\n  return (\n    <section>\n      <ResizeObserverComponent measurements={['width']} element=\"div\">\n        {({ width }: { width: number }) => (\n          <div className={css('blogs-container', 'vf-grid')}>\n            {Object.entries(payload)\n              .slice(0, Math.min(width / minWidth))\n              .map(([type, content]) => (\n                <BlogEntry {...content} key={type} />\n              ))}\n          </div>\n        )}\n      </ResizeObserverComponent>\n      <div className={css('blogs-container', 'vf-grid', 'read-all')}>\n        <Link href={`${BLOG_ROOT}`} target=\"_blank\" buttonType=\"primary\">\n          Read all articles\n        </Link>\n      </div>\n    </section>\n  );\n};\n\nexport default loadData({\n  getUrl: () => `${BLOG_ROOT}/feed.json`,\n  fetchOptions: {\n    responseType: 'json',\n    useCache: false,\n  },\n})(BlogEntries);\n","// extracted by mini-css-extract-plugin\nexport default {\"content\":\"BlogEntries_styles__content___f6\",\"read-all\":\"BlogEntries_styles__read-all___a2\",\"blogs-container\":\"BlogEntries_styles__blogs-container___bd\",\"description\":\"BlogEntries_styles__description___e6\",\"image-blog-default\":\"BlogEntries_styles__image-blog-default___f5\",\"image-blog-biology\":\"BlogEntries_styles__image-blog-biology___f1\",\"image-blog-protein\":\"BlogEntries_styles__image-blog-protein___cb\",\"image-blog-technical\":\"BlogEntries_styles__image-blog-technical___f8\",\"image-blog-website\":\"BlogEntries_styles__image-blog-website___b0\",\"image-blog-newweb\":\"BlogEntries_styles__image-blog-newweb___f0\",\"image-blog-newskin\":\"BlogEntries_styles__image-blog-newskin___d0\",\"image-blog-iceberg\":\"BlogEntries_styles__image-blog-iceberg___a6\",\"image-blog-type\":\"BlogEntries_styles__image-blog-type___cc\"};","import React, { PureComponent } from 'react';\nimport { connect } from 'react-redux';\nimport { createSelector } from 'reselect';\nimport { Diff } from 'utility-types';\n\nimport uniqueId from 'utils/cheap-unique-id';\nimport cancelable from 'utils/cancelable';\nimport {\n  dataProgressInfo,\n  dataProgressUnload,\n  addToast,\n} from 'actions/creators';\n\nimport extractParams from '../extract-params';\nimport getFetch from '../getFetch';\n\nimport { UnconnectedErrorBoundary } from 'wrappers/ErrorBoundary';\n\nconst TIMEOUT = 408;\nconst MS = 1000;\n\nconst mapStateToState = createSelector(\n  (state: unknown) => state,\n  (appState) => ({ appState }),\n);\n\n// Props to connect to the wrapper component that are not injected in the wrapped one\ntype ConnectedProps = {\n  dataProgressInfo?: typeof dataProgressInfo;\n  dataProgressUnload?: typeof dataProgressUnload;\n  addToast?: typeof addToast;\n  appState?: GlobalState;\n};\n\nconst loadData = <Payload = unknown, Namespace extends string = ''>(\n  params?: LoadDataParameters,\n) => {\n  const {\n    getUrl,\n    fetchOptions,\n    propNamespace,\n    weight,\n    mapStateToProps,\n    mapDispatchToProps,\n  } = extractParams(params);\n  const fetchFun = getFetch(fetchOptions);\n\n  // Defining the function here to be able to use the Generic Type Payload\n  const newData = (url: string): RequestedData<Payload> => ({\n    loading: !!url,\n    progress: 0,\n    ok: true,\n    status: null,\n    payload: null,\n    url,\n  });\n\n  return <BaseProps extends LoadDataProps<Payload, Namespace>>(\n    Wrapped: React.ComponentType<BaseProps>,\n  ) => {\n    type WrapperProps = ReturnType<typeof mapStateToProps> &\n      typeof mapDispatchToProps &\n      ConnectedProps;\n\n    type WrapperState = {\n      url: string;\n      data: RequestedData<Payload>;\n      staleData?: RequestedData<Payload>;\n      retries: number;\n      progress?: number;\n      loading?: boolean;\n    };\n\n    class DataWrapper extends PureComponent<WrapperProps, WrapperState> {\n      static displayName = `loadData(${Wrapped.displayName || Wrapped.name})`;\n      #id: string;\n      #request?: CancelableRequest;\n      timeoutID = 0;\n\n      constructor(props: WrapperProps) {\n        super(props);\n\n        // Identify this specific data loader\n        this.#id = uniqueId('data-loader');\n\n        // Initialize state\n        const url = getUrl?.(props.appState || {}, props) || '';\n        this.state = {\n          url,\n          data: newData(url),\n          staleData: undefined,\n          retries: 0,\n        };\n      }\n\n      static getDerivedStateFromProps(\n        nextProps: WrapperProps,\n        prevState: WrapperState,\n      ) {\n        // get potential new url in state according to props\n        const url = getUrl?.(nextProps.appState || {}, nextProps) || '';\n        // if it's the same, don't update the state\n        if (prevState.url === url) return null;\n        // otherwise, update url in state, and create new data object in state\n        return { data: newData(url), url };\n      }\n\n      componentDidMount() {\n        // start loading data on mount\n        this._load(this.state.url);\n      }\n\n      componentDidUpdate(_prevProps: WrapperProps, prevState: WrapperState) {\n        // if the url has changed\n        if (\n          prevState.url !== this.state.url ||\n          prevState.retries !== this.state.retries\n        ) {\n          // cancel current request\n          this._cancel();\n          // and start new one\n          this._load(this.state.url);\n        }\n      }\n\n      // cancel current request on unmount\n      componentWillUnmount() {\n        this._cancel();\n        if (this.timeoutID) {\n          window.clearTimeout(this.timeoutID);\n        }\n      }\n\n      _cancel = () => {\n        if (this.#request) this.#request.cancel();\n        this.props.dataProgressUnload?.(this.#id);\n      };\n\n      _progress = (progress: number) => {\n        this.setState(({ data }) => ({ data: { ...data, progress } }));\n        this.props.dataProgressInfo?.(this.#id, progress, weight);\n      };\n\n      _load = async (url: string) => {\n        if (!url) {\n          this.setState({\n            staleData: {\n              ...this.state.data,\n            },\n          });\n          return;\n        }\n        // Progress: 0\n        this.props.dataProgressInfo?.(this.#id, 0, weight);\n        this.#request = cancelable<BasicResponse>((signal) =>\n          fetchFun(\n            url,\n            { ...fetchOptions, signal },\n            this._progress,\n            this.props.addToast,\n          ),\n        );\n        // We keep a hold on *this* request, because it might change\n        const request = this.#request;\n        try {\n          const response = await request.promise;\n          // Analytics\n          gtag('event', 'data', {\n            event_category: 'data',\n            event_response: response.status,\n            event_label: url,\n            // Custom Metric in google analytics as metrics1: From Client Cache\n            event_clientcache: response.headers.has('Client-Cache') ? 1 : 0,\n            // Custom Metric in google analytics as metrics1: From Server Cache\n            event_cache: response.headers.has('Cached') ? 1 : 0,\n          });\n          // We have a response ðŸŽ‰ set it into the local state\n          this.setState(({ data }) => {\n            const nextData = {\n              ...data,\n              ...response,\n              progress: 1,\n              loading: false,\n            };\n            return { data: nextData, staleData: nextData };\n          });\n          // Progress: 1\n          this.props.dataProgressInfo?.(this.#id, 1, weight);\n\n          const msToRetry =\n            (this.props.appState?.settings.navigation.secondsToRetry || 0) * MS;\n          // Scheduling to retry because we got a 408\n          if (response.status === TIMEOUT) {\n            this.timeoutID = window.setTimeout(() => {\n              console.log('Retrying the Timed out query');\n              this.setState({ retries: this.state.retries + 1 });\n            }, msToRetry);\n          }\n        } catch (error) {\n          // If request has been canceled, it means we did it, on purpose, so\n          // just ignore, otherwise it's a real error\n          if (!request.canceled) {\n            // we have a problem, something bad happened\n            // Analytics\n            gtag('event', 'error', {\n              event_category: 'data',\n              event_status: 'fail',\n              event_label: url,\n              // Custom Metric in google analytics as metrics3: Is Client Online\n              event_online: window.navigator.onLine ? 1 : 0,\n            });\n            this.setState(({ data }) => ({\n              data: { ...data, loading: false, progress: 1, ok: false, error },\n            }));\n            // Progress: 1\n            this.props.dataProgressInfo?.(this.#id, 1, weight);\n          }\n        }\n      };\n\n      render() {\n        const {\n          // props to be removed\n          dataProgressInfo: _,\n          dataProgressUnload: __,\n          addToast: ___,\n          appState,\n          // rest of props, to be passed down\n          ...rest\n        } = this.props;\n        const datakey: DataKey = `data${propNamespace}`;\n        const stalekey: IsStaleKey = `isStale${propNamespace}`;\n        const passedProps /*: LoadDataProps<Payload> */ = {\n          [datakey]: (this.state.staleData ||\n            this.state.data) as RequestedData<Payload>,\n          [stalekey]: this.state.staleData !== this.state.data,\n        };\n        // The correction below is needed for MS Edge\n        if (\n          this.state.data &&\n          !this.state.data.loading &&\n          this.state.data.url === this.state.url\n        )\n          passedProps[`isStale${propNamespace}`] = false;\n        return (\n          <UnconnectedErrorBoundary customLocation={appState?.customLocation}>\n            <Wrapped\n              {...(rest as BaseProps)}\n              {...passedProps}\n              {...(mapStateToProps?.(appState, {\n                ...(rest as BaseProps),\n                ...passedProps,\n              }) || {})}\n            />\n          </UnconnectedErrorBoundary>\n        );\n      }\n    }\n    const dispatchProps = {\n      dataProgressInfo,\n      dataProgressUnload,\n      addToast,\n      ...mapDispatchToProps,\n    };\n    const connector = connect<\n      ReturnType<typeof mapStateToProps>,\n      typeof dispatchProps,\n      Diff<BaseProps, LoadDataProps<Payload, Namespace>>,\n      GlobalState\n    >(mapStateToState, dispatchProps);\n    return connector(DataWrapper) as React.ComponentType<BaseProps>;\n  };\n};\n\nexport default loadData;\n"],"names":["css","cssBinder","fonts","cards","buttonCSS","BLOG_ROOT","BlogEntry","_ref","category","author","excerpt","title","url","published","image_category","imageCategory","React","Card","imageIconClass","imageComponent","className","Tooltip","Link","href","target","subHeader","substring","linkForMore","dangerouslySetInnerHTML","__html","unescape","BlogEntries","_ref2","data","loading","payload","ResizeObserverComponent","measurements","element","_ref3","width","Object","entries","slice","Math","min","map","_ref4","type","content","assign","key","buttonType","loadData","getUrl","fetchOptions","responseType","useCache","mapStateToState","createSelector","state","appState","params","propNamespace","weight","mapStateToProps","mapDispatchToProps","extractParams","fetchFun","getFetch","newData","progress","ok","status","Wrapped","DataWrapper","PureComponent","constructor","props","super","_DataWrapper_id","set","_DataWrapper_request","timeoutID","_cancel","__classPrivateFieldGet","this","cancel","_b","_a","dataProgressUnload","call","_progress","setState","dataProgressInfo","_load","__awaiter","__classPrivateFieldSet","cancelable","signal","addToast","request","response","promise","gtag","event_category","event_response","event_label","event_clientcache","headers","has","event_cache","nextData","staleData","_d","_c","msToRetry","_e","settings","navigation","secondsToRetry","window","setTimeout","console","log","retries","error","canceled","event_status","event_online","navigator","onLine","_g","_f","uniqueId","undefined","getDerivedStateFromProps","nextProps","prevState","componentDidMount","componentDidUpdate","_prevProps","componentWillUnmount","clearTimeout","render","_","__","___","rest","__rest","stalekey","passedProps","UnconnectedErrorBoundary","customLocation","displayName","name","dispatchProps","connect","connector"],"sourceRoot":""}