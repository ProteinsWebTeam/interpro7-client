{"version":3,"file":"js/2340.module.tree-view.a11.js","mappings":"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","sources":["webpack://interpro7-client/./src/components/Tip/index.js","webpack://interpro7-client/./src/wrappers/ResizeObserverComponent/ResizeObserver.js","webpack://interpro7-client/./src/wrappers/ResizeObserverComponent/index.js","webpack://interpro7-client/./src/components/SimpleCommonComponents/FullScreenButton/index.tsx","webpack://interpro7-client/./src/utils/fullscreen/index.js","webpack://interpro7-client/./src/components/Table/views/Tree/DataProvider/index.tsx","webpack://interpro7-client/./src/components/Table/views/Tree/index.tsx","webpack://interpro7-client/./src/components/Table/views/Tree/style.css?768c","webpack://interpro7-client/./src/components/Tree/style.css?9c1b","webpack://interpro7-client/./src/components/Tree/index.tsx","webpack://interpro7-client/./node_modules/lodash-es/_cloneBuffer.js","webpack://interpro7-client/./node_modules/lodash-es/_initCloneArray.js","webpack://interpro7-client/./node_modules/lodash-es/_cloneArrayBuffer.js","webpack://interpro7-client/./node_modules/lodash-es/_cloneRegExp.js","webpack://interpro7-client/./node_modules/lodash-es/_cloneSymbol.js","webpack://interpro7-client/./node_modules/lodash-es/_initCloneByTag.js","webpack://interpro7-client/./node_modules/lodash-es/_cloneDataView.js","webpack://interpro7-client/./node_modules/lodash-es/_cloneTypedArray.js","webpack://interpro7-client/./node_modules/lodash-es/isMap.js","webpack://interpro7-client/./node_modules/lodash-es/_baseIsMap.js","webpack://interpro7-client/./node_modules/lodash-es/isSet.js","webpack://interpro7-client/./node_modules/lodash-es/_baseIsSet.js","webpack://interpro7-client/./node_modules/lodash-es/_baseClone.js","webpack://interpro7-client/./node_modules/lodash-es/_copyArray.js","webpack://interpro7-client/./node_modules/lodash-es/_initCloneObject.js","webpack://interpro7-client/./node_modules/lodash-es/_copySymbolsIn.js","webpack://interpro7-client/./node_modules/lodash-es/_baseAssignIn.js","webpack://interpro7-client/./node_modules/lodash-es/_copySymbols.js","webpack://interpro7-client/./node_modules/lodash-es/_baseAssign.js","webpack://interpro7-client/./node_modules/lodash-es/_copyObject.js","webpack://interpro7-client/./node_modules/lodash-es/_getAllKeysIn.js","webpack://interpro7-client/./node_modules/lodash-es/_getSymbolsIn.js","webpack://interpro7-client/./node_modules/lodash-es/cloneDeep.js","webpack://interpro7-client/./node_modules/lodash-es/_baseKeysIn.js","webpack://interpro7-client/./node_modules/lodash-es/_nativeKeysIn.js","webpack://interpro7-client/./node_modules/lodash-es/keysIn.js"],"sourcesContent":["// @flow\nimport { useEffect } from 'react';\nimport T from 'prop-types';\n\n// $FlowFixMe\nimport { addToast, changeSettingsRaw } from 'actions/creators';\nimport { connect } from 'react-redux';\n\nconst TTL = 5000;\n\n/*:: type Props = {\n  title?: string,\n  body: string,\n  checkBoxLabel?: string,\n  ttl?: number,\n  toastID: string,\n  settingsName: string,\n  addToast: function,\n  changeSettingsRaw: function,\n};*/\n\nconst Tip = (\n  {\n    title,\n    body,\n    checkBoxLabel,\n    ttl,\n    toastID,\n    addToast,\n    changeSettingsRaw,\n    settingsName,\n  } /*: Props */,\n) => {\n  useEffect(() => {\n    addToast(\n      {\n        title: title || '💡 Tip',\n        body: body,\n        checkBox: {\n          label: checkBoxLabel || 'Do not show again',\n          fn: () => changeSettingsRaw('notifications', settingsName, false),\n        },\n        ttl: ttl || TTL,\n      },\n      toastID,\n    );\n  });\n  return null;\n};\nTip.propTypes = {\n  title: T.string,\n  body: T.oneOfType([T.string, T.object]).isRequired,\n  checkBoxLabel: T.string,\n  ttl: T.number,\n  toastID: T.string.isRequired,\n  settingsName: T.string.isRequired,\n  addToast: T.func.isRequired,\n  changeSettingsRaw: T.func.isRequired,\n};\nexport default connect(null, { addToast, changeSettingsRaw })(Tip);\n","// @flow\nimport { schedule, sleep } from 'timing-functions';\n\n/*:: type ResizeObserverEntry = {\n  target: HTMLElement,\n  contentRect: {[key: string]: number},\n}; */\n\nexport default (() => {\n  // Use native if possible\n  if ('ResizeObserver' in window) return window.ResizeObserver;\n  // or fallback, with incomplete polyfill, that should be enough for what we do\n  return class ResizeObserver {\n    /*:: _node: ?HTMLElement; */\n    /*:: _onResizeEvent: Array<ResizeObserverEntry> => any; */\n\n    constructor(onResizeEvent /*: Array<ResizeObserverEntry> => any */) {\n      if (typeof onResizeEvent !== 'function') {\n        throw new Error('missing resize handler');\n      }\n      this._onResizeEvent = onResizeEvent;\n    }\n\n    _handleResize = async () => {\n      await schedule();\n      if (!this._node) return;\n      this._onResizeEvent([\n        {\n          target: this._node,\n          // $FlowFixMe class-object-subtyping\n          contentRect: this._node.getBoundingClientRect(),\n        },\n      ]);\n    };\n\n    observe(node /*: HTMLElement */) {\n      if (!node instanceof HTMLElement) {\n        throw new Error('ResizeObserver only works on HTML elements');\n      }\n      if (this._node) {\n        throw new Error('ResizeObserver fallback only supports one node');\n      }\n      this._node = node;\n      window.addEventListener('resize', this._handleResize);\n      this._handleResize();\n      // just in case it happened too soon, just redo it after a bit\n      // eslint-disable-next-line no-magic-numbers\n      sleep(1000).then(this._handleResize);\n    }\n\n    unobserve(node /*: HTMLElement */) {\n      if (this._node && this._node !== node) {\n        throw new Error('Trying to unobserve the wrong node');\n      }\n      this._node = null;\n      window.removeEventListener('resize', this._handleResize);\n    }\n  };\n})();\n","// @flow\nimport React, { PureComponent } from 'react';\nimport T from 'prop-types';\n/*:: import type { Node } from 'react'; */\n\nimport ResizeObserver from './ResizeObserver';\n\n/*:: type Measurement =\n  'bottom' | 'height' | 'left' | 'right' | 'top' | 'width' | 'x' | 'y';\n*/\n\n/*:: type State = {\n  [Measurement]: number,\n}; */\n\n/*:: type Props = {\n  element: ?string,\n  children: State => Node,\n  measurements: Measurement | Array<Measurement>,\n  updateCallback?: ?function,\n}; */\n\nclass ResizeObserverComponent extends PureComponent /*:: <Props, State> */ {\n  /*::\n    _ref: { current: null | React$ElementRef<string | Class<React$Component<*, *>>> };\n    _resizeObserver: any;\n  */\n\n  static propTypes = {\n    element: T.string,\n    children: T.func.isRequired,\n    measurements: T.oneOfType([T.arrayOf(T.string).isRequired, T.string]),\n    updateCallback: T.func,\n  };\n\n  constructor(props /*: Props */) {\n    super(props);\n\n    this.state = {};\n    this._resizeObserver = new ResizeObserver(\n      // $FlowFixMe method-unbinding\n      this._handleResizeEvent.bind(this),\n    );\n\n    this._ref = React.createRef();\n  }\n\n  componentDidMount() {\n    this._resizeObserver.observe(this._ref.current);\n  }\n\n  componentDidUpdate() {\n    if (this.props.updateCallback) this.props.updateCallback();\n  }\n\n  componentWillUnmount() {\n    this._resizeObserver.unobserve(this._ref.current);\n  }\n\n  _handleResizeEvent(resizeObserverEntries) {\n    let finalContentRect;\n    for (const { target, contentRect } of resizeObserverEntries) {\n      if (target !== this._ref.current) continue; // shouldn't happen, but still\n      finalContentRect = contentRect;\n    }\n    if (finalContentRect) {\n      const state = {};\n      let { measurements } = this.props;\n      if (!Array.isArray(measurements)) {\n        measurements = [measurements];\n      }\n      for (const measurement of measurements) {\n        state[measurement] = finalContentRect[measurement];\n      }\n      this.setState(state);\n    }\n  }\n\n  render() {\n    const {\n      children,\n      element,\n      measurements: __,\n      updateCallback: _,\n      ...props\n    } = this.props;\n    const Element = element || 'span';\n    return (\n      // $FlowIgnore\n      <Element {...props} ref={this._ref}>\n        {children(this.state)}\n      </Element>\n    );\n  }\n}\n\nexport default ResizeObserverComponent;\n","import React, { useState, useEffect } from 'react';\n\nimport { noop } from 'lodash-es';\n\nimport Tooltip from 'components/SimpleCommonComponents/Tooltip';\nimport Button from 'components/SimpleCommonComponents/Button';\n\nimport { requestFullScreen, exitFullScreen } from 'utils/fullscreen';\nimport cssBinder from 'styles/cssBinder';\n\nimport fonts from 'EBI-Icon-fonts/fonts.css';\n\nconst css = cssBinder(fonts);\n\ntype Props = {\n  /**\n   * Hook that is call when the full screen action gets trigger\n   * @returns void\n   */\n  onFullScreenHook?: () => void;\n  /**\n   * Hook that is call when exiting the full screen action\n   * @returns void\n   */\n  onExitFullScreenHook?: () => void;\n  /**\n   * Either the id, or directly the DOM element to be send to full screen\n   */\n  element?: string | HTMLElement | null;\n  /**\n   * Content of the tooltip that appears when hovering this button\n   */\n  tooltip: string;\n  /**\n   * Extra CSS classes to add\n   */\n  className?: string;\n  /**\n   * Should we change the icon for one from https://www.ebi.ac.uk/style-lab/general/fonts/v1.3/\n   */\n  dataIcon?: string;\n  /**\n   * To disable the component\n   */\n  disabled?: boolean;\n};\nconst FullScreenButton = ({\n  element,\n  tooltip,\n  className,\n  dataIcon,\n  disabled = false,\n  onFullScreenHook = noop,\n  onExitFullScreenHook = noop,\n}: Props) => {\n  const [elementInDOM, setElementInDom] = useState<\n    HTMLElement | null | undefined\n  >(null);\n  const [isFull, setFull] = useState(false);\n  const onFullscreen = () => {\n    if (document.fullscreenElement === null) {\n      setFull(false);\n      onExitFullScreenHook();\n    }\n  };\n  useEffect(() => {\n    document.addEventListener('fullscreenchange', onFullscreen);\n    return () => document.removeEventListener('fullscreenchange', onFullscreen);\n  }, []);\n  useEffect(() => {\n    setElementInDom(\n      typeof element === 'string' ? document.getElementById(element) : element,\n    );\n  }, [element]);\n\n  if (!elementInDOM) return null;\n  const _handleFullScreen = () => {\n    if (isFull) {\n      exitFullScreen();\n      onExitFullScreenHook();\n    } else {\n      requestFullScreen(elementInDOM).then(() => onFullScreenHook());\n    }\n    setFull(!isFull);\n  };\n  const _className =\n    className || css('margin-bottom-none', 'icon', 'icon-common');\n  const icon =\n    dataIcon || (isFull ? 'icon-fullscreen-collapse' : 'icon-fullscreen');\n  return (\n    <Tooltip title={tooltip}>\n      <Button\n        type=\"inline\"\n        onClick={_handleFullScreen}\n        icon={icon}\n        title={tooltip}\n        className={_className}\n        disabled={disabled}\n      />\n    </Tooltip>\n  );\n};\n\nexport default FullScreenButton;\n","export const requestFullScreen = (element) => {\n  if ('requestFullscreen' in element) {\n    return element.requestFullscreen();\n  } else if ('webkitRequestFullscreen' in element) {\n    return element.webkitRequestFullscreen();\n  } else if ('mozRequestFullScreen' in element) {\n    return element.mozRequestFullScreen();\n  } else if ('msRequestFullscreen' in element) {\n    return element.msRequestFullscreen();\n  }\n};\n\nexport const exitFullScreen = () => {\n  if ('exitFullscreen' in document) {\n    return document.exitFullscreen();\n  } else if ('webkitExitFullscreen' in document) {\n    return document.webkitExitFullscreen();\n  } else if ('mozExitFullScreen' in document) {\n    return document.mozExitFullScreen();\n  } else if ('msExitFullscreen' in document) {\n    return document.msExitFullscreen();\n  }\n};\n\nexport const onFullScreenChange = (element, callback) => {\n  if ('onfullscreenchange' in element) {\n    element.onfullscreenchange = callback;\n  } else if ('onwebkitfullscreenchange' in element) {\n    element.onwebkitfullscreenchange = callback;\n  } else if ('onmozfullscreenchange' in element) {\n    element.onmozfullscreenchange = callback;\n  } else if ('onfullscreenchange' in document) {\n    document.onfullscreenchange = callback;\n  } else if ('onwebkitfullscreenchange' in document) {\n    document.onwebkitfullscreenchange = callback;\n  } else if ('onmozfullscreenchange' in document) {\n    document.onmozfullscreenchange = callback;\n  } else if ('onMSFullscreenChange' in document) {\n    document.onMSFullscreenChange = callback;\n  }\n};\n","import { PureComponent } from 'react';\n\ntype Props<Payload = unknown> = {\n  taxID?: string;\n  sendData: (taxID: string, payload: Payload) => void;\n};\nexport interface DataProviderLoadedProps<Payload = unknown>\n  extends Props<Payload>,\n    LoadDataProps<Payload> {}\n\nclass DataProvider<Payload = unknown> extends PureComponent<\n  DataProviderLoadedProps<Payload>\n> {\n  _sent: boolean = false;\n\n  componentDidMount() {\n    this._sendDataUpIfAny();\n  }\n\n  componentDidUpdate({ data }: DataProviderLoadedProps<Payload>) {\n    if (this.props.data?.payload !== data?.payload) this._sendDataUpIfAny();\n  }\n\n  _sendDataUpIfAny = () => {\n    if (this._sent) return;\n    const { taxID, data, sendData } = this.props;\n    if (!taxID) return;\n    const { loading, payload } = data || {};\n    if (!loading && payload) {\n      this._sent = true;\n      sendData(taxID, payload);\n    }\n  };\n\n  render() {\n    return null;\n  }\n}\n\nexport default DataProvider;\n","import React, { Component } from 'react';\nimport { createSelector } from 'reselect';\nimport { format } from 'url';\nimport { cloneDeep } from 'lodash-es';\n\nimport { goToCustomLocation } from 'actions/creators';\nimport { connect } from 'react-redux';\n\nimport Link from 'components/generic/Link';\nimport Loading from 'components/SimpleCommonComponents/Loading';\n\nimport Tree from 'components/Tree';\nimport NumberComponent from 'components/NumberComponent';\nimport abbreviateNumber from 'components/NumberComponent/utils/number-to-display-text';\nimport Tip from 'components/Tip';\n\nimport descriptionToPath from 'utils/processDescription/descriptionToPath';\n\nimport loadData from 'higherOrder/loadData/ts';\n\nimport cssBinder from 'styles/cssBinder';\n\nimport styles from './style.css';\nimport fonts from 'EBI-Icon-fonts/fonts.css';\nimport DataProvider, { DataProviderLoadedProps } from './DataProvider';\n\nconst css = cssBinder(styles, fonts);\n\nconst ANIMATION_DURATION = 0.3;\n\nconst mapStateToUrlFor = (taxID: string) =>\n  createSelector(\n    (state: GlobalState) => state.settings.api,\n    (state: GlobalState) => state.customLocation.description,\n    ({ protocol, hostname, port, root }, description) => {\n      if (\n        (description.main.key === 'entry' && description.entry.accession) ||\n        (description.main.key === 'taxonomy' && description.entry.db)\n      ) {\n        const query = description.entry.accession\n          ? {\n              filter_by_entry: description.entry.accession,\n            }\n          : {\n              filter_by_entry_db: description.entry.db,\n            };\n        return format({\n          protocol,\n          hostname,\n          port,\n          pathname:\n            root +\n            descriptionToPath({\n              main: { key: 'taxonomy' },\n              taxonomy: {\n                db: 'uniprot',\n                accession: taxID,\n              },\n            }),\n          query,\n        });\n      }\n      return format({\n        protocol,\n        hostname,\n        port,\n        pathname:\n          root +\n          descriptionToPath({\n            ...description,\n            [description.main.key!]: {\n              ...description[description.main.key as Endpoint],\n              isFilter: description.main.key !== 'taxonomy',\n            },\n            main: { key: 'taxonomy' },\n            taxonomy: {\n              db: 'uniprot',\n              accession: taxID,\n            },\n          }),\n        search: 'with_names',\n      });\n    },\n  );\n\ntype Names = Record<string, NameObject>;\ntype CountersMap = Record<string, TaxonomyCounters>;\n\nconst findNodeWithId = (id: string, node: TaxNode): TaxNode | undefined => {\n  if (node.id === id) return node;\n  for (const child of node.children || []) {\n    const found = findNodeWithId(id, child);\n    if (found) return found;\n  }\n  return undefined;\n};\n\nconst addNodesFromLineage = (update: TaxNode, root: TaxNode, names: Names) => {\n  const lineage = (update.lineage || '').trim().split(' ');\n  lineage.splice(-1);\n  const parentId = lineage.splice(-1)?.[0];\n  let parent = findNodeWithId(parentId, root);\n\n  if (!parent) {\n    parent = addNodesFromLineage(\n      {\n        name: names[parentId]?.short || parentId,\n        id: parentId,\n        lineage: [...lineage, parentId].join(' '),\n      },\n      root,\n      names,\n    );\n  }\n\n  if (!parent.children) parent.children = [];\n  parent.children.push(update);\n\n  return update;\n};\n\nconst mergeData = (\n  root: TaxNode,\n  update: TaxonomyMetadata,\n  names: Names,\n  childrenCounters?: CountersMap,\n) => {\n  let toUpdate = findNodeWithId(update.accession, root);\n  if (!toUpdate) {\n    toUpdate = addNodesFromLineage(\n      {\n        id: update.accession,\n        name: names[update.accession].short || '',\n        lineage: update.lineage,\n      },\n      root,\n      names,\n    );\n  }\n  toUpdate!.lineage = update.lineage;\n  toUpdate!.counters = update.counters;\n  toUpdate!.rank = update.rank;\n  toUpdate!.hitcount = abbreviateNumber(update?.counters?.proteins, true);\n  if (!toUpdate.children || (update.children && update.children.length)) {\n    toUpdate.children = update.children.map((id) => ({\n      name: names[id].short || names[id].name,\n      id,\n      hitcount: abbreviateNumber(childrenCounters?.[id]?.proteins, true),\n    }));\n  }\n  return root;\n};\ntype Props = {\n  customLocation: InterProLocation;\n  dataTable: Array<TaxonommyTreePayload>;\n  goToCustomLocation: typeof goToCustomLocation;\n  showTreeToast?: boolean;\n  onFocusChanged: (taxID: string) => void;\n};\n\ntype State = {\n  data: TaxNode;\n  focused: string;\n  entryDB: string | null;\n  exactMatch?: TaxonommyTreePayload;\n};\n\ntype Provider = React.ComponentType<\n  DataProviderLoadedProps<TaxonommyTreePayload>\n>;\n\nclass TreeView extends Component<Props, State> {\n  _CDPMap: Map<string, Provider>;\n  _lineageNames: Map<string, string>;\n  _initialLoad: boolean;\n\n  constructor(props: Props) {\n    super(props);\n    this.state = {\n      data: { name: 'root', id: '1' },\n      focused: '1',\n      entryDB: props.customLocation.description.entry.db,\n      exactMatch: props.dataTable.find((x) => x?.metadata?.exact_match),\n    };\n    this._CDPMap = new Map();\n    this._lineageNames = new Map();\n    this._initialLoad = true;\n  }\n\n  static getDerivedStateFromProps(\n    {\n      customLocation: {\n        description: {\n          entry: { db: newDB },\n        },\n      },\n      dataTable,\n    }: Props,\n    { entryDB: oldDB, exactMatch }: State,\n  ) {\n    if (newDB !== oldDB) {\n      return {\n        focused: '1',\n        entryDB: newDB,\n      };\n    }\n    const newMatch = dataTable?.find((x) => x?.metadata?.exact_match);\n    if (exactMatch?.metadata.accession !== newMatch?.metadata.accession) {\n      return {\n        entryDB: oldDB,\n        exactMatch: newMatch,\n      };\n    }\n    return null;\n  }\n\n  shouldComponentUpdate(nextProps: Props, nextState: State) {\n    const {\n      customLocation: {\n        description: {\n          entry: { db: newDB },\n        },\n      },\n    } = nextProps;\n    const {\n      customLocation: {\n        description: {\n          entry: { db: oldDB },\n        },\n      },\n    } = this.props;\n    if (newDB !== oldDB) this._CDPMap.clear();\n    return nextProps !== this.props || nextState !== this.state;\n  }\n\n  componentWillUnmount() {\n    this._CDPMap.clear();\n  }\n  _handleNewSearchData = (taxID: string, payload: TaxonommyTreePayload) => {\n    this._handleNewData(taxID, payload);\n    this._handleNewFocus(taxID);\n  };\n\n  _handleNewData = (taxID: string, payload: TaxonommyTreePayload) => {\n    if (payload?.metadata?.children) {\n      const c = payload.metadata.children.length;\n      if (c === 1 && this._initialLoad) {\n        this._handleNewFocus(payload.metadata.children[0]);\n      } else {\n        this._initialLoad = false;\n      }\n    }\n    if (payload.metadata) {\n      this.setState(({ data } /*: {data: Node} */) => ({\n        data: {\n          ...mergeData(data, payload.metadata, payload.names, payload.children),\n        },\n      }));\n    }\n  };\n\n  _handleNewFocus = (taxID: string) => {\n    if (taxID) {\n      this.setState({ focused: taxID });\n      if (this.props.onFocusChanged) {\n        this.props.onFocusChanged(taxID);\n      }\n    }\n  };\n\n  _handleLabelClick = (taxID: string) => {\n    this.props.goToCustomLocation({\n      description: {\n        main: { key: 'taxonomy' },\n        taxonomy: {\n          db: 'UniProt',\n          accession: taxID,\n        },\n      },\n    });\n  };\n\n  _storeLineageNames = (focused: string, data: TaxNode) => {\n    if (focused === data.id) {\n      this._lineageNames.set(focused, data.name);\n    } else {\n      data?.children?.forEach((child) => {\n        this._storeLineageNames(focused, child);\n      });\n    }\n  };\n\n  render() {\n    const { focused, data, exactMatch } = this.state;\n    let ConnectedDataProvider = this._CDPMap.get(focused);\n    if (!ConnectedDataProvider) {\n      ConnectedDataProvider = loadData<TaxonommyTreePayload>(\n        mapStateToUrlFor(focused) as LoadDataParameters,\n      )(DataProvider<TaxonommyTreePayload>);\n      this._CDPMap.set(focused, ConnectedDataProvider);\n      this._storeLineageNames(focused, data);\n    }\n    let ConnectedDataProviderSearch: Provider | null | undefined = null;\n    if (exactMatch) {\n      ConnectedDataProviderSearch = this._CDPMap.get(\n        exactMatch.metadata.accession,\n      );\n      if (!ConnectedDataProviderSearch) {\n        ConnectedDataProviderSearch = loadData<TaxonommyTreePayload>(\n          mapStateToUrlFor(exactMatch.metadata.accession) as LoadDataParameters,\n        )(DataProvider<TaxonommyTreePayload>);\n        this._CDPMap.set(\n          exactMatch.metadata.accession,\n          ConnectedDataProviderSearch,\n        );\n      }\n    }\n    const currentNode = findNodeWithId(focused, data);\n    const {\n      customLocation: { description },\n    } = this.props;\n    const mainEndpoint = description.main.key;\n    const countersToShow = {\n      entry: ['entries', description.entry?.db || 'all'],\n      protein: ['proteins', 'uniprot'],\n      structure: ['structures', 'pdb'],\n      proteome: ['proteomes', 'uniprot'],\n    };\n\n    /* Compute breadcrumb */\n\n    let lineageIDs: string[] | undefined = [];\n    const lineageString: string | undefined = currentNode?.lineage?.slice(\n      1,\n      currentNode?.lineage?.length - 1,\n    );\n\n    // Splitting string\n    if (lineageString) {\n      lineageIDs = lineageString.split(' ');\n      for (let i = 0; i < lineageIDs?.length; i++) {\n        lineageIDs[i] = lineageIDs[i].trim();\n      }\n    }\n    return (\n      <>\n        {this.props.showTreeToast ? (\n          <Tip\n            body=\"Arrow keys can be used to navigate the tree\"\n            toastID=\"tree\"\n            settingsName=\"showTreeToast\"\n          />\n        ) : null}\n        <div className={css('node-details')}>\n          <div className={css('node-info')}>\n            <header>\n              <Link\n                to={{\n                  description: {\n                    main: { key: 'taxonomy' },\n                    taxonomy: { db: 'uniprot', accession: focused },\n                  },\n                }}\n              >\n                {currentNode?.name}\n              </Link>\n            </header>\n            {currentNode?.rank?.toLowerCase() !== 'no rank' && (\n              <div>\n                <p>{currentNode?.rank}</p>\n              </div>\n            )}\n            {currentNode?.lineage && lineageIDs.length > 1 && (\n              <nav className={css('breadcrumbs')}>\n                {lineageIDs.map((key) => (\n                  <li key={key}>\n                    <Link\n                      to={{\n                        description: {\n                          main: { key: 'taxonomy' },\n                          taxonomy: { db: 'uniprot', accession: key },\n                        },\n                      }}\n                    >\n                      {`${\n                        this._lineageNames\n                          ?.get(key)\n                          ?.charAt(0)\n                          ?.toUpperCase() || ''\n                      }${this._lineageNames.get(key)?.slice(1) || ''}`}\n                    </Link>\n                  </li>\n                ))}\n              </nav>\n            )}\n          </div>\n          <div className={css('node-links')}>\n            {currentNode?.counters ? (\n              <ul>\n                {Object.entries(countersToShow)\n                  .map(([endpoint, [plural, db]]) => {\n                    if (\n                      endpoint === mainEndpoint ||\n                      !(plural in currentNode.counters!)\n                    )\n                      return null;\n                    const to: InterProPartialDescription = {\n                      ...cloneDeep(description),\n                      [endpoint]: {\n                        isFilter: true,\n                        db,\n                        order: 1,\n                      },\n                    };\n\n                    if (description.main.key === 'taxonomy') {\n                      to!.taxonomy!.accession = this.state.focused;\n                      if (endpoint !== 'entry') to!.entry!.order = 2;\n                    } else {\n                      to.taxonomy = {\n                        db: 'uniprot',\n                        isFilter: true,\n                        order: 2,\n                        accession: this.state.focused,\n                      };\n                    }\n                    return (\n                      <li key={endpoint}>\n                        <Link\n                          className={css('no-decoration', {\n                            disable:\n                              !currentNode?.counters?.[\n                                plural as keyof TaxonomyCounters\n                              ],\n                          })}\n                          to={{\n                            description: to,\n                          }}\n                        >\n                          <NumberComponent duration={ANIMATION_DURATION}>\n                            {\n                              currentNode?.counters?.[\n                                plural as keyof TaxonomyCounters\n                              ]\n                            }\n                          </NumberComponent>{' '}\n                          {plural}\n                        </Link>{' '}\n                        -\n                      </li>\n                    );\n                  })\n                  .filter(Boolean)}\n              </ul>\n            ) : (\n              <Loading inline={true} />\n            )}\n          </div>\n        </div>\n        <ConnectedDataProvider sendData={this._handleNewData} taxID={focused} />\n        {ConnectedDataProviderSearch && (\n          <ConnectedDataProviderSearch\n            sendData={this._handleNewSearchData}\n            taxID={exactMatch?.metadata.accession}\n          />\n        )}\n        <Tree\n          data={data}\n          focused={focused}\n          changeFocus={this._handleNewFocus}\n          data-testid=\"data-tree\"\n        />\n      </>\n    );\n  }\n}\n\nconst mapStateToProps = createSelector(\n  (state: GlobalState) => state.settings.notifications.showTreeToast,\n  (showTreeToast) => ({ showTreeToast }),\n);\n\nexport default React.memo(\n  connect(mapStateToProps, { goToCustomLocation })(TreeView),\n);\n","// extracted by mini-css-extract-plugin\nexport default {\"button\":\"Tree_style__button___ad\",\"node-details\":\"Tree_style__node-details___fd\",\"node-info\":\"Tree_style__node-info___b4\",\"lineage\":\"Tree_style__lineage___e7\",\"small\":\"Tree_style__small___ff\",\"node-links\":\"Tree_style__node-links___e4\",\"disable\":\"Tree_style__disable___f6\",\"breadcrumbs\":\"Tree_style__breadcrumbs___eb\"};","// extracted by mini-css-extract-plugin\nexport default {\"buttons\":\"Tree_style__buttons___d8\",\"fullscreen\":\"Tree_style__fullscreen___d7\",\"container\":\"Tree_style__container___a1\",\"node\":\"Tree_style__node___d8\",\"in-path\":\"Tree_style__in-path___db\",\"tree\":\"Tree_style__tree___d8\"};","import React, { PureComponent, RefObject } from 'react';\nimport { createSelector } from 'reselect';\nimport { connect } from 'react-redux';\n\nimport TaxonomyVisualisation from 'taxonomy-visualisation';\n\nimport Tooltip from 'components/SimpleCommonComponents/Tooltip';\nimport FullScreenButton from 'components/SimpleCommonComponents/FullScreenButton';\n\nimport ResizeObserverComponent from 'wrappers/ResizeObserverComponent';\n\nimport fisheyeOff from 'EBI-Icon-fonts/source/common/font-awesome/solid/dot-circle.svg';\nimport fisheyeOn from 'EBI-Icon-fonts/source/common/font-awesome/solid/bullseye.svg';\n\nimport cssBinder from 'styles/cssBinder';\n\nimport styles from './style.css';\nimport fonts from 'EBI-Icon-fonts/fonts.css';\n\nconst css = cssBinder(styles, fonts);\n\ntype Props = {\n  data?: TaxNode | null;\n  focused?: string;\n  changeFocus?: (accession: string) => void;\n  labelClick?: (accession: string) => void;\n  hideToggle?: boolean;\n  initialFisheye?: boolean;\n  search: string;\n};\ntype State = {\n  fisheye: boolean;\n  isFullScreen: boolean;\n  searchTerm: string;\n};\n\nconst DEFAULT_WIDTH = 600;\n\nexport class Tree extends PureComponent<Props, State> {\n  _loadingVis = false;\n  _ref: RefObject<SVGSVGElement>;\n  _vis: TaxonomyVisualisation | null = null;\n\n  static defaultProps = {\n    initialFisheye: true,\n  };\n\n  constructor(props: Props) {\n    super(props);\n\n    const fisheye = !!props.initialFisheye;\n    const search = props.search;\n\n    this._ref = React.createRef();\n\n    this.state = { fisheye, searchTerm: search, isFullScreen: false };\n  }\n\n  static getDerivedStateFromProps({ search }: Props, { searchTerm }: State) {\n    if (search !== searchTerm) return { searchTerm: search };\n    return null;\n  }\n\n  componentDidMount() {\n    this._vis = new TaxonomyVisualisation(undefined, {\n      initialMaxNodes: +Infinity,\n      fisheye: this.state.fisheye,\n      fixedNodeSize: 5,\n      classnames: {\n        inPath: styles['in-path'],\n        node: styles.node,\n      },\n      enableZooming: true,\n      useCtrlToZoom: true,\n      searchTerm: this.props.search,\n      highlightColor: '#094EEE',\n      // shouldCorrectNodesOutside: true,\n    });\n\n    this._vis.addEventListener('focus', this._handleFocus);\n    this._vis.addEventListener('click', this._handleLabelClick);\n    this._vis.tree = this._ref.current;\n    this._loadingVis = true;\n    this._populateData(this.props.data, this.props.focused);\n    this._loadingVis = false;\n  }\n\n  componentDidUpdate({ data, focused }: Props) {\n    if (data !== this.props.data) {\n      this._loadingVis = true;\n      this._populateData(this.props.data, this.props.focused);\n      this._loadingVis = false;\n    }\n    if (this._vis) {\n      if (focused !== this.props.focused) {\n        this._vis.focusNodeWithID(this.props.focused);\n      }\n      this._vis.searchTerm = this.state.searchTerm;\n      this._vis.fisheye = this.state.fisheye;\n    }\n  }\n\n  componentWillUnmount() {\n    this._vis?.cleanup();\n  }\n\n  _handleClick = () => this.setState(({ fisheye }) => ({ fisheye: !fisheye }));\n\n  _recenter = () => {\n    this._vis?.resetZoom();\n  };\n\n  _handleFocus = (evt: Event) => {\n    const {\n      detail: { id },\n    } = evt as CustomEvent;\n    if (!this._loadingVis && this.props.changeFocus) this.props.changeFocus(id);\n  };\n  _handleLabelClick = (evt: Event) => {\n    const {\n      detail: { id },\n    } = evt as CustomEvent;\n    if (!this._loadingVis && this.props.labelClick) this.props.labelClick(id);\n    else this._handleFocus(evt);\n  };\n\n  _populateData = (data: TaxNode | null | undefined, focused?: string) => {\n    if (this._vis) {\n      this._vis.data = data;\n      this._vis.focusNodeWithID(focused);\n    }\n  };\n\n  render() {\n    return (\n      <>\n        <div className={styles.buttons}>\n          <span className={styles.fullscreen}>\n            <FullScreenButton\n              element=\"treeDiv\"\n              tooltip=\"View the taxonomy tree in full screen mode\"\n              onFullScreenHook={() =>\n                requestAnimationFrame(() =>\n                  this.setState({ isFullScreen: true }),\n                )\n              }\n              onExitFullScreenHook={() =>\n                this.setState({ isFullScreen: false })\n              }\n            />\n          </span>\n          {this.props.hideToggle ? null : (\n            <span>\n              <Tooltip title=\"toggle fisheye view\">\n                <button onClick={this._handleClick}>\n                  <img\n                    src={this.state.fisheye ? fisheyeOff : fisheyeOn}\n                    alt=\"toggle-fisheye\"\n                  />\n                </button>\n              </Tooltip>\n            </span>\n          )}\n          <span>\n            <Tooltip title=\"Recenter\">\n              <button\n                onClick={this._recenter}\n                className={css('icon', 'icon-common', 'font-l')}\n                data-icon=\"&#xf05b;\"\n              />\n            </Tooltip>\n          </span>\n        </div>\n\n        <ResizeObserverComponent measurements={['width']} element=\"div\">\n          {({ width }: { width: number }) => (\n            <div className={styles.tree} data-testid=\"data-tree\" id=\"treeDiv\">\n              <svg\n                className={styles.container}\n                ref={this._ref}\n                style={{ flex: '1' }}\n                width={\n                  this.state.isFullScreen\n                    ? window.screen.width\n                    : 100 * Math.floor((width || DEFAULT_WIDTH) / 100)\n                }\n              />\n            </div>\n          )}\n        </ResizeObserverComponent>\n      </>\n    );\n  }\n}\nconst mapStateToProps = createSelector(\n  (state: GlobalState) => state.customLocation.search.search as string,\n  (search) => ({ search }),\n);\n\nexport default connect(mapStateToProps)(Tree);\n","import root from './_root.js';\n\n/** Detect free variable `exports`. */\nvar freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n\n/** Detect free variable `module`. */\nvar freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n\n/** Detect the popular CommonJS extension `module.exports`. */\nvar moduleExports = freeModule && freeModule.exports === freeExports;\n\n/** Built-in value references. */\nvar Buffer = moduleExports ? root.Buffer : undefined,\n    allocUnsafe = Buffer ? Buffer.allocUnsafe : undefined;\n\n/**\n * Creates a clone of  `buffer`.\n *\n * @private\n * @param {Buffer} buffer The buffer to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Buffer} Returns the cloned buffer.\n */\nfunction cloneBuffer(buffer, isDeep) {\n  if (isDeep) {\n    return buffer.slice();\n  }\n  var length = buffer.length,\n      result = allocUnsafe ? allocUnsafe(length) : new buffer.constructor(length);\n\n  buffer.copy(result);\n  return result;\n}\n\nexport default cloneBuffer;\n","/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Initializes an array clone.\n *\n * @private\n * @param {Array} array The array to clone.\n * @returns {Array} Returns the initialized clone.\n */\nfunction initCloneArray(array) {\n  var length = array.length,\n      result = new array.constructor(length);\n\n  // Add properties assigned by `RegExp#exec`.\n  if (length && typeof array[0] == 'string' && hasOwnProperty.call(array, 'index')) {\n    result.index = array.index;\n    result.input = array.input;\n  }\n  return result;\n}\n\nexport default initCloneArray;\n","import Uint8Array from './_Uint8Array.js';\n\n/**\n * Creates a clone of `arrayBuffer`.\n *\n * @private\n * @param {ArrayBuffer} arrayBuffer The array buffer to clone.\n * @returns {ArrayBuffer} Returns the cloned array buffer.\n */\nfunction cloneArrayBuffer(arrayBuffer) {\n  var result = new arrayBuffer.constructor(arrayBuffer.byteLength);\n  new Uint8Array(result).set(new Uint8Array(arrayBuffer));\n  return result;\n}\n\nexport default cloneArrayBuffer;\n","/** Used to match `RegExp` flags from their coerced string values. */\nvar reFlags = /\\w*$/;\n\n/**\n * Creates a clone of `regexp`.\n *\n * @private\n * @param {Object} regexp The regexp to clone.\n * @returns {Object} Returns the cloned regexp.\n */\nfunction cloneRegExp(regexp) {\n  var result = new regexp.constructor(regexp.source, reFlags.exec(regexp));\n  result.lastIndex = regexp.lastIndex;\n  return result;\n}\n\nexport default cloneRegExp;\n","import Symbol from './_Symbol.js';\n\n/** Used to convert symbols to primitives and strings. */\nvar symbolProto = Symbol ? Symbol.prototype : undefined,\n    symbolValueOf = symbolProto ? symbolProto.valueOf : undefined;\n\n/**\n * Creates a clone of the `symbol` object.\n *\n * @private\n * @param {Object} symbol The symbol object to clone.\n * @returns {Object} Returns the cloned symbol object.\n */\nfunction cloneSymbol(symbol) {\n  return symbolValueOf ? Object(symbolValueOf.call(symbol)) : {};\n}\n\nexport default cloneSymbol;\n","import cloneArrayBuffer from './_cloneArrayBuffer.js';\nimport cloneDataView from './_cloneDataView.js';\nimport cloneRegExp from './_cloneRegExp.js';\nimport cloneSymbol from './_cloneSymbol.js';\nimport cloneTypedArray from './_cloneTypedArray.js';\n\n/** `Object#toString` result references. */\nvar boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    symbolTag = '[object Symbol]';\n\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]',\n    float32Tag = '[object Float32Array]',\n    float64Tag = '[object Float64Array]',\n    int8Tag = '[object Int8Array]',\n    int16Tag = '[object Int16Array]',\n    int32Tag = '[object Int32Array]',\n    uint8Tag = '[object Uint8Array]',\n    uint8ClampedTag = '[object Uint8ClampedArray]',\n    uint16Tag = '[object Uint16Array]',\n    uint32Tag = '[object Uint32Array]';\n\n/**\n * Initializes an object clone based on its `toStringTag`.\n *\n * **Note:** This function only supports cloning values with tags of\n * `Boolean`, `Date`, `Error`, `Map`, `Number`, `RegExp`, `Set`, or `String`.\n *\n * @private\n * @param {Object} object The object to clone.\n * @param {string} tag The `toStringTag` of the object to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Object} Returns the initialized clone.\n */\nfunction initCloneByTag(object, tag, isDeep) {\n  var Ctor = object.constructor;\n  switch (tag) {\n    case arrayBufferTag:\n      return cloneArrayBuffer(object);\n\n    case boolTag:\n    case dateTag:\n      return new Ctor(+object);\n\n    case dataViewTag:\n      return cloneDataView(object, isDeep);\n\n    case float32Tag: case float64Tag:\n    case int8Tag: case int16Tag: case int32Tag:\n    case uint8Tag: case uint8ClampedTag: case uint16Tag: case uint32Tag:\n      return cloneTypedArray(object, isDeep);\n\n    case mapTag:\n      return new Ctor;\n\n    case numberTag:\n    case stringTag:\n      return new Ctor(object);\n\n    case regexpTag:\n      return cloneRegExp(object);\n\n    case setTag:\n      return new Ctor;\n\n    case symbolTag:\n      return cloneSymbol(object);\n  }\n}\n\nexport default initCloneByTag;\n","import cloneArrayBuffer from './_cloneArrayBuffer.js';\n\n/**\n * Creates a clone of `dataView`.\n *\n * @private\n * @param {Object} dataView The data view to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Object} Returns the cloned data view.\n */\nfunction cloneDataView(dataView, isDeep) {\n  var buffer = isDeep ? cloneArrayBuffer(dataView.buffer) : dataView.buffer;\n  return new dataView.constructor(buffer, dataView.byteOffset, dataView.byteLength);\n}\n\nexport default cloneDataView;\n","import cloneArrayBuffer from './_cloneArrayBuffer.js';\n\n/**\n * Creates a clone of `typedArray`.\n *\n * @private\n * @param {Object} typedArray The typed array to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Object} Returns the cloned typed array.\n */\nfunction cloneTypedArray(typedArray, isDeep) {\n  var buffer = isDeep ? cloneArrayBuffer(typedArray.buffer) : typedArray.buffer;\n  return new typedArray.constructor(buffer, typedArray.byteOffset, typedArray.length);\n}\n\nexport default cloneTypedArray;\n","import baseIsMap from './_baseIsMap.js';\nimport baseUnary from './_baseUnary.js';\nimport nodeUtil from './_nodeUtil.js';\n\n/* Node.js helper references. */\nvar nodeIsMap = nodeUtil && nodeUtil.isMap;\n\n/**\n * Checks if `value` is classified as a `Map` object.\n *\n * @static\n * @memberOf _\n * @since 4.3.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a map, else `false`.\n * @example\n *\n * _.isMap(new Map);\n * // => true\n *\n * _.isMap(new WeakMap);\n * // => false\n */\nvar isMap = nodeIsMap ? baseUnary(nodeIsMap) : baseIsMap;\n\nexport default isMap;\n","import getTag from './_getTag.js';\nimport isObjectLike from './isObjectLike.js';\n\n/** `Object#toString` result references. */\nvar mapTag = '[object Map]';\n\n/**\n * The base implementation of `_.isMap` without Node.js optimizations.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a map, else `false`.\n */\nfunction baseIsMap(value) {\n  return isObjectLike(value) && getTag(value) == mapTag;\n}\n\nexport default baseIsMap;\n","import baseIsSet from './_baseIsSet.js';\nimport baseUnary from './_baseUnary.js';\nimport nodeUtil from './_nodeUtil.js';\n\n/* Node.js helper references. */\nvar nodeIsSet = nodeUtil && nodeUtil.isSet;\n\n/**\n * Checks if `value` is classified as a `Set` object.\n *\n * @static\n * @memberOf _\n * @since 4.3.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a set, else `false`.\n * @example\n *\n * _.isSet(new Set);\n * // => true\n *\n * _.isSet(new WeakSet);\n * // => false\n */\nvar isSet = nodeIsSet ? baseUnary(nodeIsSet) : baseIsSet;\n\nexport default isSet;\n","import getTag from './_getTag.js';\nimport isObjectLike from './isObjectLike.js';\n\n/** `Object#toString` result references. */\nvar setTag = '[object Set]';\n\n/**\n * The base implementation of `_.isSet` without Node.js optimizations.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a set, else `false`.\n */\nfunction baseIsSet(value) {\n  return isObjectLike(value) && getTag(value) == setTag;\n}\n\nexport default baseIsSet;\n","import Stack from './_Stack.js';\nimport arrayEach from './_arrayEach.js';\nimport assignValue from './_assignValue.js';\nimport baseAssign from './_baseAssign.js';\nimport baseAssignIn from './_baseAssignIn.js';\nimport cloneBuffer from './_cloneBuffer.js';\nimport copyArray from './_copyArray.js';\nimport copySymbols from './_copySymbols.js';\nimport copySymbolsIn from './_copySymbolsIn.js';\nimport getAllKeys from './_getAllKeys.js';\nimport getAllKeysIn from './_getAllKeysIn.js';\nimport getTag from './_getTag.js';\nimport initCloneArray from './_initCloneArray.js';\nimport initCloneByTag from './_initCloneByTag.js';\nimport initCloneObject from './_initCloneObject.js';\nimport isArray from './isArray.js';\nimport isBuffer from './isBuffer.js';\nimport isMap from './isMap.js';\nimport isObject from './isObject.js';\nimport isSet from './isSet.js';\nimport keys from './keys.js';\nimport keysIn from './keysIn.js';\n\n/** Used to compose bitmasks for cloning. */\nvar CLONE_DEEP_FLAG = 1,\n    CLONE_FLAT_FLAG = 2,\n    CLONE_SYMBOLS_FLAG = 4;\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]',\n    arrayTag = '[object Array]',\n    boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    errorTag = '[object Error]',\n    funcTag = '[object Function]',\n    genTag = '[object GeneratorFunction]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    objectTag = '[object Object]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    symbolTag = '[object Symbol]',\n    weakMapTag = '[object WeakMap]';\n\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]',\n    float32Tag = '[object Float32Array]',\n    float64Tag = '[object Float64Array]',\n    int8Tag = '[object Int8Array]',\n    int16Tag = '[object Int16Array]',\n    int32Tag = '[object Int32Array]',\n    uint8Tag = '[object Uint8Array]',\n    uint8ClampedTag = '[object Uint8ClampedArray]',\n    uint16Tag = '[object Uint16Array]',\n    uint32Tag = '[object Uint32Array]';\n\n/** Used to identify `toStringTag` values supported by `_.clone`. */\nvar cloneableTags = {};\ncloneableTags[argsTag] = cloneableTags[arrayTag] =\ncloneableTags[arrayBufferTag] = cloneableTags[dataViewTag] =\ncloneableTags[boolTag] = cloneableTags[dateTag] =\ncloneableTags[float32Tag] = cloneableTags[float64Tag] =\ncloneableTags[int8Tag] = cloneableTags[int16Tag] =\ncloneableTags[int32Tag] = cloneableTags[mapTag] =\ncloneableTags[numberTag] = cloneableTags[objectTag] =\ncloneableTags[regexpTag] = cloneableTags[setTag] =\ncloneableTags[stringTag] = cloneableTags[symbolTag] =\ncloneableTags[uint8Tag] = cloneableTags[uint8ClampedTag] =\ncloneableTags[uint16Tag] = cloneableTags[uint32Tag] = true;\ncloneableTags[errorTag] = cloneableTags[funcTag] =\ncloneableTags[weakMapTag] = false;\n\n/**\n * The base implementation of `_.clone` and `_.cloneDeep` which tracks\n * traversed objects.\n *\n * @private\n * @param {*} value The value to clone.\n * @param {boolean} bitmask The bitmask flags.\n *  1 - Deep clone\n *  2 - Flatten inherited properties\n *  4 - Clone symbols\n * @param {Function} [customizer] The function to customize cloning.\n * @param {string} [key] The key of `value`.\n * @param {Object} [object] The parent object of `value`.\n * @param {Object} [stack] Tracks traversed objects and their clone counterparts.\n * @returns {*} Returns the cloned value.\n */\nfunction baseClone(value, bitmask, customizer, key, object, stack) {\n  var result,\n      isDeep = bitmask & CLONE_DEEP_FLAG,\n      isFlat = bitmask & CLONE_FLAT_FLAG,\n      isFull = bitmask & CLONE_SYMBOLS_FLAG;\n\n  if (customizer) {\n    result = object ? customizer(value, key, object, stack) : customizer(value);\n  }\n  if (result !== undefined) {\n    return result;\n  }\n  if (!isObject(value)) {\n    return value;\n  }\n  var isArr = isArray(value);\n  if (isArr) {\n    result = initCloneArray(value);\n    if (!isDeep) {\n      return copyArray(value, result);\n    }\n  } else {\n    var tag = getTag(value),\n        isFunc = tag == funcTag || tag == genTag;\n\n    if (isBuffer(value)) {\n      return cloneBuffer(value, isDeep);\n    }\n    if (tag == objectTag || tag == argsTag || (isFunc && !object)) {\n      result = (isFlat || isFunc) ? {} : initCloneObject(value);\n      if (!isDeep) {\n        return isFlat\n          ? copySymbolsIn(value, baseAssignIn(result, value))\n          : copySymbols(value, baseAssign(result, value));\n      }\n    } else {\n      if (!cloneableTags[tag]) {\n        return object ? value : {};\n      }\n      result = initCloneByTag(value, tag, isDeep);\n    }\n  }\n  // Check for circular references and return its corresponding clone.\n  stack || (stack = new Stack);\n  var stacked = stack.get(value);\n  if (stacked) {\n    return stacked;\n  }\n  stack.set(value, result);\n\n  if (isSet(value)) {\n    value.forEach(function(subValue) {\n      result.add(baseClone(subValue, bitmask, customizer, subValue, value, stack));\n    });\n  } else if (isMap(value)) {\n    value.forEach(function(subValue, key) {\n      result.set(key, baseClone(subValue, bitmask, customizer, key, value, stack));\n    });\n  }\n\n  var keysFunc = isFull\n    ? (isFlat ? getAllKeysIn : getAllKeys)\n    : (isFlat ? keysIn : keys);\n\n  var props = isArr ? undefined : keysFunc(value);\n  arrayEach(props || value, function(subValue, key) {\n    if (props) {\n      key = subValue;\n      subValue = value[key];\n    }\n    // Recursively populate clone (susceptible to call stack limits).\n    assignValue(result, key, baseClone(subValue, bitmask, customizer, key, value, stack));\n  });\n  return result;\n}\n\nexport default baseClone;\n","/**\n * Copies the values of `source` to `array`.\n *\n * @private\n * @param {Array} source The array to copy values from.\n * @param {Array} [array=[]] The array to copy values to.\n * @returns {Array} Returns `array`.\n */\nfunction copyArray(source, array) {\n  var index = -1,\n      length = source.length;\n\n  array || (array = Array(length));\n  while (++index < length) {\n    array[index] = source[index];\n  }\n  return array;\n}\n\nexport default copyArray;\n","import baseCreate from './_baseCreate.js';\nimport getPrototype from './_getPrototype.js';\nimport isPrototype from './_isPrototype.js';\n\n/**\n * Initializes an object clone.\n *\n * @private\n * @param {Object} object The object to clone.\n * @returns {Object} Returns the initialized clone.\n */\nfunction initCloneObject(object) {\n  return (typeof object.constructor == 'function' && !isPrototype(object))\n    ? baseCreate(getPrototype(object))\n    : {};\n}\n\nexport default initCloneObject;\n","import copyObject from './_copyObject.js';\nimport getSymbolsIn from './_getSymbolsIn.js';\n\n/**\n * Copies own and inherited symbols of `source` to `object`.\n *\n * @private\n * @param {Object} source The object to copy symbols from.\n * @param {Object} [object={}] The object to copy symbols to.\n * @returns {Object} Returns `object`.\n */\nfunction copySymbolsIn(source, object) {\n  return copyObject(source, getSymbolsIn(source), object);\n}\n\nexport default copySymbolsIn;\n","import copyObject from './_copyObject.js';\nimport keysIn from './keysIn.js';\n\n/**\n * The base implementation of `_.assignIn` without support for multiple sources\n * or `customizer` functions.\n *\n * @private\n * @param {Object} object The destination object.\n * @param {Object} source The source object.\n * @returns {Object} Returns `object`.\n */\nfunction baseAssignIn(object, source) {\n  return object && copyObject(source, keysIn(source), object);\n}\n\nexport default baseAssignIn;\n","import copyObject from './_copyObject.js';\nimport getSymbols from './_getSymbols.js';\n\n/**\n * Copies own symbols of `source` to `object`.\n *\n * @private\n * @param {Object} source The object to copy symbols from.\n * @param {Object} [object={}] The object to copy symbols to.\n * @returns {Object} Returns `object`.\n */\nfunction copySymbols(source, object) {\n  return copyObject(source, getSymbols(source), object);\n}\n\nexport default copySymbols;\n","import copyObject from './_copyObject.js';\nimport keys from './keys.js';\n\n/**\n * The base implementation of `_.assign` without support for multiple sources\n * or `customizer` functions.\n *\n * @private\n * @param {Object} object The destination object.\n * @param {Object} source The source object.\n * @returns {Object} Returns `object`.\n */\nfunction baseAssign(object, source) {\n  return object && copyObject(source, keys(source), object);\n}\n\nexport default baseAssign;\n","import assignValue from './_assignValue.js';\nimport baseAssignValue from './_baseAssignValue.js';\n\n/**\n * Copies properties of `source` to `object`.\n *\n * @private\n * @param {Object} source The object to copy properties from.\n * @param {Array} props The property identifiers to copy.\n * @param {Object} [object={}] The object to copy properties to.\n * @param {Function} [customizer] The function to customize copied values.\n * @returns {Object} Returns `object`.\n */\nfunction copyObject(source, props, object, customizer) {\n  var isNew = !object;\n  object || (object = {});\n\n  var index = -1,\n      length = props.length;\n\n  while (++index < length) {\n    var key = props[index];\n\n    var newValue = customizer\n      ? customizer(object[key], source[key], key, object, source)\n      : undefined;\n\n    if (newValue === undefined) {\n      newValue = source[key];\n    }\n    if (isNew) {\n      baseAssignValue(object, key, newValue);\n    } else {\n      assignValue(object, key, newValue);\n    }\n  }\n  return object;\n}\n\nexport default copyObject;\n","import baseGetAllKeys from './_baseGetAllKeys.js';\nimport getSymbolsIn from './_getSymbolsIn.js';\nimport keysIn from './keysIn.js';\n\n/**\n * Creates an array of own and inherited enumerable property names and\n * symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names and symbols.\n */\nfunction getAllKeysIn(object) {\n  return baseGetAllKeys(object, keysIn, getSymbolsIn);\n}\n\nexport default getAllKeysIn;\n","import arrayPush from './_arrayPush.js';\nimport getPrototype from './_getPrototype.js';\nimport getSymbols from './_getSymbols.js';\nimport stubArray from './stubArray.js';\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeGetSymbols = Object.getOwnPropertySymbols;\n\n/**\n * Creates an array of the own and inherited enumerable symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of symbols.\n */\nvar getSymbolsIn = !nativeGetSymbols ? stubArray : function(object) {\n  var result = [];\n  while (object) {\n    arrayPush(result, getSymbols(object));\n    object = getPrototype(object);\n  }\n  return result;\n};\n\nexport default getSymbolsIn;\n","import baseClone from './_baseClone.js';\n\n/** Used to compose bitmasks for cloning. */\nvar CLONE_DEEP_FLAG = 1,\n    CLONE_SYMBOLS_FLAG = 4;\n\n/**\n * This method is like `_.clone` except that it recursively clones `value`.\n *\n * @static\n * @memberOf _\n * @since 1.0.0\n * @category Lang\n * @param {*} value The value to recursively clone.\n * @returns {*} Returns the deep cloned value.\n * @see _.clone\n * @example\n *\n * var objects = [{ 'a': 1 }, { 'b': 2 }];\n *\n * var deep = _.cloneDeep(objects);\n * console.log(deep[0] === objects[0]);\n * // => false\n */\nfunction cloneDeep(value) {\n  return baseClone(value, CLONE_DEEP_FLAG | CLONE_SYMBOLS_FLAG);\n}\n\nexport default cloneDeep;\n","import isObject from './isObject.js';\nimport isPrototype from './_isPrototype.js';\nimport nativeKeysIn from './_nativeKeysIn.js';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * The base implementation of `_.keysIn` which doesn't treat sparse arrays as dense.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n */\nfunction baseKeysIn(object) {\n  if (!isObject(object)) {\n    return nativeKeysIn(object);\n  }\n  var isProto = isPrototype(object),\n      result = [];\n\n  for (var key in object) {\n    if (!(key == 'constructor' && (isProto || !hasOwnProperty.call(object, key)))) {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\nexport default baseKeysIn;\n","/**\n * This function is like\n * [`Object.keys`](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n * except that it includes inherited enumerable properties.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n */\nfunction nativeKeysIn(object) {\n  var result = [];\n  if (object != null) {\n    for (var key in Object(object)) {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\nexport default nativeKeysIn;\n","import arrayLikeKeys from './_arrayLikeKeys.js';\nimport baseKeysIn from './_baseKeysIn.js';\nimport isArrayLike from './isArrayLike.js';\n\n/**\n * Creates an array of the own and inherited enumerable property names of `object`.\n *\n * **Note:** Non-object values are coerced to objects.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Object\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.keysIn(new Foo);\n * // => ['a', 'b', 'c'] (iteration order is not guaranteed)\n */\nfunction keysIn(object) {\n  return isArrayLike(object) ? arrayLikeKeys(object, true) : baseKeysIn(object);\n}\n\nexport default keysIn;\n"],"names":["Tip","_ref","title","body","checkBoxLabel","ttl","toastID","addToast","changeSettingsRaw","settingsName","useEffect","checkBox","label","fn","propTypes","T","isRequired","connect","window","ResizeObserver","constructor","onResizeEvent","_this","_handleResize","_asyncToGenerator","schedule","_node","_onResizeEvent","target","contentRect","getBoundingClientRect","Error","this","observe","node","HTMLElement","addEventListener","sleep","then","unobserve","removeEventListener","ResizeObserverComponent","PureComponent","props","super","state","_resizeObserver","_handleResizeEvent","bind","React","componentDidMount","current","componentDidUpdate","updateCallback","componentWillUnmount","resizeObserverEntries","finalContentRect","measurements","measurement","Array","isArray","setState","render","_this$props","children","element","_objectWithoutPropertiesLoose","_excluded","Element","_extends","ref","css","cssBinder","fonts","tooltip","className","dataIcon","disabled","onFullScreenHook","noop","onExitFullScreenHook","elementInDOM","setElementInDom","useState","isFull","setFull","onFullscreen","document","fullscreenElement","getElementById","_className","icon","Tooltip","Button","type","onClick","_handleFullScreen","exitFullscreen","webkitExitFullscreen","mozExitFullScreen","msExitFullscreen","requestFullscreen","webkitRequestFullscreen","mozRequestFullScreen","msRequestFullscreen","requestFullScreen","DataProvider","_sent","_sendDataUpIfAny","taxID","data","sendData","loading","payload","_a","mapStateToUrlFor","createSelector","settings","api","customLocation","description","protocol","hostname","port","root","main","key","entry","accession","db","query","filter_by_entry","filter_by_entry_db","format","pathname","descriptionToPath","taxonomy","Object","assign","isFilter","search","findNodeWithId","id","child","found","addNodesFromLineage","update","names","lineage","trim","split","splice","parentId","parent","name","_b","short","join","push","mergeData","childrenCounters","toUpdate","counters","rank","hitcount","abbreviateNumber","proteins","length","map","TreeView","Component","_handleNewSearchData","_handleNewData","_handleNewFocus","metadata","_initialLoad","_ref2","focused","onFocusChanged","_handleLabelClick","goToCustomLocation","_storeLineageNames","_lineageNames","set","forEach","entryDB","exactMatch","dataTable","find","x","exact_match","_CDPMap","Map","getDerivedStateFromProps","_ref3","_ref4","newDB","oldDB","newMatch","shouldComponentUpdate","nextProps","nextState","clear","ConnectedDataProvider","get","loadData","ConnectedDataProviderSearch","currentNode","mainEndpoint","countersToShow","protein","structure","proteome","lineageIDs","lineageString","slice","_c","i","showTreeToast","Link","to","_d","toLowerCase","charAt","toUpperCase","entries","_ref5","endpoint","plural","cloneDeep","order","disable","NumberComponent","duration","filter","Boolean","Loading","inline","Tree","changeFocus","mapStateToProps","notifications","styles","_loadingVis","_vis","_handleClick","fisheye","_recenter","resetZoom","_handleFocus","evt","detail","labelClick","_populateData","focusNodeWithID","initialFisheye","searchTerm","isFullScreen","TaxonomyVisualisation","undefined","initialMaxNodes","fixedNodeSize","classnames","inPath","enableZooming","useCtrlToZoom","highlightColor","tree","cleanup","buttons","fullscreen","FullScreenButton","requestAnimationFrame","hideToggle","src","fisheyeOff","fisheyeOn","alt","width","container","style","flex","screen","Math","floor","defaultProps","freeExports","exports","nodeType","freeModule","module","Buffer","allocUnsafe","hasOwnProperty","prototype","arrayBuffer","result","byteLength","Uint8Array","reFlags","symbolProto","Symbol","symbolValueOf","valueOf","object","tag","isDeep","symbol","regexp","Ctor","cloneArrayBuffer","dataView","buffer","byteOffset","cloneDataView","typedArray","cloneTypedArray","source","exec","lastIndex","call","nodeIsMap","nodeUtil","isMap","baseUnary","value","isObjectLike","getTag","nodeIsSet","isSet","argsTag","funcTag","objectTag","cloneableTags","baseClone","bitmask","customizer","stack","isFlat","isObject","isArr","array","index","input","initCloneArray","copyArray","isFunc","isBuffer","copy","cloneBuffer","isPrototype","baseCreate","getPrototype","initCloneObject","copyObject","getSymbolsIn","copySymbolsIn","keysIn","baseAssignIn","getSymbols","copySymbols","keys","baseAssign","initCloneByTag","Stack","stacked","subValue","add","keysFunc","getAllKeysIn","getAllKeys","arrayEach","assignValue","isNew","newValue","baseAssignValue","baseGetAllKeys","getOwnPropertySymbols","arrayPush","stubArray","CLONE_DEEP_FLAG","nativeKeysIn","isProto","isArrayLike","arrayLikeKeys","baseKeysIn"],"sourceRoot":""}