{"version":3,"file":"js/6252.module.6252.7a0.js","mappings":"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","sources":["webpack://interpro7-client/./node_modules/easyscroller/lib/Animate.js","webpack://interpro7-client/./node_modules/easyscroller/lib/EasyScroller.js","webpack://interpro7-client/./node_modules/easyscroller/lib/Scroller.js","webpack://interpro7-client/./node_modules/easyscroller/lib/index.js","webpack://interpro7-client/./node_modules/skylign/src/skylign.js","webpack://interpro7-client/./node_modules/skylign/src/skylign-component.js","webpack://interpro7-client/./node_modules/skylign/src/index.js"],"sourcesContent":["\"use strict\";\n/*\n * Scroller\n * http://github.com/zynga/scroller\n *\n * Copyright 2011, Zynga Inc.\n * Licensed under the MIT License.\n * https://raw.github.com/zynga/scroller/master/MIT-LICENSE.txt\n *\n * Based on the work of: Unify Project (unify-project.org)\n * http://unify-project.org\n * Copyright 2011, Deutsche Telekom AG\n * License: MIT + Apache (V2)\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Generic animation class with support for dropped frames both optional easing and duration.\n *\n * Optional duration is useful when the lifetime is defined by another condition than time\n * e.g. speed of an animating object, etc.\n *\n * Dropped frame logic allows to keep using the same updater logic independent from the actual\n * rendering. This eases a lot of cases where it might be pretty complex to break down a state\n * based on the pure time difference.\n */\nvar time = Date.now ||\n    function () {\n        return +new Date();\n    };\nvar desiredFrames = 60;\nvar millisecondsPerSecond = 1000;\nvar running = {};\nvar counter = 1;\nexports.core = {\n    effect: {\n        Animate: {\n            /**\n             * A requestAnimationFrame wrapper / polyfill.\n             *\n             * @param callback {Function} The callback to be invoked before the next repaint.\n             * @param root {HTMLElement} The root element for the repaint\n             */\n            requestAnimationFrame: (function () {\n                // Check for request animation Frame support\n                var requestFrame = window.requestAnimationFrame ||\n                    window.webkitRequestAnimationFrame ||\n                    window.mozRequestAnimationFrame ||\n                    window.oRequestAnimationFrame;\n                var isNative = !!requestFrame;\n                if (requestFrame && !/requestAnimationFrame\\(\\)\\s*\\{\\s*\\[native code\\]\\s*\\}/i.test(requestFrame.toString())) {\n                    isNative = false;\n                }\n                if (isNative) {\n                    return function (callback, root) {\n                        requestFrame(callback, root);\n                    };\n                }\n                var TARGET_FPS = 60;\n                var requests = {};\n                var requestCount = 0;\n                var rafHandle = 1;\n                var intervalHandle = null;\n                var lastActive = +new Date();\n                return function (callback, root) {\n                    var callbackHandle = rafHandle++;\n                    // Store callback\n                    requests[callbackHandle] = callback;\n                    requestCount++;\n                    // Create timeout at first request\n                    if (intervalHandle === null) {\n                        intervalHandle = setInterval(function () {\n                            var time = +new Date();\n                            var currentRequests = requests;\n                            // Reset data structure before executing callbacks\n                            requests = {};\n                            requestCount = 0;\n                            for (var key in currentRequests) {\n                                if (currentRequests.hasOwnProperty(key)) {\n                                    currentRequests[key](time);\n                                    lastActive = time;\n                                }\n                            }\n                            // Disable the timeout when nothing happens for a certain\n                            // period of time\n                            if (time - lastActive > 2500) {\n                                clearInterval(intervalHandle);\n                                intervalHandle = null;\n                            }\n                        }, 1000 / TARGET_FPS);\n                    }\n                    return callbackHandle;\n                };\n            })(),\n            /**\n             * Stops the given animation.\n             *\n             * @param id {Integer} Unique animation ID\n             * @return {Boolean} Whether the animation was stopped (aka, was running before)\n             */\n            stop: function (id) {\n                var cleared = running[id] != null;\n                if (cleared) {\n                    running[id] = null;\n                }\n                return cleared;\n            },\n            /**\n             * Whether the given animation is still running.\n             *\n             * @param id {Integer} Unique animation ID\n             * @return {Boolean} Whether the animation is still running\n             */\n            isRunning: function (id) {\n                return running[id] != null;\n            },\n            /**\n             * Start the animation.\n             *\n             * @param stepCallback {Function} Pointer to function which is executed on every step.\n             *   Signature of the method should be `function(percent, now, virtual) { return continueWithAnimation; }`\n             * @param verifyCallback {Function} Executed before every animation step.\n             *   Signature of the method should be `function() { return continueWithAnimation; }`\n             * @param completedCallback {Function}\n             *   Signature of the method should be `function(droppedFrames, finishedAnimation) {}`\n             * @param duration {Integer} Milliseconds to run the animation\n             * @param easingMethod {Function} Pointer to easing function\n             *   Signature of the method should be `function(percent) { return modifiedValue; }`\n             * @param root {Element ? document.body} Render root, when available. Used for internal\n             *   usage of requestAnimationFrame.\n             * @return {Integer} Identifier of animation. Can be used to stop it any time.\n             */\n            start: function (stepCallback, verifyCallback, completedCallback, duration, easingMethod, root) {\n                var start = time();\n                var lastFrame = start;\n                var percent = 0;\n                var dropCounter = 0;\n                var id = counter++;\n                if (!root) {\n                    root = document.body;\n                }\n                // Compacting running db automatically every few new animations\n                if (id % 20 === 0) {\n                    var newRunning = {};\n                    for (var usedId in running) {\n                        newRunning[usedId] = true;\n                    }\n                    running = newRunning;\n                }\n                // This is the internal step method which is called every few milliseconds\n                var step = function (virtual) {\n                    // Normalize virtual value\n                    var render = virtual !== true;\n                    // Get current time\n                    var now = time();\n                    // Verification is executed before next animation step\n                    if (!running[id] || (verifyCallback && !verifyCallback(id))) {\n                        running[id] = null;\n                        completedCallback &&\n                            completedCallback(desiredFrames - dropCounter / ((now - start) / millisecondsPerSecond), id, false);\n                        return;\n                    }\n                    // For the current rendering to apply let's update omitted steps in memory.\n                    // This is important to bring internal state variables up-to-date with progress in time.\n                    if (render) {\n                        var droppedFrames = Math.round((now - lastFrame) / (millisecondsPerSecond / desiredFrames)) - 1;\n                        for (var j = 0; j < Math.min(droppedFrames, 4); j++) {\n                            step(true);\n                            dropCounter++;\n                        }\n                    }\n                    // Compute percent value\n                    if (duration) {\n                        percent = (now - start) / duration;\n                        if (percent > 1) {\n                            percent = 1;\n                        }\n                    }\n                    // Execute step callback, then...\n                    var value = easingMethod ? easingMethod(percent) : percent;\n                    if ((stepCallback(value, now, render) === false || percent === 1) && render) {\n                        running[id] = null;\n                        completedCallback &&\n                            completedCallback(desiredFrames - dropCounter / ((now - start) / millisecondsPerSecond), id, percent === 1 || duration == null);\n                    }\n                    else if (render) {\n                        lastFrame = now;\n                        exports.core.effect.Animate.requestAnimationFrame(step, root);\n                    }\n                };\n                // Mark as running\n                running[id] = true;\n                // Init first step\n                exports.core.effect.Animate.requestAnimationFrame(step, root);\n                // Return unique animation ID\n                return id;\n            },\n        },\n    },\n};\n","\"use strict\";\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Scroller_1 = require(\"./Scroller\");\nvar EasyScroller = /** @class */ (function () {\n    function EasyScroller(content, options) {\n        var _this = this;\n        this.options = {};\n        this.browserHasPerspectiveProperty = false;\n        this.browserHasTransformProperty = true;\n        this.eventHandlers = [];\n        if (!content) {\n            throw new Error('No Content Element specified!');\n        }\n        this.content = content;\n        this.container = content.parentNode;\n        if (!this.container) {\n            throw new Error('No Parent Container for Content! Please wrap Content Element in a Container.');\n        }\n        this.options = __assign({}, this.options, options);\n        this.scroller = new Scroller_1.Scroller(function (left, top, zoom) {\n            _this.render(left, top, zoom);\n        }, options);\n        var helperElem = document.createElement('div');\n        var vendorPrefix = this.getVendorPrefix();\n        // the content element needs a correct transform origin for zooming\n        this.content.style[vendorPrefix + \"TransformOrigin\"] = 'left top';\n        this.transformProperty = vendorPrefix + \"Transform\";\n        this.browserHasTransformProperty = helperElem.style[this.transformProperty] !== undefined;\n        var perspectiveProperty = vendorPrefix + \"Perspective\";\n        this.browserHasPerspectiveProperty = helperElem.style[perspectiveProperty] !== undefined;\n        this.bindEvents();\n        // reflow for the first time\n        this.reflow();\n    }\n    EasyScroller.prototype.getVendorPrefix = function () {\n        var docStyle = document.documentElement.style;\n        var engine;\n        if (window.opera && Object.prototype.toString.call(window.opera) === '[object Opera]') {\n            engine = 'presto';\n        }\n        else if ('MozAppearance' in docStyle) {\n            engine = 'gecko';\n        }\n        else if ('WebkitAppearance' in docStyle) {\n            engine = 'webkit';\n        }\n        else if (typeof navigator.cpuClass === 'string') {\n            engine = 'trident';\n        }\n        var vendorMap = {\n            trident: 'ms',\n            gecko: 'Moz',\n            webkit: 'Webkit',\n            presto: 'O',\n        };\n        return vendorMap[engine];\n    };\n    EasyScroller.prototype.render = function (left, top, zoom) {\n        if (this.browserHasPerspectiveProperty) {\n            this.content.style[this.transformProperty] = 'translate3d(' + -left + 'px,' + -top + 'px,0) scale(' + zoom + ')';\n        }\n        else if (this.browserHasTransformProperty) {\n            this.content.style[this.transformProperty] = 'translate(' + -left + 'px,' + -top + 'px) scale(' + zoom + ')';\n        }\n        else {\n            this.content.style.marginLeft = left ? -left / zoom + 'px' : '';\n            this.content.style.marginTop = top ? -top / zoom + 'px' : '';\n            this.content.style.zoom = zoom || '';\n        }\n    };\n    EasyScroller.prototype.reflow = function () {\n        // set the right scroller dimensions\n        this.scroller.setDimensions(this.container.clientWidth, this.container.clientHeight, this.content.offsetWidth, this.content.offsetHeight);\n        // refresh the position for zooming purposes\n        var rect = this.container.getBoundingClientRect();\n        this.scroller.setPosition(rect.left + this.container.clientLeft, rect.top + this.container.clientTop);\n    };\n    EasyScroller.prototype.bindEvents = function () {\n        var _this = this;\n        var resizeHandler = function () { return _this.reflow(); };\n        // reflow handling\n        this.eventHandlers.push({ event: 'resize', handler: resizeHandler, forElem: window });\n        // touch devices bind touch events\n        if ('ontouchstart' in window) {\n            var touchstartHandler = function (e) {\n                // Don't react if initial down happens on a form element\n                if (e.touches[0] && e.touches[0].target && e.touches[0].target.tagName.match(/input|textarea|select/i)) {\n                    return;\n                }\n                // reflow since the container may have changed\n                _this.reflow();\n                _this.scroller.doTouchStart(e.touches, e.timeStamp);\n            };\n            var touchmoveHandler = function (e) {\n                e.preventDefault();\n                _this.scroller.doTouchMove(e.touches, e.timeStamp, e.scale);\n            };\n            var touchendHandler = function (e) { return _this.scroller.doTouchEnd(e.timeStamp); };\n            var touchcancelHandler = function (e) { return _this.scroller.doTouchEnd(e.timeStamp); };\n            this.eventHandlers.push({ event: 'touchstart', handler: touchstartHandler, forElem: this.container }, { event: 'touchmove', handler: touchmoveHandler, forElem: this.container }, { event: 'touchend', handler: touchendHandler, forElem: this.container }, { event: 'touchcancel', handler: touchcancelHandler, forElem: this.container });\n        }\n        else {\n            // non-touch bind mouse events\n            var mousedown = false;\n            var mousedownHandler = function (e) {\n                if (e.target.tagName.match(/input|textarea|select/i)) {\n                    return;\n                }\n                _this.scroller.doTouchStart([\n                    {\n                        pageX: e.pageX,\n                        pageY: e.pageY,\n                    },\n                ], e.timeStamp);\n                mousedown = true;\n                // reflow since the container may have changed\n                _this.reflow();\n                e.preventDefault();\n            };\n            var mousemoveHandler = function (e) {\n                if (!mousedown) {\n                    return;\n                }\n                _this.scroller.doTouchMove([\n                    {\n                        pageX: e.pageX,\n                        pageY: e.pageY,\n                    },\n                ], e.timeStamp);\n                mousedown = true;\n            };\n            var mouseupHandler = function (e) {\n                if (!mousedown) {\n                    return;\n                }\n                _this.scroller.doTouchEnd(e.timeStamp);\n                mousedown = false;\n            };\n            var mousewheelHandler = function (e) {\n                if (_this.options.zooming) {\n                    _this.scroller.doMouseZoom(e.wheelDelta, e.timeStamp, e.pageX, e.pageY);\n                    e.preventDefault();\n                }\n            };\n            this.eventHandlers.push({ event: 'mousedown', handler: mousedownHandler, forElem: this.container }, { event: 'mousemove', handler: mousemoveHandler, forElem: document }, { event: 'mouseup', handler: mouseupHandler, forElem: document }, { event: 'mousewheel', handler: mousewheelHandler, forElem: this.container });\n        }\n        return this.eventHandlers.forEach(function (eventHandler) {\n            eventHandler.forElem.addEventListener(eventHandler.event, eventHandler.handler, false);\n        });\n    };\n    /**\n     * Retrieves Scroller instance.\n     */\n    EasyScroller.prototype.getScroller = function () {\n        return this.scroller;\n    };\n    /**\n     * Call on disposal of EasyScroller to clean up Event Handlers.\n     */\n    EasyScroller.prototype.destroy = function () {\n        return this.eventHandlers.forEach(function (eventHandler) {\n            eventHandler.forElem.removeEventListener(eventHandler.event, eventHandler.handler, false);\n        });\n    };\n    return EasyScroller;\n}());\nexports.EasyScroller = EasyScroller;\n","\"use strict\";\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Animate_1 = require(\"./Animate\");\n/**\n * A pure logic 'component' for 'virtual' scrolling/zooming.\n */\nvar Scroller = /** @class */ (function () {\n    function Scroller(callback, options) {\n        /*\n        ---------------------------------------------------------------------------\n          INTERNAL FIELDS :: STATUS\n        ---------------------------------------------------------------------------\n        */\n        /** {Boolean} Whether only a single finger is used in touch handling */\n        this.__isSingleTouch = false;\n        /** {Boolean} Whether a touch event sequence is in progress */\n        this.__isTracking = false;\n        /** {Boolean} Whether a deceleration animation went to completion. */\n        this.__didDecelerationComplete = false;\n        /**\n         * {Boolean} Whether a gesture zoom/rotate event is in progress. Activates when\n         * a gesturestart event happens. This has higher priority than dragging.\n         */\n        this.__isGesturing = false;\n        /**\n         * {Boolean} Whether the user has moved by such a distance that we have enabled\n         * dragging mode. Hint: It's only enabled after some pixels of movement to\n         * not interrupt with clicks etc.\n         */\n        this.__isDragging = false;\n        /**\n         * {Boolean} Not touching and dragging anymore, and smoothly animating the\n         * touch sequence using deceleration.\n         */\n        this.__isDecelerating = false;\n        /**\n         * {Boolean} Smoothly animating the currently configured change\n         */\n        this.__isAnimating = false;\n        this.__interruptedAnimation = false;\n        this.__initialTouchLeft = null;\n        this.__initialTouchTop = null;\n        this.__initialTouches = null;\n        this.__lastScale = 1;\n        this.__enableScrollX = true;\n        this.__enableScrollY = true;\n        /*\n        ---------------------------------------------------------------------------\n          INTERNAL FIELDS :: DIMENSIONS\n        ---------------------------------------------------------------------------\n        */\n        /** {Integer} Available outer left position (from document perspective) */\n        this.__clientLeft = 0;\n        /** {Integer} Available outer top position (from document perspective) */\n        this.__clientTop = 0;\n        /** {Integer} Available outer width */\n        this.__clientWidth = 0;\n        /** {Integer} Available outer height */\n        this.__clientHeight = 0;\n        /** {Integer} Outer width of content */\n        this.__contentWidth = 0;\n        /** {Integer} Outer height of content */\n        this.__contentHeight = 0;\n        /** {Integer} Snapping width for content */\n        this.__snapWidth = 100;\n        /** {Integer} Snapping height for content */\n        this.__snapHeight = 100;\n        /** {Integer} Height to assign to refresh area */\n        this.__refreshHeight = null;\n        /** {Boolean} Whether the refresh process is enabled when the event is released now */\n        this.__refreshActive = false;\n        /** {Function} Callback to execute on activation. This is for signalling the user about a refresh is about to happen when he release */\n        this.__refreshActivate = null;\n        /** {Function} Callback to execute on deactivation. This is for signalling the user about the refresh being cancelled */\n        this.__refreshDeactivate = null;\n        /** {Function} Callback to execute to start the actual refresh. Call {@link #refreshFinish} when done */\n        this.__refreshStart = null;\n        /** {Number} Zoom level */\n        this.__zoomLevel = 1;\n        this.__zoomLevelStart = this.__zoomLevel;\n        /** {Number} Scroll position on x-axis */\n        this.__scrollLeft = 0;\n        /** {Number} Scroll position on y-axis */\n        this.__scrollTop = 0;\n        /** {Integer} Maximum allowed scroll position on x-axis */\n        this.__maxScrollLeft = 0;\n        /** {Integer} Maximum allowed scroll position on y-axis */\n        this.__maxScrollTop = 0;\n        /* {Number} Scheduled left position (final position when animating) */\n        this.__scheduledLeft = 0;\n        /* {Number} Scheduled top position (final position when animating) */\n        this.__scheduledTop = 0;\n        /* {Number} Scheduled zoom level (final scale when animating) */\n        this.__scheduledZoom = 0;\n        /*\n        ---------------------------------------------------------------------------\n          INTERNAL FIELDS :: LAST POSITIONS\n        ---------------------------------------------------------------------------\n        */\n        /** {Number} Left position of finger at start */\n        this.__lastTouchLeft = null;\n        /** {Number} Top position of finger at start */\n        this.__lastTouchTop = null;\n        /** {Date} Timestamp of last move of finger. Used to limit tracking range for deceleration speed. */\n        this.__lastTouchMove = null;\n        /** {Array} List of positions, uses three indexes for each state: left, top, timestamp */\n        this.__positions = null;\n        /*\n        ---------------------------------------------------------------------------\n          INTERNAL FIELDS :: DECELERATION SUPPORT\n        ---------------------------------------------------------------------------\n        */\n        /** {Integer} Minimum left scroll position during deceleration */\n        this.__minDecelerationScrollLeft = null;\n        /** {Integer} Minimum top scroll position during deceleration */\n        this.__minDecelerationScrollTop = null;\n        /** {Integer} Maximum left scroll position during deceleration */\n        this.__maxDecelerationScrollLeft = null;\n        /** {Integer} Maximum top scroll position during deceleration */\n        this.__maxDecelerationScrollTop = null;\n        /** {Number} Current factor to modify horizontal scroll position with on every step */\n        this.__decelerationVelocityX = null;\n        /** {Number} Current factor to modify vertical scroll position with on every step */\n        this.__decelerationVelocityY = null;\n        this.__callback = function (scrollLeft, scrollTop, zoomLevel) { };\n        this.__zoomComplete = function () { };\n        this.options = {\n            scrollingX: true,\n            scrollingY: true,\n            animating: true,\n            animationDuration: 250,\n            bouncing: true,\n            locking: true,\n            paging: false,\n            snapping: false,\n            zooming: false,\n            zoomLevel: 1,\n            minZoom: 0.5,\n            maxZoom: 3,\n            speedMultiplier: 1,\n            scrollingComplete: function () { },\n            penetrationDeceleration: 0.03,\n            penetrationAcceleration: 0.08,\n        };\n        this.__callback = callback;\n        this.options = __assign({}, this.options, options);\n        if (options.zoomLevel && options.zoomLevel >= this.options.minZoom && options.zoomLevel <= this.options.maxZoom) {\n            this.__zoomLevel = options.zoomLevel;\n            this.__zoomLevelStart = this.__zoomLevel;\n        }\n    }\n    // Easing Equations (c) 2003 Robert Penner, all rights reserved.\n    // Open source under the BSD License.\n    /**\n     * @param pos {Number} position between 0 (start of effect) and 1 (end of effect)\n     **/\n    Scroller.prototype.easeOutCubic = function (pos) {\n        return Math.pow(pos - 1, 3) + 1;\n    };\n    /**\n     * @param pos {Number} position between 0 (start of effect) and 1 (end of effect)\n     **/\n    Scroller.prototype.easeInOutCubic = function (pos) {\n        if ((pos /= 0.5) < 1) {\n            return 0.5 * Math.pow(pos, 3);\n        }\n        return 0.5 * (Math.pow(pos - 2, 3) + 2);\n    };\n    /*\n    ---------------------------------------------------------------------------\n      PUBLIC API\n    ---------------------------------------------------------------------------\n    */\n    /**\n     * Configures the dimensions of the client (outer) and content (inner) elements.\n     * Requires the available space for the outer element and the outer size of the inner element.\n     * All values which are falsy (null or zero etc.) are ignored and the old value is kept.\n     *\n     * @param clientWidth {Integer ? null} Inner width of outer element\n     * @param clientHeight {Integer ? null} Inner height of outer element\n     * @param contentWidth {Integer ? null} Outer width of inner element\n     * @param contentHeight {Integer ? null} Outer height of inner element\n     */\n    Scroller.prototype.setDimensions = function (clientWidth, clientHeight, contentWidth, contentHeight) {\n        // Only update values which are defined\n        if (clientWidth === +clientWidth) {\n            this.__clientWidth = clientWidth;\n        }\n        if (clientHeight === +clientHeight) {\n            this.__clientHeight = clientHeight;\n        }\n        if (contentWidth === +contentWidth) {\n            this.__contentWidth = contentWidth;\n        }\n        if (contentHeight === +contentHeight) {\n            this.__contentHeight = contentHeight;\n        }\n        // Refresh maximums\n        this.__computeScrollMax();\n        // Refresh scroll position\n        this.scrollTo(this.__scrollLeft, this.__scrollTop, true);\n    };\n    /**\n     * Sets the client coordinates in relation to the document.\n     *\n     * @param left {Integer ? 0} Left position of outer element\n     * @param top {Integer ? 0} Top position of outer element\n     */\n    Scroller.prototype.setPosition = function (left, top) {\n        this.__clientLeft = left || 0;\n        this.__clientTop = top || 0;\n    };\n    /**\n     * Configures the snapping (when snapping is active)\n     *\n     * @param width {Integer} Snapping width\n     * @param height {Integer} Snapping height\n     */\n    Scroller.prototype.setSnapSize = function (width, height) {\n        this.__snapWidth = width;\n        this.__snapHeight = height;\n    };\n    /**\n     * Activates pull-to-refresh. A special zone on the top of the list to start a list refresh whenever\n     * the user event is released during visibility of this zone. This was introduced by some apps on iOS like\n     * the official Twitter client.\n     *\n     * @param height {Integer} Height of pull-to-refresh zone on top of rendered list\n     * @param activateCallback {Function} Callback to execute on activation. This is for signalling the user about a refresh is about to happen when he release.\n     * @param deactivateCallback {Function} Callback to execute on deactivation. This is for signalling the user about the refresh being cancelled.\n     * @param startCallback {Function} Callback to execute to start the real async refresh action. Call {@link #finishPullToRefresh} after finish of refresh.\n     */\n    Scroller.prototype.activatePullToRefresh = function (height, activateCallback, deactivateCallback, startCallback) {\n        this.__refreshHeight = height;\n        this.__refreshActivate = activateCallback;\n        this.__refreshDeactivate = deactivateCallback;\n        this.__refreshStart = startCallback;\n    };\n    /**\n     * Starts pull-to-refresh manually.\n     */\n    Scroller.prototype.triggerPullToRefresh = function () {\n        // Use publish instead of scrollTo to allow scrolling to out of boundary position\n        // We don't need to normalize scrollLeft, zoomLevel, etc. here because we only y-scrolling when pull-to-refresh is enabled\n        this.__publish(this.__scrollLeft, -this.__refreshHeight, this.__zoomLevel, true);\n        if (this.__refreshStart) {\n            this.__refreshStart();\n        }\n    };\n    /**\n     * Signalizes that pull-to-refresh is finished.\n     */\n    Scroller.prototype.finishPullToRefresh = function () {\n        this.__refreshActive = false;\n        if (this.__refreshDeactivate) {\n            this.__refreshDeactivate();\n        }\n        this.scrollTo(this.__scrollLeft, this.__scrollTop, true);\n    };\n    /**\n     * Returns the scroll position and zooming values\n     *\n     * @return {Map} `left` and `top` scroll position and `zoom` level\n     */\n    Scroller.prototype.getValues = function () {\n        return {\n            left: this.__scrollLeft,\n            top: this.__scrollTop,\n            zoom: this.__zoomLevel,\n        };\n    };\n    /**\n     * Returns the maximum scroll values\n     *\n     * @return {Map} `left` and `top` maximum scroll values\n     */\n    Scroller.prototype.getScrollMax = function () {\n        return {\n            left: this.__maxScrollLeft,\n            top: this.__maxScrollTop,\n        };\n    };\n    /**\n     * Zooms to the given level. Supports optional animation. Zooms\n     * the center when no coordinates are given.\n     *\n     * @param level {Number} Level to zoom to\n     * @param animate {Boolean ? false} Whether to use animation\n     * @param originLeft {Number ? null} Zoom in at given left coordinate\n     * @param originTop {Number ? null} Zoom in at given top coordinate\n     * @param callback {Function ? null} A callback that gets fired when the zoom is complete.\n     */\n    Scroller.prototype.zoomTo = function (level, animate, originLeft, originTop, callback) {\n        if (!this.options.zooming) {\n            throw new Error('Zooming is not enabled!');\n        }\n        // Add callback if exists\n        if (callback) {\n            this.__zoomComplete = callback;\n        }\n        // Stop deceleration\n        if (this.__isDecelerating) {\n            Animate_1.core.effect.Animate.stop(this.__isDecelerating);\n            this.__isDecelerating = false;\n        }\n        var oldLevel = this.__zoomLevel;\n        // Normalize input origin to center of viewport if not defined\n        if (originLeft == null) {\n            originLeft = this.__clientWidth / 2;\n        }\n        if (originTop == null) {\n            originTop = this.__clientHeight / 2;\n        }\n        // Limit level according to configuration\n        level = Math.max(Math.min(level, this.options.maxZoom), this.options.minZoom);\n        // Recompute maximum values while temporary tweaking maximum scroll ranges\n        this.__computeScrollMax(level);\n        // Recompute left and top coordinates based on new zoom level\n        var left = ((originLeft + this.__scrollLeft) * level) / oldLevel - originLeft;\n        var top = ((originTop + this.__scrollTop) * level) / oldLevel - originTop;\n        // Limit x-axis\n        if (left > this.__maxScrollLeft) {\n            left = this.__maxScrollLeft;\n        }\n        else if (left < 0) {\n            left = 0;\n        }\n        // Limit y-axis\n        if (top > this.__maxScrollTop) {\n            top = this.__maxScrollTop;\n        }\n        else if (top < 0) {\n            top = 0;\n        }\n        // Push values out\n        this.__publish(left, top, level, animate);\n    };\n    /**\n     * Zooms the content by the given factor.\n     *\n     * @param factor {Number} Zoom by given factor\n     * @param animate {Boolean ? false} Whether to use animation\n     * @param originLeft {Number ? 0} Zoom in at given left coordinate\n     * @param originTop {Number ? 0} Zoom in at given top coordinate\n     * @param callback {Function ? null} A callback that gets fired when the zoom is complete.\n     */\n    Scroller.prototype.zoomBy = function (factor, animate, originLeft, originTop, callback) {\n        this.zoomTo(this.__zoomLevel * factor, animate, originLeft, originTop, callback);\n    };\n    /**\n     * Scrolls to the given position. Respect limitations and snapping automatically.\n     *\n     * @param left {Number?null} Horizontal scroll position, keeps current if value is <code>null</code>\n     * @param top {Number?null} Vertical scroll position, keeps current if value is <code>null</code>\n     * @param animate {Boolean?false} Whether the scrolling should happen using an animation\n     * @param zoom {Number?null} Zoom level to go to\n     */\n    Scroller.prototype.scrollTo = function (left, top, animate, zoom) {\n        // Stop deceleration\n        if (this.__isDecelerating) {\n            Animate_1.core.effect.Animate.stop(this.__isDecelerating);\n            this.__isDecelerating = false;\n        }\n        // Correct coordinates based on new zoom level\n        if (zoom != null && zoom !== this.__zoomLevel) {\n            if (!this.options.zooming) {\n                throw new Error('Zooming is not enabled!');\n            }\n            left *= zoom;\n            top *= zoom;\n            // Recompute maximum values while temporary tweaking maximum scroll ranges\n            this.__computeScrollMax(zoom);\n        }\n        else {\n            // Keep zoom when not defined\n            zoom = this.__zoomLevel;\n        }\n        if (!this.options.scrollingX) {\n            left = this.__scrollLeft;\n        }\n        else {\n            if (this.options.paging) {\n                left = Math.round(left / this.__clientWidth) * this.__clientWidth;\n            }\n            else if (this.options.snapping) {\n                left = Math.round(left / this.__snapWidth) * this.__snapWidth;\n            }\n        }\n        if (!this.options.scrollingY) {\n            top = this.__scrollTop;\n        }\n        else {\n            if (this.options.paging) {\n                top = Math.round(top / this.__clientHeight) * this.__clientHeight;\n            }\n            else if (this.options.snapping) {\n                top = Math.round(top / this.__snapHeight) * this.__snapHeight;\n            }\n        }\n        // Limit for allowed ranges\n        left = Math.max(Math.min(this.__maxScrollLeft, left), 0);\n        top = Math.max(Math.min(this.__maxScrollTop, top), 0);\n        // Don't animate when no change detected, still call publish to make sure\n        // that rendered position is really in-sync with internal data\n        if (left === this.__scrollLeft && top === this.__scrollTop) {\n            animate = false;\n        }\n        // Publish new values\n        if (!this.__isTracking) {\n            this.__publish(left, top, zoom, animate);\n        }\n    };\n    /**\n     * Scroll by the given offset\n     *\n     * @param left {Number ? 0} Scroll x-axis by given offset\n     * @param top {Number ? 0} Scroll x-axis by given offset\n     * @param animate {Boolean ? false} Whether to animate the given change\n     */\n    Scroller.prototype.scrollBy = function (left, top, animate) {\n        var startLeft = this.__isAnimating ? this.__scheduledLeft : this.__scrollLeft;\n        var startTop = this.__isAnimating ? this.__scheduledTop : this.__scrollTop;\n        this.scrollTo(startLeft + (left || 0), startTop + (top || 0), animate);\n    };\n    /*\n   ---------------------------------------------------------------------------\n     EVENT CALLBACKS\n   ---------------------------------------------------------------------------\n   */\n    /**\n     * Mouse wheel handler for zooming support\n     */\n    Scroller.prototype.doMouseZoom = function (wheelDelta, timeStamp, pageX, pageY) {\n        var change = wheelDelta > 0 ? 0.97 : 1.03;\n        return this.zoomTo(this.__zoomLevel * change, false, pageX - this.__clientLeft, pageY - this.__clientTop);\n    };\n    /**\n     * Touch start handler for scrolling support\n     */\n    Scroller.prototype.doTouchStart = function (touches, timeStamp) {\n        // Array-like check is enough here\n        if (touches.length == null) {\n            throw new Error('Invalid touch list: ' + touches);\n        }\n        if (timeStamp instanceof Date) {\n            timeStamp = timeStamp.valueOf();\n        }\n        if (typeof timeStamp !== 'number') {\n            throw new Error('Invalid timestamp value: ' + timeStamp);\n        }\n        // Reset interruptedAnimation flag\n        this.__interruptedAnimation = true;\n        // Stop deceleration\n        if (this.__isDecelerating) {\n            Animate_1.core.effect.Animate.stop(this.__isDecelerating);\n            this.__isDecelerating = false;\n            this.__interruptedAnimation = true;\n        }\n        // Stop animation\n        if (this.__isAnimating) {\n            Animate_1.core.effect.Animate.stop(this.__isAnimating);\n            this.__isAnimating = false;\n            this.__interruptedAnimation = true;\n        }\n        // Use center point when dealing with two fingers\n        var currentTouchLeft, currentTouchTop;\n        var isSingleTouch = touches.length === 1;\n        if (isSingleTouch) {\n            currentTouchLeft = touches[0].pageX;\n            currentTouchTop = touches[0].pageY;\n        }\n        else {\n            currentTouchLeft = Math.abs(touches[0].pageX + touches[1].pageX) / 2;\n            currentTouchTop = Math.abs(touches[0].pageY + touches[1].pageY) / 2;\n        }\n        // Store initial positions\n        this.__initialTouchLeft = currentTouchLeft;\n        this.__initialTouchTop = currentTouchTop;\n        // Store initial touchList for scale calculation\n        this.__initialTouches = touches;\n        // Store current zoom level\n        this.__zoomLevelStart = this.__zoomLevel;\n        // Store initial touch positions\n        this.__lastTouchLeft = currentTouchLeft;\n        this.__lastTouchTop = currentTouchTop;\n        // Store initial move time stamp\n        this.__lastTouchMove = timeStamp;\n        // Reset initial scale\n        this.__lastScale = 1;\n        // Reset locking flags\n        this.__enableScrollX = !isSingleTouch && this.options.scrollingX;\n        this.__enableScrollY = !isSingleTouch && this.options.scrollingY;\n        // Reset tracking flag\n        this.__isTracking = true;\n        // Reset deceleration complete flag\n        this.__didDecelerationComplete = false;\n        // Dragging starts directly with two fingers, otherwise lazy with an offset\n        this.__isDragging = !isSingleTouch;\n        // Some features are disabled in multi touch scenarios\n        this.__isSingleTouch = isSingleTouch;\n        // Clearing data structure\n        this.__positions = [];\n    };\n    /**\n     * Touch move handler for scrolling support\n     */\n    Scroller.prototype.doTouchMove = function (touches, timeStamp, scale) {\n        // Array-like check is enough here\n        if (touches.length == null) {\n            throw new Error('Invalid touch list: ' + touches);\n        }\n        if (timeStamp instanceof Date) {\n            timeStamp = timeStamp.valueOf();\n        }\n        if (typeof timeStamp !== 'number') {\n            throw new Error('Invalid timestamp value: ' + timeStamp);\n        }\n        // Ignore event when tracking is not enabled (event might be outside of element)\n        if (!this.__isTracking) {\n            return;\n        }\n        var currentTouchLeft, currentTouchTop;\n        // Compute move based around of center of fingers\n        if (touches.length === 2) {\n            currentTouchLeft = Math.abs(touches[0].pageX + touches[1].pageX) / 2;\n            currentTouchTop = Math.abs(touches[0].pageY + touches[1].pageY) / 2;\n            // Calculate scale when not present and only when touches are used\n            if (!scale && this.options.zooming) {\n                scale = this.__getScale(this.__initialTouches, touches);\n            }\n        }\n        else {\n            currentTouchLeft = touches[0].pageX;\n            currentTouchTop = touches[0].pageY;\n        }\n        var positions = this.__positions;\n        // Are we already is dragging mode?\n        if (this.__isDragging) {\n            // Compute move distance\n            var moveX = currentTouchLeft - this.__lastTouchLeft;\n            var moveY = currentTouchTop - this.__lastTouchTop;\n            // Read previous scroll position and zooming\n            var scrollLeft = this.__scrollLeft;\n            var scrollTop = this.__scrollTop;\n            var level = this.__zoomLevel;\n            // Work with scaling\n            if (scale != null && this.options.zooming) {\n                var oldLevel = level;\n                // Recompute level based on previous scale and new scale\n                level = (level / this.__lastScale) * scale;\n                // Limit level according to configuration\n                level = Math.max(Math.min(level, this.options.maxZoom), this.options.minZoom);\n                // Only do further compution when change happened\n                if (oldLevel !== level) {\n                    // Compute relative event position to container\n                    var currentTouchLeftRel = currentTouchLeft - this.__clientLeft;\n                    var currentTouchTopRel = currentTouchTop - this.__clientTop;\n                    // Recompute left and top coordinates based on new zoom level\n                    scrollLeft = ((currentTouchLeftRel + scrollLeft) * level) / oldLevel - currentTouchLeftRel;\n                    scrollTop = ((currentTouchTopRel + scrollTop) * level) / oldLevel - currentTouchTopRel;\n                    // Recompute max scroll values\n                    this.__computeScrollMax(level);\n                }\n            }\n            if (this.__enableScrollX) {\n                scrollLeft -= moveX * this.options.speedMultiplier;\n                var maxScrollLeft = this.__maxScrollLeft;\n                if (scrollLeft > maxScrollLeft || scrollLeft < 0) {\n                    // Slow down on the edges\n                    if (this.options.bouncing) {\n                        scrollLeft += (moveX / 2) * this.options.speedMultiplier;\n                    }\n                    else if (scrollLeft > maxScrollLeft) {\n                        scrollLeft = maxScrollLeft;\n                    }\n                    else {\n                        scrollLeft = 0;\n                    }\n                }\n            }\n            // Compute new vertical scroll position\n            if (this.__enableScrollY) {\n                scrollTop -= moveY * this.options.speedMultiplier;\n                var maxScrollTop = this.__maxScrollTop;\n                if (scrollTop > maxScrollTop || scrollTop < 0) {\n                    // Slow down on the edges\n                    if (this.options.bouncing) {\n                        scrollTop += (moveY / 2) * this.options.speedMultiplier;\n                        // Support pull-to-refresh (only when only y is scrollable)\n                        if (!this.__enableScrollX && this.__refreshHeight != null) {\n                            if (!this.__refreshActive && scrollTop <= -this.__refreshHeight) {\n                                this.__refreshActive = true;\n                                if (this.__refreshActivate) {\n                                    this.__refreshActivate();\n                                }\n                            }\n                            else if (this.__refreshActive && scrollTop > -this.__refreshHeight) {\n                                this.__refreshActive = false;\n                                if (this.__refreshDeactivate) {\n                                    this.__refreshDeactivate();\n                                }\n                            }\n                        }\n                    }\n                    else if (scrollTop > maxScrollTop) {\n                        scrollTop = maxScrollTop;\n                    }\n                    else {\n                        scrollTop = 0;\n                    }\n                }\n            }\n            // Keep list from growing infinitely (holding min 10, max 20 measure points)\n            if (positions.length > 60) {\n                positions.splice(0, 30);\n            }\n            // Track scroll movement for decleration\n            positions.push(scrollLeft, scrollTop, timeStamp);\n            // Sync scroll position\n            this.__publish(scrollLeft, scrollTop, level);\n            // Otherwise figure out whether we are switching into dragging mode now.\n        }\n        else {\n            var minimumTrackingForScroll = this.options.locking ? 3 : 0;\n            var minimumTrackingForDrag = 5;\n            var distanceX = Math.abs(currentTouchLeft - this.__initialTouchLeft);\n            var distanceY = Math.abs(currentTouchTop - this.__initialTouchTop);\n            this.__enableScrollX = this.options.scrollingX && distanceX >= minimumTrackingForScroll;\n            this.__enableScrollY = this.options.scrollingY && distanceY >= minimumTrackingForScroll;\n            positions.push(this.__scrollLeft, this.__scrollTop, timeStamp);\n            this.__isDragging =\n                (this.__enableScrollX || this.__enableScrollY) &&\n                    (distanceX >= minimumTrackingForDrag || distanceY >= minimumTrackingForDrag);\n            if (this.__isDragging) {\n                this.__interruptedAnimation = false;\n            }\n        }\n        // Update last touch positions and time stamp for next event\n        this.__lastTouchLeft = currentTouchLeft;\n        this.__lastTouchTop = currentTouchTop;\n        this.__lastTouchMove = timeStamp;\n        this.__lastScale = scale;\n    };\n    /**\n     * Touch end handler for scrolling support\n     */\n    Scroller.prototype.doTouchEnd = function (timeStamp) {\n        if (timeStamp instanceof Date) {\n            timeStamp = timeStamp.valueOf();\n        }\n        if (typeof timeStamp !== 'number') {\n            throw new Error('Invalid timestamp value: ' + timeStamp);\n        }\n        // Ignore event when tracking is not enabled (no touchstart event on element)\n        // This is required as this listener ('touchmove') sits on the document and not on the element itthis.\n        if (!this.__isTracking) {\n            return;\n        }\n        // Not touching anymore (when two finger hit the screen there are two touch end events)\n        this.__isTracking = false;\n        // Be sure to reset the dragging flag now. Here we also detect whether\n        // the finger has moved fast enough to switch into a deceleration animation.\n        if (this.__isDragging) {\n            // Reset dragging flag\n            this.__isDragging = false;\n            // Start deceleration\n            // Verify that the last move detected was in some relevant time frame\n            if (this.__isSingleTouch && this.options.animating && timeStamp - this.__lastTouchMove <= 100) {\n                // Then figure out what the scroll position was about 100ms ago\n                var positions = this.__positions;\n                var endPos = positions.length - 1;\n                var startPos = endPos;\n                // Move pointer to position measured 100ms ago\n                for (var i = endPos; i > 0 && positions[i] > this.__lastTouchMove - 100; i -= 3) {\n                    startPos = i;\n                }\n                // If start and stop position is identical in a 100ms timeframe,\n                // we cannot compute any useful deceleration.\n                if (startPos !== endPos) {\n                    // Compute relative movement between these two points\n                    var timeOffset = positions[endPos] - positions[startPos];\n                    var movedLeft = this.__scrollLeft - positions[startPos - 2];\n                    var movedTop = this.__scrollTop - positions[startPos - 1];\n                    // Based on 50ms compute the movement to apply for each render step\n                    this.__decelerationVelocityX = (movedLeft / timeOffset) * (1000 / 60);\n                    this.__decelerationVelocityY = (movedTop / timeOffset) * (1000 / 60);\n                    // How much velocity is required to start the deceleration\n                    var minVelocityToStartDeceleration = this.options.paging || this.options.snapping ? 4 : 1;\n                    // Verify that we have enough velocity to start deceleration\n                    if (Math.abs(this.__decelerationVelocityX) > minVelocityToStartDeceleration ||\n                        Math.abs(this.__decelerationVelocityY) > minVelocityToStartDeceleration) {\n                        // Deactivate pull-to-refresh when decelerating\n                        if (!this.__refreshActive) {\n                            this.__startDeceleration(timeStamp);\n                        }\n                    }\n                    else {\n                        this.options.scrollingComplete();\n                    }\n                }\n                else {\n                    this.options.scrollingComplete();\n                }\n            }\n            else if (timeStamp - this.__lastTouchMove > 100) {\n                this.options.scrollingComplete();\n            }\n        }\n        // If this was a slower move it is per default non decelerated, but this\n        // still means that we want snap back to the bounds which is done here.\n        // This is placed outside the condition above to improve edge case stability\n        // e.g. touchend fired without enabled dragging. This should normally do not\n        // have modified the scroll positions or even showed the scrollbars though.\n        if (!this.__isDecelerating) {\n            if (this.__refreshActive && this.__refreshStart) {\n                // Use publish instead of scrollTo to allow scrolling to out of boundary position\n                // We don't need to normalize scrollLeft, zoomLevel, etc. here because we only y-scrolling when pull-to-refresh is enabled\n                this.__publish(this.__scrollLeft, -this.__refreshHeight, this.__zoomLevel, true);\n                if (this.__refreshStart) {\n                    this.__refreshStart();\n                }\n            }\n            else {\n                if (this.__interruptedAnimation || this.__isDragging) {\n                    this.options.scrollingComplete();\n                }\n                this.scrollTo(this.__scrollLeft, this.__scrollTop, true, this.__zoomLevel);\n                // Directly signalize deactivation (nothing todo on refresh?)\n                if (this.__refreshActive) {\n                    this.__refreshActive = false;\n                    if (this.__refreshDeactivate) {\n                        this.__refreshDeactivate();\n                    }\n                }\n            }\n        }\n        // Fully cleanup list\n        this.__positions.length = 0;\n    };\n    /*\n    ---------------------------------------------------------------------------\n      PRIVATE API\n    ---------------------------------------------------------------------------\n    */\n    /**\n     * Applies the scroll position to the content element\n     *\n     * @param left {Number} Left scroll position\n     * @param top {Number} Top scroll position\n     * @param animate {Boolean?false} Whether animation should be used to move to the new coordinates\n     */\n    Scroller.prototype.__publish = function (left, top, zoom, animate) {\n        var _this = this;\n        // Remember whether we had an animation, then we try to continue based on the current \"drive\" of the animation\n        var wasAnimating = this.__isAnimating;\n        if (wasAnimating) {\n            Animate_1.core.effect.Animate.stop(wasAnimating);\n            this.__isAnimating = false;\n        }\n        if (animate && this.options.animating) {\n            // Keep scheduled positions for scrollBy/zoomBy functionality\n            this.__scheduledLeft = left;\n            this.__scheduledTop = top;\n            this.__scheduledZoom = zoom;\n            var oldLeft = this.__scrollLeft;\n            var oldTop = this.__scrollTop;\n            var oldZoom = this.__zoomLevel;\n            var diffLeft = left - oldLeft;\n            var diffTop = top - oldTop;\n            var diffZoom = zoom - oldZoom;\n            var step = function (percent, now, render) {\n                if (render) {\n                    _this.__scrollLeft = oldLeft + diffLeft * percent;\n                    _this.__scrollTop = oldTop + diffTop * percent;\n                    _this.__zoomLevel = oldZoom + diffZoom * percent;\n                    // Push values out\n                    if (_this.__callback) {\n                        _this.__callback(_this.__scrollLeft, _this.__scrollTop, _this.__zoomLevel);\n                    }\n                }\n            };\n            var verify = function (id) {\n                return _this.__isAnimating === id;\n            };\n            var completed = function (renderedFramesPerSecond, animationId, wasFinished) {\n                if (animationId === _this.__isAnimating) {\n                    _this.__isAnimating = false;\n                }\n                if (_this.__didDecelerationComplete || wasFinished) {\n                    _this.options.scrollingComplete();\n                }\n                if (_this.options.zooming) {\n                    _this.__computeScrollMax();\n                    if (_this.__zoomComplete) {\n                        _this.__zoomComplete();\n                        _this.__zoomComplete = null;\n                    }\n                }\n            };\n            // When continuing based on previous animation we choose an ease-out animation instead of ease-in-out\n            this.__isAnimating = Animate_1.core.effect.Animate.start(step, verify, completed, this.options.animationDuration, wasAnimating ? this.easeOutCubic : this.easeInOutCubic);\n        }\n        else {\n            this.__scheduledLeft = this.__scrollLeft = left;\n            this.__scheduledTop = this.__scrollTop = top;\n            this.__scheduledZoom = this.__zoomLevel = zoom;\n            // Push values out\n            if (this.__callback) {\n                this.__callback(left, top, zoom);\n            }\n            // Fix max scroll ranges\n            if (this.options.zooming) {\n                this.__computeScrollMax();\n                if (this.__zoomComplete) {\n                    this.__zoomComplete();\n                    this.__zoomComplete = null;\n                }\n            }\n        }\n    };\n    /**\n     * Recomputes scroll minimum values based on client dimensions and content dimensions.\n     */\n    Scroller.prototype.__computeScrollMax = function (zoomLevel) {\n        if (zoomLevel === void 0) { zoomLevel = this.__zoomLevel; }\n        this.__maxScrollLeft = Math.max(this.__contentWidth * zoomLevel - this.__clientWidth, 0);\n        this.__maxScrollTop = Math.max(this.__contentHeight * zoomLevel - this.__clientHeight, 0);\n    };\n    /*\n    ---------------------------------------------------------------------------\n      ANIMATION (DECELERATION) SUPPORT\n    ---------------------------------------------------------------------------\n    */\n    /**\n     * Called when a touch sequence end and the speed of the finger was high enough\n     * to switch into deceleration mode.\n     */\n    Scroller.prototype.__startDeceleration = function (timeStamp) {\n        var _this = this;\n        if (this.options.paging) {\n            var scrollLeft = Math.max(Math.min(this.__scrollLeft, this.__maxScrollLeft), 0);\n            var scrollTop = Math.max(Math.min(this.__scrollTop, this.__maxScrollTop), 0);\n            var clientWidth = this.__clientWidth;\n            var clientHeight = this.__clientHeight;\n            // We limit deceleration not to the min/max values of the allowed range, but to the size of the visible client area.\n            // Each page should have exactly the size of the client area.\n            this.__minDecelerationScrollLeft = Math.floor(scrollLeft / clientWidth) * clientWidth;\n            this.__minDecelerationScrollTop = Math.floor(scrollTop / clientHeight) * clientHeight;\n            this.__maxDecelerationScrollLeft = Math.ceil(scrollLeft / clientWidth) * clientWidth;\n            this.__maxDecelerationScrollTop = Math.ceil(scrollTop / clientHeight) * clientHeight;\n        }\n        else {\n            this.__minDecelerationScrollLeft = 0;\n            this.__minDecelerationScrollTop = 0;\n            this.__maxDecelerationScrollLeft = this.__maxScrollLeft;\n            this.__maxDecelerationScrollTop = this.__maxScrollTop;\n        }\n        // Wrap class method\n        var step = function (percent, now, render) {\n            _this.__stepThroughDeceleration(render);\n        };\n        // How much velocity is required to keep the deceleration running\n        var minVelocityToKeepDecelerating = this.options.snapping ? 4 : 0.001;\n        // Detect whether it's still worth to continue animating steps\n        // If we are already slow enough to not being user perceivable anymore, we stop the whole process here.\n        var verify = function () {\n            var shouldContinue = Math.abs(_this.__decelerationVelocityX) >= minVelocityToKeepDecelerating ||\n                Math.abs(_this.__decelerationVelocityY) >= minVelocityToKeepDecelerating;\n            if (!shouldContinue) {\n                _this.__didDecelerationComplete = true;\n            }\n            return shouldContinue;\n        };\n        var completed = function (renderedFramesPerSecond, animationId, wasFinished) {\n            _this.__isDecelerating = false;\n            if (_this.__didDecelerationComplete) {\n                _this.options.scrollingComplete();\n            }\n            // Animate to grid when snapping is active, otherwise just fix out-of-boundary positions\n            _this.scrollTo(_this.__scrollLeft, _this.__scrollTop, _this.options.snapping);\n        };\n        // Start animation and switch on flag\n        this.__isDecelerating = Animate_1.core.effect.Animate.start(step, verify, completed);\n    };\n    /**\n     * Called on every step of the animation\n     *\n     * @param inMemory {Boolean?false} Whether to not render the current step, but keep it in memory only. Used internally only!\n     */\n    Scroller.prototype.__stepThroughDeceleration = function (render) {\n        //\n        // COMPUTE NEXT SCROLL POSITION\n        //\n        // Add deceleration to scroll position\n        var scrollLeft = this.__scrollLeft + this.__decelerationVelocityX;\n        var scrollTop = this.__scrollTop + this.__decelerationVelocityY;\n        //\n        // HARD LIMIT SCROLL POSITION FOR NON BOUNCING MODE\n        //\n        if (!this.options.bouncing) {\n            var scrollLeftFixed = Math.max(Math.min(this.__maxDecelerationScrollLeft, scrollLeft), this.__minDecelerationScrollLeft);\n            if (scrollLeftFixed !== scrollLeft) {\n                scrollLeft = scrollLeftFixed;\n                this.__decelerationVelocityX = 0;\n            }\n            var scrollTopFixed = Math.max(Math.min(this.__maxDecelerationScrollTop, scrollTop), this.__minDecelerationScrollTop);\n            if (scrollTopFixed !== scrollTop) {\n                scrollTop = scrollTopFixed;\n                this.__decelerationVelocityY = 0;\n            }\n        }\n        //\n        // UPDATE SCROLL POSITION\n        //\n        if (render) {\n            this.__publish(scrollLeft, scrollTop, this.__zoomLevel);\n        }\n        else {\n            this.__scrollLeft = scrollLeft;\n            this.__scrollTop = scrollTop;\n        }\n        //\n        // SLOW DOWN\n        //\n        // Slow down velocity on every iteration\n        if (!this.options.paging) {\n            // This is the factor applied to every iteration of the animation\n            // to slow down the process. This should emulate natural behavior where\n            // objects slow down when the initiator of the movement is removed\n            var frictionFactor = 0.95;\n            this.__decelerationVelocityX *= frictionFactor;\n            this.__decelerationVelocityY *= frictionFactor;\n        }\n        //\n        // BOUNCING SUPPORT\n        //\n        if (this.options.bouncing) {\n            var scrollOutsideX = 0;\n            var scrollOutsideY = 0;\n            // This configures the amount of change applied to deceleration/acceleration when reaching boundaries\n            var penetrationDeceleration = this.options.penetrationDeceleration;\n            var penetrationAcceleration = this.options.penetrationAcceleration;\n            // Check limits\n            if (scrollLeft < this.__minDecelerationScrollLeft) {\n                scrollOutsideX = this.__minDecelerationScrollLeft - scrollLeft;\n            }\n            else if (scrollLeft > this.__maxDecelerationScrollLeft) {\n                scrollOutsideX = this.__maxDecelerationScrollLeft - scrollLeft;\n            }\n            if (scrollTop < this.__minDecelerationScrollTop) {\n                scrollOutsideY = this.__minDecelerationScrollTop - scrollTop;\n            }\n            else if (scrollTop > this.__maxDecelerationScrollTop) {\n                scrollOutsideY = this.__maxDecelerationScrollTop - scrollTop;\n            }\n            // Slow down until slow enough, then flip back to snap position\n            if (scrollOutsideX !== 0) {\n                if (scrollOutsideX * this.__decelerationVelocityX <= 0) {\n                    this.__decelerationVelocityX += scrollOutsideX * penetrationDeceleration;\n                }\n                else {\n                    this.__decelerationVelocityX = scrollOutsideX * penetrationAcceleration;\n                }\n            }\n            if (scrollOutsideY !== 0) {\n                if (scrollOutsideY * this.__decelerationVelocityY <= 0) {\n                    this.__decelerationVelocityY += scrollOutsideY * penetrationDeceleration;\n                }\n                else {\n                    this.__decelerationVelocityY = scrollOutsideY * penetrationAcceleration;\n                }\n            }\n        }\n    };\n    /**\n     * calculate the distance between two touches\n     * @param   {Touch}     touch1\n     * @param   {Touch}     touch2\n     * @returns {Number}    distance\n     */\n    Scroller.prototype.__getDistance = function (touch1, touch2) {\n        var x = touch2.pageX - touch1.pageX, y = touch2.pageY - touch1.pageY;\n        return Math.sqrt(x * x + y * y);\n    };\n    /**\n     * calculate the scale factor between two touchLists (fingers)\n     * no scale is 1, and goes down to 0 when pinched together, and bigger when pinched out\n     * @param   {Array}     start\n     * @param   {Array}     end\n     * @returns {Number}    scale\n     */\n    Scroller.prototype.__getScale = function (start, end) {\n        // need two fingers...\n        if (start.length >= 2 && end.length >= 2) {\n            return this.__getDistance(end[0], end[1]) / this.__getDistance(start[0], start[1]);\n        }\n        return 1;\n    };\n    return Scroller;\n}());\nexports.Scroller = Scroller;\n","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./EasyScroller\"));\n__export(require(\"./Scroller\"));\n","import {EasyScroller} from 'easyscroller';\n\nconst FEATURE_HEIGHT = 10;\nconst MARGIN_TO_FEATURES = 10;\nconst PADDING_BETWEEN_TRACKS = 4;\n\nclass Letter {\n  constructor(letter, options = {}) {\n    this.value = letter;\n    this.width = parseInt(options.width, 10) || 100;\n\n    // W is 30% wider than the other letters, so need to make sure\n    // it gets modified accordingly.\n    if (this.value === 'W') {\n      this.width += (this.width * 30) / 100;\n    }\n\n    this.height = parseInt(options.height, 10) || 100;\n\n    this.color = options.color || '#000';\n    // if the height and width are changed from the default, then\n    // this will also need to be changed as it cant be calculated\n    // dynamically.\n    this.fontSize = options.fontSize || 138;\n  }\n\n  // eslint-disable-next-line max-params\n  draw (extCtx, targetHeight, targetWidth, x, y, color) {\n    const hRatio = targetHeight / this.height;\n    const wRatio = targetWidth / this.width;\n    const prevFont = extCtx.font;\n    extCtx.transform(wRatio, 0, 0, hRatio, x, y);\n    extCtx.fillStyle = color || this.color;\n    extCtx.textAlign = 'center';\n    extCtx.font = `bold ${this.fontSize}px Arial`;\n\n    extCtx.fillText(this.value, 0, 0);\n    // restore the canvas settings\n    extCtx.setTransform(1, 0, 0, 1, 0, 0);\n    extCtx.fillStyle = '#000000';\n    extCtx.font = prevFont;\n  };\n}\n\nconst ConsensusColors = function() {\n  this.grey = '#7a7a7a';\n\n  // eslint-disable-next-line max-statements\n  const arbitrate = (threshold, scoreref) => {\n    let bestclass = '.';\n    let bestscore = 0;\n    let a = null;\n    let b = null;\n    const classSize = {\n      '.': 20,\n      h: 11,\n      '+': 3,\n      '-': 2,\n      o: 2,\n      p: 2,\n    };\n\n    for (const [type, score] of Object.entries(scoreref)) {\n      if (score >= threshold) {\n        a = classSize[type] || 1;\n        b = classSize[bestclass] || 1;\n\n        if (a < b) {\n          bestclass = type;\n          bestscore = score;\n        } else if (a === b) {\n          if (score > bestscore) {\n            bestclass = type;\n            bestscore = scoreref[type];\n          }\n        }\n      }\n    }\n    return bestclass;\n  };\n\n  this.check_PG = function(pos, consensuses, colorsRef) {\n    colorsRef[pos].P = '#ff1';\n    colorsRef[pos].G = '#ff7f11';\n    return 1;\n  };\n\n  this.check_R = function(pos, consensuses, colorsRef) {\n    colorsRef[pos].R = this.grey;\n\n    const red = '#F99';\n    const letters = ['Q', 'K', 'R'];\n\n    for (const letter of letters) {\n      if (consensuses['0.85'][pos] === letter) {\n        colorsRef[pos].R = red;\n        return 1;\n      }\n    }\n\n    if (\n      consensuses['0.60'][pos] === '+' ||\n      consensuses['0.60'][pos] === 'R' ||\n      consensuses['0.60'][pos] === 'K'\n    ) {\n      colorsRef[pos].R = red;\n      return 1;\n    }\n    return 1;\n  };\n\n  this.check_Q = function(pos, consensuses, colorsRef) {\n    colorsRef[pos].Q = this.grey;\n\n    const green = '#9F9';\n    const letters = ['Q', 'T', 'K', 'R'];\n\n    if (\n      consensuses['0.50'][pos] === 'b' ||\n      consensuses['0.50'][pos] === 'E' ||\n      consensuses['0.50'][pos] === 'Q'\n    ) {\n      colorsRef[pos].Q = green;\n      return 1;\n    }\n\n    for (const letter of letters) {\n      if (consensuses['0.85'][pos] === letter) {\n        colorsRef[pos].Q = green;\n        return 1;\n      }\n    }\n\n    if (\n      consensuses['0.60'][pos] === '+' ||\n      consensuses['0.60'][pos] === 'K' ||\n      consensuses['0.50'][pos] === 'R'\n    ) {\n      colorsRef[pos].Q = green;\n      return 1;\n    }\n\n    return 1;\n  };\n\n  this.check_N = function(pos, consensuses, colorsRef) {\n    colorsRef[pos].N = this.grey;\n\n    const green = '#9F9';\n\n    if (consensuses['0.50'][pos] === 'N') {\n      colorsRef[pos].N = green;\n      return 1;\n    }\n\n    if (consensuses['0.85'][pos] === 'D') {\n      colorsRef[pos].N = green;\n      return 1;\n    }\n\n    return 1;\n  };\n\n  this.check_K = function(pos, consensuses, colorsRef) {\n    colorsRef[pos].K = this.grey;\n\n    const red = '#F99';\n    const letters = ['K', 'R', 'Q'];\n\n    if (\n      consensuses['0.60'][pos] === '+' ||\n      consensuses['0.60'][pos] === 'R' ||\n      consensuses['0.60'][pos] === 'K'\n    ) {\n      colorsRef[pos].K = red;\n      return 1;\n    }\n\n    for (const letter of letters) {\n      if (consensuses['0.85'][pos] === letter) {\n        colorsRef[pos].K = red;\n        return 1;\n      }\n    }\n    return 1;\n  };\n\n  this.check_E = function(pos, consensuses, colorsRef) {\n    colorsRef[pos].E = this.grey;\n\n    const red = '#F99';\n    const letters = ['D', 'E'];\n\n    if (\n      consensuses['0.60'][pos] === '+' ||\n      consensuses['0.60'][pos] === 'R' ||\n      consensuses['0.60'][pos] === 'K'\n    ) {\n      colorsRef[pos].E = red;\n      return 1;\n    }\n\n    for (const letter of letters) {\n      if (consensuses['0.85'][pos] === letter) {\n        colorsRef[pos].E = red;\n        return 1;\n      }\n    }\n\n    if (\n      consensuses['0.50'][pos] === 'b' ||\n      consensuses['0.50'][pos] === 'E' ||\n      consensuses['0.50'][pos] === 'Q'\n    ) {\n      colorsRef[pos].E = red;\n      return 1;\n    }\n\n    return 1;\n  };\n\n  this.check_D = function(pos, consensuses, colorsRef) {\n    colorsRef[pos].D = this.grey;\n\n    const red = '#F99';\n    const letters = ['D', 'E', 'N'];\n\n    if (\n      consensuses['0.60'][pos] === '+' ||\n      consensuses['0.60'][pos] === 'R' ||\n      consensuses['0.60'][pos] === 'K'\n    ) {\n      colorsRef[pos].D = red;\n      return 1;\n    }\n\n    for (const letter of letters) {\n      if (consensuses['0.85'][pos] === letter) {\n        colorsRef[pos].D = red;\n        return 1;\n      }\n    }\n\n    if (\n      consensuses['0.50'][pos] === '-' ||\n      consensuses['0.60'][pos] === 'E' ||\n      consensuses['0.60'][pos] === 'D'\n    ) {\n      colorsRef[pos].D = red;\n      return 1;\n    }\n\n    return 1;\n  };\n\n  this.check_ACFILMVW = function(pos, consensuses, colorsRef) {\n    const aa = ['A', 'C', 'F', 'L', 'I', 'M', 'V', 'W'];\n    const caa = [\n      'A',\n      'C',\n      'F',\n      'H',\n      'I',\n      'L',\n      'M',\n      'V',\n      'W',\n      'Y',\n      'P',\n      'Q',\n      'h',\n    ];\n\n    for (const aaLetter of aa) {\n      colorsRef[pos][aaLetter] = this.grey;\n      for (const cssLetter of caa) {\n        if (consensuses['0.60'][pos] === cssLetter) {\n          colorsRef[pos][aaLetter] = '#99F';\n        }\n      }\n    }\n    return 1;\n  };\n\n  this.check_ST = function(pos, consensuses, colorsRef) {\n    colorsRef[pos].S = this.grey;\n    colorsRef[pos].T = this.grey;\n\n    const letters = [\n      'A',\n      'C',\n      'F',\n      'H',\n      'I',\n      'L',\n      'M',\n      'V',\n      'W',\n      'Y',\n      'P',\n      'Q',\n    ];\n\n    if (\n      consensuses['0.50'][pos] === 'a' ||\n      consensuses['0.50'][pos] === 'S' ||\n      consensuses['0.50'][pos] === 'T'\n    ) {\n      colorsRef[pos].S = '#9F9';\n      colorsRef[pos].T = '#9F9';\n      return 1;\n    }\n\n    for (const letter of letters) {\n      if (consensuses['0.85'][pos] === letter) {\n        colorsRef[pos].S = '#9F9';\n        colorsRef[pos].T = '#9F9';\n        return 1;\n      }\n    }\n  };\n\n  this.check_HY = function(pos, consensuses, colorsRef) {\n    colorsRef[pos].H = this.grey;\n    colorsRef[pos].Y = this.grey;\n\n    const letters = [\n      'A',\n      'C',\n      'F',\n      'H',\n      'I',\n      'L',\n      'M',\n      'V',\n      'W',\n      'Y',\n      'P',\n      'Q',\n      'h',\n    ];\n    const cyan = '#9FF';\n\n    if (consensuses['0.60'][pos] === 'h') {\n      colorsRef[pos].H = cyan;\n      colorsRef[pos].Y = cyan;\n      return 1;\n    }\n\n    for (const letter of letters) {\n      if (consensuses[0.85][pos] === letter) {\n        colorsRef[pos].H = cyan;\n        colorsRef[pos].Y = cyan;\n        return 1;\n      }\n    }\n\n    return 1;\n  };\n\n  // eslint-disable-next-line complexity, max-statements\n  this.color_map = function(probsArray) {\n    const thresholds = ['0.50', '0.60', '0.80', '0.85'];\n    const hydro = {\n      W: 1,\n      L: 1,\n      V: 1,\n      I: 1,\n      M: 1,\n      A: 1,\n      F: 1,\n      C: 1,\n      Y: 1,\n      H: 1,\n      P: 1,\n    };\n    const polar = { Q: 1, N: 1 };\n    const positive = { K: 1, R: 1, H: 1 };\n    const alcohol = { S: 1, T: 1 };\n    const negative = { E: 1, D: 1 };\n    const cons = {};\n    const colors = [];\n    let aa = [];\n    let score = {};\n    let consensusCol = null;\n\n    for (const column of probsArray) {\n      for (const threshold of thresholds) {\n        score = {\n          p: 0,\n          o: 0,\n          '-': 0,\n          '+': 0,\n          h: 0,\n        };\n        for (const _aa of column) {\n          aa = _aa.split(':');\n          score[aa[0]] = parseFloat(aa[1], 10);\n          if (polar[aa[0]]) {\n            score.p += parseFloat(aa[1], 10);\n            continue;\n          }\n\n          if (alcohol[aa[0]]) {\n            score.o += parseFloat(aa[1], 10);\n            continue;\n          }\n\n          if (negative[aa[0]]) {\n            score['-'] += parseFloat(aa[1], 10);\n            continue;\n          }\n\n          if (positive[aa[0]]) {\n            score['+'] += parseFloat(aa[1], 10);\n          }\n\n          if (hydro[aa[0]]) {\n            score.h += parseFloat(aa[1], 10);\n          }\n        }\n        consensusCol = arbitrate(threshold, score);\n        if (!cons[threshold]) {\n          cons[threshold] = [];\n        }\n        cons[threshold].push(consensusCol);\n      }\n    }\n\n    for (let i = 0; i < probsArray.length; i++) {\n      colors[i] = {};\n      this.check_D(i, cons, colors);\n      this.check_R(i, cons, colors);\n      this.check_Q(i, cons, colors);\n      this.check_N(i, cons, colors);\n      this.check_K(i, cons, colors);\n      this.check_E(i, cons, colors);\n      this.check_HY(i, cons, colors);\n      this.check_ACFILMVW(i, cons, colors);\n      // Colour alcohol.....\n      this.check_ST(i, cons, colors);\n      // Proline and Glycine get fixed colors....\n      this.check_PG(i, cons, colors);\n    }\n\n    return colors;\n  };\n};\n\n// eslint-disable-next-line complexity, max-statements\nconst HMMLogo = function(element, options = {}) {\n  this.column_width = options.column_width || 34;\n  this.height = options.height || 300;\n  this.data = options.data || null;\n  this.debug = options.debug || null;\n  this.scale_height_enabled = options.height_toggle || null;\n  if (options.zoom_buttons && options.zoom_buttons === 'disabled') {\n    this.zoom_enabled = null;\n  } else {\n    this.zoom_enabled = true;\n  }\n\n  this.colorscheme = options.colorscheme || 'default';\n\n  // never show the alignment coordinates by default as that would get\n  // really confusing.\n  this.display_ali_map = 0;\n\n  this.alphabet = options.data.alphabet || 'dna';\n  this.dom_element =\n    options.dom_element || document.getElementsByName('body')[0];\n  this.called_on = options.called_on || element;\n  this.start = options.start || 1;\n  this.end = options.end || this.data.height_arr.length;\n  this.zoom = parseFloat(options.zoom) || 0.4;\n  this.default_zoom = this.zoom;\n\n  this.active_sites_sources = options.active_sites_sources || null;\n  this.show_active_sites = false;\n  this.active_sites = [];\n  this.multiple_tracks = true;\n\n  // turn off the insert rows if the hmm used the observed or weighted processing flags.\n  if (this.data.processing && /^observed|weighted/.test(this.data.processing)) {\n    this.show_inserts = 0;\n    this.info_content_height = 286;\n  } else {\n    this.show_inserts = 1;\n    this.info_content_height = 256;\n  }\n\n  this.column_hover = -1;\n  this.column_clicked = -1;\n\n  if (options.scaled_max) {\n    this.data.max_height =\n      options.data.max_height_obs || this.data.max_height || 2;\n  } else {\n    this.data.max_height =\n      options.data.max_height_theory || this.data.max_height || 2;\n  }\n\n  this.dna_colors = {\n    A: '#cbf751',\n    C: '#5ec0cc',\n    G: '#ffdf59',\n    T: '#b51f16',\n    U: '#b51f16',\n  };\n\n  this.aa_colors = {\n    A: '#F96',\n    C: '#099',\n    D: '#F00',\n    E: '#C03',\n    F: '#0F0',\n    G: '#f2f20c',\n    H: '#603',\n    I: '#C93',\n    K: '#630',\n    L: '#F93',\n    M: '#C9C',\n    N: '#366',\n    P: '#09F',\n    Q: '#66C',\n    R: '#900',\n    S: '#00F',\n    T: '#0FF',\n    V: '#FC3',\n    W: '#6C6',\n    Y: '#060',\n  };\n\n  // set the color library to use.\n  this.colors = this.dna_colors;\n\n  if (this.alphabet === 'aa') {\n    this.colors = this.aa_colors;\n  }\n\n  this.canvas_width = 5000;\n\n  let letter = null;\n  let probsArr = null;\n  let loptions = null;\n  let cc = null;\n\n  if (this.alphabet === 'aa') {\n    probsArr = this.data.probs_arr;\n    if (probsArr) {\n      cc = new ConsensusColors();\n      this.cmap = cc.color_map(probsArr);\n    }\n  }\n\n  // build the letter canvases\n  this.letters = {};\n\n  for (letter in this.colors) {\n    if (this.colors.hasOwnProperty(letter)) {\n      loptions = { color: this.colors[letter] };\n      this.letters[letter] = new Letter(letter, loptions);\n    }\n  }\n\n  // this needs to be set to null here so that we can initialise it after\n  // the render function has fired and the width determined.\n  this.scrollme = null;\n\n  this.previous_target = 0;\n  // keeps track of which canvas elements have been drawn and which ones haven't.\n  this.rendered = [];\n  this.previous_zoom = 0;\n\n  // eslint-disable-next-line complexity, max-statements\n  const drawSmallInsert = (\n    context,\n    x,\n    y,\n    colWidth,\n    inOdds,\n    inLength,\n    delOdds,\n    showInserts,\n    // eslint-disable-next-line max-params\n  ) => {\n    let fill = '#fff';\n    if (showInserts) {\n      if (inOdds > 0.1) {\n        fill = '#d7301f';\n      } else if (inOdds > 0.05) {\n        fill = '#fc8d59';\n      } else if (inOdds > 0.03) {\n        fill = '#fdcc8a';\n      }\n      context.fillStyle = fill;\n      context.fillRect(x, y + 15, colWidth, 10);\n\n      fill = '#fff';\n      // draw insert length\n      if (inLength > 9) {\n        fill = '#d7301f';\n      } else if (inLength > 7) {\n        fill = '#fc8d59';\n      } else if (inLength > 4) {\n        fill = '#fdcc8a';\n      }\n      context.fillStyle = fill;\n      context.fillRect(x, y + 30, colWidth, 10);\n    } else {\n      y += 30;\n    }\n\n    fill = '#fff';\n    // draw delete odds\n    if (delOdds < 0.75) {\n      fill = '#2171b5';\n    } else if (delOdds < 0.85) {\n      fill = '#6baed6';\n    } else if (delOdds < 0.95) {\n      fill = '#bdd7e7';\n    }\n    context.fillStyle = fill;\n    context.fillRect(x, y, colWidth, 10);\n  };\n\n  const drawBorder = (context, y, width) => {\n    context.beginPath();\n    context.moveTo(0, y);\n    context.lineTo(width, y);\n    context.lineWidth = 1;\n    context.strokeStyle = '#999';\n    context.stroke();\n  };\n\n  const drawTicks = (context, x, y, height, color) => {\n    color = color || '#999';\n    context.beginPath();\n    context.moveTo(x, y);\n    context.lineTo(x, y + height);\n    context.lineWidth = 1;\n    context.strokeStyle = color;\n    context.stroke();\n  };\n\n  // eslint-disable-next-line max-params\n  const drawBox = (context, x, y, colWidth, color, border) => {\n    color = color || 'rgba(100, 100, 100, 0.2)';\n    border = border || 'rgba(100, 100, 100, 0.8)';\n    context.fillStyle = color;\n    context.strokeStyle = border;\n    context.fillRect(x, y, colWidth, FEATURE_HEIGHT);\n    context.strokeRect(x, y, colWidth, FEATURE_HEIGHT);\n  };\n\n  // eslint-disable-next-line max-params\n  const drawLine = (context, x1, y1, x2, y2, color) => {\n    color = color || 'rgba(100, 100, 100, 0.8)';\n    context.beginPath();\n    context.moveTo(x1, y1);\n    context.lineTo(x2, y2);\n    context.lineWidth = 1;\n    context.strokeStyle = color;\n    context.stroke();\n  };\n\n  const drawRectWithText = (\n    context,\n    x,\n    y,\n    text,\n    fontsize,\n    colWidth,\n    fill,\n    textfill,\n    // eslint-disable-next-line max-params\n  ) => {\n    context.font = `${fontsize}px Arial`;\n    context.fillStyle = fill;\n    context.fillRect(x, y - 10, colWidth, 14);\n    context.textAlign = 'center';\n    context.fillStyle = textfill;\n    context.fillText(text, x + colWidth / 2, y);\n  };\n\n  // eslint-disable-next-line max-params\n  const drawInsertOdds = (context, x, height, colWidth, text, fontsize) => {\n    const y = height - 20;\n    let fill = '#fff';\n    let textfill = '#555';\n\n    if (text > 0.1) {\n      fill = '#d7301f';\n      textfill = '#fff';\n    } else if (text > 0.05) {\n      fill = '#fc8d59';\n    } else if (text > 0.03) {\n      fill = '#fdcc8a';\n    }\n\n    drawRectWithText(context, x, y, text, fontsize, colWidth, fill, textfill);\n\n    // draw vertical line to indicate where the insert would occur\n    if (text > 0.03) {\n      drawTicks(context, x + colWidth, height - 30, -30 - height, fill);\n    }\n  };\n\n  // eslint-disable-next-line max-params\n  const drawInsertLength = (context, x, y, colWidth, text, fontsize) => {\n    let fill = '#fff';\n    let textfill = '#555';\n\n    if (text > 9) {\n      fill = '#d7301f';\n      textfill = '#fff';\n    } else if (text > 7) {\n      fill = '#fc8d59';\n    } else if (text > 4) {\n      fill = '#fdcc8a';\n    }\n    drawRectWithText(context, x, y, text, fontsize, colWidth, fill, textfill);\n  };\n\n  const drawDeleteOdds = (\n    context,\n    x,\n    height,\n    colWidth,\n    text,\n    fontsize,\n    showInserts,\n    // eslint-disable-next-line max-params\n  ) => {\n    let y = height - 4;\n    let fill = '#fff';\n    let textfill = '#555';\n\n    if (showInserts) {\n      y = height - 35;\n    }\n\n    if (text < 0.75) {\n      fill = '#2171b5';\n      textfill = '#fff';\n    } else if (text < 0.85) {\n      fill = '#6baed6';\n    } else if (text < 0.95) {\n      fill = '#bdd7e7';\n    }\n\n    drawRectWithText(context, x, y, text, fontsize, colWidth, fill, textfill);\n  };\n\n  const drawColumnNumber = (\n    context,\n    x,\n    y,\n    colWidth,\n    colNum,\n    fontsize,\n    right,\n    // eslint-disable-next-line max-params\n  ) => {\n    context.font = `${fontsize}px Arial`;\n    context.textAlign = right ? 'right' : 'center';\n    context.fillStyle = '#666';\n    context.fillText(colNum, x + colWidth / 2, y);\n  };\n\n  const attachCanvas = (DOMid, height, width, id, canvWidth) => {\n    let canvas = DOMid.querySelector(`#canv_${id}`);\n\n    if (!canvas) {\n      canvas = document.createElement('canvas');\n      canvas.id = `canv_${id}`;\n      canvas.classList.add(\"canvas_logo\");\n      canvas.style.left = `${canvWidth * id}px`;\n      canvas.setAttribute('width', width);\n      canvas.setAttribute('height', height);\n\n      DOMid.innerHTML = `\n        <canvas\n          className=\"canvas_logo\"\n          id=\"canv_${id}\"\n          height=\"${height}\"\n          width=\"${width}\"\n          style=\"left: ${canvWidth * id}px;\"\n        ></canvas>\n      `;\n\n      // DOMid.appendChild(canvas); //TODO remove the final reference to jquery above\n      canvas = DOMid.querySelector(`#canv_${id}`);\n    }\n\n    canvas.setAttribute('width', width);\n    canvas.setAttribute('height', height);\n\n    return canvas;\n  };\n\n  // the main render function that draws the logo based on the provided options.\n  // eslint-disable-next-line complexity, max-statements\n  this.render = function(options = {}) {\n    if (!this.data) return;\n    let zoom = options.zoom || this.zoom;\n    let target = options.target || 1;\n    const parentWidth = this.dom_element.parentNode.clientWidth;\n    let maxCanvasWidth = 1;\n    let end = null;\n    let start = null;\n\n    /*\n    TODO not sure about what the behaviour this section is intended to achieve\n    if (target === this.previous_target) {\n      return;\n    }\n    */\n\n    this.previous_target = target;\n\n    if (options.start) {\n      this.start = options.start;\n    }\n    if (options.end) {\n      this.end = options.end;\n    }\n\n    if (zoom <= 0.1) {\n      zoom = 0.1;\n    } else if (zoom >= 1) {\n      zoom = 1;\n    }\n\n    this.zoom = zoom;\n\n    end = this.end || this.data.height_arr.length;\n    start = this.start || 1;\n    end = end > this.data.height_arr.length ? this.data.height_arr.length : end;\n    end = end < start ? start : end;\n\n    start = start > end ? end : start;\n    start = start > 1 ? start : 1;\n\n    this.y = this.height - 20;\n    // Check to see if the logo will fit on the screen at full zoom.\n    this.max_width = this.column_width * (end - start + 1);\n    // If it fits then zoom out and disable zooming.\n    if (parentWidth > this.max_width) {\n      zoom = 1;\n      this.zoom_enabled = false;\n    }\n    this.zoom = zoom;\n\n    this.zoomed_column = this.column_width * zoom;\n    this.total_width = this.zoomed_column * (end - start + 1);\n\n    // If zoom is not maxed and we still aren't filling the window\n    // then ramp up the zoom level until it fits, then disable zooming.\n    // Then we get a decent logo with out needing to zoom in or out.\n    if (zoom < 1) {\n      while (this.total_width < parentWidth) {\n        this.zoom += 0.1;\n        this.zoomed_column = this.column_width * this.zoom;\n        this.total_width = this.zoomed_column * (end - start + 1);\n        this.zoom_enabled = false;\n        if (zoom >= 1) {\n          break;\n        }\n      }\n    }\n\n    if (target > this.total_width) {\n      target = this.total_width;\n    }\n    this.dom_element.setAttribute('width', this.total_width);\n    this.dom_element.style.width = this.total_width;\n\n    const canvasCount = Math.ceil(this.total_width / this.canvas_width);\n    this.columns_per_canvas = Math.ceil(this.canvas_width / this.zoomed_column);\n\n    if (this.previous_zoom !== this.zoom) {\n      for (const canvasElement of this.dom_element.getElementsByTagName(\n        'canvas',\n      )) {\n        canvasElement.remove();\n      }\n      this.previous_zoom = this.zoom;\n      this.rendered = [];\n    }\n\n    this.canvases = [];\n    this.contexts = [];\n\n    for (let i = 0; i < canvasCount; i++) {\n      const splitStart = this.columns_per_canvas * i + start;\n      let splitEnd = splitStart + this.columns_per_canvas - 1;\n      if (splitEnd > end) {\n        splitEnd = end;\n      }\n\n      const adjustedWidth = (splitEnd - splitStart + 1) * this.zoomed_column;\n\n      if (adjustedWidth > maxCanvasWidth) {\n        maxCanvasWidth = adjustedWidth;\n      }\n\n      const canvStart = maxCanvasWidth * i;\n      const canvEnd = canvStart + adjustedWidth;\n\n      if (\n        target < canvEnd + canvEnd / 2 &&\n        target > canvStart - canvStart / 2\n      ) {\n        // Check that we aren't redrawing the canvas and if not, then attach it and draw.\n        if (this.rendered[i] !== 1) {\n          this.canvases[i] = attachCanvas(\n            this.dom_element,\n            this.height,\n            adjustedWidth,\n            i,\n            maxCanvasWidth,\n          );\n          this.contexts[i] = this.canvases[i].getContext('2d');\n          this.contexts[i].setTransform(1, 0, 0, 1, 0, 0);\n          this.contexts[i].clearRect(0, 0, adjustedWidth, this.height);\n          this.contexts[i].fillStyle = '#ffffff';\n          this.contexts[i].fillRect(0, 0, canvEnd, this.height);\n\n          if (this.zoomed_column > 12) {\n            let fontsize = parseInt(10 * zoom, 10);\n            fontsize = fontsize > 10 ? 10 : fontsize;\n            if (this.debug) {\n              this.render_with_rects(splitStart, splitEnd, i, 1);\n            }\n            this.render_with_text(splitStart, splitEnd, i, fontsize);\n          } else {\n            this.render_with_rects(splitStart, splitEnd, i);\n          }\n          this.rendered[i] = 1;\n        }\n      }\n    }\n\n    // check if the scroller object has been initialised and if not then do so.\n    // we do this here as opposed to at object creation, because we need to\n    // make sure the logo has been rendered and the width is correct, otherwise\n    // we get a weird initial state where the canvas will bounce back to the\n    // beginning the first time it is scrolled, because it thinks it has a\n    // width of 0.\n    if (!this.scrollme) {\n      const logoGraphic = this.called_on.getElementsByClassName(\n        \"logo_graphic\",\n      )[0];\n      this.scrollme = new EasyScroller(logoGraphic, {\n        scrollingX: 1,\n        scrollingY: 0,\n        eventTarget: this.called_on,\n      });\n    }\n\n    if (target !== 1) this.scrollme.reflow();\n  };\n\n  this.render_x_axis_label = function() {\n    let label = 'Model Position';\n    if (this.display_ali_map) {\n      label = 'Alignment Column';\n    }\n\n    for (const xElement of this.called_on.getElementsByClassName(\n      \"logo_xaxis\",\n    )) {\n      xElement.remove();\n    }\n    const axisDiv = document.createElement('div');\n    axisDiv.classList.add(\"logo_xaxis\");\n    const axisP = document.createElement('p');\n    axisP.classList.add(\"xaxis_text\");\n    axisP.innerHTML = label;\n    axisDiv.appendChild(axisP);\n    this.called_on.insertBefore(\n      axisDiv,\n      this.called_on.getElementsByClassName(\"logo_container\")[0],\n    );\n  };\n\n  // eslint-disable-next-line max-statements\n  this.render_y_axis_label = function() {\n    // attach a canvas for the y-axis\n    for (const yElement of this.called_on.getElementsByClassName(\n      \"logo_yaxis\",\n    )) {\n      yElement.remove();\n    }\n    for (const xAxis of this.called_on.getElementsByClassName(\n      \"logo_xaxis\",\n    )) {\n      const canvas = document.createElement('canvas');\n      canvas.classList.add(\"logo_yaxis\");\n      canvas.height = 302;\n      canvas.width = 55;\n      xAxis.appendChild(canvas);\n      let context = null;\n      let axisLabel = 'Information Content (bits)';\n\n      context = canvas.getContext('2d');\n      // draw min/max tick marks\n      context.beginPath();\n      context.moveTo(55, 1);\n      context.lineTo(40, 1);\n\n      context.moveTo(55, this.info_content_height);\n      context.lineTo(40, this.info_content_height);\n\n      context.moveTo(55, this.info_content_height / 2);\n      context.lineTo(40, this.info_content_height / 2);\n      context.lineWidth = 1;\n      context.strokeStyle = '#666';\n      context.stroke();\n\n      // draw the label text\n      context.fillStyle = '#666';\n      context.textAlign = 'right';\n      context.font = 'bold 10px Arial';\n\n      // draw the max label\n      context.textBaseline = 'top';\n      context.fillText(parseFloat(this.data.max_height).toFixed(1), 38, 0);\n      context.textBaseline = 'middle';\n\n      // draw the midpoint labels\n      context.fillText(\n        parseFloat(this.data.max_height / 2).toFixed(1),\n        38,\n        this.info_content_height / 2,\n      );\n      // draw the min label\n      context.fillText('0', 38, this.info_content_height);\n\n      // draw the axis label\n      if (this.data.height_calc === 'score') {\n        axisLabel = 'Score (bits)';\n      }\n\n      context.save();\n      context.translate(5, this.height / 2 - 20);\n      context.rotate(-Math.PI / 2);\n      context.textAlign = 'center';\n      context.font = 'normal 12px Arial';\n      context.fillText(axisLabel, 1, 0);\n      context.restore();\n\n      // draw the insert row labels\n      context.fillText('occupancy', 55, this.info_content_height + 7);\n      if (this.show_inserts) {\n        context.fillText('ins. prob.', 50, 280);\n        context.fillText('ins. len.', 46, 296);\n      }\n    }\n  };\n\n  this.render_x_axis_label();\n  this.render_y_axis_label();\n\n  // eslint-disable-next-line complexity, max-statements\n  this.render_with_text = function(start, end, contextNum, fontsize) {\n    let x = 0;\n    let columnNum = start;\n    let columnLabel = null;\n\n    // add 3 extra columns so that numbers don't get clipped at the end of a\n    // canvas that ends before a large column. DF0000830 was suffering at zoom\n    // level 0.6, column 2215. This adds a little extra overhead, but is the\n    // easiest fix for now.\n    if (end + 3 <= this.end) {\n      end += 3;\n    }\n\n    for (let i = start; i <= end; i++) {\n      if (this.data.mmline && this.data.mmline[i - 1] === 1) {\n        this.contexts[contextNum].fillStyle = '#cccccc';\n        this.contexts[contextNum].fillRect(\n          x,\n          10,\n          this.zoomed_column,\n          this.height - 40,\n        );\n      } else {\n        const column = this.data.height_arr[i - 1];\n        const colPositions = [];\n        if (column) {\n          let previousHeight = 0;\n          const letters = column.length;\n          let color = null;\n\n          if (i === this.column_clicked) {\n            this.contexts[contextNum].fillStyle = '#ffdede';\n            this.contexts[contextNum].fillRect(\n              x,\n              0,\n              this.zoomed_column,\n              this.height,\n            );\n            this.contexts[contextNum].strokeStyle = '#ff8888';\n            this.contexts[contextNum].strokeRect(\n              x,\n              0,\n              this.zoomed_column,\n              this.height,\n            );\n          }\n          if (i === this.column_hover) {\n            this.contexts[contextNum].fillStyle = '#ffeeee';\n            this.contexts[contextNum].fillRect(\n              x,\n              0,\n              this.zoomed_column,\n              this.height,\n            );\n          }\n\n          for (let j = 0; j < letters; j++) {\n            const letter = column[j];\n            const values = letter.split(':', 2);\n            const xPos = x + this.zoomed_column / 2;\n            let letterHeight = null;\n\n            // we don't render anything with a value between 0 and 0.01. These\n            // letters would be too small to be meaningful on any scale, so we\n            // just squash them out.\n            // eslint-disable-next-line max-depth\n            if (values[1] > 0.01) {\n              letterHeight = parseFloat(values[1]) / this.data.max_height;\n              const yPos = this.info_content_height - 2 - previousHeight;\n              const glyphHeight = (this.info_content_height - 2) * letterHeight;\n\n              colPositions[j] = [glyphHeight, this.zoomed_column, xPos, yPos];\n              previousHeight += glyphHeight;\n            }\n          }\n\n          // render the letters in reverse order so that the larger letters on the top\n          // don't clobber the smaller letters below them.\n          for (let j = letters; j >= 0; j--) {\n            // eslint-disable-next-line max-depth\n            if (colPositions[j] && this.letters[column[j][0]]) {\n              // eslint-disable-next-line max-depth\n              if (this.colorscheme === 'consensus') {\n                color = this.cmap[i - 1][column[j][0]] || '#7a7a7a';\n              } else {\n                color = null;\n              }\n              this.letters[column[j][0]].draw(\n                this.contexts[contextNum],\n                colPositions[j][0],\n                colPositions[j][1],\n                colPositions[j][2],\n                colPositions[j][3],\n                color,\n              );\n            }\n          }\n        }\n      }\n\n      // if ali_coordinates exist and toggle is set then display the\n      // alignment coordinates and not the model coordinates.\n      if (this.display_ali_map) {\n        columnLabel = this.data.ali_map[i - 1];\n      } else {\n        columnLabel = columnNum;\n      }\n\n      if (this.zoom < 0.7) {\n        if (i % 5 === 0) {\n          this.draw_column_divider({\n            contextNum,\n            x,\n            fontsize: 10,\n            column_num: columnLabel,\n            ralign: true,\n          });\n        }\n      } else {\n        this.draw_column_divider({\n          contextNum,\n          x,\n          fontsize,\n          column_num: columnLabel,\n        });\n      }\n\n      drawDeleteOdds(\n        this.contexts[contextNum],\n        x,\n        this.height,\n        this.zoomed_column,\n        this.data.delete_probs[i - 1],\n        fontsize,\n        this.show_inserts,\n      );\n      // draw insert length ticks\n      drawTicks(this.contexts[contextNum], x, this.height - 15, 5);\n      if (this.show_inserts) {\n        drawInsertOdds(\n          this.contexts[contextNum],\n          x,\n          this.height,\n          this.zoomed_column,\n          this.data.insert_probs[i - 1],\n          fontsize,\n        );\n        drawInsertLength(\n          this.contexts[contextNum],\n          x,\n          this.height - 5,\n          this.zoomed_column,\n          this.data.insert_lengths[i - 1],\n          fontsize,\n        );\n\n        // draw delete probability ticks\n        drawTicks(this.contexts[contextNum], x, this.height - 45, 5);\n        // draw insert probability ticks\n        drawTicks(this.contexts[contextNum], x, this.height - 30, 5);\n      }\n\n      if (this.show_active_sites) {\n        this.render_active_sites(contextNum, i, x);\n      }\n\n      x += this.zoomed_column;\n      columnNum++;\n    }\n\n    // draw other dividers\n    if (this.show_inserts) {\n      drawBorder(this.contexts[contextNum], this.height - 30, this.total_width);\n      drawBorder(this.contexts[contextNum], this.height - 45, this.total_width);\n    }\n    drawBorder(this.contexts[contextNum], this.height - 15, this.total_width);\n    drawBorder(this.contexts[contextNum], 0, this.total_width);\n  };\n\n  this.draw_column_divider = function(opts) {\n    const divX = opts.ralign ? opts.x + this.zoomed_column : opts.x;\n    const numX = opts.ralign ? opts.x + 2 : opts.x;\n    // draw column dividers\n    drawTicks(\n      this.contexts[opts.contextNum],\n      divX,\n      this.height - 30,\n      -30 - this.height,\n      '#dddddd',\n    );\n    // draw top ticks\n    drawTicks(this.contexts[opts.contextNum], divX, 0, 5);\n    // draw column numbers\n    drawColumnNumber(\n      this.contexts[opts.contextNum],\n      numX,\n      10,\n      this.zoomed_column,\n      opts.column_num,\n      opts.fontsize,\n      opts.ralign,\n    );\n  };\n\n  // eslint-disable-next-line complexity, max-statements\n  this.render_with_rects = function(start, end, contextNum, borders) {\n    let x = 0;\n    let columnNum = start;\n    let columnLabel = null;\n    let mod = 10;\n\n    for (let i = start; i <= end; i++) {\n      if (this.data.mmline && this.data.mmline[i - 1] === 1) {\n        this.contexts[contextNum].fillStyle = '#ccc';\n        this.contexts[contextNum].fillRect(\n          x,\n          10,\n          this.zoomed_column,\n          this.height - 40,\n        );\n      } else {\n        const column = this.data.height_arr[i - 1];\n        let previousHeight = 0;\n        const letters = column.length;\n        for (let j = 0; j < letters; j++) {\n          const letter = column[j];\n          const values = letter.split(':', 2);\n          if (values[1] > 0.01) {\n            const letterHeight = parseFloat(values[1]) / this.data.max_height;\n            const xPos = x;\n            const glyphHeight = (this.info_content_height - 2) * letterHeight;\n            const yPos =\n              this.info_content_height - 2 - previousHeight - glyphHeight;\n            let color = null;\n\n            // eslint-disable-next-line max-depth\n            if (this.colorscheme === 'consensus') {\n              color = this.cmap[i - 1][values[0]] || '#7a7a7a';\n            } else {\n              color = this.colors[values[0]];\n            }\n\n            // eslint-disable-next-line max-depth\n            if (borders) {\n              this.contexts[contextNum].strokeStyle = color;\n              this.contexts[contextNum].strokeRect(\n                xPos,\n                yPos,\n                this.zoomed_column,\n                glyphHeight,\n              );\n            } else {\n              this.contexts[contextNum].fillStyle = color;\n              this.contexts[contextNum].fillRect(\n                xPos,\n                yPos,\n                this.zoomed_column,\n                glyphHeight,\n              );\n            }\n\n            previousHeight += glyphHeight;\n          }\n        }\n      }\n\n      if (this.zoom < 0.2) {\n        mod = 20;\n      } else if (this.zoom < 0.3) {\n        mod = 10;\n      }\n\n      if (i % mod === 0) {\n        // draw column dividers\n        drawTicks(\n          this.contexts[contextNum],\n          x + this.zoomed_column,\n          this.height - 30,\n          parseFloat(this.height),\n          '#ddd',\n        );\n        // draw top ticks\n        drawTicks(this.contexts[contextNum], x + this.zoomed_column, 0, 5);\n\n        // if ali_coordinates exist and toggle is set then display the\n        // alignment coordinates and not the model coordinates.\n        if (this.display_ali_map) {\n          columnLabel = this.data.ali_map[i - 1];\n        } else {\n          columnLabel = columnNum;\n        }\n        // draw column numbers\n        drawColumnNumber(\n          this.contexts[contextNum],\n          x - 2,\n          10,\n          this.zoomed_column,\n          columnLabel,\n          10,\n          true,\n        );\n      }\n\n      // draw insert probabilities/lengths\n      drawSmallInsert(\n        this.contexts[contextNum],\n        x,\n        this.height - 42,\n        this.zoomed_column,\n        this.data.insert_probs[i - 1],\n        this.data.insert_lengths[i - 1],\n        this.data.delete_probs[i - 1],\n        this.show_inserts,\n      );\n\n      // draw other dividers\n      if (this.show_inserts) {\n        drawBorder(\n          this.contexts[contextNum],\n          this.height - 45,\n          this.total_width,\n        );\n      } else {\n        drawBorder(\n          this.contexts[contextNum],\n          this.height - 15,\n          this.total_width,\n        );\n      }\n\n      drawBorder(this.contexts[contextNum], 0, this.total_width);\n\n      if (this.show_active_sites) {\n        this.render_active_sites(contextNum, i, x);\n      }\n\n      x += this.zoomed_column;\n      columnNum++;\n    }\n  };\n  this.render_active_sites = function(contextNum, i, x) {\n    let track = 1;\n    for (let j = 0; j < this.active_sites.length; j++) {\n      const wtd = this.active_sites[j].controller.whatShouldBeDraw(i);\n      if (!wtd) continue;\n      const color = this.aa_colors[wtd.base];\n      if (wtd.type === 'BLOCK') {\n        drawBox(\n          this.contexts[contextNum],\n          x + 1,\n          MARGIN_TO_FEATURES +\n            track * (PADDING_BETWEEN_TRACKS + FEATURE_HEIGHT),\n          this.zoomed_column - 2,\n          color,\n        );\n      } else if (wtd.type === 'LINE') {\n        drawLine(\n          this.contexts[contextNum],\n          x,\n          MARGIN_TO_FEATURES +\n            PADDING_BETWEEN_TRACKS * track +\n            (track + 0.5) * FEATURE_HEIGHT,\n          x + this.zoomed_column,\n          MARGIN_TO_FEATURES +\n            PADDING_BETWEEN_TRACKS * track +\n            (track + 0.5) * FEATURE_HEIGHT,\n          color,\n        );\n      }\n      if (this.multiple_tracks) track++;\n    }\n  };\n\n  this.toggle_visibility = function(element) {\n    if (element.style.display !== 'none' && element.style.display) {\n      element.style.display = 'none';\n    } else {\n      element.style.display = 'block';\n    }\n  };\n\n  this.toggle_colorscheme = function(scheme) {\n    // work out the current column we are on so we can return there\n    const colTotal = this.current_column();\n\n    if (scheme) {\n      if (scheme === 'default') {\n        this.colorscheme = 'default';\n      } else {\n        this.colorscheme = 'consensus';\n      }\n    } else {\n      if (this.colorscheme === 'default') {\n        this.colorscheme = 'consensus';\n      } else {\n        this.colorscheme = 'default';\n      }\n    }\n\n    // reset the rendered counter so that each section will re-render\n    // with the new heights\n    this.rendered = [];\n\n    // re-flow and re-render the content\n    this.scrollme.reflow();\n    // scroll off by one to force a render of the canvas.\n    this.scrollToColumn(colTotal + 10);\n    // scroll back to the location we started at.\n    this.scrollToColumn(colTotal);\n    this.render();\n  };\n\n  this.toggle_scale = function(scale) {\n    // work out the current column we are on so we can return there\n    const colTotal = this.current_column();\n\n    if (scale) {\n      if (scale === 'obs') {\n        this.data.max_height = this.data.max_height_obs;\n      } else {\n        this.data.max_height = this.data.max_height_theory;\n      }\n    } else {\n      // toggle the max height\n      if (this.data.max_height === this.data.max_height_obs) {\n        this.data.max_height = this.data.max_height_theory;\n      } else {\n        this.data.max_height = this.data.max_height_obs;\n      }\n    }\n    // reset the rendered counter so that each section will re-render\n    // with the new heights\n    this.rendered = [];\n    // update the y-axis\n    for (const element of document.getElementsByClassName(\"logo_yaxis\")) {\n      element.remove();\n    }\n    this.render_y_axis_label();\n\n    // re-flow and re-render the content\n    this.scrollme.reflow();\n    // scroll off by one to force a render of the canvas.\n    this.scrollToColumn(colTotal + 1);\n    // scroll back to the location we started at.\n    this.scrollToColumn(colTotal);\n    this.render();\n  };\n\n  this.toggle_ali_map = function(coords) {\n    // work out the current column we are on so we can return there\n    const colTotal = this.current_column();\n\n    if (coords) {\n      if (coords === 'model') {\n        this.display_ali_map = 0;\n      } else {\n        this.display_ali_map = 1;\n      }\n    } else {\n      // toggle the max height\n      if (this.display_ali_map === 1) {\n        this.display_ali_map = 0;\n      } else {\n        this.display_ali_map = 1;\n      }\n    }\n    this.render_x_axis_label();\n\n    // reset the rendered counter so that each section will re-render\n    // with the new heights\n    this.rendered = [];\n\n    // re-flow and re-render the content\n    this.scrollme.reflow();\n    // scroll off by one to force a render of the canvas.\n    this.scrollToColumn(colTotal + 1);\n    // scroll back to the location we started at.\n    this.scrollToColumn(colTotal);\n    this.render();\n  };\n\n  this.current_column = function() {\n    const beforeLeft = this.scrollme.scroller.getValues().left;\n    const colWidth = this.column_width * this.zoom;\n    const colCount = beforeLeft / colWidth;\n    const halfVisibleColumns =\n      this.called_on.getElementsByClassName(\"logo_container\")[0]\n        .clientWidth /\n      colWidth /\n      2;\n    return Math.ceil(colCount + halfVisibleColumns);\n  };\n\n  // eslint-disable-next-line max-statements\n  this.change_zoom = function(options) {\n    let zoomLevel = 0.3;\n    if (options.target) {\n      zoomLevel = options.target;\n    } else if (options.distance) {\n      zoomLevel = (\n        parseFloat(this.zoom) - parseFloat(options.distance)\n      ).toFixed(1);\n      if (options.direction === '+') {\n        zoomLevel = (\n          parseFloat(this.zoom) + parseFloat(options.distance)\n        ).toFixed(1);\n      }\n    }\n\n    if (zoomLevel > 1) {\n      zoomLevel = 1;\n    } else if (zoomLevel < 0.1) {\n      zoomLevel = 0.1;\n    }\n\n    // see if we need to zoom or not\n    const graphicalElement = this.called_on.getElementsByClassName(\n      \"logo_graphic\",\n    )[0];\n    const containerElement = this.called_on.getElementsByClassName(\n      \"logo_container\",\n    )[0];\n    const expectedWidth =\n      (graphicalElement.clientWidth * zoomLevel) / this.zoom;\n    if (expectedWidth > containerElement.clientWidth) {\n      // if a center is not specified, then use the current center of the view\n      if (options.column) {\n        // center around the mouse click position.\n        this.zoom = zoomLevel;\n        this.render({ zoom: this.zoom });\n        this.scrollme.reflow();\n\n        const coords = this.coordinatesFromColumn(options.column);\n        this.scrollme.scroller.scrollTo(coords - options.offset);\n      } else {\n        // work out my current position\n        const colTotal = this.current_column();\n\n        this.zoom = zoomLevel;\n        this.render({ zoom: this.zoom });\n        this.scrollme.reflow();\n\n        // scroll to previous position\n        this.scrollToColumn(colTotal);\n      }\n    }\n    return this.zoom;\n  };\n\n  this.columnFromCoordinates = function(x) {\n    return Math.ceil(x / (this.column_width * this.zoom));\n  };\n  this.coordinatesFromColumn = function(col) {\n    const newColumn = col - 1;\n\n    return (\n      newColumn * (this.column_width * this.zoom) +\n      (this.column_width * this.zoom) / 2\n    );\n  };\n\n  this.scrollToColumn = function(num, animate) {\n    const halfView =\n      this.called_on.getElementsByClassName(\"logo_container\")[0]\n        .clientWidth / 2;\n    const newLeft = this.coordinatesFromColumn(num);\n    this.scrollme.scroller.scrollTo(newLeft - halfView, 0, animate);\n  };\n\n  this.refresh = function() {\n    this.rendered = [];\n    this.scrollme.reflow();\n    this.render();\n  };\n};\n\n// eslint-disable-next-line complexity, max-statements\nconst hmmLogo = function(logoElement, options = {}) {\n  // add some internal divs for scrolling etc.\n  const logoGraphic = document.createElement('div');\n  logoGraphic.classList.add(\"logo_graphic\");\n  const logoContainer = document.createElement('div');\n  logoContainer.classList.add(\"logo_container\");\n\n  const logoDivider = document.createElement('div');\n  logoDivider.classList.add(\"logo_divider\");\n\n  logoElement.appendChild(logoContainer);\n  logoContainer.appendChild(logoGraphic);\n  logoElement.appendChild(logoDivider);\n\n  if (options.data === null) return;\n\n  options.dom_element = logoGraphic;\n  options.called_on = logoElement;\n\n  const fieldset = document.createElement('fieldset');\n\n  const label = document.createElement('label');\n  label.htmlFor = 'position';\n  label.innerHTML = 'Model column';\n  fieldset.appendChild(label);\n\n  const input = document.createElement('input');\n  input.setAttribute('type', 'text');\n  input.id = 'position';\n  input.classList.add(\"logo_position\");\n  fieldset.appendChild(input);\n\n  const logoChangeButton = document.createElement('button');\n  logoChangeButton.classList.add(\"button\");\n  logoChangeButton.classList.add(\"logo_change\");\n  logoChangeButton.innerHTML = 'Go';\n  fieldset.appendChild(logoChangeButton);\n\n  const form = document.createElement('form');\n  form.classList.add(\"logo_form\");\n  form.addEventListener('submit', (e) => e.preventDefault);\n  form.appendChild(fieldset);\n\n  const controls = document.createElement('div');\n  controls.classList.add(\"logo_controls\");\n  form.appendChild(controls);\n\n  const close = document.createElement('span');\n  close.classList.add(\"close\");\n  close.innerHTML = 'x';\n\n  const settings = document.createElement('div');\n  settings.classList.add(\"logo_settings\");\n  settings.appendChild(close);\n  controls.appendChild(settings);\n\n  const logo = new HMMLogo(logoElement, options);\n  logo.render(options);\n  if (logo.zoom_enabled) {\n    const outButton = document.createElement('button');\n    outButton.classList.add(\"button\");\n    outButton.classList.add(\"logo_zoomout\");\n    outButton.innerHTML = '-';\n    outButton.addEventListener('click', e => {\n          e.preventDefault();\n          logo.change_zoom({ distance: 0.1, direction: '-' });\n        });\n\n    const inButton = document.createElement('button');\n    inButton.classList.add(\"button\");\n    inButton.classList.add(\"logo_zoomin\");\n    inButton.innerHTML = '+';\n    inButton.addEventListener('click', e => {\n      e.preventDefault();\n      logo.change_zoom({ distance: 0.1, direction: '+' });\n    });\n    controls.appendChild(outButton);\n    controls.appendChild(inButton);\n  }\n\n  /* we don't want to toggle if the max height_obs is greater than max theoretical\n   * as letters will fall off the top.\n   */\n  if (\n    logo.scale_height_enabled &&\n    logo.data.max_height_obs < logo.data.max_height_theory\n  ) {\n    let obsChecked = '';\n    let theoryChecked = '';\n    const theoryHelp = '';\n    const obsHelp = '';\n\n    if (logo.data.max_height_obs === logo.data.max_height) {\n      obsChecked = 'checked';\n    } else {\n      theoryChecked = 'checked';\n    }\n\n    /*\n    if (options.help) {\n      obsHelp =\n        '<a class=\"help\" href=\"/help#scale_obs\" title=\"Set the y-axis maximum to the maximum observed height.\">' +\n        '<span aria-hidden=\"true\" data-icon=\"?\"></span><span class=\"reader-text\">help</span></a>';\n      theoryHelp =\n        '<a class=\"help\" href=\"/help#scale_theory\" title=\"Set the y-axis maximum to the theoretical maximum height\">' +\n        '<span aria-hidden=\"true\" data-icon=\"?\"></span><span class=\"reader-text\">help</span></a>';\n    }\n    */\n\n    const scaleControls =\n      '<fieldset><legend>Scale</legend>' +\n      `<label><input type=\"radio\" name=\"scale\" class=\"logo_scale\" value=\"obs\" ${obsChecked}/>Maximum Observed ${obsHelp}</label></br>` +\n      `<label><input type=\"radio\" name=\"scale\" class=\"logo_scale\" value=\"theory\" ${theoryChecked}/>Maximum Theoretical ${theoryHelp}</label>` +\n      '</fieldset>';\n\n    settings.innerHTML += scaleControls;\n  }\n\n  if (\n    logo.data.height_calc !== 'score' &&\n    logo.data.alphabet === 'aa' &&\n    logo.data.probs_arr\n  ) {\n    let defColor = null;\n    let conColor = null;\n\n    if (logo.colorscheme === 'default') {\n      defColor = 'checked';\n    } else {\n      conColor = 'checked';\n    }\n\n    settings.innerHTML += `\n      <fieldset><legend>Color Scheme</legend>\n        <label><input type=\"radio\" name=\"color\" class=\"logo_color\" value=\"default\" ${defColor}/>Default</label></br>\n        <label><input type=\"radio\" name=\"color\" class=\"logo_color\" value=\"consensus\" ${conColor}/>Consensus Colours</label>\n      </fieldset>\n    `;\n  }\n\n  if (logo.data.ali_map) {\n    let modChecked = null;\n    let aliChecked = null;\n\n    if (logo.display_ali_map === 0) {\n      modChecked = 'checked';\n    } else {\n      aliChecked = 'checked';\n    }\n\n    const aliControls =\n      '<fieldset><legend>Coordinates</legend>' +\n      `<label><input type=\"radio\" name=\"coords\" class=\"logo_ali_map\" value=\"model\" ${modChecked}/>Model</label></br>` +\n      `<label><input type=\"radio\" name=\"coords\" class=\"logo_ali_map\" value=\"alignment\" ${aliChecked}/>Alignment</label>` +\n      '</fieldset>';\n    settings.innerHTML += aliControls;\n\n    if (\n      logo.active_sites_sources !== null &&\n      typeof logo.active_sites_sources === 'object'\n    ) {\n      let activeSites =\n        '<fieldset><legend>ActiveSites</legend>' +\n        `<label>Source: <select name=\"member_db\" class=\"logo_ali_map\">`;\n      for (const key of Object.keys(logo.active_sites_sources)) {\n        activeSites += `<option value=\"${key}\">${key}</option> `;\n      }\n      activeSites +=\n        '</select></label> ' + // + modHelp +\n        '</br>' +\n        '<label>Accession number: ' +\n        `  <input type=\"text\" name=\"family_accession\" class=\"logo_ali_map\" value=\"\"/>` +\n        '</label><br/>' +\n        '<button id=\"active_sites\">Get Active Sites</button>' +\n        '</fieldset>';\n\n      settings.innerHTML += activeSites;\n    }\n  }\n\n  if (settings.children.length) {\n    const settingsButton = document.createElement('button');\n    settingsButton.innerHTML = 'Settings';\n    settingsButton.classList.add(\"logo_settings_switch\");\n    settingsButton.classList.add(\"button\");\n    -controls.appendChild(settingsButton);\n    controls.appendChild(settings);\n  }\n\n  form.appendChild(controls);\n  logoElement.appendChild(form);\n  for (const name of [\"logo_settings_switch\", \"close\"]) {\n    for (const element of logoElement.getElementsByClassName(name)) {\n      element.addEventListener('click', e => {\n        e.preventDefault();\n        logo.toggle_visibility(settings);\n      });\n    }\n  }\n  for (const matchedElement of controls.getElementsByClassName(\n    \"logo_reset\",\n  )) {\n    matchedElement.addEventListener('click', e => {\n      e.preventDefault();\n      logo.change_zoom({ target: logo.default_zoom });\n    });\n  }\n  for (const matchedElement of fieldset.getElementsByClassName(\n    \"logo_change\",\n  )) {\n    matchedElement.addEventListener('click', e => e.preventDefault());\n  }\n\n  for (const matchedElement of controls.getElementsByClassName(\n    \"logo_scale\",\n  )) {\n    matchedElement.addEventListener('change', function() {\n      logo.toggle_scale(this.value);\n    });\n  }\n  for (const matchedElement of controls.getElementsByClassName(\n    \"logo_color\",\n  )) {\n    matchedElement.addEventListener('change', function() {\n      logo.toggle_colorscheme(this.value);\n    });\n  }\n  for (const matchedElement of controls.getElementsByClassName(\n    \"logo_ali_map\",\n  )) {\n    matchedElement.addEventListener('change', function() {\n      logo.toggle_ali_map(this.value);\n    });\n  }\n  for (const matchedElement of fieldset.getElementsByClassName(\n    \"logo_position\",\n  )) {\n    matchedElement.addEventListener('change', function(e) {\n      if (!this.value.match(/^\\d+$/m)) {\n        return;\n      }\n      logo.scrollToColumn(this.value, 1);\n    });\n  }\n  logoGraphic.addEventListener('dblclick', function(e) {\n    if (logo.zoom < 1) {\n      logo.change_zoom({\n        target: 1,\n        offset: e.pageX - this.parentNode.offsetLeft,\n        column: logo.columnFromCoordinates(\n          parseInt(e.pageX - this.offsetLeft, 10),\n        ),\n      });\n    } else {\n      logo.change_zoom({\n        target: 0.3,\n        offset: e.pageX - this.parentNode.offsetLeft,\n        column: logo.columnFromCoordinates(\n          parseInt(e.pageX - this.offsetLeft, 10),\n        ),\n      });\n    }\n  });\n\n  if (options.column_info) {\n    // eslint-disable-next-line max-statements\n    logoGraphic.addEventListener('click', e => {\n      const infoTab = document.createElement('table');\n      infoTab.classList.add(\"logo_col_info\");\n      infoTab.classList.add(\"logo_col_hmm\");\n      const hmmLogo = logo;\n      let header = '<tr>';\n      let tbody = '';\n      // const offset = {\n      //   top: this.offsetTop,\n      //   left: this.offsetLeft,\n      // };\n      const x = parseInt(e.offsetX, 10);\n      // get column number\n      const col = hmmLogo.columnFromCoordinates(x);\n      // clone the column data before reversal or the column gets messed\n      // up in the logo when zoom levels change. Also stops flip-flopping\n      // of the order from ascending to descending.\n      let colData = [];\n      let infoCols = 0;\n      let heightHeader = 'Probability';\n\n      hmmLogo.column_clicked = col;\n      hmmLogo.refresh();\n\n      if (logo.data.height_calc && logo.data.height_calc === 'score') {\n        heightHeader = 'Score';\n        colData = logo.data.height_arr[col - 1].slice(0).reverse();\n      } else {\n        colData = logo.data.probs_arr[col - 1].slice(0).reverse();\n      }\n\n      infoCols = Math.ceil(colData.length / 5);\n      // add the headers for each column.\n      for (let i = 0; i < infoCols; i++) {\n        // using the i < infoCols - 1 check to make sure the last column doesn't\n        // get marked with the odd class so we don't get a border on the edge of the table.\n        if (infoCols > 1 && i < infoCols - 1) {\n          header += `<th>Residue</th><th class=\"odd\">${heightHeader}</th>`;\n        } else {\n          header += `<th>Residue</th><th>${heightHeader}</th>`;\n        }\n      }\n\n      header += '</tr>';\n      infoTab.innerHTML = header;\n\n      // add the data for each column\n      for (let i = 0; i < 5; i++) {\n        tbody += '<tr>';\n        let j = i;\n        while (colData[j]) {\n          const values = colData[j].split(':', 2);\n          let color = '';\n          if (logo.colorscheme === 'default') {\n            color = `${logo.alphabet}_${values[0]}`;\n          }\n          // using the j < 15 check to make sure the last column doesn't get marked\n          // with the odd class so we don't get a border on the edge of the table.\n          if (infoCols > 1 && j < 15) {\n            tbody += `<td class=\"color\"><div></div>${\n              values[0]\n            }</td><td class=\"odd\">${values[1]}</td>`;\n          } else {\n            tbody += `<td class=\"color}\"><div></div>${\n              values[0]\n            }</td><td>${values[1]}</td>`;\n          }\n\n          j += 5;\n        }\n        tbody += '</tr>';\n      }\n\n      infoTab.innerHTML += tbody;\n\n      const columnInfo = document.createElement('div');\n      columnInfo.id = 'logo_column_info';\n      columnInfo.innerHTML = `<div style=\"text-align: center;\"><span>Model Column:${col} &nbsp;</span>\n      <span>Occupancy: ${logo.data.delete_probs[col - 1]}  &nbsp;</span>\n      <span>Insert Probability: ${logo.data.insert_probs[col - 1]} &nbsp;</span>\n      <span>Insert Length: ${\n        logo.data.insert_lengths[col - 1]\n      }  &nbsp;</span></div>`;\n      columnInfo.appendChild(infoTab);\n      const existingColumnInfo = logoElement.querySelector('#logo_column_info');\n      if (existingColumnInfo) {\n        existingColumnInfo.remove();\n      }\n      logoElement.appendChild(columnInfo);\n    });\n  }\n\n  logoGraphic.addEventListener('mousemove', e => {\n    const hmmLogo = logo;\n    const x = parseInt(e.offsetX, 10);\n    const col = hmmLogo.columnFromCoordinates(x);\n    if (hmmLogo.column_hover !== col) {\n      hmmLogo.column_hover = col;\n      hmmLogo.refresh();\n    }\n  });\n\n  return logo;\n};\n\n\nexport default hmmLogo;\n","import hmmLogo from './skylign.js';\nimport css from './logo.css';\n\nclass Skylign extends HTMLElement {\n  static get observedAttributes() { return ['logo']; }\n\n  constructor(...args) {\n    super();\n    this.attachShadow({mode: 'open'});\n    //attach css styles to shadowroot\n    let style = document.createElement('style');\n    style.textContent = css;\n    this.shadowRoot.appendChild(style);\n  }\n\n  showLogo() {\n    this.logoElement = document.createElement('div');\n\n    this.shadowRoot.appendChild(this.logoElement);\n\n    const logo = this.getAttribute(\"logo\");\n    if (logo) {\n      this.logo = new hmmLogo(this.logoElement, {\n        data: JSON.parse(logo),\n        height_toggle: true,\n        column_info: true,\n      });\n    }\n  }\n\n  connectedCallback() {}\n\n  disconnectedCallback() {}\n\n  attributeChangedCallback(name, oldValue, newValue) {\n    if (name === \"logo\" && oldValue !== newValue) {\n      if (this.logoElement) {\n        this.logoElement.remove();\n      }\n      this.showLogo();\n    }\n  }\n}\n\nexport default Skylign;\n","import Skylign from \"./skylign-component.js\";\n\n//customElements.define(\"skylign-component\", Skylign);\nconst loadComponent = () => {\n  customElements.define(\"skylign-component\", Skylign);\n};\n\n// Conditional loading of polyfill\nif (window.customElements) {\n  loadComponent();\n} else {\n  document.addEventListener(\"WebComponentsReady\", () => {\n    loadComponent();\n  });\n}\n\nexport default Skylign;\n"],"names":["Object","defineProperty","exports","value","time","Date","now","running","counter","core","effect","Animate","requestAnimationFrame","requestFrame","window","webkitRequestAnimationFrame","mozRequestAnimationFrame","oRequestAnimationFrame","isNative","test","toString","callback","root","requests","rafHandle","intervalHandle","lastActive","callbackHandle","setInterval","currentRequests","key","hasOwnProperty","clearInterval","stop","id","cleared","isRunning","start","stepCallback","verifyCallback","completedCallback","duration","easingMethod","lastFrame","percent","dropCounter","document","body","newRunning","usedId","step","virtual","render","droppedFrames","Math","round","j","min","__assign","this","assign","t","s","i","n","arguments","length","p","prototype","call","apply","Scroller_1","EasyScroller","content","options","_this","browserHasPerspectiveProperty","browserHasTransformProperty","eventHandlers","Error","container","parentNode","scroller","Scroller","left","top","zoom","helperElem","createElement","vendorPrefix","getVendorPrefix","style","transformProperty","undefined","perspectiveProperty","bindEvents","reflow","engine","docStyle","documentElement","opera","navigator","cpuClass","trident","gecko","webkit","presto","marginLeft","marginTop","setDimensions","clientWidth","clientHeight","offsetWidth","offsetHeight","rect","getBoundingClientRect","setPosition","clientLeft","clientTop","push","event","handler","forElem","e","touches","target","tagName","match","doTouchStart","timeStamp","preventDefault","doTouchMove","scale","doTouchEnd","mousedown","pageX","pageY","zooming","doMouseZoom","wheelDelta","forEach","eventHandler","addEventListener","getScroller","destroy","removeEventListener","Animate_1","__isSingleTouch","__isTracking","__didDecelerationComplete","__isGesturing","__isDragging","__isDecelerating","__isAnimating","__interruptedAnimation","__initialTouchLeft","__initialTouchTop","__initialTouches","__lastScale","__enableScrollX","__enableScrollY","__clientLeft","__clientTop","__clientWidth","__clientHeight","__contentWidth","__contentHeight","__snapWidth","__snapHeight","__refreshHeight","__refreshActive","__refreshActivate","__refreshDeactivate","__refreshStart","__zoomLevel","__zoomLevelStart","__scrollLeft","__scrollTop","__maxScrollLeft","__maxScrollTop","__scheduledLeft","__scheduledTop","__scheduledZoom","__lastTouchLeft","__lastTouchTop","__lastTouchMove","__positions","__minDecelerationScrollLeft","__minDecelerationScrollTop","__maxDecelerationScrollLeft","__maxDecelerationScrollTop","__decelerationVelocityX","__decelerationVelocityY","__callback","scrollLeft","scrollTop","zoomLevel","__zoomComplete","scrollingX","scrollingY","animating","animationDuration","bouncing","locking","paging","snapping","minZoom","maxZoom","speedMultiplier","scrollingComplete","penetrationDeceleration","penetrationAcceleration","easeOutCubic","pos","pow","easeInOutCubic","contentWidth","contentHeight","__computeScrollMax","scrollTo","setSnapSize","width","height","activatePullToRefresh","activateCallback","deactivateCallback","startCallback","triggerPullToRefresh","__publish","finishPullToRefresh","getValues","getScrollMax","zoomTo","level","animate","originLeft","originTop","oldLevel","max","zoomBy","factor","scrollBy","startLeft","startTop","change","valueOf","currentTouchLeft","currentTouchTop","isSingleTouch","abs","__getScale","positions","moveX","moveY","currentTouchLeftRel","currentTouchTopRel","maxScrollLeft","maxScrollTop","splice","minimumTrackingForScroll","distanceX","distanceY","endPos","startPos","timeOffset","movedLeft","movedTop","minVelocityToStartDeceleration","__startDeceleration","wasAnimating","oldLeft","oldTop","oldZoom","diffLeft","diffTop","diffZoom","renderedFramesPerSecond","animationId","wasFinished","floor","ceil","minVelocityToKeepDecelerating","__stepThroughDeceleration","shouldContinue","scrollLeftFixed","scrollTopFixed","scrollOutsideX","scrollOutsideY","__getDistance","touch1","touch2","x","y","sqrt","end","__export","m","Letter","constructor","letter","parseInt","color","fontSize","draw","extCtx","targetHeight","targetWidth","hRatio","wRatio","prevFont","font","transform","fillStyle","textAlign","fillText","setTransform","ConsensusColors","grey","arbitrate","threshold","scoreref","bestclass","bestscore","a","b","classSize","h","o","type","score","entries","check_PG","consensuses","colorsRef","P","G","check_R","R","red","letters","check_Q","Q","green","check_N","N","check_K","K","check_E","E","check_D","D","check_ACFILMVW","aa","caa","aaLetter","cssLetter","check_ST","S","T","check_HY","H","Y","cyan","color_map","probsArray","thresholds","hydro","W","L","V","I","M","A","F","C","polar","positive","alcohol","negative","cons","colors","consensusCol","column","_aa","split","parseFloat","HMMLogo","element","column_width","data","debug","scale_height_enabled","height_toggle","zoom_buttons","zoom_enabled","colorscheme","display_ali_map","alphabet","dom_element","getElementsByName","called_on","height_arr","default_zoom","active_sites_sources","show_active_sites","active_sites","multiple_tracks","processing","show_inserts","info_content_height","column_hover","column_clicked","scaled_max","max_height","max_height_obs","max_height_theory","dna_colors","U","aa_colors","canvas_width","probsArr","loptions","cc","probs_arr","cmap","scrollme","previous_target","rendered","previous_zoom","drawSmallInsert","context","colWidth","inOdds","inLength","delOdds","showInserts","fill","fillRect","drawBorder","beginPath","moveTo","lineTo","lineWidth","strokeStyle","stroke","drawTicks","drawBox","border","strokeRect","drawLine","x1","y1","x2","y2","drawRectWithText","text","fontsize","textfill","drawInsertOdds","drawInsertLength","drawDeleteOdds","drawColumnNumber","colNum","right","attachCanvas","DOMid","canvWidth","canvas","querySelector","classList","add","setAttribute","innerHTML","parentWidth","maxCanvasWidth","max_width","zoomed_column","total_width","canvasCount","columns_per_canvas","canvasElement","getElementsByTagName","remove","canvases","contexts","splitStart","splitEnd","adjustedWidth","canvStart","canvEnd","getContext","clearRect","render_with_rects","render_with_text","logoGraphic","getElementsByClassName","eventTarget","render_x_axis_label","label","xElement","axisDiv","axisP","appendChild","insertBefore","render_y_axis_label","yElement","xAxis","axisLabel","textBaseline","toFixed","height_calc","save","translate","rotate","PI","restore","contextNum","columnNum","columnLabel","mmline","colPositions","previousHeight","values","xPos","letterHeight","yPos","glyphHeight","ali_map","draw_column_divider","column_num","ralign","delete_probs","insert_probs","insert_lengths","render_active_sites","opts","divX","numX","borders","mod","track","wtd","controller","whatShouldBeDraw","base","toggle_visibility","display","toggle_colorscheme","scheme","colTotal","current_column","scrollToColumn","toggle_scale","toggle_ali_map","coords","beforeLeft","colCount","halfVisibleColumns","change_zoom","distance","direction","graphicalElement","containerElement","coordinatesFromColumn","offset","columnFromCoordinates","col","num","halfView","newLeft","refresh","logoElement","logoContainer","logoDivider","fieldset","htmlFor","input","logoChangeButton","form","controls","close","settings","logo","outButton","inButton","obsChecked","theoryChecked","theoryHelp","obsHelp","scaleControls","defColor","conColor","modChecked","aliChecked","aliControls","activeSites","keys","children","settingsButton","name","matchedElement","offsetLeft","column_info","infoTab","hmmLogo","header","tbody","offsetX","colData","infoCols","heightHeader","slice","reverse","columnInfo","existingColumnInfo","Skylign","HTMLElement","observedAttributes","args","super","attachShadow","mode","textContent","shadowRoot","showLogo","getAttribute","JSON","parse","connectedCallback","disconnectedCallback","attributeChangedCallback","oldValue","newValue","loadComponent","customElements","define"],"sourceRoot":""}