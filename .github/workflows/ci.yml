name: CI Pipeline

on:
  push:
    branches:
      - runner  

jobs:
  build:
    runs-on: self-hosted  # Or you can use `ubuntu-latest` if you want to use GitHub-hosted runners

    steps:
      # Checkout the repository
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          clean: false
          token: ${{ secrets.GITHUB_TOKEN }}
          fetch-depth: 1 

      # Alternatively, create or activate a Conda environment manually
      - name: Activate conda
        run: |
          conda init bash
          source ~/.bashrc 
          conda activate base

        # Push contents of the build folder to dev_deploy branch
      - name: Push build contents to dev_deploy
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"
          
          # Check out the dev_deploy branch or create it if it doesn't exist
          git checkout dev_deploy || git checkout --orphan dev_deploy

          # Remove everything except for the dist folder
          shopt -s extglob  # Enable extended globbing
          rm -rf !(dist)    # Remove everything except the dist folder

          # Copy contents of the dist folder to the root
          cp -r dist/* .  # Ensure the build output is copied to the root

          rm -rf dist/

          # Add all files to staging
          git add .

          # Commit changes
          git commit -m "Deploy to GitHub Pages" || echo "No changes to commit"

          # Push changes to the dev_deploy branch
          git push origin dev_deploy --force
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
