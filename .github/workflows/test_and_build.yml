name: test_and_build

on: [push, pull_request]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: '19.2.0'
          cache: 'npm'
      
      # - name: üîß - Install
      #   run: |
      #     cp config.yml.example config.yml
      #     npm i -g npm@9.3.1
      #     npm ci
          
      # - name: üß™ - Test
      #   run: |
      #     npm run test
      
      - name: üèó - Build dev
        if: github.ref == 'refs/heads/dev'
        run: |
            cp config/dev_config.yml config.yml

      - name: Upload Dev Build Artifact
        if: github.ref == 'refs/heads/dev'
        uses: actions/upload-artifact@v4
        with:
          name: dev-build-artifact
          path: config/**

      - name: Slack Notification
        uses: rtCamp/action-slack-notify@v2
        continue-on-error: true
        if: |
          github.ref == 'refs/heads/master' || github.ref == 'refs/heads/dev'
        env:
          SLACK_COLOR: "${{ job.status == 'success' && 'good' || 'danger' }}"
          SLACK_USERNAME: 'Github Actions'
          SLACK_ICON_EMOJI: ':octocat:'
          SLACK_TITLE: 'CI results in GitHub Actions'
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
          SLACK_CHANNEL: '#interpro7'
          MSG_MINIMAL: Actions URL

  commit-artifact:
    needs: build
    runs-on: ubuntu-latest
    if: |
      github.ref == 'refs/heads/dev' || github.ref == 'refs/heads/master'
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          ref: deploy

      - name: Download Build Artifact
        uses: actions/download-artifact@v4
        with:
          name: build-artifact
          path: dist/

      - name: Move Artifact
        run: |
          if [[ "${{ github.ref }}" == "refs/heads/master" ]]; then
            echo "Copying artifacts for production and staging"
            rm -rf staging master
            mkdir staging master
            cp -r dist/staging/* staging/
            cp -r dist/master/* master/
          elif [[ "${{ github.ref }}" == "refs/heads/dev" ]]; then
            echo "Copying artifacts for dev"
            rm -rf dev
            mkdir dev
            cp -r dist/dev/* dev/
          fi 
        shell: bash

      - name: Commit and Push Artifact
        uses: stefanzweifel/git-auto-commit-action@v4
        with:
          commit_message: "Add build artifact for ${{ github.ref_name }}"
          branch: deploy
          file_pattern: "${{ github.ref_name }}/" 
          token: ${{ secrets.MY_TOKEN }}