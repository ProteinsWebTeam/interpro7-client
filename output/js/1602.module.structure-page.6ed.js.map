{"version":3,"file":"js/1602.module.structure-page.6ed.js","mappings":"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","sources":["webpack://interpro7-client/./src/components/SimpleCommonComponents/Card/CounterIcon/index.tsx","webpack://interpro7-client/./src/components/SimpleCommonComponents/Card/index.tsx","webpack://interpro7-client/./src/components/Structure/utils.ts","webpack://interpro7-client/./src/components/Structure/StructureListFilters/ExperimentTypeFilter/index.tsx","webpack://interpro7-client/./src/components/SimpleCommonComponents/MultipleInput/index.js","webpack://interpro7-client/./src/components/SimpleCommonComponents/MultipleInput/style.css?2552","webpack://interpro7-client/./src/components/Structure/StructureListFilters/ResolutionFilter/index.tsx","webpack://interpro7-client/./src/components/Structure/StructureListFilters/ResolutionFilter/style.css?57b1","webpack://interpro7-client/./src/components/Structure/StructureListFilters/index.tsx","webpack://interpro7-client/./src/components/Structure/SummaryCounterStructures/index.tsx","webpack://interpro7-client/./src/components/Structure/Card/TaxnameStructures/index.tsx","webpack://interpro7-client/./src/components/Structure/Card/TaxnameStructures/style.css?9db4","webpack://interpro7-client/./src/components/Structure/Card/index.tsx","webpack://interpro7-client/./src/pages/Structure/index.tsx","webpack://interpro7-client/./src/components/SimpleCommonComponents/Card/CounterIcon/styles.css?9f8e","webpack://interpro7-client/./src/components/SimpleCommonComponents/Card/styles.css?fb5f","webpack://interpro7-client/./src/styles/theme-interpro.css?9472"],"sourcesContent":["import React from 'react';\n\nimport Tooltip from 'components/SimpleCommonComponents/Tooltip';\nimport Link from 'components/generic/Link';\nimport NumberComponent from 'components/NumberComponent';\nimport MemberSymbol from 'components/Entry/MemberSymbol';\n\nimport { toPlural } from 'utils/pages/toPlural';\n\nimport cssBinder from 'styles/cssBinder';\n\nimport local from './styles.css';\nimport fonts from 'EBI-Icon-fonts/fonts.css';\n\nconst css = cssBinder(local, fonts);\n\ntype Props = {\n  /** How many of this entity */\n  count: number;\n  /** One of the InterPro endpoints */\n  endpoint: Endpoint | 'domain architecture';\n  /** name of the entity */\n  name: string;\n  /** New location to add as link. If not added the ocon will appear disabled */\n  to?: InterProPartialLocation;\n  /** The database of the entity */\n  db?: MemberDB | 'interpro';\n  /**\n   * In case it is used to represent a signature of an entry.\n   * In this case the counter won't be showed as it will represent a single signature\n   * Currently iused in the EntryCard that are in the New entreies of the home page\n   * */\n  signature?: string;\n};\n\nconst icon: Record<Endpoint | 'domain architecture', string> = {\n  entry: 'icon-entries',\n  protein: 'icon-proteins',\n  proteome: 'icon-count-proteome',\n  taxonomy: 'icon-count-species',\n  structure: 'icon-structures',\n  set: 'icon-count-set',\n  'domain architecture': 'icon-count-ida',\n};\n\nconst CounterIcon = ({ count, endpoint, name, to, db, signature }: Props) => {\n  return (\n    <Tooltip\n      title={\n        signature\n          ? `${db} signature: ${signature}`\n          : `${count} ${toPlural(endpoint, count, true)} matching ${name}`\n      }\n      className={css('icon-link')}\n      style={{ display: 'flex' }}\n    >\n      <Link\n        to={to}\n        className={css(count ? null : 'ico-disabled')}\n        disabled={!count || !to}\n      >\n        <div\n          className={css(\n            'icon',\n            'icon-conceptual',\n            'icon-wrapper',\n            icon[endpoint],\n          )}\n        >\n          {endpoint === 'entry' && (\n            <div\n              style={{\n                // UGLY hack be better Gustavo\n                position: 'relative',\n                top: '7px',\n                left: '-2px',\n              }}\n            >\n              <MemberSymbol type={db || 'all'} className={css('md-small')} />\n            </div>\n          )}\n          {count !== 0 && <div className={css('icon-over-animation')} />}\n        </div>\n        {!signature && <NumberComponent abbr>{count}</NumberComponent>}\n      </Link>\n    </Tooltip>\n  );\n};\n\nexport default CounterIcon;\n","import React, { PropsWithChildren, ReactElement } from 'react';\n\nimport Link from 'components/generic/Link';\n\nimport cssBinder from 'styles/cssBinder';\n\nimport local from './styles.css';\nimport fonts from 'EBI-Icon-fonts/fonts.css';\n\nconst css = cssBinder(local, fonts);\n\ntype Props = PropsWithChildren<{\n  title?: ReactElement | string;\n  imageIconClass?: string;\n  imageComponent?: ReactElement;\n  subHeader?: ReactElement | string;\n  footer?: ReactElement | string;\n  linkForMore?: string;\n  labelForMore?: string;\n  className?: string;\n  compact?: boolean;\n}>;\n\nexport const Card = ({\n  title,\n  imageComponent,\n  imageIconClass,\n  subHeader,\n  footer,\n  linkForMore,\n  labelForMore,\n  compact = false,\n  className = '',\n  children,\n}: Props) => {\n  return (\n    <div className={css('new-card', className, { compact })}>\n      {(imageComponent || imageIconClass || title || subHeader) && (\n        <header>\n          {(imageComponent || imageIconClass) && (\n            <div\n              className={css('image', imageIconClass, {\n                icon: !!imageIconClass,\n              })}\n            >\n              {imageComponent}\n            </div>\n          )}\n          {title && <div className={css('title')}>{title}</div>}\n          {subHeader && <div className={css('subheader')}>{subHeader}</div>}\n        </header>\n      )}\n      <section className={css('content')}>{children}</section>\n      {(footer || linkForMore) && (\n        <>\n          <div className={css('footer')}>\n            {footer}\n            {linkForMore && (\n              <div className={css('card-more')}>\n                <Link href={linkForMore} target=\"_blank\" buttonType=\"tertiary\">\n                  <span\n                    className={css('icon', 'icon-common', 'icon-right')}\n                    data-icon=\"&#xf061;\"\n                  ></span>{' '}\n                  {labelForMore || 'See more'}\n                </Link>\n              </div>\n            )}{' '}\n          </div>\n        </>\n      )}\n    </div>\n  );\n};\nexport default Card;\n","export const experimentTypes = new Map([\n  ['x-ray', 'X-ray'],\n  ['nmr', 'NMR'],\n  ['all', 'All'],\n  ['em', 'Cryo-EM'],\n]);\nexport const formatExperimentType = (type: string) =>\n  experimentTypes.get((type || '').toLowerCase()) || type.toUpperCase();\n","import React, { FormEvent } from 'react';\n\nimport { createSelector } from 'reselect';\nimport { format } from 'url';\n\nimport NumberComponent from 'components/NumberComponent';\nimport { getPayloadOrEmpty } from 'components/FiltersPanel';\nimport { formatExperimentType } from 'components/Structure/utils';\n\nimport loadData from 'higherOrder/loadData/ts';\nimport descriptionToPath from 'utils/processDescription/descriptionToPath';\n\nimport { goToCustomLocation } from 'actions/creators';\n\nimport cssBinder from 'styles/cssBinder';\n\nimport style from 'components/FiltersPanel/style.css';\n\nconst css = cssBinder(style);\n\ntype Props = {\n  label?: string;\n  goToCustomLocation?: typeof goToCustomLocation;\n  customLocation?: InterProLocation;\n};\ninterface LoadedProps extends Props, LoadDataProps<GroupByPayload> {}\n\nconst ExperimentTypeFilter = ({\n  data,\n  isStale,\n  customLocation,\n  goToCustomLocation,\n}: LoadedProps) => {\n  if (!data || !customLocation) return null;\n  const { loading, payload } = data;\n  const search = customLocation.search;\n  const defaultObject = { 'x-ray': NaN, nmr: NaN, em: NaN };\n  const _payload = getPayloadOrEmpty(\n    { ...defaultObject, ...payload },\n    loading,\n    isStale,\n  );\n  const types = Object.entries(_payload)\n    .filter(([_, v]) => !!v)\n    .sort(([, a], [, b]) => b - a);\n  if (!loading) {\n    types.unshift(['All', NaN]);\n  }\n  const _handleSelection = ({ target }: FormEvent) => {\n    const value = (target as HTMLInputElement).value;\n    const {\n      page,\n      cursor,\n      experiment_type: _,\n      ...search\n    } = customLocation.search;\n    if (value !== 'All') search.experiment_type = value;\n    if (value === 'nmr' && search.resolution) delete search.resolution;\n    goToCustomLocation?.({ ...customLocation, search });\n  };\n  return (\n    <div\n      style={{ overflowX: 'hidden' }}\n      className={css('list-experiment', { stale: isStale })}\n    >\n      <div className={css('filter')}>\n        {types.map(([type, count]) => {\n          const checked =\n            (!search.experiment_type && type === 'All') ||\n            search.experiment_type === type;\n          return (\n            <label key={type} className={css('radio-btn-label', { checked })}>\n              <input\n                type=\"radio\"\n                name=\"experiment_type\"\n                className={css('radio-btn')}\n                value={type}\n                disabled={isStale}\n                onChange={_handleSelection}\n                checked={checked}\n                style={{ margin: '0.25em' }}\n              />\n              <span>{formatExperimentType(type)}</span>\n              {typeof count === 'undefined' || isNaN(count) ? null : (\n                <NumberComponent\n                  label\n                  loading={loading}\n                  className={css('filter-label')}\n                  abbr\n                >\n                  {count}\n                </NumberComponent>\n              )}\n            </label>\n          );\n        })}\n      </div>\n    </div>\n  );\n};\n\nconst getUrlFor = createSelector(\n  (state: GlobalState) => state.settings.api,\n  (state: GlobalState) => state.customLocation.description,\n  (state: GlobalState) => state.customLocation.search,\n  ({ protocol, hostname, port, root }, description, search) => {\n    // omit from search\n    // eslint-disable-next-line camelcase\n    const { experiment_type, search: _, cursor, ..._search } = search;\n    // add to search\n    _search.group_by = 'experiment_type';\n    // build URL\n    return format({\n      protocol,\n      hostname,\n      port,\n      pathname: root + descriptionToPath(description),\n      query: _search,\n    });\n  },\n);\n\nconst mapStateToProps = createSelector(\n  (state: GlobalState) => state.customLocation,\n  (customLocation) => ({ customLocation }),\n);\n\nexport default loadData({\n  getUrl: getUrlFor,\n  mapStateToProps,\n  mapDispatchToProps: { goToCustomLocation },\n} as LoadDataParameters)(ExperimentTypeFilter);\n","// @flow\nimport React, { PureComponent } from 'react';\nimport T from 'prop-types';\n\nimport classname from 'classnames/bind';\n\nimport styles from './style.css';\n\nconst s = classname.bind(styles);\n\nconst type = T.oneOfType([T.number, T.string]);\n\n/*:: type Props = {\n  min?: string | number,\n  max?: string | number,\n  minValue: number,\n  maxValue: number,\n  'aria-label'?: string,\n  style?: Object,\n  className?: string,\n  disabled?: boolean,\n}; */\nclass MultipleInput extends PureComponent /*:: <Props> */ {\n  static propTypes = {\n    min: type,\n    max: type,\n    minValue: type.isRequired,\n    maxValue: type.isRequired,\n    'aria-label': T.string,\n    style: T.object,\n    className: T.string,\n    disabled: T.bool,\n  };\n\n  render() {\n    const {\n      min,\n      max,\n      minValue,\n      maxValue,\n      ['aria-label']: arialLabel,\n      style,\n      className,\n      disabled,\n      ...props\n    } = this.props;\n    return (\n      <div className={s('multirange-wrapper', 'label-off', className)}>\n        <div className={s('small', 'label-min')} style={{ left: 20 }}>\n          {arialLabel === 'length range' ? (\n            <span>{Math.round(Math.exp(minValue)) /* AA */}</span>\n          ) : (\n            <span>{minValue /* Å */}</span>\n          )}\n        </div>\n\n        <div className={s('small', 'label-max')} style={{ right: 0 }}>\n          {arialLabel === 'length range' ? (\n            <span>{Math.round(Math.exp(maxValue)) /* AA */}</span>\n          ) : (\n            <span>{maxValue /* Å */}</span>\n          )}\n        </div>\n        <input\n          {...props}\n          type=\"range\"\n          min={min}\n          max={max}\n          name=\"min\"\n          value={minValue}\n          className={s('original')}\n          aria-label={arialLabel && `${arialLabel} lower bound`}\n          disabled={disabled}\n        />\n        <input\n          {...props}\n          type=\"range\"\n          min={min}\n          max={max}\n          name=\"max\"\n          value={maxValue}\n          className={s('ghost')}\n          aria-label={arialLabel && `${arialLabel} higher bound`}\n          disabled={disabled}\n        />\n      </div>\n    );\n  }\n}\n\nexport default MultipleInput;\n","// extracted by mini-css-extract-plugin\nexport default {\"multirange-wrapper\":\"MultipleInput_style__multirange-wrapper___bb\",\"original\":\"MultipleInput_style__original___a4\",\"ghost\":\"MultipleInput_style__ghost___de\",\"label-max\":\"MultipleInput_style__label-max___c0\",\"label-min\":\"MultipleInput_style__label-min___d2\"};","import React, { FormEvent, PureComponent } from 'react';\n\nimport { connect } from 'react-redux';\nimport { createSelector } from 'reselect';\nimport { debounce } from 'lodash-es';\n\nimport MultipleInput from 'components/SimpleCommonComponents/MultipleInput';\n\nimport { goToCustomLocation } from 'actions/creators';\n\nimport cssBinder from 'styles/cssBinder';\n\nimport filterCSS from 'components/FiltersPanel/style.css';\nimport styles from './style.css';\n\nconst css = cssBinder(styles, filterCSS);\n\nconst DEBOUNCE_RATE = 500; // In ms\n\nconst MIN = 0;\nconst MAX = 100;\nconst ALL = -1;\n\n/* eslint-disable no-magic-numbers */\nconst ranges = [\n  [0, 2],\n  [2, 4],\n  [4, 100],\n];\n/* eslint-enable */\n\nconst RESOLUTION_RANGE_REGEXP = /^(\\d*(\\.\\d+)?)-(\\d*(\\.\\d+)?)$/;\n\ntype Props = {\n  label?: string;\n  goToCustomLocation?: typeof goToCustomLocation;\n  customLocation?: InterProLocation;\n};\n\ntype State = {\n  min: number;\n  max: number;\n  selectedRange: number;\n};\n\nexport class ResolutionFilter extends PureComponent<Props, State> {\n  constructor(props: Props) {\n    super(props);\n\n    const [, min = MIN, , max = MAX] =\n      ((props.customLocation?.search.resolution as string) || '').match(\n        RESOLUTION_RANGE_REGEXP,\n      ) || [];\n    const selectedRange = this._getSelectedRange(Number(min), Number(max));\n\n    this.state = {\n      min: Math.min(MAX, Math.max(MIN, +min)),\n      max: Math.max(MIN, Math.min(MAX, +max)),\n      selectedRange,\n    };\n  }\n\n  componentDidMount() {\n    // Doing the update location on mount to clamp the values in the URL between\n    // MIN and MAX, possibly entered wrongly by the user\n    this._updateLocation(true);\n    this._updateLocation.flush();\n  }\n\n  componentWillUnmount() {\n    this._updateLocation.cancel();\n  }\n\n  _getSelectedRange(min: number, max: number) {\n    if (min !== MIN || max !== MAX) {\n      for (let i = 0; i < ranges.length; i++) {\n        if (min < ranges[i][1]) {\n          return i;\n        }\n      }\n    }\n    return ALL;\n  }\n\n  _updateLocation = debounce((fromMount?: boolean) => {\n    const { min, max } = this.state;\n    const { goToCustomLocation, customLocation } = this.props;\n    if (!customLocation) return;\n    const { page, cursor, resolution: _, ...search } = customLocation.search;\n\n    if (fromMount && page) search.page = page;\n    if (min !== MIN || max !== MAX) search.resolution = `${min}-${max}`;\n    if (\n      customLocation.search.page !== search.page ||\n      customLocation.search.resolution !== search.resolution\n    ) {\n      goToCustomLocation?.({ ...customLocation, search }, true);\n    }\n  }, DEBOUNCE_RATE);\n\n  _handleSelection = ({ target }: FormEvent) => {\n    if (!this.props.customLocation) return;\n    const value = (target as HTMLInputElement).value;\n    const {\n      page,\n      cursor,\n      resolution: _,\n      ...search\n    } = this.props.customLocation.search;\n    if (+value !== ALL && +value < ranges.length) {\n      const [min, max] = ranges[+value];\n      search.resolution = `${min}-${max}`;\n      this.setState({\n        min,\n        max,\n        selectedRange: +value,\n      });\n    } else {\n      this.setState({ min: MIN, max: MAX, selectedRange: ALL });\n    }\n    this.props.goToCustomLocation?.({ ...this.props.customLocation, search });\n  };\n\n  _handleChange = ({ target }: FormEvent) => {\n    if (!this.props.customLocation) return;\n    const { value, name: n } = target as HTMLInputElement;\n    const name = n as 'min' | 'max';\n    this.setState(\n      ({ min, max }: State) =>\n        ({\n          [name]:\n            name === 'min'\n              ? Math.min(max, Math.max(MIN, +value))\n              : Math.max(min, Math.min(MAX, +value)),\n        }) as Record<'min' | 'max', number>,\n      () => {\n        if (this.props.customLocation?.search.resolution)\n          this._updateLocation();\n      },\n    );\n  };\n\n  render() {\n    if (!this.props.customLocation) return null;\n    const {\n      customLocation: {\n        search: { resolution },\n      },\n    } = this.props;\n    const { min, max, selectedRange } = this.state;\n    let disable = false;\n    if (this.props.customLocation.search.experiment_type === 'nmr') {\n      disable = !disable;\n    }\n    const step = 0.05;\n    return (\n      <div className={css('filter')}>\n        <label\n          className={css('radio-btn-label', { checked: selectedRange === ALL })}\n        >\n          <input\n            type=\"radio\"\n            name=\"resolution\"\n            value={ALL}\n            onChange={this._handleSelection}\n            checked={selectedRange === ALL}\n            className={css('radio-btn')}\n            disabled={disable}\n          />\n          <span>All</span>\n        </label>\n        {ranges.map((range, i) => (\n          <label\n            key={i}\n            className={css('radio-btn-label', { checked: selectedRange === i })}\n          >\n            <input\n              type=\"radio\"\n              name=\"resolution\"\n              value={i}\n              className={css('radio-btn')}\n              onChange={this._handleSelection}\n              checked={selectedRange === i}\n              disabled={disable}\n            />\n            <span>\n              {range[0]} - {range[1]} Å\n            </span>\n          </label>\n        ))}\n        <MultipleInput\n          min={selectedRange === ALL ? MIN : ranges[selectedRange][0]}\n          max={selectedRange === ALL ? MAX : ranges[selectedRange][1]}\n          minValue={min}\n          maxValue={max}\n          step={selectedRange > 1 ? 1 : step}\n          onChange={this._handleChange}\n          aria-label=\"resolution range\"\n          className={css('range')}\n          disabled={!resolution}\n        />\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = createSelector(\n  (state: GlobalState) => state.customLocation,\n  (customLocation) => ({ customLocation }),\n);\n\nexport default connect(mapStateToProps, { goToCustomLocation })(\n  ResolutionFilter,\n);\n","// extracted by mini-css-extract-plugin\nexport default {\"range\":\"ResolutionFilter_style__range___f7\",\"hideable\":\"ResolutionFilter_style__hideable___f1\",\"hidden\":\"ResolutionFilter_style__hidden___e8\"};","import React from 'react';\n\nimport FiltersPanel from 'components/FiltersPanel';\nimport ExperimentTypeFilter from './ExperimentTypeFilter';\nimport ResolutionFilter from './ResolutionFilter';\n\nconst StructureListFilters = () => (\n  <FiltersPanel>\n    <ExperimentTypeFilter label=\"Experiment Type\" />\n    <ResolutionFilter label=\"Resolution (Å)\" />\n  </FiltersPanel>\n);\n\nexport default StructureListFilters;\n","import React from 'react';\nimport CounterIcon from 'components/SimpleCommonComponents/Card/CounterIcon';\n\ntype Props = {\n  entryDB: MemberDB | 'interpro';\n  structureName: string;\n  structureAccession: string;\n  counters: MetadataCounters;\n};\n\nimport cssBinder from 'styles/cssBinder';\n\nimport cardStyle from 'components/SimpleCommonComponents/Card/CounterIcon/styles.css';\n\nconst css = cssBinder(cardStyle);\n\nconst SummaryCounterStructures = ({\n  entryDB,\n  structureName,\n  structureAccession,\n  counters,\n}: Props) => {\n  const { entries, proteins, taxa } = counters;\n\n  return (\n    <div className={css('card-counter-block')}>\n      <CounterIcon\n        endpoint=\"entry\"\n        count={entries as number}\n        name={structureName}\n        db={entryDB}\n        to={{\n          description: {\n            main: { key: 'structure' },\n            structure: {\n              db: 'pdb',\n              accession: structureAccession,\n            },\n            entry: { isFilter: true, db: entryDB || 'all' },\n          },\n        }}\n      />\n      <CounterIcon\n        endpoint=\"protein\"\n        count={proteins as number}\n        name={structureName}\n        to={{\n          description: {\n            main: { key: 'structure' },\n            structure: {\n              db: 'pdb',\n              accession: structureAccession,\n            },\n            protein: { isFilter: true, db: 'UniProt' },\n          },\n        }}\n      />\n      <CounterIcon\n        endpoint=\"taxonomy\"\n        count={taxa as number}\n        name={structureName}\n      />{' '}\n    </div>\n  );\n};\nexport default SummaryCounterStructures;\n","import React from 'react';\nimport { createSelector } from 'reselect';\nimport { format } from 'url';\n\nimport loadData from 'higherOrder/loadData/ts';\nimport descriptionToPath from 'utils/processDescription/descriptionToPath';\n\nimport Tooltip from 'components/SimpleCommonComponents/Tooltip';\nimport Loading from 'components/SimpleCommonComponents/Loading';\n\nimport cssBinder from 'styles/cssBinder';\n\nimport local from './style.css';\n\nconst css = cssBinder(local);\n\ntype Props = {\n  accession: string;\n};\ninterface LoadedProps\n  extends Props,\n    LoadDataProps<PayloadList<{ metadata: TaxonomyMetadata }>> {}\n\nconst TaxnameStructures = ({ data }: LoadedProps) => {\n  if (!data) return null;\n  const { loading, payload } = data;\n  if (loading) return <Loading inline={true} />;\n  if (!payload) return null;\n  return (\n    <div className={css('container')}>\n      <div className={css({ marquee: payload.results.length > 1 })}>\n        {payload.results.map((result) => {\n          const name = result.metadata.name as unknown as string;\n          const taxAccession = result.metadata.accession;\n          return (\n            <div key={taxAccession}>\n              <Tooltip title={`${name} (Tax ID: ${taxAccession})`}>\n                {name}\n              </Tooltip>\n            </div>\n          );\n        })}\n      </div>\n    </div>\n  );\n};\n\nconst getUrl = createSelector(\n  (state: GlobalState) => state.settings.api,\n  (_: GlobalState, props: Props) => props.accession,\n  ({ protocol, hostname, port, root }: ParsedURLServer, accession: string) =>\n    format({\n      protocol,\n      hostname,\n      port,\n      pathname:\n        root +\n        descriptionToPath({\n          main: { key: 'taxonomy' },\n          taxonomy: { db: 'uniprot' },\n          structure: {\n            isFilter: true,\n            db: 'pdb',\n            accession: accession,\n          },\n        }),\n    }),\n);\n\nexport default loadData(getUrl as LoadDataParameters)(TaxnameStructures);\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"TaxnameStructures_style__container___aa\",\"marquee\":\"TaxnameStructures_style__marquee___bf\"};","import React from 'react';\n\nimport Link from 'components/generic/Link';\nimport Card from 'components/SimpleCommonComponents/Card';\nimport HighlightedText from 'components/SimpleCommonComponents/HighlightedText';\nimport Tooltip from 'components/SimpleCommonComponents/Tooltip';\nimport LazyImage from 'components/LazyImage';\nimport SummaryCounterStructures from '../SummaryCounterStructures';\nimport TaxnameStructures from './TaxnameStructures';\nimport Lazy from 'wrappers/Lazy';\n\ntype Props = {\n  data: {\n    metadata: StructureMetadata;\n    extra_fields?: {\n      counters: MetadataCounters;\n    };\n  };\n  search: string;\n  entryDB: MemberDB | 'interpro';\n};\nconst StructureCard = ({ data, search, entryDB }: Props) => {\n  return (\n    <Card\n      title={\n        <Link\n          to={{\n            description: {\n              main: { key: 'structure' },\n              structure: {\n                db: data.metadata.source_database,\n                accession: data.metadata.accession,\n              },\n            },\n          }}\n        >\n          <HighlightedText\n            text={data.metadata.name as string}\n            textToHighlight={search}\n          />\n        </Link>\n      }\n      imageComponent={\n        <Tooltip title={`3D visualisation of ${data.metadata.accession}`}>\n          <LazyImage\n            src={`//www.ebi.ac.uk/thornton-srv/databases/cgi-bin/pdbsum/getimg.pl?source=pdbsum&pdb_code=${data.metadata.accession}&file=traces.jpg`}\n            alt={`PDBe entry ${data.metadata.accession}`}\n          />\n        </Tooltip>\n      }\n      subHeader={\n        <>\n          {\n            // INFO RESOLUTION BL - browse structures - Xray\n            data.metadata.experiment_type === 'x-ray' && (\n              <Tooltip\n                title={`X-ray, resolution ${data.metadata.resolution} Å`}\n              >\n                {data.metadata.experiment_type}\n                {': '}\n                {data.metadata.resolution}Å\n              </Tooltip>\n            )\n          }\n          {\n            // INFO TYPE BL - browse structures -NMR\n            data.metadata.experiment_type === 'nmr' && (\n              <Tooltip title=\"Nuclear Magnetic Resonance\">\n                {data.metadata.experiment_type}\n              </Tooltip>\n            )\n          }\n        </>\n      }\n      footer={\n        <>\n          <Lazy>\n            {(hasBeenVisible: boolean) =>\n              hasBeenVisible ? (\n                <TaxnameStructures accession={data.metadata.accession} />\n              ) : null\n            }\n          </Lazy>\n          <div>\n            <HighlightedText\n              text={data.metadata.accession || ''}\n              textToHighlight={search}\n            />\n          </div>\n        </>\n      }\n    >\n      {data.extra_fields && data.metadata && data.extra_fields.counters && (\n        <SummaryCounterStructures\n          structureName={data.metadata.name as string}\n          structureAccession={data.metadata.accession}\n          entryDB={entryDB}\n          counters={data.extra_fields.counters}\n        />\n      )}\n    </Card>\n  );\n};\n\nexport default StructureCard;\n","import React from 'react';\n\nimport Link from 'components/generic/Link';\n\nimport MemberDBSelector from 'components/MemberDBSelector';\nimport LazyImage from 'components/LazyImage';\n\nimport StructureListFilters from 'components/Structure/StructureListFilters';\n\nimport StructureCard from 'components/Structure/Card';\nimport Table, {\n  Column,\n  Card,\n  SearchBox,\n  PageSizeSelector,\n  Exporter,\n  HighlightToggler,\n} from 'components/Table';\n\nimport HighlightedText from 'components/SimpleCommonComponents/HighlightedText';\n\nimport File from 'components/File';\n\nimport ExternalExportButton from 'components/Table/Exporter/ExternalExportButton';\n\nimport loadable from 'higherOrder/loadable';\n\nimport {\n  schemaProcessDataTable,\n  schemaProcessDataTableRow,\n} from 'schema_org/processors';\n\nimport EndPointPage from '../endpoint-page';\nimport subPages from 'subPages';\nimport config from 'config';\n\nimport ebiGlobalStyles from 'ebi-framework/css/ebi-global.css';\nimport fonts from 'EBI-Icon-fonts/fonts.css';\nimport pageStyle from '../style.css';\n\nimport { formatExperimentType } from 'components/Structure/utils';\nimport exporterStyle from 'components/Table/Exporter/style.css';\nimport theme from 'styles/theme-interpro.css';\nimport filtersAndTable from 'components/FiltersPanel/filters-and-table.css';\n\nimport descriptionToPath from 'utils/processDescription/descriptionToPath';\nimport cssBinder from 'styles/cssBinder';\n\nimport { toPublicAPI } from 'utils/url';\n\nconst css = cssBinder(\n  ebiGlobalStyles,\n  pageStyle,\n  fonts,\n  exporterStyle,\n  theme,\n  filtersAndTable,\n);\n\nconst SummaryAsync = loadable({\n  loader: () =>\n    import(\n      /* webpackChunkName: \"structure-summary\" */ 'components/Structure/Summary'\n    ),\n  loading: () => null,\n});\n\nconst SchemaOrgData = loadable({\n  loader: () => import(/* webpackChunkName: \"schemaOrg\" */ 'schema_org'),\n  loading: () => null,\n});\n\n/*\ntype OverviewProps = {\n  payload: EntryStructurePayload,\n  loading: boolean\n}\n\nconst Overview = (\n  {\n    payload, loading\n  } : OverviewProps\n) => {\n  if (loading) return <Loading />;\n  return (\n    <ul className={css('card')}>\n      {Object.entries(payload.structures || {}).map(([name, count]) => (\n        <li key={name}>\n          <Link\n            to={{\n              description: {\n                main: { key: 'structure' },\n                structure: { db: name },\n              },\n            }}\n          >\n            {name} ({count})\n          </Link>\n        </li>\n      ))}\n    </ul>\n  );\n};*/\n\ntype AllProteomesDownloadProps = {\n  description: InterProDescription;\n  search: InterProLocationSearch;\n  count: number;\n  fileType: DownloadFileTypes;\n  name: string;\n};\n\nconst AllStructuresDownload = ({\n  description,\n  search,\n  count,\n  fileType,\n  name,\n}: AllProteomesDownloadProps) => (\n  <File\n    fileType={fileType}\n    name={`structures.${fileType}`}\n    count={count}\n    customLocationDescription={description}\n    search={search}\n    endpoint={'structure'}\n  />\n);\n\ntype StructureItem = {\n  metadata: StructureMetadata;\n  extra_fields?: {\n    counters: MetadataCounters;\n  };\n};\n\ntype Props = {\n  customLocation?: InterProLocation;\n};\n\ninterface LoadedProps\n  extends Props,\n    LoadDataProps<PayloadList<EntryStructurePayload>>,\n    LoadDataProps<RootAPIPayload, 'Base'> {}\n\nconst List = ({ data, customLocation, isStale, dataBase }: LoadedProps) => {\n  if (!data || !customLocation) return null;\n\n  const { payload, loading, ok, url, status } = data;\n\n  const { description, search } = customLocation;\n\n  const {\n    structure: { db },\n  } = description;\n\n  const entryDB = description.entry.db as MemberDB | 'interpro';\n\n  let _payload = payload;\n\n  const HTTP_OK = 200;\n  const notFound = !loading && status !== HTTP_OK;\n  const databases = dataBase?.payload?.databases;\n  if (loading || notFound) {\n    _payload = {\n      results: [],\n      count: 0,\n      next: null,\n      previous: null,\n    };\n  }\n\n  const size = _payload?.count || 0;\n\n  const includeGrid = url;\n\n  return (\n    <div className={css('row', 'filters-and-table')}>\n      <nav>\n        <div className={css('browse-side-panel')}>\n          <div className={css('selector-container')}>\n            <MemberDBSelector\n              contentType=\"structure\"\n              className=\"pp-left-side-db-selector\"\n            />\n          </div>\n          <hr style={{ paddingTop: '0.5rem' }} />\n          <StructureListFilters />\n        </div>\n      </nav>\n\n      <section>\n        {databases && db && databases[db.toLowerCase()] && (\n          <SchemaOrgData\n            data={{\n              data: { db: databases[db.toLowerCase()] },\n              location: window.location,\n            }}\n            processData={schemaProcessDataTable}\n          />\n        )}\n        <Table\n          dataTable={_payload?.results}\n          contentType=\"structure\"\n          loading={loading}\n          ok={ok}\n          status={status}\n          isStale={isStale}\n          actualSize={size}\n          query={search}\n          notFound={notFound}\n          withGrid={!!includeGrid}\n          databases={databases}\n          nextAPICall={_payload?.next}\n          previousAPICall={_payload?.previous}\n          currentAPICall={url}\n        >\n          <Exporter>\n            <div className={css('menu-grid')}>\n              <AllStructuresDownload\n                name=\"json\"\n                description={description}\n                search={search}\n                count={size}\n                fileType=\"json\"\n              />\n              <AllStructuresDownload\n                name=\"tsv\"\n                description={description}\n                search={search}\n                count={size}\n                fileType=\"tsv\"\n              />\n              <ExternalExportButton type={'api'} url={toPublicAPI(url)} />\n              <ExternalExportButton\n                search={search}\n                type={'scriptgen'}\n                subpath={descriptionToPath(description)}\n              />\n            </div>\n          </Exporter>\n          <PageSizeSelector />\n          <Card>\n            {(data: StructureItem) => (\n              <StructureCard\n                data={data}\n                search={search.search as string}\n                entryDB={entryDB}\n              />\n            )}\n          </Card>\n          <SearchBox loading={isStale}>Search structures</SearchBox>\n          <HighlightToggler />\n          <Column\n            dataKey=\"accession\"\n            headerClassName={css('table-center')}\n            cellClassName={css('table-center')}\n            renderer={(accession: string, row: unknown) => (\n              <Link\n                to={(customLocation) => ({\n                  ...customLocation,\n                  description: {\n                    main: { key: 'structure' },\n                    structure: {\n                      db: customLocation.description.structure.db,\n                      accession,\n                    },\n                  },\n                  search: {},\n                })}\n              >\n                <SchemaOrgData\n                  data={{\n                    data: { row, endpoint: 'structure' },\n                    location: window.location,\n                  }}\n                  processData={schemaProcessDataTableRow}\n                />\n                <HighlightedText\n                  text={accession || ''}\n                  textToHighlight={search.search as string}\n                />\n              </Link>\n            )}\n          >\n            Accession\n          </Column>\n          <Column\n            dataKey=\"name\"\n            renderer={(name: string, { accession }: StructureMetadata) => (\n              <Link\n                to={(customLocation) => ({\n                  ...customLocation,\n                  description: {\n                    main: { key: 'structure' },\n                    structure: {\n                      db: customLocation.description.structure.db,\n                      accession: accession,\n                    },\n                  },\n                  search: {},\n                })}\n              >\n                <HighlightedText\n                  text={name.toUpperCase()}\n                  textToHighlight={search.search as string}\n                />\n              </Link>\n            )}\n          >\n            Name\n          </Column>\n          <Column\n            dataKey=\"experiment_type\"\n            headerClassName={css('table-center')}\n            cellClassName={css('table-center')}\n            renderer={(type: string) => formatExperimentType(type)}\n          >\n            Experiment type\n          </Column>\n          <Column\n            dataKey=\"resolution\"\n            headerClassName={css('table-center')}\n            cellClassName={css('table-center')}\n            renderer={\n              (resolution /*: string | number */) =>\n                resolution\n                  ? resolution + (typeof resolution === 'number' ? ' Å' : '')\n                  : '' /* replace symbol by nothing to be consistent (with go terms column in browse entry for e.g.) */\n            }\n          >\n            Resolution\n          </Column>\n          <Column\n            dataKey=\"accession\"\n            headerClassName={css('table-center')}\n            cellClassName={css('table-center')}\n            defaultKey=\"structureAccession\"\n            renderer={(accession /*: string */) => (\n              <Link\n                to={(customLocation) => ({\n                  ...customLocation,\n                  description: {\n                    main: { key: 'structure' },\n                    structure: {\n                      db: customLocation.description.structure.db,\n                      accession,\n                    },\n                  },\n                  search: {},\n                })}\n              >\n                <LazyImage\n                  src={`//www.ebi.ac.uk/thornton-srv/databases/cgi-bin/pdbsum/getimg.pl?source=pdbsum&pdb_code=${accession}&file=traces.jpg`}\n                  alt={`structure with accession ${accession}`}\n                  style={{ maxWidth: '33%' }}\n                />\n              </Link>\n            )}\n          >\n            Structure\n          </Column>\n        </Table>\n      </section>\n    </div>\n  );\n};\n\nconst subPagesForStructure = new Map();\nfor (const subPage of config.pages.structure.subPages) {\n  subPagesForStructure.set(subPage, subPages.get(subPage));\n}\n\nconst childRoutesReg = /^[a-z\\d]{4}$/i;\n\nconst Structure = () => (\n  <EndPointPage\n    subpagesRoutes={childRoutesReg}\n    listOfEndpointEntities={List}\n    SummaryAsync={SummaryAsync}\n    subPagesForEndpoint={subPagesForStructure}\n  />\n);\n\nexport default Structure;\n","// extracted by mini-css-extract-plugin\nexport default {\"icon-link\":\"CounterIcon_styles__icon-link___c3\",\"icon-over-animation\":\"CounterIcon_styles__icon-over-animation___ef\",\"icon-wrapper\":\"CounterIcon_styles__icon-wrapper___b8\",\"md-small\":\"CounterIcon_styles__md-small___a8\",\"mod-img-pos\":\"CounterIcon_styles__mod-img-pos___c0\",\"icon\":\"CounterIcon_styles__icon___e4\",\"icon-count-species\":\"CounterIcon_styles__icon-count-species___e0\",\"icon-count-ida\":\"CounterIcon_styles__icon-count-ida___ce\",\"icon-count-set\":\"CounterIcon_styles__icon-count-set___de\",\"icon-count-hmm\":\"CounterIcon_styles__icon-count-hmm___c7\",\"icon-count-proteome\":\"CounterIcon_styles__icon-count-proteome___ad\",\"card-counter-block\":\"CounterIcon_styles__card-counter-block___de\"};","// extracted by mini-css-extract-plugin\nexport default {\"new-card\":\"Card_styles__new-card___df\",\"image\":\"Card_styles__image___b8\",\"card-tag\":\"Card_styles__card-tag___bf\",\"icon\":\"Card_styles__icon___d1\",\"title\":\"Card_styles__title___fb\",\"subheader\":\"Card_styles__subheader___ca\",\"content\":\"Card_styles__content___f0\",\"footer\":\"Card_styles__footer___fe\",\"card-more\":\"Card_styles__card-more___c3\",\"button-more\":\"Card_styles__button-more___f8\",\"compact\":\"Card_styles__compact___e9\",\"tag-publi\":\"Card_styles__tag-publi___f0\",\"tag-tuto\":\"Card_styles__tag-tuto___b1\",\"tag-tool\":\"Card_styles__tag-tool___dd\",\"tag-focus\":\"Card_styles__tag-focus___e5\",\"tag-blog\":\"Card_styles__tag-blog___a7\",\"white-link\":\"Card_styles__white-link___a2\",\"card-info-author\":\"Card_styles__card-info-author___e9\",\"button\":\"Card_styles__button___ee\",\"hollow\":\"Card_styles__hollow___d5\",\"secondary\":\"Card_styles__secondary___d8\",\"margin-bottom-large\":\"Card_styles__margin-bottom-large___d8\"};","// extracted by mini-css-extract-plugin\nexport default {\"label\":\"styles_theme-interpro__label___ce\",\"special\":\"styles_theme-interpro__special___ed\",\"button\":\"styles_theme-interpro__button___ca\",\"primary\":\"styles_theme-interpro__primary___ba\",\"menu\":\"styles_theme-interpro__menu___a8\",\"active\":\"styles_theme-interpro__active___fc\",\"tag\":\"styles_theme-interpro__tag___e6\",\"disabled\":\"styles_theme-interpro__disabled___b8\",\"warning\":\"styles_theme-interpro__warning___aa\",\"local-masthead\":\"styles_theme-interpro__local-masthead___fd\",\"switch-paddle\":\"styles_theme-interpro__switch-paddle___ac\",\"white-color\":\"styles_theme-interpro__white-color___b3\"};"],"names":["css","cssBinder","local","fonts","icon","entry","protein","proteome","taxonomy","structure","set","_ref","count","endpoint","name","to","db","signature","React","Tooltip","title","toPlural","className","style","display","Link","disabled","position","top","left","MemberSymbol","type","NumberComponent","abbr","imageComponent","imageIconClass","subHeader","footer","linkForMore","labelForMore","compact","children","href","target","buttonType","experimentTypes","Map","formatExperimentType","get","toLowerCase","toUpperCase","getUrlFor","createSelector","state","settings","api","customLocation","description","search","_ref7","protocol","hostname","port","root","experiment_type","_","cursor","_search","__rest","group_by","format","pathname","descriptionToPath","query","mapStateToProps","loadData","getUrl","mapDispatchToProps","goToCustomLocation","data","isStale","loading","payload","_payload","getPayloadOrEmpty","Object","assign","NaN","nmr","em","types","entries","filter","_ref2","v","sort","_ref3","_ref4","a","b","unshift","_handleSelection","_ref5","value","_a","page","resolution","overflowX","stale","map","_ref6","checked","key","onChange","margin","isNaN","label","s","classname","T","MultipleInput","PureComponent","render","_this$props","this","props","min","max","minValue","maxValue","arialLabel","_objectWithoutPropertiesLoose","_excluded","Math","round","exp","right","_extends","propTypes","isRequired","filterCSS","MIN","MAX","ALL","ranges","RESOLUTION_RANGE_REGEXP","ResolutionFilter","constructor","super","_updateLocation","debounce","fromMount","_c","length","setState","selectedRange","_b","call","_handleChange","n","match","_getSelectedRange","Number","componentDidMount","flush","componentWillUnmount","cancel","i","disable","range","step","connect","StructureListFilters","FiltersPanel","ExperimentTypeFilter","cardStyle","entryDB","structureName","structureAccession","counters","proteins","taxa","CounterIcon","main","accession","isFilter","Loading","inline","marquee","results","result","metadata","taxAccession","Card","source_database","HighlightedText","text","textToHighlight","LazyImage","src","alt","Lazy","hasBeenVisible","TaxnameStructures","extra_fields","SummaryCounterStructures","ebiGlobalStyles","pageStyle","exporterStyle","theme","filtersAndTable","SummaryAsync","loadable","loader","SchemaOrgData","AllStructuresDownload","fileType","File","customLocationDescription","List","dataBase","ok","url","status","notFound","databases","next","previous","size","includeGrid","MemberDBSelector","contentType","paddingTop","location","window","processData","schemaProcessDataTable","Table","dataTable","actualSize","withGrid","nextAPICall","previousAPICall","currentAPICall","Exporter","ExternalExportButton","toPublicAPI","subpath","PageSizeSelector","StructureCard","SearchBox","HighlightToggler","Column","dataKey","headerClassName","cellClassName","renderer","row","schemaProcessDataTableRow","defaultKey","maxWidth","subPagesForStructure","subPage","config","pages","subPages","childRoutesReg","Structure","EndPointPage","subpagesRoutes","listOfEndpointEntities","subPagesForEndpoint"],"sourceRoot":""}