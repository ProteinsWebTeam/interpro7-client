{"version":3,"file":"js/111.module.feedback-subpage.014.js","mappings":"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","sources":["webpack://interpro7-client/./src/subPages/Feedback/index.tsx","webpack://interpro7-client/./src/subPages/Feedback/style.css?bb9a","webpack://interpro7-client/./src/styles/forms.css?a355"],"sourcesContent":["import React, { FormEvent, useState } from 'react';\nimport { connect } from 'react-redux';\nimport { createSelector } from 'reselect';\n\nimport { addToast } from 'actions/creators';\nimport { format } from 'url';\nimport { cleanUpMultipleSlashes } from 'higherOrder/loadData/defaults';\n\nimport Button from 'components/SimpleCommonComponents/Button';\nimport Loading from 'components/SimpleCommonComponents/Loading';\n\nimport cssBinder from 'styles/cssBinder';\n\nimport local from './style.css';\nimport forms from 'styles/forms.css';\n\nconst css = cssBinder(local, forms);\n\ntype Props = {\n  api: ParsedURLServer;\n  llm?: boolean;\n  addToast: typeof addToast;\n};\n\ninterface LoadedProps\n  extends Props,\n    LoadDataProps<{ metadata: EntryMetadata }> {}\n\nconst Feedback = ({ api, llm, data, addToast }: LoadedProps) => {\n  if (!data) return null;\n  if (data.loading) return <Loading />;\n  const metadata = data.payload?.metadata;\n  if (!metadata) return null;\n\n  const { protocol, hostname, port, root } = api;\n  const apiUrl = cleanUpMultipleSlashes(\n    format({\n      protocol,\n      hostname,\n      port,\n      pathname: `${root}/mail/`,\n    }),\n  );\n\n  const [message, setMessage] = useState('');\n  const [email, setEmail] = useState('');\n  const entry = `${metadata.name.name} (${metadata.accession})`;\n  const queue =\n    metadata.source_database.toLowerCase() === 'pfam' ? 'pfam' : 'interpro';\n\n  const handleSubmit = (event: FormEvent) => {\n    if (!event.target) return;\n    event.preventDefault();\n    const data = new FormData(event.target as HTMLFormElement);\n    data.append(\n      'subject',\n      llm ? `LLM Feedback, ${entry}` : `Add annotation, ${entry}`,\n    );\n    data.append('queue', queue);\n    fetch(apiUrl, {\n      method: 'POST',\n      body: data,\n    }).then((response) => {\n      let text;\n      // eslint-disable-next-line no-magic-numbers\n      if (response.status === 200) {\n        text = 'Thanks for your feedback';\n        // eslint-disable-next-line no-magic-numbers\n      } else if (response.status === 429) {\n        text = 'Request aborted as too many requests are made within a minute';\n      } else {\n        text = 'Invalid request';\n      }\n      addToast(\n        {\n          title: text,\n          ttl: 3000,\n        },\n        'interhelp-mail',\n      );\n      setMessage('');\n      setEmail('');\n    });\n  };\n  const handleFields = (e: FormEvent) => {\n    const target = e.target as HTMLFormElement;\n    if (target.name === 'message') setMessage(target.value);\n    else setEmail(target.value);\n  };\n\n  const clearFields = () => {\n    setMessage('');\n    setEmail('');\n  };\n\n  return (\n    <form onSubmit={handleSubmit} className={css('vf-stack', 'vf-stack--200')}>\n      <h4>Feedback</h4>\n      {llm ? (\n        <>\n          <p>\n            InterPro has started exploring the utilization of Large Language\n            Models (LLM) for the automated generation of descriptions for\n            protein families.\n          </p>\n          <p>\n            Our preliminary assessments have indicated that the quality of these\n            descriptions is sufficiently high to warrant publication on the\n            InterPro website. However, we are keenly interested in gathering\n            feedback from researchers who use our resource.\n          </p>\n          <p>\n            Your input is invaluable to us, and we appreciate your time in\n            providing us with your insights.\n          </p>\n        </>\n      ) : (\n        <p>\n          We welcome your suggestions for updating this entry's annotations. Our\n          curators will review all feedback and may incorporate suitable updates\n          in the next{' '}\n          {metadata.source_database.toLowerCase() === 'interpro'\n            ? 'InterPro'\n            : 'Pfam'}{' '}\n          release. For more accurate updates, please include supporting\n          literature references.\n        </p>\n      )}\n      <label\n        className={css(\n          'vf-form__label',\n          'vf-form__label--required',\n          'required',\n        )}\n        htmlFor=\"from_email\"\n      >\n        Email address\n      </label>\n      <input\n        id=\"from_email\"\n        name=\"from_email\"\n        type=\"email\"\n        value={email}\n        onChange={handleFields}\n        className={css('vf-form__input')}\n        required\n      />\n      <label\n        className={css(\n          'vf-form__label',\n          'vf-form__label--required',\n          'required',\n        )}\n        htmlFor=\"message\"\n      >\n        Details\n      </label>\n      <textarea\n        id=\"message\"\n        name=\"message\"\n        value={message}\n        onChange={handleFields}\n        className={css('vf-form__textarea')}\n        rows={5}\n        required\n      />\n      <div className={css('flex-space-evenly')}>\n        <Button submit>Submit</Button>\n        <Button type=\"tertiary\" onClick={clearFields}>\n          Clear\n        </Button>\n      </div>\n    </form>\n  );\n};\n\nconst mapStateToProps = createSelector(\n  (state: GlobalState) => state.settings.api,\n  (state: GlobalState) => state.customLocation.search,\n  (api, search) => ({ api, llm: 'llm' in search }),\n);\n\nexport default connect(mapStateToProps, { addToast })(Feedback);\n","// extracted by mini-css-extract-plugin\nexport default {\"flex-space-evenly\":\"Feedback_style__flex-space-evenly___d7\"};","// extracted by mini-css-extract-plugin\nexport default {\"required\":\"styles_forms__required___c2\"};"],"names":["css","cssBinder","mapStateToProps","createSelector","state","settings","api","customLocation","search","llm","connect","addToast","_ref","data","loading","React","Loading","metadata","_a","payload","protocol","hostname","port","root","apiUrl","cleanUpMultipleSlashes","format","pathname","message","setMessage","useState","email","setEmail","entry","name","accession","queue","source_database","toLowerCase","handleFields","e","target","value","onSubmit","event","preventDefault","FormData","append","fetch","method","body","then","response","text","status","title","ttl","className","htmlFor","id","type","onChange","required","rows","Button","submit","onClick","clearFields"],"sourceRoot":""}