{"version":3,"file":"js/206.module.by-latest-entries.3a7.js","mappings":"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","sources":["webpack://interpro7-client/./src/components/home/ByLatestEntries/index.tsx","webpack://interpro7-client/./src/higherOrder/loadData/ts/index.tsx"],"sourcesContent":["import React from 'react';\n\nimport { createSelector } from 'reselect';\nimport { format } from 'url';\n\nimport loadData from 'higherOrder/loadData/ts';\nimport descriptionToPath from 'utils/processDescription/descriptionToPath';\n\nimport Loading from 'components/SimpleCommonComponents/Loading';\nimport Link from 'components/generic/Link';\nimport AnimatedEntry from 'components/AnimatedEntry';\nimport EntryCard from 'components/home/EntryCard';\n\nimport cssBinder from 'styles/cssBinder';\n\nimport fonts from 'EBI-Icon-fonts/fonts.css';\nimport local from './styles.css';\n\nconst css = cssBinder(fonts, local);\n\n/*:: type EntriesProps = {\n  data: {\n    payload: Object\n  }\n}*/\n\ninterface LoadedProps\n  extends LoadDataProps<\n    PayloadList<{\n      metadata: EntryMetadata;\n      extra_fields: {\n        counters: MetadataCounters;\n      };\n    }>\n  > {}\n\nexport const ByLatestEntries = ({ data }: LoadedProps) => {\n  if (!data || !data.ok) return null;\n  if (data.loading) return <Loading />;\n  const entriesToDisplayCount = 7;\n  if (data.payload) {\n    const newEntries = data.payload.results.slice(0, entriesToDisplayCount);\n    return (\n      <div className={css('feat-entry-list')}>\n        <div className={css('vf-stack', 'vf-stack--200')}>\n          <AnimatedEntry className={css('wrapper')} element=\"div\">\n            {newEntries.map((e) => (\n              <EntryCard entry={e} key={e.metadata.accession} />\n            ))}\n          </AnimatedEntry>\n          <div>\n            <Link\n              to={{\n                description: {\n                  main: { key: 'entry' },\n                  entry: { db: 'InterPro' },\n                } as InterProPartialDescription,\n                search: { latest_entries: '' },\n              }}\n              buttonType=\"primary\"\n            >\n              Browse all new entries\n            </Link>\n          </div>\n        </div>\n      </div>\n    );\n  }\n};\n\nconst getAllLatestEntriesURL = createSelector(\n  (state: GlobalState) => state.settings.api,\n  ({ protocol, hostname, port, root }) => {\n    const desc: InterProPartialDescription = {\n      main: { key: 'entry' },\n      entry: { db: 'interpro' },\n    };\n    return format({\n      protocol,\n      hostname,\n      port,\n      pathname: root + descriptionToPath(desc),\n      query: {\n        latest_entries: '',\n        extra_fields: 'counters',\n      },\n    });\n  },\n);\n\nexport default loadData(getAllLatestEntriesURL as LoadDataParameters)(\n  ByLatestEntries,\n);\n","import React, { PureComponent } from 'react';\nimport { connect } from 'react-redux';\nimport { createSelector } from 'reselect';\nimport { Diff } from 'utility-types';\n\nimport uniqueId from 'utils/cheap-unique-id';\nimport cancelable from 'utils/cancelable';\nimport {\n  dataProgressInfo,\n  dataProgressUnload,\n  addToast,\n} from 'actions/creators';\n\nimport extractParams from '../extract-params';\nimport getFetch from '../getFetch';\n\nimport { UnconnectedErrorBoundary } from 'wrappers/ErrorBoundary';\n\nconst TIMEOUT = 408;\nconst MS = 1000;\n\nconst mapStateToState = createSelector(\n  (state: unknown) => state,\n  (appState) => ({ appState }),\n);\n\n// Props to connect to the wrapper component that are not injected in the wrapped one\ntype ConnectedProps = {\n  dataProgressInfo?: typeof dataProgressInfo;\n  dataProgressUnload?: typeof dataProgressUnload;\n  addToast?: typeof addToast;\n  appState?: GlobalState;\n};\n\nconst loadData = <Payload = unknown, Namespace extends string = ''>(\n  params?: LoadDataParameters,\n) => {\n  const {\n    getUrl,\n    fetchOptions,\n    propNamespace,\n    weight,\n    mapStateToProps,\n    mapDispatchToProps,\n  } = extractParams(params);\n  const fetchFun = getFetch(fetchOptions);\n\n  // Defining the function here to be able to use the Generic Type Payload\n  const newData = (url: string): RequestedData<Payload> => ({\n    loading: !!url,\n    progress: 0,\n    ok: true,\n    status: null,\n    payload: null,\n    url,\n  });\n\n  return <BaseProps extends LoadDataProps<Payload, Namespace>>(\n    Wrapped: React.ComponentType<BaseProps>,\n  ) => {\n    type WrapperProps = ReturnType<typeof mapStateToProps> &\n      typeof mapDispatchToProps &\n      ConnectedProps;\n\n    type WrapperState = {\n      url: string;\n      data: RequestedData<Payload>;\n      staleData?: RequestedData<Payload>;\n      retries: number;\n      progress?: number;\n      loading?: boolean;\n    };\n\n    class DataWrapper extends PureComponent<WrapperProps, WrapperState> {\n      static displayName = `loadData(${Wrapped.displayName || Wrapped.name})`;\n      #id: string;\n      #request?: CancelableRequest;\n      timeoutID = 0;\n\n      constructor(props: WrapperProps) {\n        super(props);\n\n        // Identify this specific data loader\n        this.#id = uniqueId('data-loader');\n\n        // Initialize state\n        const url = getUrl?.(props.appState || {}, props) || '';\n        this.state = {\n          url,\n          data: newData(url),\n          staleData: undefined,\n          retries: 0,\n        };\n      }\n\n      static getDerivedStateFromProps(\n        nextProps: WrapperProps,\n        prevState: WrapperState,\n      ) {\n        // get potential new url in state according to props\n        const url = getUrl?.(nextProps.appState || {}, nextProps) || '';\n        // if it's the same, don't update the state\n        if (prevState.url === url) return null;\n        // otherwise, update url in state, and create new data object in state\n        return { data: newData(url), url };\n      }\n\n      componentDidMount() {\n        // start loading data on mount\n        this._load(this.state.url);\n      }\n\n      componentDidUpdate(_prevProps: WrapperProps, prevState: WrapperState) {\n        // if the url has changed\n        if (\n          prevState.url !== this.state.url ||\n          prevState.retries !== this.state.retries\n        ) {\n          // cancel current request\n          this._cancel();\n          // and start new one\n          this._load(this.state.url);\n        }\n      }\n\n      // cancel current request on unmount\n      componentWillUnmount() {\n        this._cancel();\n        if (this.timeoutID) {\n          window.clearTimeout(this.timeoutID);\n        }\n      }\n\n      _cancel = () => {\n        if (this.#request) this.#request.cancel();\n        this.props.dataProgressUnload?.(this.#id);\n      };\n\n      _progress = (progress: number) => {\n        this.setState(({ data }) => ({ data: { ...data, progress } }));\n        this.props.dataProgressInfo?.(this.#id, progress, weight);\n      };\n\n      _load = async (url: string) => {\n        if (!url) {\n          this.setState({\n            staleData: {\n              ...this.state.data,\n            },\n          });\n          return;\n        }\n        // Progress: 0\n        this.props.dataProgressInfo?.(this.#id, 0, weight);\n        this.#request = cancelable<BasicResponse>((signal) =>\n          fetchFun(\n            url,\n            { ...fetchOptions, signal },\n            this._progress,\n            this.props.addToast,\n          ),\n        );\n        // We keep a hold on *this* request, because it might change\n        const request = this.#request;\n        try {\n          const response = await request.promise;\n          // Analytics\n          gtag('event', 'data', {\n            event_category: 'data',\n            event_response: response.status,\n            event_label: url,\n            // Custom Metric in google analytics as metrics1: From Client Cache\n            event_clientcache: response.headers.has('Client-Cache') ? 1 : 0,\n            // Custom Metric in google analytics as metrics1: From Server Cache\n            event_cache: response.headers.has('Cached') ? 1 : 0,\n          });\n          // We have a response 🎉 set it into the local state\n          this.setState(({ data }) => {\n            const nextData = {\n              ...data,\n              ...response,\n              progress: 1,\n              loading: false,\n            };\n            return { data: nextData, staleData: nextData };\n          });\n          // Progress: 1\n          this.props.dataProgressInfo?.(this.#id, 1, weight);\n\n          const msToRetry =\n            (this.props.appState?.settings.navigation.secondsToRetry || 0) * MS;\n          // Scheduling to retry because we got a 408\n          if (response.status === TIMEOUT) {\n            this.timeoutID = window.setTimeout(() => {\n              console.log('Retrying the Timed out query');\n              this.setState({ retries: this.state.retries + 1 });\n            }, msToRetry);\n          }\n        } catch (error) {\n          // If request has been canceled, it means we did it, on purpose, so\n          // just ignore, otherwise it's a real error\n          if (!request.canceled) {\n            // we have a problem, something bad happened\n            // Analytics\n            gtag('event', 'error', {\n              event_category: 'data',\n              event_status: 'fail',\n              event_label: url,\n              // Custom Metric in google analytics as metrics3: Is Client Online\n              event_online: window.navigator.onLine ? 1 : 0,\n            });\n            this.setState(({ data }) => ({\n              data: { ...data, loading: false, progress: 1, ok: false, error },\n            }));\n            // Progress: 1\n            this.props.dataProgressInfo?.(this.#id, 1, weight);\n          }\n        }\n      };\n\n      render() {\n        const {\n          // props to be removed\n          dataProgressInfo: _,\n          dataProgressUnload: __,\n          addToast: ___,\n          appState,\n          // rest of props, to be passed down\n          ...rest\n        } = this.props;\n        const datakey: DataKey = `data${propNamespace}`;\n        const stalekey: IsStaleKey = `isStale${propNamespace}`;\n        const passedProps /*: LoadDataProps<Payload> */ = {\n          [datakey]: (this.state.staleData ||\n            this.state.data) as RequestedData<Payload>,\n          [stalekey]: this.state.staleData !== this.state.data,\n        };\n        // The correction below is needed for MS Edge\n        if (\n          this.state.data &&\n          !this.state.data.loading &&\n          this.state.data.url === this.state.url\n        )\n          passedProps[`isStale${propNamespace}`] = false;\n        return (\n          <UnconnectedErrorBoundary customLocation={appState?.customLocation}>\n            <Wrapped\n              {...(rest as BaseProps)}\n              {...passedProps}\n              {...(mapStateToProps?.(appState, {\n                ...(rest as BaseProps),\n                ...passedProps,\n              }) || {})}\n            />\n          </UnconnectedErrorBoundary>\n        );\n      }\n    }\n    const dispatchProps = {\n      dataProgressInfo,\n      dataProgressUnload,\n      addToast,\n      ...mapDispatchToProps,\n    };\n    const connector = connect<\n      ReturnType<typeof mapStateToProps>,\n      typeof dispatchProps,\n      Diff<BaseProps, LoadDataProps<Payload, Namespace>>,\n      GlobalState\n    >(mapStateToState, dispatchProps);\n    return connector(DataWrapper) as React.ComponentType<BaseProps>;\n  };\n};\n\nexport default loadData;\n"],"names":["css","cssBinder","fonts","local","ByLatestEntries","_ref","data","ok","loading","React","Loading","payload","newEntries","results","slice","className","AnimatedEntry","element","map","e","EntryCard","entry","key","metadata","accession","Link","to","description","main","db","search","latest_entries","buttonType","getAllLatestEntriesURL","createSelector","state","settings","api","_ref2","protocol","hostname","port","root","format","pathname","descriptionToPath","query","extra_fields","loadData","mapStateToState","appState","params","getUrl","fetchOptions","propNamespace","weight","mapStateToProps","mapDispatchToProps","extractParams","fetchFun","getFetch","newData","url","progress","status","Wrapped","DataWrapper","PureComponent","constructor","props","super","_DataWrapper_id","set","_DataWrapper_request","timeoutID","_cancel","__classPrivateFieldGet","this","cancel","_b","_a","dataProgressUnload","call","_progress","setState","Object","assign","dataProgressInfo","_load","__awaiter","__classPrivateFieldSet","cancelable","signal","addToast","request","response","promise","gtag","event_category","event_response","event_label","event_clientcache","headers","has","event_cache","nextData","staleData","_d","_c","msToRetry","_e","navigation","secondsToRetry","window","setTimeout","console","log","retries","error","canceled","event_status","event_online","navigator","onLine","_ref3","_g","_f","uniqueId","undefined","getDerivedStateFromProps","nextProps","prevState","componentDidMount","componentDidUpdate","_prevProps","componentWillUnmount","clearTimeout","render","_","__","___","rest","__rest","stalekey","passedProps","UnconnectedErrorBoundary","customLocation","displayName","name","dispatchProps","connect","connector"],"sourceRoot":""}